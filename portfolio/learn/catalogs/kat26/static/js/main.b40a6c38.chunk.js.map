{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","index.js"],"names":["AddTask","state","text","checked","date","Date","toISOString","slice","handleText","e","_this","setState","target","value","handleCheckbox","handleDate","handleClick","_this$state","length","props","add","alert","year","getFullYear","day","getDate","month","getMonth","String","actualDate","concat","futureDate","react_default","a","createElement","className","type","placeholder","this","onChange","id","htmlFor","min","max","onClick","Component","Task","_props$task","task","active","important","finishDate","style","color","status","delete","finish","toLocaleString","TaskList","tasks","filter","done","sort","b","toLowerCase","activeTasks","map","components_Task","key","doneTasks","App","counter","deleteTask","console","log","Object","toConsumableArray","index","findIndex","splice","changeTaskStatus","Array","from","forEach","getTime","addTask","prevState","Fragment","src_components_AddTask","components_TaskList","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"qPAyFeA,0NArFbC,MAAQ,CACNC,KAAM,GACNC,SAAS,EACTC,MAAM,IAAIC,MAAOC,cAAcC,MAAM,EAAG,OAG1CC,WAAa,SAACC,GACZC,EAAKC,SAAS,CACZT,KAAMO,EAAEG,OAAOC,WAInBC,eAAiB,SAACL,GAChBC,EAAKC,SAAS,CACZR,QAASM,EAAEG,OAAOT,aAItBY,WAAa,SAACN,GACZC,EAAKC,SAAS,CACZP,KAAMK,EAAEG,OAAOC,WAInBG,YAAc,WAAM,IAAAC,EACcP,EAAKT,MAA7BC,EADUe,EACVf,KAAME,EADIa,EACJb,KAAMD,EADFc,EACEd,QAEhBD,EAAKgB,OAAS,EACJR,EAAKS,MAAMC,IAAIlB,EAAME,EAAMD,IAErCO,EAAKC,SAAS,CACZT,KAAM,GACNC,SAAS,EACTC,MAAM,IAAIC,MAAOC,cAAcC,MAAM,EAAG,MAI5Cc,MAAM,gGAKR,IAAMjB,EAAO,IAAIC,KACbiB,EAAOlB,EAAKmB,cACZC,EAAMpB,EAAKqB,UACXC,EAAQtB,EAAKuB,WAAa,EAE1BH,EAAM,KAAIA,EAAMI,OAAO,IAAMJ,IAC7BE,EAAQ,KAAIA,EAAQE,OAAO,IAAMF,IAErC,IAAMG,EAAU,GAAAC,OAAMR,EAAN,KAAAQ,OAAcJ,EAAd,KAAAI,OAAuBN,GACjCO,EAAU,GAAAD,OAAMR,EAAO,EAAb,KAAAQ,OAAkBJ,EAAlB,KAAAI,OAA2BN,GAE3C,OACEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLC,YAAY,gBACZxB,MAAOyB,KAAKrC,MAAMC,KAClBqC,SAAUD,KAAK9B,aAEjBwB,EAAAC,EAAAC,cAAA,SACEE,KAAK,WACLjC,QAASmC,KAAKrC,MAAME,QACpBqC,GAAG,YACHD,SAAUD,KAAKxB,iBAEjBkB,EAAAC,EAAAC,cAAA,SAAOO,QAAQ,aAAf,aACAT,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOO,QAAQ,QAAf,yBACAT,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLvB,MAAOyB,KAAKrC,MAAMG,KAClBoC,GAAG,OACHE,IAAKb,EACLc,IAAKZ,EACLQ,SAAUD,KAAKvB,aAEjBiB,EAAAC,EAAAC,cAAA,UAAQU,QAASN,KAAKtB,aAAtB,SACAgB,EAAAC,EAAAC,cAAA,mBAhFcW,cCiCPC,EAlCF,SAAC3B,GAEV,IAFoB4B,EAMoC5B,EAAM6B,KAAvD9C,EANa6C,EAMb7C,KAAME,EANO2C,EAMP3C,KAAMoC,EANCO,EAMDP,GAAIS,EANHF,EAMGE,OAAQC,EANXH,EAMWG,UAAWC,EANtBJ,EAMsBI,WAE1C,GAAGF,EACC,OACIjB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,UAAQkB,MAAOF,EAVjB,CACVG,MAAO,UASwC,MAAOnD,GAD9C,SACkE8B,EAAAC,EAAAC,cAAA,YAAO9B,EAAP,KAC9D4B,EAAAC,EAAAC,cAAA,UAAQU,QAAS,kBAAMzB,EAAMmC,OAAOd,KAApC,yBACAR,EAAAC,EAAAC,cAAA,UAAQU,QAAS,kBAAMzB,EAAMoC,OAAOf,KAApC,OAKZ,IAAMgB,EAAS,IAAInD,KAAK8C,GAAYM,iBACpC,OACIzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,cAAShC,GAAc8B,EAAAC,EAAAC,cAAA,8BAAiB9B,EAAjB,KACvB4B,EAAAC,EAAAC,cAAA,WAFJ,6BAG8BF,EAAAC,EAAAC,cAAA,YAAOsB,GACjCxB,EAAAC,EAAAC,cAAA,UAAQU,QAAS,kBAAMzB,EAAMoC,OAAOf,KAApC,QCyCLkB,EAlEE,SAACvC,GAChB,IAAM8B,EAAS9B,EAAMwC,MAAMC,OAAO,SAACZ,GAAD,OAAUA,EAAKC,SAC3CY,EAAO1C,EAAMwC,MAAMC,OAAO,SAACZ,GAAD,OAAWA,EAAKC,SAE5CY,EAAK3C,QAAU,GACjB2C,EAAKC,KAAK,SAAC7B,EAAG8B,GACZ,OAAI9B,EAAEkB,WAAaY,EAAEZ,WAAmB,EACpClB,EAAEkB,WAAaY,EAAEZ,YAAoB,EAClC,IAIPF,EAAO/B,QAAU,GACnB+B,EAAOa,KAAK,SAAC7B,EAAG8B,GAId,OAHA9B,EAAIA,EAAE/B,KAAK8D,gBACXD,EAAIA,EAAE7D,KAAK8D,gBAEQ,EACf/B,EAAI8B,EAAU,EACX,IAIX,IAAME,EAAchB,EAAOiB,IAAI,SAAClB,GAAD,OAC7BhB,EAAAC,EAAAC,cAACiC,EAAD,CACEb,OAAQnC,EAAMmC,OACdC,OAAQpC,EAAMoC,OACda,IAAKpB,EAAKR,GACVQ,KAAMA,MAIJqB,EAAYR,EAAKK,IAAI,SAAClB,GAAD,OACzBhB,EAAAC,EAAAC,cAACiC,EAAD,CACEb,OAAQnC,EAAMmC,OACdC,OAAQpC,EAAMoC,OACda,IAAKpB,EAAKR,GACVQ,KAAMA,MAGV,OACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,kCACC+B,EAAY/C,OAAS,EACpB+C,EAEAjC,EAAAC,EAAAC,cAAA,sDAIJF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,+BACoBF,EAAAC,EAAAC,cAAA,UAAKmC,EAAUnD,QADnC,KAGC2C,EAAK3C,OAAS,GACbc,EAAAC,EAAAC,cAAA,uEAEDmC,EAAU9D,MAAM,EAAG,MC+Bb+D,6MAxFbC,QAAU,IAEVtE,MAAQ,CACN0D,MAAO,CACL,CACEnB,GAAI,EACJtC,KAAM,2CACNE,KAAM,aACN8C,WAAW,EACXD,QAAQ,EACRE,WAAY,MAGd,CACEX,GAAI,EACJtC,KAAM,6BACNE,KAAM,aACN8C,WAAW,EACXD,QAAQ,EACRE,WAAY,MAGd,CACEX,GAAI,EACJtC,KAAM,wBACNE,KAAM,aACN8C,WAAW,EACXD,QAAQ,EACRE,WAAY,UAKlBqB,WAAa,SAAChC,GACZiC,QAAQC,IAAI,gBAAkBlC,GAC9B,IAAMmB,EAAKgB,OAAAC,EAAA,EAAAD,CAAOjE,EAAKT,MAAM0D,OACvBkB,EAAQlB,EAAMmB,UAAU,SAAC9B,GAAD,OAAUA,EAAKR,KAAOA,IACpDmB,EAAMoB,OAAOF,EAAO,GAEpBnE,EAAKC,SAAS,CACZgD,aAIJqB,iBAAmB,SAACxC,GAClBiC,QAAQC,IAAI,kBAAoBlC,GAChC,IAAImB,EAAQsB,MAAMC,KAAKxE,EAAKT,MAAM0D,OAClCA,EAAMwB,QAAQ,SAACnC,GACTA,EAAKR,KAAOA,IACdQ,EAAKC,QAAS,EACdD,EAAKG,YAAa,IAAI9C,MAAO+E,aAGjC1E,EAAKC,SAAS,CACZgD,aAIJ0B,QAAU,SAACnF,EAAME,EAAM8C,GACrB,IAAMF,EAAO,CACXR,GAAI9B,EAAK6D,QACTrE,OACAE,OACA8C,YACAD,QAAQ,EACRE,WAAY,MAMd,OAJAzC,EAAK6D,UACL7D,EAAKC,SAAS,SAAA2E,GAAS,MAAK,CAC1B3B,MAAK,GAAA7B,OAAA6C,OAAAC,EAAA,EAAAD,CAAMW,EAAU3B,OAAhB,CAAuBX,QAEvB,2EAIP,OACEhB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsD,SAAA,KACEvD,EAAAC,EAAAC,cAACsD,EAAD,CAASpE,IAAKkB,KAAK+C,UACnBrD,EAAAC,EAAAC,cAACuD,EAAD,CACE9B,MAAOrB,KAAKrC,MAAM0D,MAClBJ,OAAQjB,KAAKkC,WACblB,OAAQhB,KAAK0C,2BAlFLnC,aCAlB6C,IAASC,OAAO3D,EAAAC,EAAAC,cAAC0D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b40a6c38.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./AddTask.css\";\r\n\r\nclass AddTask extends Component {\r\n  state = {\r\n    text: \"\",\r\n    checked: false,\r\n    date: new Date().toISOString().slice(0, 10),\r\n  };\r\n\r\n  handleText = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleCheckbox = (e) => {\r\n    this.setState({\r\n      checked: e.target.checked,\r\n    });\r\n  };\r\n\r\n  handleDate = (e) => {\r\n    this.setState({\r\n      date: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { text, date, checked } = this.state;\r\n\r\n    if (text.length > 2) {\r\n      const add = this.props.add(text, date, checked);\r\n      if (add) {\r\n        this.setState({\r\n          text: \"\",\r\n          checked: false,\r\n          date: new Date().toISOString().slice(0, 10),\r\n        });\r\n      }\r\n    }else {\r\n      alert('Za krótka nazwa!');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const date = new Date();\r\n    let year = date.getFullYear();\r\n    let day = date.getDate();\r\n    let month = date.getMonth() + 1;\r\n\r\n    if (day < 10) day = String(\"0\" + day);\r\n    if (month < 10) month = String(\"0\" + month);\r\n\r\n    const actualDate = `${year}-${month}-${day}`;\r\n    const futureDate = `${year + 1}-${month}-${day}`;\r\n\r\n    return (\r\n      <div className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"dodaj zadanie\"\r\n          value={this.state.text}\r\n          onChange={this.handleText}\r\n        />\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={this.state.checked}\r\n          id=\"important\"\r\n          onChange={this.handleCheckbox}\r\n        />\r\n        <label htmlFor=\"important\">Priorytet</label>\r\n        <br />\r\n        <label htmlFor=\"date\">Do kiedy zrobić </label>\r\n        <input\r\n          type=\"date\"\r\n          value={this.state.date}\r\n          id=\"date\"\r\n          min={actualDate}\r\n          max={futureDate}\r\n          onChange={this.handleDate}\r\n        />\r\n        <button onClick={this.handleClick}>Dodaj</button>\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React from 'react';\r\n\r\nconst Task = (props) => {\r\n\r\n    const style = {\r\n        color: 'tomato'\r\n    }\r\n\r\n    const {text, date, id, active, important, finishDate} = props.task;\r\n\r\n    if(active){\r\n        return (   \r\n            <div>\r\n                <p>\r\n                    <strong style={important ? style : null}>{text}</strong> - do <span>{date} </span>\r\n                    <button onClick={() => props.status(id)}>Zostało zrobione</button>\r\n                    <button onClick={() => props.delete(id)} >X</button>\r\n                </p>\r\n            </div>\r\n         );    \r\n    }else{\r\n        const finish = new Date(finishDate).toLocaleString();\r\n        return (\r\n            <div>\r\n                <p>\r\n                    <strong>{text}</strong><em> (zrobić do {date})</em>\r\n                    <br></br>\r\n                    - potwierdzenie wykonania <span>{finish}</span>\r\n                    <button onClick={() => props.delete(id)} >X</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n \r\nexport default Task;","import React from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = (props) => {\r\n  const active = props.tasks.filter((task) => task.active);\r\n  const done = props.tasks.filter((task) => !task.active);\r\n\r\n  if (done.length >= 2) {\r\n    done.sort((a, b) => {\r\n      if (a.finishDate < b.finishDate) return 1;\r\n      if (a.finishDate > b.finishDate) return -1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  if (active.length >= 2) {\r\n    active.sort((a, b) => {\r\n      a = a.text.toLowerCase();\r\n      b = b.text.toLowerCase();\r\n\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const activeTasks = active.map((task) => (\r\n    <Task\r\n      status={props.status}\r\n      delete={props.delete}\r\n      key={task.id}\r\n      task={task}\r\n    ></Task>\r\n  ));\r\n\r\n  const doneTasks = done.map((task) => (\r\n    <Task\r\n      status={props.status}\r\n      delete={props.delete}\r\n      key={task.id}\r\n      task={task}\r\n    ></Task>\r\n  ));\r\n  return (\r\n    <div>\r\n      <div className=\"active\">\r\n        <h1>Zadanie do zrobienia</h1>\r\n        {activeTasks.length > 0 ? (\r\n          activeTasks\r\n        ) : (\r\n          <p>Brak zadań, ale jesteś leniem!</p>\r\n        )}\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"done\">\r\n        <h2>\r\n          Zadania zrobione (<em>{doneTasks.length}</em>)\r\n        </h2>\r\n        {done.length > 5 && (\r\n          <span>Wyświetlonych jest jedynie 5 ostatnich zadań.</span>\r\n        )}\r\n        {doneTasks.slice(0, 5)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AddTask from \"./AddTask\";\nimport TaskList from \"./TaskList\";\n\nclass App extends Component {\n  counter = 3;\n\n  state = {\n    tasks: [\n      {\n        id: 0,\n        text: \"Zagrać wreszcie w Wiedźmina 3!\",\n        date: \"2022-05-20\",\n        important: true,\n        active: true,\n        finishDate: null,\n      },\n\n      {\n        id: 1,\n        text: \"Zrobić dobry uczynek!\",\n        date: \"2022-05-12\",\n        important: true,\n        active: true,\n        finishDate: null,\n      },\n\n      {\n        id: 2,\n        text: \"Umyć samochód\",\n        date: \"2022-05-13\",\n        important: false,\n        active: true,\n        finishDate: null,\n      },\n    ],\n  };\n\n  deleteTask = (id) => {\n    console.log(\"Delete task! \" + id);\n    const tasks = [...this.state.tasks];\n    const index = tasks.findIndex((task) => task.id === id);\n    tasks.splice(index, 1);\n\n    this.setState({\n      tasks,\n    });\n  };\n\n  changeTaskStatus = (id) => {\n    console.log(\"Change status! \" + id);\n    let tasks = Array.from(this.state.tasks);\n    tasks.forEach((task) => {\n      if (task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime();\n      }\n    });\n    this.setState({\n      tasks,\n    });\n  };\n\n  addTask = (text, date, important) => {\n    const task = {\n      id: this.counter,\n      text,\n      date,\n      important,\n      active: true,\n      finishDate: null,\n    };\n    this.counter++;\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, task]\n    }))\n    return true;\n  };\n\n  render() {\n    return (\n      <>\n        <AddTask add={this.addTask} />\n        <TaskList\n          tasks={this.state.tasks}\n          delete={this.deleteTask}\n          status={this.changeTaskStatus}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}