(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))e(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&e(s)}).observe(document,{childList:!0,subtree:!0});function a(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerpolicy&&(n.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?n.credentials="include":o.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function e(o){if(o.ep)return;o.ep=!0;const n=a(o);fetch(o.href,n)}})();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Xs="149",Pf=0,Sr=1,If=2,il=1,Nf=2,hn=3,Ve=0,Ma=1,Be=2,Oe=0,Fo=1,Ms=2,Mr=3,wr=4,Lf=5,Do=100,Bf=101,Df=102,xr=103,Ar=104,Gf=200,Uf=201,Of=202,Ff=203,al=204,el=205,Kf=206,Vf=207,jf=208,Hf=209,Wf=210,qf=0,Zf=1,Jf=2,ws=3,Xf=4,Yf=5,$f=6,Qf=7,ol=0,im=1,am=2,Te=0,em=1,om=2,nm=3,tm=4,sm=5,nl=300,Wo=301,qo=302,xs=303,As=304,kt=306,Rs=1e3,oe=1001,Ts=1002,ka=1003,Rr=1004,Lt=1005,Za=1006,rm=1007,wn=1008,bo=1009,cm=1010,lm=1011,tl=1012,fm=1013,ro=1014,co=1015,xn=1016,mm=1017,um=1018,Ko=1020,dm=1021,ne=1023,pm=1024,gm=1025,fo=1026,Zo=1027,hm=1028,bm=1029,vm=1030,ym=1031,_m=1033,Bt=33776,Dt=33777,Gt=33778,Ut=33779,Tr=35840,Cr=35841,Er=35842,zr=35843,km=36196,Pr=37492,Ir=37496,Nr=37808,Lr=37809,Br=37810,Dr=37811,Gr=37812,Ur=37813,Or=37814,Fr=37815,Kr=37816,Vr=37817,jr=37818,Hr=37819,Wr=37820,qr=37821,Ot=36492,Sm=36283,Zr=36284,Jr=36285,Xr=36286,vo=3e3,Gi=3001,Mm=3200,wm=3201,xm=0,Am=1,ce="srgb",An="srgb-linear",Ft=7680,Rm=519,Yr=35044,$r="300 es",Cs=1035;class nn{addEventListener(i,a){this._listeners===void 0&&(this._listeners={});const e=this._listeners;e[i]===void 0&&(e[i]=[]),e[i].indexOf(a)===-1&&e[i].push(a)}hasEventListener(i,a){if(this._listeners===void 0)return!1;const e=this._listeners;return e[i]!==void 0&&e[i].indexOf(a)!==-1}removeEventListener(i,a){if(this._listeners===void 0)return;const o=this._listeners[i];if(o!==void 0){const n=o.indexOf(a);n!==-1&&o.splice(n,1)}}dispatchEvent(i){if(this._listeners===void 0)return;const e=this._listeners[i.type];if(e!==void 0){i.target=this;const o=e.slice(0);for(let n=0,s=o.length;n<s;n++)o[n].call(this,i);i.target=null}}}const ua=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Kt=Math.PI/180,Qr=180/Math.PI;function Nn(){const r=Math.random()*4294967295|0,i=Math.random()*4294967295|0,a=Math.random()*4294967295|0,e=Math.random()*4294967295|0;return(ua[r&255]+ua[r>>8&255]+ua[r>>16&255]+ua[r>>24&255]+"-"+ua[i&255]+ua[i>>8&255]+"-"+ua[i>>16&15|64]+ua[i>>24&255]+"-"+ua[a&63|128]+ua[a>>8&255]+"-"+ua[a>>16&255]+ua[a>>24&255]+ua[e&255]+ua[e>>8&255]+ua[e>>16&255]+ua[e>>24&255]).toLowerCase()}function La(r,i,a){return Math.max(i,Math.min(a,r))}function Tm(r,i){return(r%i+i)%i}function Vt(r,i,a){return(1-a)*r+a*i}function ic(r){return(r&r-1)===0&&r!==0}function Es(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function Un(r,i){switch(i.constructor){case Float32Array:return r;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function za(r,i){switch(i.constructor){case Float32Array:return r;case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}class Di{constructor(i=0,a=0){Di.prototype.isVector2=!0,this.x=i,this.y=a}get width(){return this.x}set width(i){this.x=i}get height(){return this.y}set height(i){this.y=i}set(i,a){return this.x=i,this.y=a,this}setScalar(i){return this.x=i,this.y=i,this}setX(i){return this.x=i,this}setY(i){return this.y=i,this}setComponent(i,a){switch(i){case 0:this.x=a;break;case 1:this.y=a;break;default:throw new Error("index is out of range: "+i)}return this}getComponent(i){switch(i){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+i)}}clone(){return new this.constructor(this.x,this.y)}copy(i){return this.x=i.x,this.y=i.y,this}add(i){return this.x+=i.x,this.y+=i.y,this}addScalar(i){return this.x+=i,this.y+=i,this}addVectors(i,a){return this.x=i.x+a.x,this.y=i.y+a.y,this}addScaledVector(i,a){return this.x+=i.x*a,this.y+=i.y*a,this}sub(i){return this.x-=i.x,this.y-=i.y,this}subScalar(i){return this.x-=i,this.y-=i,this}subVectors(i,a){return this.x=i.x-a.x,this.y=i.y-a.y,this}multiply(i){return this.x*=i.x,this.y*=i.y,this}multiplyScalar(i){return this.x*=i,this.y*=i,this}divide(i){return this.x/=i.x,this.y/=i.y,this}divideScalar(i){return this.multiplyScalar(1/i)}applyMatrix3(i){const a=this.x,e=this.y,o=i.elements;return this.x=o[0]*a+o[3]*e+o[6],this.y=o[1]*a+o[4]*e+o[7],this}min(i){return this.x=Math.min(this.x,i.x),this.y=Math.min(this.y,i.y),this}max(i){return this.x=Math.max(this.x,i.x),this.y=Math.max(this.y,i.y),this}clamp(i,a){return this.x=Math.max(i.x,Math.min(a.x,this.x)),this.y=Math.max(i.y,Math.min(a.y,this.y)),this}clampScalar(i,a){return this.x=Math.max(i,Math.min(a,this.x)),this.y=Math.max(i,Math.min(a,this.y)),this}clampLength(i,a){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(i,Math.min(a,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(i){return this.x*i.x+this.y*i.y}cross(i){return this.x*i.y-this.y*i.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(i){return Math.sqrt(this.distanceToSquared(i))}distanceToSquared(i){const a=this.x-i.x,e=this.y-i.y;return a*a+e*e}manhattanDistanceTo(i){return Math.abs(this.x-i.x)+Math.abs(this.y-i.y)}setLength(i){return this.normalize().multiplyScalar(i)}lerp(i,a){return this.x+=(i.x-this.x)*a,this.y+=(i.y-this.y)*a,this}lerpVectors(i,a,e){return this.x=i.x+(a.x-i.x)*e,this.y=i.y+(a.y-i.y)*e,this}equals(i){return i.x===this.x&&i.y===this.y}fromArray(i,a=0){return this.x=i[a],this.y=i[a+1],this}toArray(i=[],a=0){return i[a]=this.x,i[a+1]=this.y,i}fromBufferAttribute(i,a){return this.x=i.getX(a),this.y=i.getY(a),this}rotateAround(i,a){const e=Math.cos(a),o=Math.sin(a),n=this.x-i.x,s=this.y-i.y;return this.x=n*e-s*o+i.x,this.y=n*o+s*e+i.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ga{constructor(){Ga.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(i,a,e,o,n,s,t,c,l){const f=this.elements;return f[0]=i,f[1]=o,f[2]=t,f[3]=a,f[4]=n,f[5]=c,f[6]=e,f[7]=s,f[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(i){const a=this.elements,e=i.elements;return a[0]=e[0],a[1]=e[1],a[2]=e[2],a[3]=e[3],a[4]=e[4],a[5]=e[5],a[6]=e[6],a[7]=e[7],a[8]=e[8],this}extractBasis(i,a,e){return i.setFromMatrix3Column(this,0),a.setFromMatrix3Column(this,1),e.setFromMatrix3Column(this,2),this}setFromMatrix4(i){const a=i.elements;return this.set(a[0],a[4],a[8],a[1],a[5],a[9],a[2],a[6],a[10]),this}multiply(i){return this.multiplyMatrices(this,i)}premultiply(i){return this.multiplyMatrices(i,this)}multiplyMatrices(i,a){const e=i.elements,o=a.elements,n=this.elements,s=e[0],t=e[3],c=e[6],l=e[1],f=e[4],d=e[7],m=e[2],g=e[5],h=e[8],u=o[0],p=o[3],b=o[6],k=o[1],y=o[4],S=o[7],_=o[2],R=o[5],T=o[8];return n[0]=s*u+t*k+c*_,n[3]=s*p+t*y+c*R,n[6]=s*b+t*S+c*T,n[1]=l*u+f*k+d*_,n[4]=l*p+f*y+d*R,n[7]=l*b+f*S+d*T,n[2]=m*u+g*k+h*_,n[5]=m*p+g*y+h*R,n[8]=m*b+g*S+h*T,this}multiplyScalar(i){const a=this.elements;return a[0]*=i,a[3]*=i,a[6]*=i,a[1]*=i,a[4]*=i,a[7]*=i,a[2]*=i,a[5]*=i,a[8]*=i,this}determinant(){const i=this.elements,a=i[0],e=i[1],o=i[2],n=i[3],s=i[4],t=i[5],c=i[6],l=i[7],f=i[8];return a*s*f-a*t*l-e*n*f+e*t*c+o*n*l-o*s*c}invert(){const i=this.elements,a=i[0],e=i[1],o=i[2],n=i[3],s=i[4],t=i[5],c=i[6],l=i[7],f=i[8],d=f*s-t*l,m=t*c-f*n,g=l*n-s*c,h=a*d+e*m+o*g;if(h===0)return this.set(0,0,0,0,0,0,0,0,0);const u=1/h;return i[0]=d*u,i[1]=(o*l-f*e)*u,i[2]=(t*e-o*s)*u,i[3]=m*u,i[4]=(f*a-o*c)*u,i[5]=(o*n-t*a)*u,i[6]=g*u,i[7]=(e*c-l*a)*u,i[8]=(s*a-e*n)*u,this}transpose(){let i;const a=this.elements;return i=a[1],a[1]=a[3],a[3]=i,i=a[2],a[2]=a[6],a[6]=i,i=a[5],a[5]=a[7],a[7]=i,this}getNormalMatrix(i){return this.setFromMatrix4(i).invert().transpose()}transposeIntoArray(i){const a=this.elements;return i[0]=a[0],i[1]=a[3],i[2]=a[6],i[3]=a[1],i[4]=a[4],i[5]=a[7],i[6]=a[2],i[7]=a[5],i[8]=a[8],this}setUvTransform(i,a,e,o,n,s,t){const c=Math.cos(n),l=Math.sin(n);return this.set(e*c,e*l,-e*(c*s+l*t)+s+i,-o*l,o*c,-o*(-l*s+c*t)+t+a,0,0,1),this}scale(i,a){return this.premultiply(jt.makeScale(i,a)),this}rotate(i){return this.premultiply(jt.makeRotation(-i)),this}translate(i,a){return this.premultiply(jt.makeTranslation(i,a)),this}makeTranslation(i,a){return this.set(1,0,i,0,1,a,0,0,1),this}makeRotation(i){const a=Math.cos(i),e=Math.sin(i);return this.set(a,-e,0,e,a,0,0,0,1),this}makeScale(i,a){return this.set(i,0,0,0,a,0,0,0,1),this}equals(i){const a=this.elements,e=i.elements;for(let o=0;o<9;o++)if(a[o]!==e[o])return!1;return!0}fromArray(i,a=0){for(let e=0;e<9;e++)this.elements[e]=i[e+a];return this}toArray(i=[],a=0){const e=this.elements;return i[a]=e[0],i[a+1]=e[1],i[a+2]=e[2],i[a+3]=e[3],i[a+4]=e[4],i[a+5]=e[5],i[a+6]=e[6],i[a+7]=e[7],i[a+8]=e[8],i}clone(){return new this.constructor().fromArray(this.elements)}}const jt=new Ga;function sl(r){for(let i=r.length-1;i>=0;--i)if(r[i]>=65535)return!0;return!1}function Rn(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function mo(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function rt(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const Ht={[ce]:{[An]:mo},[An]:{[ce]:rt}},ya={legacyMode:!0,get workingColorSpace(){return An},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,i,a){if(this.legacyMode||i===a||!i||!a)return r;if(Ht[i]&&Ht[i][a]!==void 0){const e=Ht[i][a];return r.r=e(r.r),r.g=e(r.g),r.b=e(r.b),r}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(r,i){return this.convert(r,this.workingColorSpace,i)},toWorkingColorSpace:function(r,i){return this.convert(r,i,this.workingColorSpace)}},rl={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},$i={r:0,g:0,b:0},ie={h:0,s:0,l:0},On={h:0,s:0,l:0};function Wt(r,i,a){return a<0&&(a+=1),a>1&&(a-=1),a<1/6?r+(i-r)*6*a:a<1/2?i:a<2/3?r+(i-r)*6*(2/3-a):r}function Fn(r,i){return i.r=r.r,i.g=r.g,i.b=r.b,i}class Ki{constructor(i,a,e){return this.isColor=!0,this.r=1,this.g=1,this.b=1,a===void 0&&e===void 0?this.set(i):this.setRGB(i,a,e)}set(i){return i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i),this}setScalar(i){return this.r=i,this.g=i,this.b=i,this}setHex(i,a=ce){return i=Math.floor(i),this.r=(i>>16&255)/255,this.g=(i>>8&255)/255,this.b=(i&255)/255,ya.toWorkingColorSpace(this,a),this}setRGB(i,a,e,o=ya.workingColorSpace){return this.r=i,this.g=a,this.b=e,ya.toWorkingColorSpace(this,o),this}setHSL(i,a,e,o=ya.workingColorSpace){if(i=Tm(i,1),a=La(a,0,1),e=La(e,0,1),a===0)this.r=this.g=this.b=e;else{const n=e<=.5?e*(1+a):e+a-e*a,s=2*e-n;this.r=Wt(s,n,i+1/3),this.g=Wt(s,n,i),this.b=Wt(s,n,i-1/3)}return ya.toWorkingColorSpace(this,o),this}setStyle(i,a=ce){function e(n){n!==void 0&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+i+" will be ignored.")}let o;if(o=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(i)){let n;const s=o[1],t=o[2];switch(s){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(t))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,ya.toWorkingColorSpace(this,a),e(n[4]),this;if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(t))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,ya.toWorkingColorSpace(this,a),e(n[4]),this;break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(t)){const c=parseFloat(n[1])/360,l=parseFloat(n[2])/100,f=parseFloat(n[3])/100;return e(n[4]),this.setHSL(c,l,f,a)}break}}else if(o=/^\#([A-Fa-f\d]+)$/.exec(i)){const n=o[1],s=n.length;if(s===3)return this.r=parseInt(n.charAt(0)+n.charAt(0),16)/255,this.g=parseInt(n.charAt(1)+n.charAt(1),16)/255,this.b=parseInt(n.charAt(2)+n.charAt(2),16)/255,ya.toWorkingColorSpace(this,a),this;if(s===6)return this.r=parseInt(n.charAt(0)+n.charAt(1),16)/255,this.g=parseInt(n.charAt(2)+n.charAt(3),16)/255,this.b=parseInt(n.charAt(4)+n.charAt(5),16)/255,ya.toWorkingColorSpace(this,a),this}return i&&i.length>0?this.setColorName(i,a):this}setColorName(i,a=ce){const e=rl[i.toLowerCase()];return e!==void 0?this.setHex(e,a):console.warn("THREE.Color: Unknown color "+i),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(i){return this.r=i.r,this.g=i.g,this.b=i.b,this}copySRGBToLinear(i){return this.r=mo(i.r),this.g=mo(i.g),this.b=mo(i.b),this}copyLinearToSRGB(i){return this.r=rt(i.r),this.g=rt(i.g),this.b=rt(i.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(i=ce){return ya.fromWorkingColorSpace(Fn(this,$i),i),La($i.r*255,0,255)<<16^La($i.g*255,0,255)<<8^La($i.b*255,0,255)<<0}getHexString(i=ce){return("000000"+this.getHex(i).toString(16)).slice(-6)}getHSL(i,a=ya.workingColorSpace){ya.fromWorkingColorSpace(Fn(this,$i),a);const e=$i.r,o=$i.g,n=$i.b,s=Math.max(e,o,n),t=Math.min(e,o,n);let c,l;const f=(t+s)/2;if(t===s)c=0,l=0;else{const d=s-t;switch(l=f<=.5?d/(s+t):d/(2-s-t),s){case e:c=(o-n)/d+(o<n?6:0);break;case o:c=(n-e)/d+2;break;case n:c=(e-o)/d+4;break}c/=6}return i.h=c,i.s=l,i.l=f,i}getRGB(i,a=ya.workingColorSpace){return ya.fromWorkingColorSpace(Fn(this,$i),a),i.r=$i.r,i.g=$i.g,i.b=$i.b,i}getStyle(i=ce){return ya.fromWorkingColorSpace(Fn(this,$i),i),i!==ce?`color(${i} ${$i.r} ${$i.g} ${$i.b})`:`rgb(${$i.r*255|0},${$i.g*255|0},${$i.b*255|0})`}offsetHSL(i,a,e){return this.getHSL(ie),ie.h+=i,ie.s+=a,ie.l+=e,this.setHSL(ie.h,ie.s,ie.l),this}add(i){return this.r+=i.r,this.g+=i.g,this.b+=i.b,this}addColors(i,a){return this.r=i.r+a.r,this.g=i.g+a.g,this.b=i.b+a.b,this}addScalar(i){return this.r+=i,this.g+=i,this.b+=i,this}sub(i){return this.r=Math.max(0,this.r-i.r),this.g=Math.max(0,this.g-i.g),this.b=Math.max(0,this.b-i.b),this}multiply(i){return this.r*=i.r,this.g*=i.g,this.b*=i.b,this}multiplyScalar(i){return this.r*=i,this.g*=i,this.b*=i,this}lerp(i,a){return this.r+=(i.r-this.r)*a,this.g+=(i.g-this.g)*a,this.b+=(i.b-this.b)*a,this}lerpColors(i,a,e){return this.r=i.r+(a.r-i.r)*e,this.g=i.g+(a.g-i.g)*e,this.b=i.b+(a.b-i.b)*e,this}lerpHSL(i,a){this.getHSL(ie),i.getHSL(On);const e=Vt(ie.h,On.h,a),o=Vt(ie.s,On.s,a),n=Vt(ie.l,On.l,a);return this.setHSL(e,o,n),this}equals(i){return i.r===this.r&&i.g===this.g&&i.b===this.b}fromArray(i,a=0){return this.r=i[a],this.g=i[a+1],this.b=i[a+2],this}toArray(i=[],a=0){return i[a]=this.r,i[a+1]=this.g,i[a+2]=this.b,i}fromBufferAttribute(i,a){return this.r=i.getX(a),this.g=i.getY(a),this.b=i.getZ(a),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Ki.NAMES=rl;let So;class cl{static getDataURL(i){if(/^data:/i.test(i.src)||typeof HTMLCanvasElement>"u")return i.src;let a;if(i instanceof HTMLCanvasElement)a=i;else{So===void 0&&(So=Rn("canvas")),So.width=i.width,So.height=i.height;const e=So.getContext("2d");i instanceof ImageData?e.putImageData(i,0,0):e.drawImage(i,0,0,i.width,i.height),a=So}return a.width>2048||a.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",i),a.toDataURL("image/jpeg",.6)):a.toDataURL("image/png")}static sRGBToLinear(i){if(typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap){const a=Rn("canvas");a.width=i.width,a.height=i.height;const e=a.getContext("2d");e.drawImage(i,0,0,i.width,i.height);const o=e.getImageData(0,0,i.width,i.height),n=o.data;for(let s=0;s<n.length;s++)n[s]=mo(n[s]/255)*255;return e.putImageData(o,0,0),a}else if(i.data){const a=i.data.slice(0);for(let e=0;e<a.length;e++)a instanceof Uint8Array||a instanceof Uint8ClampedArray?a[e]=Math.floor(mo(a[e]/255)*255):a[e]=mo(a[e]);return{data:a,width:i.width,height:i.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),i}}class ll{constructor(i=null){this.isSource=!0,this.uuid=Nn(),this.data=i,this.version=0}set needsUpdate(i){i===!0&&this.version++}toJSON(i){const a=i===void 0||typeof i=="string";if(!a&&i.images[this.uuid]!==void 0)return i.images[this.uuid];const e={uuid:this.uuid,url:""},o=this.data;if(o!==null){let n;if(Array.isArray(o)){n=[];for(let s=0,t=o.length;s<t;s++)o[s].isDataTexture?n.push(qt(o[s].image)):n.push(qt(o[s]))}else n=qt(o);e.url=n}return a||(i.images[this.uuid]=e),e}}function qt(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?cl.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Cm=0;class wa extends nn{constructor(i=wa.DEFAULT_IMAGE,a=wa.DEFAULT_MAPPING,e=oe,o=oe,n=Za,s=wn,t=ne,c=bo,l=wa.DEFAULT_ANISOTROPY,f=vo){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Cm++}),this.uuid=Nn(),this.name="",this.source=new ll(i),this.mipmaps=[],this.mapping=a,this.wrapS=e,this.wrapT=o,this.magFilter=n,this.minFilter=s,this.anisotropy=l,this.format=t,this.internalFormat=null,this.type=c,this.offset=new Di(0,0),this.repeat=new Di(1,1),this.center=new Di(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ga,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=f,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(i){this.source.data=i}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(i){return this.name=i.name,this.source=i.source,this.mipmaps=i.mipmaps.slice(0),this.mapping=i.mapping,this.wrapS=i.wrapS,this.wrapT=i.wrapT,this.magFilter=i.magFilter,this.minFilter=i.minFilter,this.anisotropy=i.anisotropy,this.format=i.format,this.internalFormat=i.internalFormat,this.type=i.type,this.offset.copy(i.offset),this.repeat.copy(i.repeat),this.center.copy(i.center),this.rotation=i.rotation,this.matrixAutoUpdate=i.matrixAutoUpdate,this.matrix.copy(i.matrix),this.generateMipmaps=i.generateMipmaps,this.premultiplyAlpha=i.premultiplyAlpha,this.flipY=i.flipY,this.unpackAlignment=i.unpackAlignment,this.encoding=i.encoding,this.userData=JSON.parse(JSON.stringify(i.userData)),this.needsUpdate=!0,this}toJSON(i){const a=i===void 0||typeof i=="string";if(!a&&i.textures[this.uuid]!==void 0)return i.textures[this.uuid];const e={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(i).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(e.userData=this.userData),a||(i.textures[this.uuid]=e),e}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(i){if(this.mapping!==nl)return i;if(i.applyMatrix3(this.matrix),i.x<0||i.x>1)switch(this.wrapS){case Rs:i.x=i.x-Math.floor(i.x);break;case oe:i.x=i.x<0?0:1;break;case Ts:Math.abs(Math.floor(i.x)%2)===1?i.x=Math.ceil(i.x)-i.x:i.x=i.x-Math.floor(i.x);break}if(i.y<0||i.y>1)switch(this.wrapT){case Rs:i.y=i.y-Math.floor(i.y);break;case oe:i.y=i.y<0?0:1;break;case Ts:Math.abs(Math.floor(i.y)%2)===1?i.y=Math.ceil(i.y)-i.y:i.y=i.y-Math.floor(i.y);break}return this.flipY&&(i.y=1-i.y),i}set needsUpdate(i){i===!0&&(this.version++,this.source.needsUpdate=!0)}}wa.DEFAULT_IMAGE=null;wa.DEFAULT_MAPPING=nl;wa.DEFAULT_ANISOTROPY=1;class la{constructor(i=0,a=0,e=0,o=1){la.prototype.isVector4=!0,this.x=i,this.y=a,this.z=e,this.w=o}get width(){return this.z}set width(i){this.z=i}get height(){return this.w}set height(i){this.w=i}set(i,a,e,o){return this.x=i,this.y=a,this.z=e,this.w=o,this}setScalar(i){return this.x=i,this.y=i,this.z=i,this.w=i,this}setX(i){return this.x=i,this}setY(i){return this.y=i,this}setZ(i){return this.z=i,this}setW(i){return this.w=i,this}setComponent(i,a){switch(i){case 0:this.x=a;break;case 1:this.y=a;break;case 2:this.z=a;break;case 3:this.w=a;break;default:throw new Error("index is out of range: "+i)}return this}getComponent(i){switch(i){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+i)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(i){return this.x=i.x,this.y=i.y,this.z=i.z,this.w=i.w!==void 0?i.w:1,this}add(i){return this.x+=i.x,this.y+=i.y,this.z+=i.z,this.w+=i.w,this}addScalar(i){return this.x+=i,this.y+=i,this.z+=i,this.w+=i,this}addVectors(i,a){return this.x=i.x+a.x,this.y=i.y+a.y,this.z=i.z+a.z,this.w=i.w+a.w,this}addScaledVector(i,a){return this.x+=i.x*a,this.y+=i.y*a,this.z+=i.z*a,this.w+=i.w*a,this}sub(i){return this.x-=i.x,this.y-=i.y,this.z-=i.z,this.w-=i.w,this}subScalar(i){return this.x-=i,this.y-=i,this.z-=i,this.w-=i,this}subVectors(i,a){return this.x=i.x-a.x,this.y=i.y-a.y,this.z=i.z-a.z,this.w=i.w-a.w,this}multiply(i){return this.x*=i.x,this.y*=i.y,this.z*=i.z,this.w*=i.w,this}multiplyScalar(i){return this.x*=i,this.y*=i,this.z*=i,this.w*=i,this}applyMatrix4(i){const a=this.x,e=this.y,o=this.z,n=this.w,s=i.elements;return this.x=s[0]*a+s[4]*e+s[8]*o+s[12]*n,this.y=s[1]*a+s[5]*e+s[9]*o+s[13]*n,this.z=s[2]*a+s[6]*e+s[10]*o+s[14]*n,this.w=s[3]*a+s[7]*e+s[11]*o+s[15]*n,this}divideScalar(i){return this.multiplyScalar(1/i)}setAxisAngleFromQuaternion(i){this.w=2*Math.acos(i.w);const a=Math.sqrt(1-i.w*i.w);return a<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=i.x/a,this.y=i.y/a,this.z=i.z/a),this}setAxisAngleFromRotationMatrix(i){let a,e,o,n;const c=i.elements,l=c[0],f=c[4],d=c[8],m=c[1],g=c[5],h=c[9],u=c[2],p=c[6],b=c[10];if(Math.abs(f-m)<.01&&Math.abs(d-u)<.01&&Math.abs(h-p)<.01){if(Math.abs(f+m)<.1&&Math.abs(d+u)<.1&&Math.abs(h+p)<.1&&Math.abs(l+g+b-3)<.1)return this.set(1,0,0,0),this;a=Math.PI;const y=(l+1)/2,S=(g+1)/2,_=(b+1)/2,R=(f+m)/4,T=(d+u)/4,v=(h+p)/4;return y>S&&y>_?y<.01?(e=0,o=.707106781,n=.707106781):(e=Math.sqrt(y),o=R/e,n=T/e):S>_?S<.01?(e=.707106781,o=0,n=.707106781):(o=Math.sqrt(S),e=R/o,n=v/o):_<.01?(e=.707106781,o=.707106781,n=0):(n=Math.sqrt(_),e=T/n,o=v/n),this.set(e,o,n,a),this}let k=Math.sqrt((p-h)*(p-h)+(d-u)*(d-u)+(m-f)*(m-f));return Math.abs(k)<.001&&(k=1),this.x=(p-h)/k,this.y=(d-u)/k,this.z=(m-f)/k,this.w=Math.acos((l+g+b-1)/2),this}min(i){return this.x=Math.min(this.x,i.x),this.y=Math.min(this.y,i.y),this.z=Math.min(this.z,i.z),this.w=Math.min(this.w,i.w),this}max(i){return this.x=Math.max(this.x,i.x),this.y=Math.max(this.y,i.y),this.z=Math.max(this.z,i.z),this.w=Math.max(this.w,i.w),this}clamp(i,a){return this.x=Math.max(i.x,Math.min(a.x,this.x)),this.y=Math.max(i.y,Math.min(a.y,this.y)),this.z=Math.max(i.z,Math.min(a.z,this.z)),this.w=Math.max(i.w,Math.min(a.w,this.w)),this}clampScalar(i,a){return this.x=Math.max(i,Math.min(a,this.x)),this.y=Math.max(i,Math.min(a,this.y)),this.z=Math.max(i,Math.min(a,this.z)),this.w=Math.max(i,Math.min(a,this.w)),this}clampLength(i,a){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(i,Math.min(a,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(i){return this.x*i.x+this.y*i.y+this.z*i.z+this.w*i.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(i){return this.normalize().multiplyScalar(i)}lerp(i,a){return this.x+=(i.x-this.x)*a,this.y+=(i.y-this.y)*a,this.z+=(i.z-this.z)*a,this.w+=(i.w-this.w)*a,this}lerpVectors(i,a,e){return this.x=i.x+(a.x-i.x)*e,this.y=i.y+(a.y-i.y)*e,this.z=i.z+(a.z-i.z)*e,this.w=i.w+(a.w-i.w)*e,this}equals(i){return i.x===this.x&&i.y===this.y&&i.z===this.z&&i.w===this.w}fromArray(i,a=0){return this.x=i[a],this.y=i[a+1],this.z=i[a+2],this.w=i[a+3],this}toArray(i=[],a=0){return i[a]=this.x,i[a+1]=this.y,i[a+2]=this.z,i[a+3]=this.w,i}fromBufferAttribute(i,a){return this.x=i.getX(a),this.y=i.getY(a),this.z=i.getZ(a),this.w=i.getW(a),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class yo extends nn{constructor(i=1,a=1,e={}){super(),this.isWebGLRenderTarget=!0,this.width=i,this.height=a,this.depth=1,this.scissor=new la(0,0,i,a),this.scissorTest=!1,this.viewport=new la(0,0,i,a);const o={width:i,height:a,depth:1};this.texture=new wa(o,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.internalFormat=e.internalFormat!==void 0?e.internalFormat:null,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:Za,this.depthBuffer=e.depthBuffer!==void 0?e.depthBuffer:!0,this.stencilBuffer=e.stencilBuffer!==void 0?e.stencilBuffer:!1,this.depthTexture=e.depthTexture!==void 0?e.depthTexture:null,this.samples=e.samples!==void 0?e.samples:0}setSize(i,a,e=1){(this.width!==i||this.height!==a||this.depth!==e)&&(this.width=i,this.height=a,this.depth=e,this.texture.image.width=i,this.texture.image.height=a,this.texture.image.depth=e,this.dispose()),this.viewport.set(0,0,i,a),this.scissor.set(0,0,i,a)}clone(){return new this.constructor().copy(this)}copy(i){this.width=i.width,this.height=i.height,this.depth=i.depth,this.viewport.copy(i.viewport),this.texture=i.texture.clone(),this.texture.isRenderTargetTexture=!0;const a=Object.assign({},i.texture.image);return this.texture.source=new ll(a),this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,i.depthTexture!==null&&(this.depthTexture=i.depthTexture.clone()),this.samples=i.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class fl extends wa{constructor(i=null,a=1,e=1,o=1){super(null),this.isDataArrayTexture=!0,this.image={data:i,width:a,height:e,depth:o},this.magFilter=ka,this.minFilter=ka,this.wrapR=oe,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Em extends wa{constructor(i=null,a=1,e=1,o=1){super(null),this.isData3DTexture=!0,this.image={data:i,width:a,height:e,depth:o},this.magFilter=ka,this.minFilter=ka,this.wrapR=oe,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ln{constructor(i=0,a=0,e=0,o=1){this.isQuaternion=!0,this._x=i,this._y=a,this._z=e,this._w=o}static slerpFlat(i,a,e,o,n,s,t){let c=e[o+0],l=e[o+1],f=e[o+2],d=e[o+3];const m=n[s+0],g=n[s+1],h=n[s+2],u=n[s+3];if(t===0){i[a+0]=c,i[a+1]=l,i[a+2]=f,i[a+3]=d;return}if(t===1){i[a+0]=m,i[a+1]=g,i[a+2]=h,i[a+3]=u;return}if(d!==u||c!==m||l!==g||f!==h){let p=1-t;const b=c*m+l*g+f*h+d*u,k=b>=0?1:-1,y=1-b*b;if(y>Number.EPSILON){const _=Math.sqrt(y),R=Math.atan2(_,b*k);p=Math.sin(p*R)/_,t=Math.sin(t*R)/_}const S=t*k;if(c=c*p+m*S,l=l*p+g*S,f=f*p+h*S,d=d*p+u*S,p===1-t){const _=1/Math.sqrt(c*c+l*l+f*f+d*d);c*=_,l*=_,f*=_,d*=_}}i[a]=c,i[a+1]=l,i[a+2]=f,i[a+3]=d}static multiplyQuaternionsFlat(i,a,e,o,n,s){const t=e[o],c=e[o+1],l=e[o+2],f=e[o+3],d=n[s],m=n[s+1],g=n[s+2],h=n[s+3];return i[a]=t*h+f*d+c*g-l*m,i[a+1]=c*h+f*m+l*d-t*g,i[a+2]=l*h+f*g+t*m-c*d,i[a+3]=f*h-t*d-c*m-l*g,i}get x(){return this._x}set x(i){this._x=i,this._onChangeCallback()}get y(){return this._y}set y(i){this._y=i,this._onChangeCallback()}get z(){return this._z}set z(i){this._z=i,this._onChangeCallback()}get w(){return this._w}set w(i){this._w=i,this._onChangeCallback()}set(i,a,e,o){return this._x=i,this._y=a,this._z=e,this._w=o,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(i){return this._x=i.x,this._y=i.y,this._z=i.z,this._w=i.w,this._onChangeCallback(),this}setFromEuler(i,a){const e=i._x,o=i._y,n=i._z,s=i._order,t=Math.cos,c=Math.sin,l=t(e/2),f=t(o/2),d=t(n/2),m=c(e/2),g=c(o/2),h=c(n/2);switch(s){case"XYZ":this._x=m*f*d+l*g*h,this._y=l*g*d-m*f*h,this._z=l*f*h+m*g*d,this._w=l*f*d-m*g*h;break;case"YXZ":this._x=m*f*d+l*g*h,this._y=l*g*d-m*f*h,this._z=l*f*h-m*g*d,this._w=l*f*d+m*g*h;break;case"ZXY":this._x=m*f*d-l*g*h,this._y=l*g*d+m*f*h,this._z=l*f*h+m*g*d,this._w=l*f*d-m*g*h;break;case"ZYX":this._x=m*f*d-l*g*h,this._y=l*g*d+m*f*h,this._z=l*f*h-m*g*d,this._w=l*f*d+m*g*h;break;case"YZX":this._x=m*f*d+l*g*h,this._y=l*g*d+m*f*h,this._z=l*f*h-m*g*d,this._w=l*f*d-m*g*h;break;case"XZY":this._x=m*f*d-l*g*h,this._y=l*g*d-m*f*h,this._z=l*f*h+m*g*d,this._w=l*f*d+m*g*h;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return a!==!1&&this._onChangeCallback(),this}setFromAxisAngle(i,a){const e=a/2,o=Math.sin(e);return this._x=i.x*o,this._y=i.y*o,this._z=i.z*o,this._w=Math.cos(e),this._onChangeCallback(),this}setFromRotationMatrix(i){const a=i.elements,e=a[0],o=a[4],n=a[8],s=a[1],t=a[5],c=a[9],l=a[2],f=a[6],d=a[10],m=e+t+d;if(m>0){const g=.5/Math.sqrt(m+1);this._w=.25/g,this._x=(f-c)*g,this._y=(n-l)*g,this._z=(s-o)*g}else if(e>t&&e>d){const g=2*Math.sqrt(1+e-t-d);this._w=(f-c)/g,this._x=.25*g,this._y=(o+s)/g,this._z=(n+l)/g}else if(t>d){const g=2*Math.sqrt(1+t-e-d);this._w=(n-l)/g,this._x=(o+s)/g,this._y=.25*g,this._z=(c+f)/g}else{const g=2*Math.sqrt(1+d-e-t);this._w=(s-o)/g,this._x=(n+l)/g,this._y=(c+f)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(i,a){let e=i.dot(a)+1;return e<Number.EPSILON?(e=0,Math.abs(i.x)>Math.abs(i.z)?(this._x=-i.y,this._y=i.x,this._z=0,this._w=e):(this._x=0,this._y=-i.z,this._z=i.y,this._w=e)):(this._x=i.y*a.z-i.z*a.y,this._y=i.z*a.x-i.x*a.z,this._z=i.x*a.y-i.y*a.x,this._w=e),this.normalize()}angleTo(i){return 2*Math.acos(Math.abs(La(this.dot(i),-1,1)))}rotateTowards(i,a){const e=this.angleTo(i);if(e===0)return this;const o=Math.min(1,a/e);return this.slerp(i,o),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(i){return this._x*i._x+this._y*i._y+this._z*i._z+this._w*i._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let i=this.length();return i===0?(this._x=0,this._y=0,this._z=0,this._w=1):(i=1/i,this._x=this._x*i,this._y=this._y*i,this._z=this._z*i,this._w=this._w*i),this._onChangeCallback(),this}multiply(i){return this.multiplyQuaternions(this,i)}premultiply(i){return this.multiplyQuaternions(i,this)}multiplyQuaternions(i,a){const e=i._x,o=i._y,n=i._z,s=i._w,t=a._x,c=a._y,l=a._z,f=a._w;return this._x=e*f+s*t+o*l-n*c,this._y=o*f+s*c+n*t-e*l,this._z=n*f+s*l+e*c-o*t,this._w=s*f-e*t-o*c-n*l,this._onChangeCallback(),this}slerp(i,a){if(a===0)return this;if(a===1)return this.copy(i);const e=this._x,o=this._y,n=this._z,s=this._w;let t=s*i._w+e*i._x+o*i._y+n*i._z;if(t<0?(this._w=-i._w,this._x=-i._x,this._y=-i._y,this._z=-i._z,t=-t):this.copy(i),t>=1)return this._w=s,this._x=e,this._y=o,this._z=n,this;const c=1-t*t;if(c<=Number.EPSILON){const g=1-a;return this._w=g*s+a*this._w,this._x=g*e+a*this._x,this._y=g*o+a*this._y,this._z=g*n+a*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(c),f=Math.atan2(l,t),d=Math.sin((1-a)*f)/l,m=Math.sin(a*f)/l;return this._w=s*d+this._w*m,this._x=e*d+this._x*m,this._y=o*d+this._y*m,this._z=n*d+this._z*m,this._onChangeCallback(),this}slerpQuaternions(i,a,e){return this.copy(i).slerp(a,e)}random(){const i=Math.random(),a=Math.sqrt(1-i),e=Math.sqrt(i),o=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(a*Math.cos(o),e*Math.sin(n),e*Math.cos(n),a*Math.sin(o))}equals(i){return i._x===this._x&&i._y===this._y&&i._z===this._z&&i._w===this._w}fromArray(i,a=0){return this._x=i[a],this._y=i[a+1],this._z=i[a+2],this._w=i[a+3],this._onChangeCallback(),this}toArray(i=[],a=0){return i[a]=this._x,i[a+1]=this._y,i[a+2]=this._z,i[a+3]=this._w,i}fromBufferAttribute(i,a){return this._x=i.getX(a),this._y=i.getY(a),this._z=i.getZ(a),this._w=i.getW(a),this}_onChange(i){return this._onChangeCallback=i,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class B{constructor(i=0,a=0,e=0){B.prototype.isVector3=!0,this.x=i,this.y=a,this.z=e}set(i,a,e){return e===void 0&&(e=this.z),this.x=i,this.y=a,this.z=e,this}setScalar(i){return this.x=i,this.y=i,this.z=i,this}setX(i){return this.x=i,this}setY(i){return this.y=i,this}setZ(i){return this.z=i,this}setComponent(i,a){switch(i){case 0:this.x=a;break;case 1:this.y=a;break;case 2:this.z=a;break;default:throw new Error("index is out of range: "+i)}return this}getComponent(i){switch(i){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+i)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(i){return this.x=i.x,this.y=i.y,this.z=i.z,this}add(i){return this.x+=i.x,this.y+=i.y,this.z+=i.z,this}addScalar(i){return this.x+=i,this.y+=i,this.z+=i,this}addVectors(i,a){return this.x=i.x+a.x,this.y=i.y+a.y,this.z=i.z+a.z,this}addScaledVector(i,a){return this.x+=i.x*a,this.y+=i.y*a,this.z+=i.z*a,this}sub(i){return this.x-=i.x,this.y-=i.y,this.z-=i.z,this}subScalar(i){return this.x-=i,this.y-=i,this.z-=i,this}subVectors(i,a){return this.x=i.x-a.x,this.y=i.y-a.y,this.z=i.z-a.z,this}multiply(i){return this.x*=i.x,this.y*=i.y,this.z*=i.z,this}multiplyScalar(i){return this.x*=i,this.y*=i,this.z*=i,this}multiplyVectors(i,a){return this.x=i.x*a.x,this.y=i.y*a.y,this.z=i.z*a.z,this}applyEuler(i){return this.applyQuaternion(ac.setFromEuler(i))}applyAxisAngle(i,a){return this.applyQuaternion(ac.setFromAxisAngle(i,a))}applyMatrix3(i){const a=this.x,e=this.y,o=this.z,n=i.elements;return this.x=n[0]*a+n[3]*e+n[6]*o,this.y=n[1]*a+n[4]*e+n[7]*o,this.z=n[2]*a+n[5]*e+n[8]*o,this}applyNormalMatrix(i){return this.applyMatrix3(i).normalize()}applyMatrix4(i){const a=this.x,e=this.y,o=this.z,n=i.elements,s=1/(n[3]*a+n[7]*e+n[11]*o+n[15]);return this.x=(n[0]*a+n[4]*e+n[8]*o+n[12])*s,this.y=(n[1]*a+n[5]*e+n[9]*o+n[13])*s,this.z=(n[2]*a+n[6]*e+n[10]*o+n[14])*s,this}applyQuaternion(i){const a=this.x,e=this.y,o=this.z,n=i.x,s=i.y,t=i.z,c=i.w,l=c*a+s*o-t*e,f=c*e+t*a-n*o,d=c*o+n*e-s*a,m=-n*a-s*e-t*o;return this.x=l*c+m*-n+f*-t-d*-s,this.y=f*c+m*-s+d*-n-l*-t,this.z=d*c+m*-t+l*-s-f*-n,this}project(i){return this.applyMatrix4(i.matrixWorldInverse).applyMatrix4(i.projectionMatrix)}unproject(i){return this.applyMatrix4(i.projectionMatrixInverse).applyMatrix4(i.matrixWorld)}transformDirection(i){const a=this.x,e=this.y,o=this.z,n=i.elements;return this.x=n[0]*a+n[4]*e+n[8]*o,this.y=n[1]*a+n[5]*e+n[9]*o,this.z=n[2]*a+n[6]*e+n[10]*o,this.normalize()}divide(i){return this.x/=i.x,this.y/=i.y,this.z/=i.z,this}divideScalar(i){return this.multiplyScalar(1/i)}min(i){return this.x=Math.min(this.x,i.x),this.y=Math.min(this.y,i.y),this.z=Math.min(this.z,i.z),this}max(i){return this.x=Math.max(this.x,i.x),this.y=Math.max(this.y,i.y),this.z=Math.max(this.z,i.z),this}clamp(i,a){return this.x=Math.max(i.x,Math.min(a.x,this.x)),this.y=Math.max(i.y,Math.min(a.y,this.y)),this.z=Math.max(i.z,Math.min(a.z,this.z)),this}clampScalar(i,a){return this.x=Math.max(i,Math.min(a,this.x)),this.y=Math.max(i,Math.min(a,this.y)),this.z=Math.max(i,Math.min(a,this.z)),this}clampLength(i,a){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(i,Math.min(a,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(i){return this.x*i.x+this.y*i.y+this.z*i.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(i){return this.normalize().multiplyScalar(i)}lerp(i,a){return this.x+=(i.x-this.x)*a,this.y+=(i.y-this.y)*a,this.z+=(i.z-this.z)*a,this}lerpVectors(i,a,e){return this.x=i.x+(a.x-i.x)*e,this.y=i.y+(a.y-i.y)*e,this.z=i.z+(a.z-i.z)*e,this}cross(i){return this.crossVectors(this,i)}crossVectors(i,a){const e=i.x,o=i.y,n=i.z,s=a.x,t=a.y,c=a.z;return this.x=o*c-n*t,this.y=n*s-e*c,this.z=e*t-o*s,this}projectOnVector(i){const a=i.lengthSq();if(a===0)return this.set(0,0,0);const e=i.dot(this)/a;return this.copy(i).multiplyScalar(e)}projectOnPlane(i){return Zt.copy(this).projectOnVector(i),this.sub(Zt)}reflect(i){return this.sub(Zt.copy(i).multiplyScalar(2*this.dot(i)))}angleTo(i){const a=Math.sqrt(this.lengthSq()*i.lengthSq());if(a===0)return Math.PI/2;const e=this.dot(i)/a;return Math.acos(La(e,-1,1))}distanceTo(i){return Math.sqrt(this.distanceToSquared(i))}distanceToSquared(i){const a=this.x-i.x,e=this.y-i.y,o=this.z-i.z;return a*a+e*e+o*o}manhattanDistanceTo(i){return Math.abs(this.x-i.x)+Math.abs(this.y-i.y)+Math.abs(this.z-i.z)}setFromSpherical(i){return this.setFromSphericalCoords(i.radius,i.phi,i.theta)}setFromSphericalCoords(i,a,e){const o=Math.sin(a)*i;return this.x=o*Math.sin(e),this.y=Math.cos(a)*i,this.z=o*Math.cos(e),this}setFromCylindrical(i){return this.setFromCylindricalCoords(i.radius,i.theta,i.y)}setFromCylindricalCoords(i,a,e){return this.x=i*Math.sin(a),this.y=e,this.z=i*Math.cos(a),this}setFromMatrixPosition(i){const a=i.elements;return this.x=a[12],this.y=a[13],this.z=a[14],this}setFromMatrixScale(i){const a=this.setFromMatrixColumn(i,0).length(),e=this.setFromMatrixColumn(i,1).length(),o=this.setFromMatrixColumn(i,2).length();return this.x=a,this.y=e,this.z=o,this}setFromMatrixColumn(i,a){return this.fromArray(i.elements,a*4)}setFromMatrix3Column(i,a){return this.fromArray(i.elements,a*3)}setFromEuler(i){return this.x=i._x,this.y=i._y,this.z=i._z,this}equals(i){return i.x===this.x&&i.y===this.y&&i.z===this.z}fromArray(i,a=0){return this.x=i[a],this.y=i[a+1],this.z=i[a+2],this}toArray(i=[],a=0){return i[a]=this.x,i[a+1]=this.y,i[a+2]=this.z,i}fromBufferAttribute(i,a){return this.x=i.getX(a),this.y=i.getY(a),this.z=i.getZ(a),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const i=(Math.random()-.5)*2,a=Math.random()*Math.PI*2,e=Math.sqrt(1-i**2);return this.x=e*Math.cos(a),this.y=e*Math.sin(a),this.z=i,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Zt=new B,ac=new Ln;class Bn{constructor(i=new B(1/0,1/0,1/0),a=new B(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=i,this.max=a}set(i,a){return this.min.copy(i),this.max.copy(a),this}setFromArray(i){let a=1/0,e=1/0,o=1/0,n=-1/0,s=-1/0,t=-1/0;for(let c=0,l=i.length;c<l;c+=3){const f=i[c],d=i[c+1],m=i[c+2];f<a&&(a=f),d<e&&(e=d),m<o&&(o=m),f>n&&(n=f),d>s&&(s=d),m>t&&(t=m)}return this.min.set(a,e,o),this.max.set(n,s,t),this}setFromBufferAttribute(i){let a=1/0,e=1/0,o=1/0,n=-1/0,s=-1/0,t=-1/0;for(let c=0,l=i.count;c<l;c++){const f=i.getX(c),d=i.getY(c),m=i.getZ(c);f<a&&(a=f),d<e&&(e=d),m<o&&(o=m),f>n&&(n=f),d>s&&(s=d),m>t&&(t=m)}return this.min.set(a,e,o),this.max.set(n,s,t),this}setFromPoints(i){this.makeEmpty();for(let a=0,e=i.length;a<e;a++)this.expandByPoint(i[a]);return this}setFromCenterAndSize(i,a){const e=$e.copy(a).multiplyScalar(.5);return this.min.copy(i).sub(e),this.max.copy(i).add(e),this}setFromObject(i,a=!1){return this.makeEmpty(),this.expandByObject(i,a)}clone(){return new this.constructor().copy(this)}copy(i){return this.min.copy(i.min),this.max.copy(i.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(i){return this.isEmpty()?i.set(0,0,0):i.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(i){return this.isEmpty()?i.set(0,0,0):i.subVectors(this.max,this.min)}expandByPoint(i){return this.min.min(i),this.max.max(i),this}expandByVector(i){return this.min.sub(i),this.max.add(i),this}expandByScalar(i){return this.min.addScalar(-i),this.max.addScalar(i),this}expandByObject(i,a=!1){i.updateWorldMatrix(!1,!1);const e=i.geometry;if(e!==void 0)if(a&&e.attributes!=null&&e.attributes.position!==void 0){const n=e.attributes.position;for(let s=0,t=n.count;s<t;s++)$e.fromBufferAttribute(n,s).applyMatrix4(i.matrixWorld),this.expandByPoint($e)}else e.boundingBox===null&&e.computeBoundingBox(),Jt.copy(e.boundingBox),Jt.applyMatrix4(i.matrixWorld),this.union(Jt);const o=i.children;for(let n=0,s=o.length;n<s;n++)this.expandByObject(o[n],a);return this}containsPoint(i){return!(i.x<this.min.x||i.x>this.max.x||i.y<this.min.y||i.y>this.max.y||i.z<this.min.z||i.z>this.max.z)}containsBox(i){return this.min.x<=i.min.x&&i.max.x<=this.max.x&&this.min.y<=i.min.y&&i.max.y<=this.max.y&&this.min.z<=i.min.z&&i.max.z<=this.max.z}getParameter(i,a){return a.set((i.x-this.min.x)/(this.max.x-this.min.x),(i.y-this.min.y)/(this.max.y-this.min.y),(i.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(i){return!(i.max.x<this.min.x||i.min.x>this.max.x||i.max.y<this.min.y||i.min.y>this.max.y||i.max.z<this.min.z||i.min.z>this.max.z)}intersectsSphere(i){return this.clampPoint(i.center,$e),$e.distanceToSquared(i.center)<=i.radius*i.radius}intersectsPlane(i){let a,e;return i.normal.x>0?(a=i.normal.x*this.min.x,e=i.normal.x*this.max.x):(a=i.normal.x*this.max.x,e=i.normal.x*this.min.x),i.normal.y>0?(a+=i.normal.y*this.min.y,e+=i.normal.y*this.max.y):(a+=i.normal.y*this.max.y,e+=i.normal.y*this.min.y),i.normal.z>0?(a+=i.normal.z*this.min.z,e+=i.normal.z*this.max.z):(a+=i.normal.z*this.max.z,e+=i.normal.z*this.min.z),a<=-i.constant&&e>=-i.constant}intersectsTriangle(i){if(this.isEmpty())return!1;this.getCenter(cn),Kn.subVectors(this.max,cn),Mo.subVectors(i.a,cn),wo.subVectors(i.b,cn),xo.subVectors(i.c,cn),Pe.subVectors(wo,Mo),Ie.subVectors(xo,wo),Qe.subVectors(Mo,xo);let a=[0,-Pe.z,Pe.y,0,-Ie.z,Ie.y,0,-Qe.z,Qe.y,Pe.z,0,-Pe.x,Ie.z,0,-Ie.x,Qe.z,0,-Qe.x,-Pe.y,Pe.x,0,-Ie.y,Ie.x,0,-Qe.y,Qe.x,0];return!Xt(a,Mo,wo,xo,Kn)||(a=[1,0,0,0,1,0,0,0,1],!Xt(a,Mo,wo,xo,Kn))?!1:(Vn.crossVectors(Pe,Ie),a=[Vn.x,Vn.y,Vn.z],Xt(a,Mo,wo,xo,Kn))}clampPoint(i,a){return a.copy(i).clamp(this.min,this.max)}distanceToPoint(i){return $e.copy(i).clamp(this.min,this.max).sub(i).length()}getBoundingSphere(i){return this.getCenter(i.center),i.radius=this.getSize($e).length()*.5,i}intersect(i){return this.min.max(i.min),this.max.min(i.max),this.isEmpty()&&this.makeEmpty(),this}union(i){return this.min.min(i.min),this.max.max(i.max),this}applyMatrix4(i){return this.isEmpty()?this:(ye[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(i),ye[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(i),ye[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(i),ye[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(i),ye[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(i),ye[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(i),ye[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(i),ye[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(i),this.setFromPoints(ye),this)}translate(i){return this.min.add(i),this.max.add(i),this}equals(i){return i.min.equals(this.min)&&i.max.equals(this.max)}}const ye=[new B,new B,new B,new B,new B,new B,new B,new B],$e=new B,Jt=new Bn,Mo=new B,wo=new B,xo=new B,Pe=new B,Ie=new B,Qe=new B,cn=new B,Kn=new B,Vn=new B,io=new B;function Xt(r,i,a,e,o){for(let n=0,s=r.length-3;n<=s;n+=3){io.fromArray(r,n);const t=o.x*Math.abs(io.x)+o.y*Math.abs(io.y)+o.z*Math.abs(io.z),c=i.dot(io),l=a.dot(io),f=e.dot(io);if(Math.max(-Math.max(c,l,f),Math.min(c,l,f))>t)return!1}return!0}const zm=new Bn,ln=new B,Yt=new B;class St{constructor(i=new B,a=-1){this.center=i,this.radius=a}set(i,a){return this.center.copy(i),this.radius=a,this}setFromPoints(i,a){const e=this.center;a!==void 0?e.copy(a):zm.setFromPoints(i).getCenter(e);let o=0;for(let n=0,s=i.length;n<s;n++)o=Math.max(o,e.distanceToSquared(i[n]));return this.radius=Math.sqrt(o),this}copy(i){return this.center.copy(i.center),this.radius=i.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(i){return i.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(i){return i.distanceTo(this.center)-this.radius}intersectsSphere(i){const a=this.radius+i.radius;return i.center.distanceToSquared(this.center)<=a*a}intersectsBox(i){return i.intersectsSphere(this)}intersectsPlane(i){return Math.abs(i.distanceToPoint(this.center))<=this.radius}clampPoint(i,a){const e=this.center.distanceToSquared(i);return a.copy(i),e>this.radius*this.radius&&(a.sub(this.center).normalize(),a.multiplyScalar(this.radius).add(this.center)),a}getBoundingBox(i){return this.isEmpty()?(i.makeEmpty(),i):(i.set(this.center,this.center),i.expandByScalar(this.radius),i)}applyMatrix4(i){return this.center.applyMatrix4(i),this.radius=this.radius*i.getMaxScaleOnAxis(),this}translate(i){return this.center.add(i),this}expandByPoint(i){if(this.isEmpty())return this.center.copy(i),this.radius=0,this;ln.subVectors(i,this.center);const a=ln.lengthSq();if(a>this.radius*this.radius){const e=Math.sqrt(a),o=(e-this.radius)*.5;this.center.addScaledVector(ln,o/e),this.radius+=o}return this}union(i){return i.isEmpty()?this:this.isEmpty()?(this.copy(i),this):(this.center.equals(i.center)===!0?this.radius=Math.max(this.radius,i.radius):(Yt.subVectors(i.center,this.center).setLength(i.radius),this.expandByPoint(ln.copy(i.center).add(Yt)),this.expandByPoint(ln.copy(i.center).sub(Yt))),this)}equals(i){return i.center.equals(this.center)&&i.radius===this.radius}clone(){return new this.constructor().copy(this)}}const _e=new B,$t=new B,jn=new B,Ne=new B,Qt=new B,Hn=new B,is=new B;class Ys{constructor(i=new B,a=new B(0,0,-1)){this.origin=i,this.direction=a}set(i,a){return this.origin.copy(i),this.direction.copy(a),this}copy(i){return this.origin.copy(i.origin),this.direction.copy(i.direction),this}at(i,a){return a.copy(this.direction).multiplyScalar(i).add(this.origin)}lookAt(i){return this.direction.copy(i).sub(this.origin).normalize(),this}recast(i){return this.origin.copy(this.at(i,_e)),this}closestPointToPoint(i,a){a.subVectors(i,this.origin);const e=a.dot(this.direction);return e<0?a.copy(this.origin):a.copy(this.direction).multiplyScalar(e).add(this.origin)}distanceToPoint(i){return Math.sqrt(this.distanceSqToPoint(i))}distanceSqToPoint(i){const a=_e.subVectors(i,this.origin).dot(this.direction);return a<0?this.origin.distanceToSquared(i):(_e.copy(this.direction).multiplyScalar(a).add(this.origin),_e.distanceToSquared(i))}distanceSqToSegment(i,a,e,o){$t.copy(i).add(a).multiplyScalar(.5),jn.copy(a).sub(i).normalize(),Ne.copy(this.origin).sub($t);const n=i.distanceTo(a)*.5,s=-this.direction.dot(jn),t=Ne.dot(this.direction),c=-Ne.dot(jn),l=Ne.lengthSq(),f=Math.abs(1-s*s);let d,m,g,h;if(f>0)if(d=s*c-t,m=s*t-c,h=n*f,d>=0)if(m>=-h)if(m<=h){const u=1/f;d*=u,m*=u,g=d*(d+s*m+2*t)+m*(s*d+m+2*c)+l}else m=n,d=Math.max(0,-(s*m+t)),g=-d*d+m*(m+2*c)+l;else m=-n,d=Math.max(0,-(s*m+t)),g=-d*d+m*(m+2*c)+l;else m<=-h?(d=Math.max(0,-(-s*n+t)),m=d>0?-n:Math.min(Math.max(-n,-c),n),g=-d*d+m*(m+2*c)+l):m<=h?(d=0,m=Math.min(Math.max(-n,-c),n),g=m*(m+2*c)+l):(d=Math.max(0,-(s*n+t)),m=d>0?n:Math.min(Math.max(-n,-c),n),g=-d*d+m*(m+2*c)+l);else m=s>0?-n:n,d=Math.max(0,-(s*m+t)),g=-d*d+m*(m+2*c)+l;return e&&e.copy(this.direction).multiplyScalar(d).add(this.origin),o&&o.copy(jn).multiplyScalar(m).add($t),g}intersectSphere(i,a){_e.subVectors(i.center,this.origin);const e=_e.dot(this.direction),o=_e.dot(_e)-e*e,n=i.radius*i.radius;if(o>n)return null;const s=Math.sqrt(n-o),t=e-s,c=e+s;return t<0&&c<0?null:t<0?this.at(c,a):this.at(t,a)}intersectsSphere(i){return this.distanceSqToPoint(i.center)<=i.radius*i.radius}distanceToPlane(i){const a=i.normal.dot(this.direction);if(a===0)return i.distanceToPoint(this.origin)===0?0:null;const e=-(this.origin.dot(i.normal)+i.constant)/a;return e>=0?e:null}intersectPlane(i,a){const e=this.distanceToPlane(i);return e===null?null:this.at(e,a)}intersectsPlane(i){const a=i.distanceToPoint(this.origin);return a===0||i.normal.dot(this.direction)*a<0}intersectBox(i,a){let e,o,n,s,t,c;const l=1/this.direction.x,f=1/this.direction.y,d=1/this.direction.z,m=this.origin;return l>=0?(e=(i.min.x-m.x)*l,o=(i.max.x-m.x)*l):(e=(i.max.x-m.x)*l,o=(i.min.x-m.x)*l),f>=0?(n=(i.min.y-m.y)*f,s=(i.max.y-m.y)*f):(n=(i.max.y-m.y)*f,s=(i.min.y-m.y)*f),e>s||n>o||((n>e||isNaN(e))&&(e=n),(s<o||isNaN(o))&&(o=s),d>=0?(t=(i.min.z-m.z)*d,c=(i.max.z-m.z)*d):(t=(i.max.z-m.z)*d,c=(i.min.z-m.z)*d),e>c||t>o)||((t>e||e!==e)&&(e=t),(c<o||o!==o)&&(o=c),o<0)?null:this.at(e>=0?e:o,a)}intersectsBox(i){return this.intersectBox(i,_e)!==null}intersectTriangle(i,a,e,o,n){Qt.subVectors(a,i),Hn.subVectors(e,i),is.crossVectors(Qt,Hn);let s=this.direction.dot(is),t;if(s>0){if(o)return null;t=1}else if(s<0)t=-1,s=-s;else return null;Ne.subVectors(this.origin,i);const c=t*this.direction.dot(Hn.crossVectors(Ne,Hn));if(c<0)return null;const l=t*this.direction.dot(Qt.cross(Ne));if(l<0||c+l>s)return null;const f=-t*Ne.dot(is);return f<0?null:this.at(f/s,n)}applyMatrix4(i){return this.origin.applyMatrix4(i),this.direction.transformDirection(i),this}equals(i){return i.origin.equals(this.origin)&&i.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ia{constructor(){ia.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(i,a,e,o,n,s,t,c,l,f,d,m,g,h,u,p){const b=this.elements;return b[0]=i,b[4]=a,b[8]=e,b[12]=o,b[1]=n,b[5]=s,b[9]=t,b[13]=c,b[2]=l,b[6]=f,b[10]=d,b[14]=m,b[3]=g,b[7]=h,b[11]=u,b[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ia().fromArray(this.elements)}copy(i){const a=this.elements,e=i.elements;return a[0]=e[0],a[1]=e[1],a[2]=e[2],a[3]=e[3],a[4]=e[4],a[5]=e[5],a[6]=e[6],a[7]=e[7],a[8]=e[8],a[9]=e[9],a[10]=e[10],a[11]=e[11],a[12]=e[12],a[13]=e[13],a[14]=e[14],a[15]=e[15],this}copyPosition(i){const a=this.elements,e=i.elements;return a[12]=e[12],a[13]=e[13],a[14]=e[14],this}setFromMatrix3(i){const a=i.elements;return this.set(a[0],a[3],a[6],0,a[1],a[4],a[7],0,a[2],a[5],a[8],0,0,0,0,1),this}extractBasis(i,a,e){return i.setFromMatrixColumn(this,0),a.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this}makeBasis(i,a,e){return this.set(i.x,a.x,e.x,0,i.y,a.y,e.y,0,i.z,a.z,e.z,0,0,0,0,1),this}extractRotation(i){const a=this.elements,e=i.elements,o=1/Ao.setFromMatrixColumn(i,0).length(),n=1/Ao.setFromMatrixColumn(i,1).length(),s=1/Ao.setFromMatrixColumn(i,2).length();return a[0]=e[0]*o,a[1]=e[1]*o,a[2]=e[2]*o,a[3]=0,a[4]=e[4]*n,a[5]=e[5]*n,a[6]=e[6]*n,a[7]=0,a[8]=e[8]*s,a[9]=e[9]*s,a[10]=e[10]*s,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,this}makeRotationFromEuler(i){const a=this.elements,e=i.x,o=i.y,n=i.z,s=Math.cos(e),t=Math.sin(e),c=Math.cos(o),l=Math.sin(o),f=Math.cos(n),d=Math.sin(n);if(i.order==="XYZ"){const m=s*f,g=s*d,h=t*f,u=t*d;a[0]=c*f,a[4]=-c*d,a[8]=l,a[1]=g+h*l,a[5]=m-u*l,a[9]=-t*c,a[2]=u-m*l,a[6]=h+g*l,a[10]=s*c}else if(i.order==="YXZ"){const m=c*f,g=c*d,h=l*f,u=l*d;a[0]=m+u*t,a[4]=h*t-g,a[8]=s*l,a[1]=s*d,a[5]=s*f,a[9]=-t,a[2]=g*t-h,a[6]=u+m*t,a[10]=s*c}else if(i.order==="ZXY"){const m=c*f,g=c*d,h=l*f,u=l*d;a[0]=m-u*t,a[4]=-s*d,a[8]=h+g*t,a[1]=g+h*t,a[5]=s*f,a[9]=u-m*t,a[2]=-s*l,a[6]=t,a[10]=s*c}else if(i.order==="ZYX"){const m=s*f,g=s*d,h=t*f,u=t*d;a[0]=c*f,a[4]=h*l-g,a[8]=m*l+u,a[1]=c*d,a[5]=u*l+m,a[9]=g*l-h,a[2]=-l,a[6]=t*c,a[10]=s*c}else if(i.order==="YZX"){const m=s*c,g=s*l,h=t*c,u=t*l;a[0]=c*f,a[4]=u-m*d,a[8]=h*d+g,a[1]=d,a[5]=s*f,a[9]=-t*f,a[2]=-l*f,a[6]=g*d+h,a[10]=m-u*d}else if(i.order==="XZY"){const m=s*c,g=s*l,h=t*c,u=t*l;a[0]=c*f,a[4]=-d,a[8]=l*f,a[1]=m*d+u,a[5]=s*f,a[9]=g*d-h,a[2]=h*d-g,a[6]=t*f,a[10]=u*d+m}return a[3]=0,a[7]=0,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,this}makeRotationFromQuaternion(i){return this.compose(Pm,i,Im)}lookAt(i,a,e){const o=this.elements;return Pa.subVectors(i,a),Pa.lengthSq()===0&&(Pa.z=1),Pa.normalize(),Le.crossVectors(e,Pa),Le.lengthSq()===0&&(Math.abs(e.z)===1?Pa.x+=1e-4:Pa.z+=1e-4,Pa.normalize(),Le.crossVectors(e,Pa)),Le.normalize(),Wn.crossVectors(Pa,Le),o[0]=Le.x,o[4]=Wn.x,o[8]=Pa.x,o[1]=Le.y,o[5]=Wn.y,o[9]=Pa.y,o[2]=Le.z,o[6]=Wn.z,o[10]=Pa.z,this}multiply(i){return this.multiplyMatrices(this,i)}premultiply(i){return this.multiplyMatrices(i,this)}multiplyMatrices(i,a){const e=i.elements,o=a.elements,n=this.elements,s=e[0],t=e[4],c=e[8],l=e[12],f=e[1],d=e[5],m=e[9],g=e[13],h=e[2],u=e[6],p=e[10],b=e[14],k=e[3],y=e[7],S=e[11],_=e[15],R=o[0],T=o[4],v=o[8],w=o[12],E=o[1],U=o[5],W=o[9],P=o[13],z=o[2],D=o[6],J=o[10],q=o[14],O=o[3],Y=o[7],X=o[11],ci=o[15];return n[0]=s*R+t*E+c*z+l*O,n[4]=s*T+t*U+c*D+l*Y,n[8]=s*v+t*W+c*J+l*X,n[12]=s*w+t*P+c*q+l*ci,n[1]=f*R+d*E+m*z+g*O,n[5]=f*T+d*U+m*D+g*Y,n[9]=f*v+d*W+m*J+g*X,n[13]=f*w+d*P+m*q+g*ci,n[2]=h*R+u*E+p*z+b*O,n[6]=h*T+u*U+p*D+b*Y,n[10]=h*v+u*W+p*J+b*X,n[14]=h*w+u*P+p*q+b*ci,n[3]=k*R+y*E+S*z+_*O,n[7]=k*T+y*U+S*D+_*Y,n[11]=k*v+y*W+S*J+_*X,n[15]=k*w+y*P+S*q+_*ci,this}multiplyScalar(i){const a=this.elements;return a[0]*=i,a[4]*=i,a[8]*=i,a[12]*=i,a[1]*=i,a[5]*=i,a[9]*=i,a[13]*=i,a[2]*=i,a[6]*=i,a[10]*=i,a[14]*=i,a[3]*=i,a[7]*=i,a[11]*=i,a[15]*=i,this}determinant(){const i=this.elements,a=i[0],e=i[4],o=i[8],n=i[12],s=i[1],t=i[5],c=i[9],l=i[13],f=i[2],d=i[6],m=i[10],g=i[14],h=i[3],u=i[7],p=i[11],b=i[15];return h*(+n*c*d-o*l*d-n*t*m+e*l*m+o*t*g-e*c*g)+u*(+a*c*g-a*l*m+n*s*m-o*s*g+o*l*f-n*c*f)+p*(+a*l*d-a*t*g-n*s*d+e*s*g+n*t*f-e*l*f)+b*(-o*t*f-a*c*d+a*t*m+o*s*d-e*s*m+e*c*f)}transpose(){const i=this.elements;let a;return a=i[1],i[1]=i[4],i[4]=a,a=i[2],i[2]=i[8],i[8]=a,a=i[6],i[6]=i[9],i[9]=a,a=i[3],i[3]=i[12],i[12]=a,a=i[7],i[7]=i[13],i[13]=a,a=i[11],i[11]=i[14],i[14]=a,this}setPosition(i,a,e){const o=this.elements;return i.isVector3?(o[12]=i.x,o[13]=i.y,o[14]=i.z):(o[12]=i,o[13]=a,o[14]=e),this}invert(){const i=this.elements,a=i[0],e=i[1],o=i[2],n=i[3],s=i[4],t=i[5],c=i[6],l=i[7],f=i[8],d=i[9],m=i[10],g=i[11],h=i[12],u=i[13],p=i[14],b=i[15],k=d*p*l-u*m*l+u*c*g-t*p*g-d*c*b+t*m*b,y=h*m*l-f*p*l-h*c*g+s*p*g+f*c*b-s*m*b,S=f*u*l-h*d*l+h*t*g-s*u*g-f*t*b+s*d*b,_=h*d*c-f*u*c-h*t*m+s*u*m+f*t*p-s*d*p,R=a*k+e*y+o*S+n*_;if(R===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/R;return i[0]=k*T,i[1]=(u*m*n-d*p*n-u*o*g+e*p*g+d*o*b-e*m*b)*T,i[2]=(t*p*n-u*c*n+u*o*l-e*p*l-t*o*b+e*c*b)*T,i[3]=(d*c*n-t*m*n-d*o*l+e*m*l+t*o*g-e*c*g)*T,i[4]=y*T,i[5]=(f*p*n-h*m*n+h*o*g-a*p*g-f*o*b+a*m*b)*T,i[6]=(h*c*n-s*p*n-h*o*l+a*p*l+s*o*b-a*c*b)*T,i[7]=(s*m*n-f*c*n+f*o*l-a*m*l-s*o*g+a*c*g)*T,i[8]=S*T,i[9]=(h*d*n-f*u*n-h*e*g+a*u*g+f*e*b-a*d*b)*T,i[10]=(s*u*n-h*t*n+h*e*l-a*u*l-s*e*b+a*t*b)*T,i[11]=(f*t*n-s*d*n-f*e*l+a*d*l+s*e*g-a*t*g)*T,i[12]=_*T,i[13]=(f*u*o-h*d*o+h*e*m-a*u*m-f*e*p+a*d*p)*T,i[14]=(h*t*o-s*u*o-h*e*c+a*u*c+s*e*p-a*t*p)*T,i[15]=(s*d*o-f*t*o+f*e*c-a*d*c-s*e*m+a*t*m)*T,this}scale(i){const a=this.elements,e=i.x,o=i.y,n=i.z;return a[0]*=e,a[4]*=o,a[8]*=n,a[1]*=e,a[5]*=o,a[9]*=n,a[2]*=e,a[6]*=o,a[10]*=n,a[3]*=e,a[7]*=o,a[11]*=n,this}getMaxScaleOnAxis(){const i=this.elements,a=i[0]*i[0]+i[1]*i[1]+i[2]*i[2],e=i[4]*i[4]+i[5]*i[5]+i[6]*i[6],o=i[8]*i[8]+i[9]*i[9]+i[10]*i[10];return Math.sqrt(Math.max(a,e,o))}makeTranslation(i,a,e){return this.set(1,0,0,i,0,1,0,a,0,0,1,e,0,0,0,1),this}makeRotationX(i){const a=Math.cos(i),e=Math.sin(i);return this.set(1,0,0,0,0,a,-e,0,0,e,a,0,0,0,0,1),this}makeRotationY(i){const a=Math.cos(i),e=Math.sin(i);return this.set(a,0,e,0,0,1,0,0,-e,0,a,0,0,0,0,1),this}makeRotationZ(i){const a=Math.cos(i),e=Math.sin(i);return this.set(a,-e,0,0,e,a,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(i,a){const e=Math.cos(a),o=Math.sin(a),n=1-e,s=i.x,t=i.y,c=i.z,l=n*s,f=n*t;return this.set(l*s+e,l*t-o*c,l*c+o*t,0,l*t+o*c,f*t+e,f*c-o*s,0,l*c-o*t,f*c+o*s,n*c*c+e,0,0,0,0,1),this}makeScale(i,a,e){return this.set(i,0,0,0,0,a,0,0,0,0,e,0,0,0,0,1),this}makeShear(i,a,e,o,n,s){return this.set(1,e,n,0,i,1,s,0,a,o,1,0,0,0,0,1),this}compose(i,a,e){const o=this.elements,n=a._x,s=a._y,t=a._z,c=a._w,l=n+n,f=s+s,d=t+t,m=n*l,g=n*f,h=n*d,u=s*f,p=s*d,b=t*d,k=c*l,y=c*f,S=c*d,_=e.x,R=e.y,T=e.z;return o[0]=(1-(u+b))*_,o[1]=(g+S)*_,o[2]=(h-y)*_,o[3]=0,o[4]=(g-S)*R,o[5]=(1-(m+b))*R,o[6]=(p+k)*R,o[7]=0,o[8]=(h+y)*T,o[9]=(p-k)*T,o[10]=(1-(m+u))*T,o[11]=0,o[12]=i.x,o[13]=i.y,o[14]=i.z,o[15]=1,this}decompose(i,a,e){const o=this.elements;let n=Ao.set(o[0],o[1],o[2]).length();const s=Ao.set(o[4],o[5],o[6]).length(),t=Ao.set(o[8],o[9],o[10]).length();this.determinant()<0&&(n=-n),i.x=o[12],i.y=o[13],i.z=o[14],ae.copy(this);const l=1/n,f=1/s,d=1/t;return ae.elements[0]*=l,ae.elements[1]*=l,ae.elements[2]*=l,ae.elements[4]*=f,ae.elements[5]*=f,ae.elements[6]*=f,ae.elements[8]*=d,ae.elements[9]*=d,ae.elements[10]*=d,a.setFromRotationMatrix(ae),e.x=n,e.y=s,e.z=t,this}makePerspective(i,a,e,o,n,s){const t=this.elements,c=2*n/(a-i),l=2*n/(e-o),f=(a+i)/(a-i),d=(e+o)/(e-o),m=-(s+n)/(s-n),g=-2*s*n/(s-n);return t[0]=c,t[4]=0,t[8]=f,t[12]=0,t[1]=0,t[5]=l,t[9]=d,t[13]=0,t[2]=0,t[6]=0,t[10]=m,t[14]=g,t[3]=0,t[7]=0,t[11]=-1,t[15]=0,this}makeOrthographic(i,a,e,o,n,s){const t=this.elements,c=1/(a-i),l=1/(e-o),f=1/(s-n),d=(a+i)*c,m=(e+o)*l,g=(s+n)*f;return t[0]=2*c,t[4]=0,t[8]=0,t[12]=-d,t[1]=0,t[5]=2*l,t[9]=0,t[13]=-m,t[2]=0,t[6]=0,t[10]=-2*f,t[14]=-g,t[3]=0,t[7]=0,t[11]=0,t[15]=1,this}equals(i){const a=this.elements,e=i.elements;for(let o=0;o<16;o++)if(a[o]!==e[o])return!1;return!0}fromArray(i,a=0){for(let e=0;e<16;e++)this.elements[e]=i[e+a];return this}toArray(i=[],a=0){const e=this.elements;return i[a]=e[0],i[a+1]=e[1],i[a+2]=e[2],i[a+3]=e[3],i[a+4]=e[4],i[a+5]=e[5],i[a+6]=e[6],i[a+7]=e[7],i[a+8]=e[8],i[a+9]=e[9],i[a+10]=e[10],i[a+11]=e[11],i[a+12]=e[12],i[a+13]=e[13],i[a+14]=e[14],i[a+15]=e[15],i}}const Ao=new B,ae=new ia,Pm=new B(0,0,0),Im=new B(1,1,1),Le=new B,Wn=new B,Pa=new B,ec=new ia,oc=new Ln;class Mt{constructor(i=0,a=0,e=0,o=Mt.DEFAULT_ORDER){this.isEuler=!0,this._x=i,this._y=a,this._z=e,this._order=o}get x(){return this._x}set x(i){this._x=i,this._onChangeCallback()}get y(){return this._y}set y(i){this._y=i,this._onChangeCallback()}get z(){return this._z}set z(i){this._z=i,this._onChangeCallback()}get order(){return this._order}set order(i){this._order=i,this._onChangeCallback()}set(i,a,e,o=this._order){return this._x=i,this._y=a,this._z=e,this._order=o,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(i){return this._x=i._x,this._y=i._y,this._z=i._z,this._order=i._order,this._onChangeCallback(),this}setFromRotationMatrix(i,a=this._order,e=!0){const o=i.elements,n=o[0],s=o[4],t=o[8],c=o[1],l=o[5],f=o[9],d=o[2],m=o[6],g=o[10];switch(a){case"XYZ":this._y=Math.asin(La(t,-1,1)),Math.abs(t)<.9999999?(this._x=Math.atan2(-f,g),this._z=Math.atan2(-s,n)):(this._x=Math.atan2(m,l),this._z=0);break;case"YXZ":this._x=Math.asin(-La(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(t,g),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-d,n),this._z=0);break;case"ZXY":this._x=Math.asin(La(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-d,g),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(c,n));break;case"ZYX":this._y=Math.asin(-La(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(m,g),this._z=Math.atan2(c,n)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(La(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,l),this._y=Math.atan2(-d,n)):(this._x=0,this._y=Math.atan2(t,g));break;case"XZY":this._z=Math.asin(-La(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(m,l),this._y=Math.atan2(t,n)):(this._x=Math.atan2(-f,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+a)}return this._order=a,e===!0&&this._onChangeCallback(),this}setFromQuaternion(i,a,e){return ec.makeRotationFromQuaternion(i),this.setFromRotationMatrix(ec,a,e)}setFromVector3(i,a=this._order){return this.set(i.x,i.y,i.z,a)}reorder(i){return oc.setFromEuler(this),this.setFromQuaternion(oc,i)}equals(i){return i._x===this._x&&i._y===this._y&&i._z===this._z&&i._order===this._order}fromArray(i){return this._x=i[0],this._y=i[1],this._z=i[2],i[3]!==void 0&&(this._order=i[3]),this._onChangeCallback(),this}toArray(i=[],a=0){return i[a]=this._x,i[a+1]=this._y,i[a+2]=this._z,i[a+3]=this._order,i}_onChange(i){return this._onChangeCallback=i,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Mt.DEFAULT_ORDER="XYZ";class $s{constructor(){this.mask=1}set(i){this.mask=(1<<i|0)>>>0}enable(i){this.mask|=1<<i|0}enableAll(){this.mask=-1}toggle(i){this.mask^=1<<i|0}disable(i){this.mask&=~(1<<i|0)}disableAll(){this.mask=0}test(i){return(this.mask&i.mask)!==0}isEnabled(i){return(this.mask&(1<<i|0))!==0}}let Nm=0;const nc=new B,Ro=new Ln,ke=new ia,qn=new B,fn=new B,Lm=new B,Bm=new Ln,tc=new B(1,0,0),sc=new B(0,1,0),rc=new B(0,0,1),Dm={type:"added"},cc={type:"removed"};class xa extends nn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Nm++}),this.uuid=Nn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=xa.DEFAULT_UP.clone();const i=new B,a=new Mt,e=new Ln,o=new B(1,1,1);function n(){e.setFromEuler(a,!1)}function s(){a.setFromQuaternion(e,void 0,!1)}a._onChange(n),e._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:i},rotation:{configurable:!0,enumerable:!0,value:a},quaternion:{configurable:!0,enumerable:!0,value:e},scale:{configurable:!0,enumerable:!0,value:o},modelViewMatrix:{value:new ia},normalMatrix:{value:new Ga}}),this.matrix=new ia,this.matrixWorld=new ia,this.matrixAutoUpdate=xa.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=xa.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new $s,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(i){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(i),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(i){return this.quaternion.premultiply(i),this}setRotationFromAxisAngle(i,a){this.quaternion.setFromAxisAngle(i,a)}setRotationFromEuler(i){this.quaternion.setFromEuler(i,!0)}setRotationFromMatrix(i){this.quaternion.setFromRotationMatrix(i)}setRotationFromQuaternion(i){this.quaternion.copy(i)}rotateOnAxis(i,a){return Ro.setFromAxisAngle(i,a),this.quaternion.multiply(Ro),this}rotateOnWorldAxis(i,a){return Ro.setFromAxisAngle(i,a),this.quaternion.premultiply(Ro),this}rotateX(i){return this.rotateOnAxis(tc,i)}rotateY(i){return this.rotateOnAxis(sc,i)}rotateZ(i){return this.rotateOnAxis(rc,i)}translateOnAxis(i,a){return nc.copy(i).applyQuaternion(this.quaternion),this.position.add(nc.multiplyScalar(a)),this}translateX(i){return this.translateOnAxis(tc,i)}translateY(i){return this.translateOnAxis(sc,i)}translateZ(i){return this.translateOnAxis(rc,i)}localToWorld(i){return this.updateWorldMatrix(!0,!1),i.applyMatrix4(this.matrixWorld)}worldToLocal(i){return this.updateWorldMatrix(!0,!1),i.applyMatrix4(ke.copy(this.matrixWorld).invert())}lookAt(i,a,e){i.isVector3?qn.copy(i):qn.set(i,a,e);const o=this.parent;this.updateWorldMatrix(!0,!1),fn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ke.lookAt(fn,qn,this.up):ke.lookAt(qn,fn,this.up),this.quaternion.setFromRotationMatrix(ke),o&&(ke.extractRotation(o.matrixWorld),Ro.setFromRotationMatrix(ke),this.quaternion.premultiply(Ro.invert()))}add(i){if(arguments.length>1){for(let a=0;a<arguments.length;a++)this.add(arguments[a]);return this}return i===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",i),this):(i&&i.isObject3D?(i.parent!==null&&i.parent.remove(i),i.parent=this,this.children.push(i),i.dispatchEvent(Dm)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",i),this)}remove(i){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const a=this.children.indexOf(i);return a!==-1&&(i.parent=null,this.children.splice(a,1),i.dispatchEvent(cc)),this}removeFromParent(){const i=this.parent;return i!==null&&i.remove(this),this}clear(){for(let i=0;i<this.children.length;i++){const a=this.children[i];a.parent=null,a.dispatchEvent(cc)}return this.children.length=0,this}attach(i){return this.updateWorldMatrix(!0,!1),ke.copy(this.matrixWorld).invert(),i.parent!==null&&(i.parent.updateWorldMatrix(!0,!1),ke.multiply(i.parent.matrixWorld)),i.applyMatrix4(ke),this.add(i),i.updateWorldMatrix(!1,!0),this}getObjectById(i){return this.getObjectByProperty("id",i)}getObjectByName(i){return this.getObjectByProperty("name",i)}getObjectByProperty(i,a){if(this[i]===a)return this;for(let e=0,o=this.children.length;e<o;e++){const s=this.children[e].getObjectByProperty(i,a);if(s!==void 0)return s}}getObjectsByProperty(i,a){let e=[];this[i]===a&&e.push(this);for(let o=0,n=this.children.length;o<n;o++){const s=this.children[o].getObjectsByProperty(i,a);s.length>0&&(e=e.concat(s))}return e}getWorldPosition(i){return this.updateWorldMatrix(!0,!1),i.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(i){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fn,i,Lm),i}getWorldScale(i){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fn,Bm,i),i}getWorldDirection(i){this.updateWorldMatrix(!0,!1);const a=this.matrixWorld.elements;return i.set(a[8],a[9],a[10]).normalize()}raycast(){}traverse(i){i(this);const a=this.children;for(let e=0,o=a.length;e<o;e++)a[e].traverse(i)}traverseVisible(i){if(this.visible===!1)return;i(this);const a=this.children;for(let e=0,o=a.length;e<o;e++)a[e].traverseVisible(i)}traverseAncestors(i){const a=this.parent;a!==null&&(i(a),a.traverseAncestors(i))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(i){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||i)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,i=!0);const a=this.children;for(let e=0,o=a.length;e<o;e++){const n=a[e];(n.matrixWorldAutoUpdate===!0||i===!0)&&n.updateMatrixWorld(i)}}updateWorldMatrix(i,a){const e=this.parent;if(i===!0&&e!==null&&e.matrixWorldAutoUpdate===!0&&e.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),a===!0){const o=this.children;for(let n=0,s=o.length;n<s;n++){const t=o[n];t.matrixWorldAutoUpdate===!0&&t.updateWorldMatrix(!1,!0)}}}toJSON(i){const a=i===void 0||typeof i=="string",e={};a&&(i={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},e.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const o={};o.uuid=this.uuid,o.type=this.type,this.name!==""&&(o.name=this.name),this.castShadow===!0&&(o.castShadow=!0),this.receiveShadow===!0&&(o.receiveShadow=!0),this.visible===!1&&(o.visible=!1),this.frustumCulled===!1&&(o.frustumCulled=!1),this.renderOrder!==0&&(o.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(o.userData=this.userData),o.layers=this.layers.mask,o.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(o.matrixAutoUpdate=!1),this.isInstancedMesh&&(o.type="InstancedMesh",o.count=this.count,o.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(o.instanceColor=this.instanceColor.toJSON()));function n(t,c){return t[c.uuid]===void 0&&(t[c.uuid]=c.toJSON(i)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?o.background=this.background.toJSON():this.background.isTexture&&(o.background=this.background.toJSON(i).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(o.environment=this.environment.toJSON(i).uuid);else if(this.isMesh||this.isLine||this.isPoints){o.geometry=n(i.geometries,this.geometry);const t=this.geometry.parameters;if(t!==void 0&&t.shapes!==void 0){const c=t.shapes;if(Array.isArray(c))for(let l=0,f=c.length;l<f;l++){const d=c[l];n(i.shapes,d)}else n(i.shapes,c)}}if(this.isSkinnedMesh&&(o.bindMode=this.bindMode,o.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(i.skeletons,this.skeleton),o.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const t=[];for(let c=0,l=this.material.length;c<l;c++)t.push(n(i.materials,this.material[c]));o.material=t}else o.material=n(i.materials,this.material);if(this.children.length>0){o.children=[];for(let t=0;t<this.children.length;t++)o.children.push(this.children[t].toJSON(i).object)}if(this.animations.length>0){o.animations=[];for(let t=0;t<this.animations.length;t++){const c=this.animations[t];o.animations.push(n(i.animations,c))}}if(a){const t=s(i.geometries),c=s(i.materials),l=s(i.textures),f=s(i.images),d=s(i.shapes),m=s(i.skeletons),g=s(i.animations),h=s(i.nodes);t.length>0&&(e.geometries=t),c.length>0&&(e.materials=c),l.length>0&&(e.textures=l),f.length>0&&(e.images=f),d.length>0&&(e.shapes=d),m.length>0&&(e.skeletons=m),g.length>0&&(e.animations=g),h.length>0&&(e.nodes=h)}return e.object=o,e;function s(t){const c=[];for(const l in t){const f=t[l];delete f.metadata,c.push(f)}return c}}clone(i){return new this.constructor().copy(this,i)}copy(i,a=!0){if(this.name=i.name,this.up.copy(i.up),this.position.copy(i.position),this.rotation.order=i.rotation.order,this.quaternion.copy(i.quaternion),this.scale.copy(i.scale),this.matrix.copy(i.matrix),this.matrixWorld.copy(i.matrixWorld),this.matrixAutoUpdate=i.matrixAutoUpdate,this.matrixWorldNeedsUpdate=i.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=i.matrixWorldAutoUpdate,this.layers.mask=i.layers.mask,this.visible=i.visible,this.castShadow=i.castShadow,this.receiveShadow=i.receiveShadow,this.frustumCulled=i.frustumCulled,this.renderOrder=i.renderOrder,this.userData=JSON.parse(JSON.stringify(i.userData)),a===!0)for(let e=0;e<i.children.length;e++){const o=i.children[e];this.add(o.clone())}return this}}xa.DEFAULT_UP=new B(0,1,0);xa.DEFAULT_MATRIX_AUTO_UPDATE=!0;xa.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ee=new B,Se=new B,as=new B,Me=new B,To=new B,Co=new B,lc=new B,es=new B,os=new B,ns=new B;class Ae{constructor(i=new B,a=new B,e=new B){this.a=i,this.b=a,this.c=e}static getNormal(i,a,e,o){o.subVectors(e,a),ee.subVectors(i,a),o.cross(ee);const n=o.lengthSq();return n>0?o.multiplyScalar(1/Math.sqrt(n)):o.set(0,0,0)}static getBarycoord(i,a,e,o,n){ee.subVectors(o,a),Se.subVectors(e,a),as.subVectors(i,a);const s=ee.dot(ee),t=ee.dot(Se),c=ee.dot(as),l=Se.dot(Se),f=Se.dot(as),d=s*l-t*t;if(d===0)return n.set(-2,-1,-1);const m=1/d,g=(l*c-t*f)*m,h=(s*f-t*c)*m;return n.set(1-g-h,h,g)}static containsPoint(i,a,e,o){return this.getBarycoord(i,a,e,o,Me),Me.x>=0&&Me.y>=0&&Me.x+Me.y<=1}static getUV(i,a,e,o,n,s,t,c){return this.getBarycoord(i,a,e,o,Me),c.set(0,0),c.addScaledVector(n,Me.x),c.addScaledVector(s,Me.y),c.addScaledVector(t,Me.z),c}static isFrontFacing(i,a,e,o){return ee.subVectors(e,a),Se.subVectors(i,a),ee.cross(Se).dot(o)<0}set(i,a,e){return this.a.copy(i),this.b.copy(a),this.c.copy(e),this}setFromPointsAndIndices(i,a,e,o){return this.a.copy(i[a]),this.b.copy(i[e]),this.c.copy(i[o]),this}setFromAttributeAndIndices(i,a,e,o){return this.a.fromBufferAttribute(i,a),this.b.fromBufferAttribute(i,e),this.c.fromBufferAttribute(i,o),this}clone(){return new this.constructor().copy(this)}copy(i){return this.a.copy(i.a),this.b.copy(i.b),this.c.copy(i.c),this}getArea(){return ee.subVectors(this.c,this.b),Se.subVectors(this.a,this.b),ee.cross(Se).length()*.5}getMidpoint(i){return i.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(i){return Ae.getNormal(this.a,this.b,this.c,i)}getPlane(i){return i.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(i,a){return Ae.getBarycoord(i,this.a,this.b,this.c,a)}getUV(i,a,e,o,n){return Ae.getUV(i,this.a,this.b,this.c,a,e,o,n)}containsPoint(i){return Ae.containsPoint(i,this.a,this.b,this.c)}isFrontFacing(i){return Ae.isFrontFacing(this.a,this.b,this.c,i)}intersectsBox(i){return i.intersectsTriangle(this)}closestPointToPoint(i,a){const e=this.a,o=this.b,n=this.c;let s,t;To.subVectors(o,e),Co.subVectors(n,e),es.subVectors(i,e);const c=To.dot(es),l=Co.dot(es);if(c<=0&&l<=0)return a.copy(e);os.subVectors(i,o);const f=To.dot(os),d=Co.dot(os);if(f>=0&&d<=f)return a.copy(o);const m=c*d-f*l;if(m<=0&&c>=0&&f<=0)return s=c/(c-f),a.copy(e).addScaledVector(To,s);ns.subVectors(i,n);const g=To.dot(ns),h=Co.dot(ns);if(h>=0&&g<=h)return a.copy(n);const u=g*l-c*h;if(u<=0&&l>=0&&h<=0)return t=l/(l-h),a.copy(e).addScaledVector(Co,t);const p=f*h-g*d;if(p<=0&&d-f>=0&&g-h>=0)return lc.subVectors(n,o),t=(d-f)/(d-f+(g-h)),a.copy(o).addScaledVector(lc,t);const b=1/(p+u+m);return s=u*b,t=m*b,a.copy(e).addScaledVector(To,s).addScaledVector(Co,t)}equals(i){return i.a.equals(this.a)&&i.b.equals(this.b)&&i.c.equals(this.c)}}let Gm=0;class Dn extends nn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Gm++}),this.uuid=Nn(),this.name="",this.type="Material",this.blending=Fo,this.side=Ve,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=al,this.blendDst=el,this.blendEquation=Do,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=ws,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Rm,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ft,this.stencilZFail=Ft,this.stencilZPass=Ft,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(i){this._alphaTest>0!=i>0&&this.version++,this._alphaTest=i}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(i){if(i!==void 0)for(const a in i){const e=i[a];if(e===void 0){console.warn("THREE.Material: '"+a+"' parameter is undefined.");continue}const o=this[a];if(o===void 0){console.warn("THREE."+this.type+": '"+a+"' is not a property of this material.");continue}o&&o.isColor?o.set(e):o&&o.isVector3&&e&&e.isVector3?o.copy(e):this[a]=e}}toJSON(i){const a=i===void 0||typeof i=="string";a&&(i={textures:{},images:{}});const e={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.color&&this.color.isColor&&(e.color=this.color.getHex()),this.roughness!==void 0&&(e.roughness=this.roughness),this.metalness!==void 0&&(e.metalness=this.metalness),this.sheen!==void 0&&(e.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(e.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(e.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(e.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(e.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(e.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(e.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(e.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(e.shininess=this.shininess),this.clearcoat!==void 0&&(e.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(e.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(e.clearcoatMap=this.clearcoatMap.toJSON(i).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(e.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(i).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(e.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(i).uuid,e.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(e.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(e.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(e.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(e.iridescenceMap=this.iridescenceMap.toJSON(i).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(e.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(i).uuid),this.map&&this.map.isTexture&&(e.map=this.map.toJSON(i).uuid),this.matcap&&this.matcap.isTexture&&(e.matcap=this.matcap.toJSON(i).uuid),this.alphaMap&&this.alphaMap.isTexture&&(e.alphaMap=this.alphaMap.toJSON(i).uuid),this.lightMap&&this.lightMap.isTexture&&(e.lightMap=this.lightMap.toJSON(i).uuid,e.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(e.aoMap=this.aoMap.toJSON(i).uuid,e.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(e.bumpMap=this.bumpMap.toJSON(i).uuid,e.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(e.normalMap=this.normalMap.toJSON(i).uuid,e.normalMapType=this.normalMapType,e.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(e.displacementMap=this.displacementMap.toJSON(i).uuid,e.displacementScale=this.displacementScale,e.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(e.roughnessMap=this.roughnessMap.toJSON(i).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(e.metalnessMap=this.metalnessMap.toJSON(i).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(e.emissiveMap=this.emissiveMap.toJSON(i).uuid),this.specularMap&&this.specularMap.isTexture&&(e.specularMap=this.specularMap.toJSON(i).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(e.specularIntensityMap=this.specularIntensityMap.toJSON(i).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(e.specularColorMap=this.specularColorMap.toJSON(i).uuid),this.envMap&&this.envMap.isTexture&&(e.envMap=this.envMap.toJSON(i).uuid,this.combine!==void 0&&(e.combine=this.combine)),this.envMapIntensity!==void 0&&(e.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(e.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(e.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(e.gradientMap=this.gradientMap.toJSON(i).uuid),this.transmission!==void 0&&(e.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(e.transmissionMap=this.transmissionMap.toJSON(i).uuid),this.thickness!==void 0&&(e.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(e.thicknessMap=this.thicknessMap.toJSON(i).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(e.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(e.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(e.size=this.size),this.shadowSide!==null&&(e.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(e.sizeAttenuation=this.sizeAttenuation),this.blending!==Fo&&(e.blending=this.blending),this.side!==Ve&&(e.side=this.side),this.vertexColors&&(e.vertexColors=!0),this.opacity<1&&(e.opacity=this.opacity),this.transparent===!0&&(e.transparent=this.transparent),e.depthFunc=this.depthFunc,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.colorWrite=this.colorWrite,e.stencilWrite=this.stencilWrite,e.stencilWriteMask=this.stencilWriteMask,e.stencilFunc=this.stencilFunc,e.stencilRef=this.stencilRef,e.stencilFuncMask=this.stencilFuncMask,e.stencilFail=this.stencilFail,e.stencilZFail=this.stencilZFail,e.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(e.rotation=this.rotation),this.polygonOffset===!0&&(e.polygonOffset=!0),this.polygonOffsetFactor!==0&&(e.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(e.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(e.linewidth=this.linewidth),this.dashSize!==void 0&&(e.dashSize=this.dashSize),this.gapSize!==void 0&&(e.gapSize=this.gapSize),this.scale!==void 0&&(e.scale=this.scale),this.dithering===!0&&(e.dithering=!0),this.alphaTest>0&&(e.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(e.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(e.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(e.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(e.wireframe=this.wireframe),this.wireframeLinewidth>1&&(e.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(e.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(e.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(e.flatShading=this.flatShading),this.visible===!1&&(e.visible=!1),this.toneMapped===!1&&(e.toneMapped=!1),this.fog===!1&&(e.fog=!1),Object.keys(this.userData).length>0&&(e.userData=this.userData);function o(n){const s=[];for(const t in n){const c=n[t];delete c.metadata,s.push(c)}return s}if(a){const n=o(i.textures),s=o(i.images);n.length>0&&(e.textures=n),s.length>0&&(e.images=s)}return e}clone(){return new this.constructor().copy(this)}copy(i){this.name=i.name,this.blending=i.blending,this.side=i.side,this.vertexColors=i.vertexColors,this.opacity=i.opacity,this.transparent=i.transparent,this.blendSrc=i.blendSrc,this.blendDst=i.blendDst,this.blendEquation=i.blendEquation,this.blendSrcAlpha=i.blendSrcAlpha,this.blendDstAlpha=i.blendDstAlpha,this.blendEquationAlpha=i.blendEquationAlpha,this.depthFunc=i.depthFunc,this.depthTest=i.depthTest,this.depthWrite=i.depthWrite,this.stencilWriteMask=i.stencilWriteMask,this.stencilFunc=i.stencilFunc,this.stencilRef=i.stencilRef,this.stencilFuncMask=i.stencilFuncMask,this.stencilFail=i.stencilFail,this.stencilZFail=i.stencilZFail,this.stencilZPass=i.stencilZPass,this.stencilWrite=i.stencilWrite;const a=i.clippingPlanes;let e=null;if(a!==null){const o=a.length;e=new Array(o);for(let n=0;n!==o;++n)e[n]=a[n].clone()}return this.clippingPlanes=e,this.clipIntersection=i.clipIntersection,this.clipShadows=i.clipShadows,this.shadowSide=i.shadowSide,this.colorWrite=i.colorWrite,this.precision=i.precision,this.polygonOffset=i.polygonOffset,this.polygonOffsetFactor=i.polygonOffsetFactor,this.polygonOffsetUnits=i.polygonOffsetUnits,this.dithering=i.dithering,this.alphaTest=i.alphaTest,this.alphaToCoverage=i.alphaToCoverage,this.premultipliedAlpha=i.premultipliedAlpha,this.forceSinglePass=i.forceSinglePass,this.visible=i.visible,this.toneMapped=i.toneMapped,this.userData=JSON.parse(JSON.stringify(i.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(i){i===!0&&this.version++}}class Qs extends Dn{constructor(i){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ki(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ol,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(i)}copy(i){return super.copy(i),this.color.copy(i.color),this.map=i.map,this.lightMap=i.lightMap,this.lightMapIntensity=i.lightMapIntensity,this.aoMap=i.aoMap,this.aoMapIntensity=i.aoMapIntensity,this.specularMap=i.specularMap,this.alphaMap=i.alphaMap,this.envMap=i.envMap,this.combine=i.combine,this.reflectivity=i.reflectivity,this.refractionRatio=i.refractionRatio,this.wireframe=i.wireframe,this.wireframeLinewidth=i.wireframeLinewidth,this.wireframeLinecap=i.wireframeLinecap,this.wireframeLinejoin=i.wireframeLinejoin,this.fog=i.fog,this}}const Ji=new B,Zn=new Di;class ue{constructor(i,a,e=!1){if(Array.isArray(i))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=i,this.itemSize=a,this.count=i!==void 0?i.length/a:0,this.normalized=e,this.usage=Yr,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(i){i===!0&&this.version++}setUsage(i){return this.usage=i,this}copy(i){return this.name=i.name,this.array=new i.array.constructor(i.array),this.itemSize=i.itemSize,this.count=i.count,this.normalized=i.normalized,this.usage=i.usage,this}copyAt(i,a,e){i*=this.itemSize,e*=a.itemSize;for(let o=0,n=this.itemSize;o<n;o++)this.array[i+o]=a.array[e+o];return this}copyArray(i){return this.array.set(i),this}applyMatrix3(i){if(this.itemSize===2)for(let a=0,e=this.count;a<e;a++)Zn.fromBufferAttribute(this,a),Zn.applyMatrix3(i),this.setXY(a,Zn.x,Zn.y);else if(this.itemSize===3)for(let a=0,e=this.count;a<e;a++)Ji.fromBufferAttribute(this,a),Ji.applyMatrix3(i),this.setXYZ(a,Ji.x,Ji.y,Ji.z);return this}applyMatrix4(i){for(let a=0,e=this.count;a<e;a++)Ji.fromBufferAttribute(this,a),Ji.applyMatrix4(i),this.setXYZ(a,Ji.x,Ji.y,Ji.z);return this}applyNormalMatrix(i){for(let a=0,e=this.count;a<e;a++)Ji.fromBufferAttribute(this,a),Ji.applyNormalMatrix(i),this.setXYZ(a,Ji.x,Ji.y,Ji.z);return this}transformDirection(i){for(let a=0,e=this.count;a<e;a++)Ji.fromBufferAttribute(this,a),Ji.transformDirection(i),this.setXYZ(a,Ji.x,Ji.y,Ji.z);return this}set(i,a=0){return this.array.set(i,a),this}getX(i){let a=this.array[i*this.itemSize];return this.normalized&&(a=Un(a,this.array)),a}setX(i,a){return this.normalized&&(a=za(a,this.array)),this.array[i*this.itemSize]=a,this}getY(i){let a=this.array[i*this.itemSize+1];return this.normalized&&(a=Un(a,this.array)),a}setY(i,a){return this.normalized&&(a=za(a,this.array)),this.array[i*this.itemSize+1]=a,this}getZ(i){let a=this.array[i*this.itemSize+2];return this.normalized&&(a=Un(a,this.array)),a}setZ(i,a){return this.normalized&&(a=za(a,this.array)),this.array[i*this.itemSize+2]=a,this}getW(i){let a=this.array[i*this.itemSize+3];return this.normalized&&(a=Un(a,this.array)),a}setW(i,a){return this.normalized&&(a=za(a,this.array)),this.array[i*this.itemSize+3]=a,this}setXY(i,a,e){return i*=this.itemSize,this.normalized&&(a=za(a,this.array),e=za(e,this.array)),this.array[i+0]=a,this.array[i+1]=e,this}setXYZ(i,a,e,o){return i*=this.itemSize,this.normalized&&(a=za(a,this.array),e=za(e,this.array),o=za(o,this.array)),this.array[i+0]=a,this.array[i+1]=e,this.array[i+2]=o,this}setXYZW(i,a,e,o,n){return i*=this.itemSize,this.normalized&&(a=za(a,this.array),e=za(e,this.array),o=za(o,this.array),n=za(n,this.array)),this.array[i+0]=a,this.array[i+1]=e,this.array[i+2]=o,this.array[i+3]=n,this}onUpload(i){return this.onUploadCallback=i,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const i={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(i.name=this.name),this.usage!==Yr&&(i.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(i.updateRange=this.updateRange),i}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class ml extends ue{constructor(i,a,e){super(new Uint16Array(i),a,e)}}class ul extends ue{constructor(i,a,e){super(new Uint32Array(i),a,e)}}class se extends ue{constructor(i,a,e){super(new Float32Array(i),a,e)}}let Um=0;const Ha=new ia,ts=new xa,Eo=new B,Ia=new Bn,mn=new Bn,sa=new B;class ge extends nn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Um++}),this.uuid=Nn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(i){return Array.isArray(i)?this.index=new(sl(i)?ul:ml)(i,1):this.index=i,this}getAttribute(i){return this.attributes[i]}setAttribute(i,a){return this.attributes[i]=a,this}deleteAttribute(i){return delete this.attributes[i],this}hasAttribute(i){return this.attributes[i]!==void 0}addGroup(i,a,e=0){this.groups.push({start:i,count:a,materialIndex:e})}clearGroups(){this.groups=[]}setDrawRange(i,a){this.drawRange.start=i,this.drawRange.count=a}applyMatrix4(i){const a=this.attributes.position;a!==void 0&&(a.applyMatrix4(i),a.needsUpdate=!0);const e=this.attributes.normal;if(e!==void 0){const n=new Ga().getNormalMatrix(i);e.applyNormalMatrix(n),e.needsUpdate=!0}const o=this.attributes.tangent;return o!==void 0&&(o.transformDirection(i),o.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(i){return Ha.makeRotationFromQuaternion(i),this.applyMatrix4(Ha),this}rotateX(i){return Ha.makeRotationX(i),this.applyMatrix4(Ha),this}rotateY(i){return Ha.makeRotationY(i),this.applyMatrix4(Ha),this}rotateZ(i){return Ha.makeRotationZ(i),this.applyMatrix4(Ha),this}translate(i,a,e){return Ha.makeTranslation(i,a,e),this.applyMatrix4(Ha),this}scale(i,a,e){return Ha.makeScale(i,a,e),this.applyMatrix4(Ha),this}lookAt(i){return ts.lookAt(i),ts.updateMatrix(),this.applyMatrix4(ts.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Eo).negate(),this.translate(Eo.x,Eo.y,Eo.z),this}setFromPoints(i){const a=[];for(let e=0,o=i.length;e<o;e++){const n=i[e];a.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new se(a,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Bn);const i=this.attributes.position,a=this.morphAttributes.position;if(i&&i.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new B(-1/0,-1/0,-1/0),new B(1/0,1/0,1/0));return}if(i!==void 0){if(this.boundingBox.setFromBufferAttribute(i),a)for(let e=0,o=a.length;e<o;e++){const n=a[e];Ia.setFromBufferAttribute(n),this.morphTargetsRelative?(sa.addVectors(this.boundingBox.min,Ia.min),this.boundingBox.expandByPoint(sa),sa.addVectors(this.boundingBox.max,Ia.max),this.boundingBox.expandByPoint(sa)):(this.boundingBox.expandByPoint(Ia.min),this.boundingBox.expandByPoint(Ia.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new St);const i=this.attributes.position,a=this.morphAttributes.position;if(i&&i.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new B,1/0);return}if(i){const e=this.boundingSphere.center;if(Ia.setFromBufferAttribute(i),a)for(let n=0,s=a.length;n<s;n++){const t=a[n];mn.setFromBufferAttribute(t),this.morphTargetsRelative?(sa.addVectors(Ia.min,mn.min),Ia.expandByPoint(sa),sa.addVectors(Ia.max,mn.max),Ia.expandByPoint(sa)):(Ia.expandByPoint(mn.min),Ia.expandByPoint(mn.max))}Ia.getCenter(e);let o=0;for(let n=0,s=i.count;n<s;n++)sa.fromBufferAttribute(i,n),o=Math.max(o,e.distanceToSquared(sa));if(a)for(let n=0,s=a.length;n<s;n++){const t=a[n],c=this.morphTargetsRelative;for(let l=0,f=t.count;l<f;l++)sa.fromBufferAttribute(t,l),c&&(Eo.fromBufferAttribute(i,l),sa.add(Eo)),o=Math.max(o,e.distanceToSquared(sa))}this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const i=this.index,a=this.attributes;if(i===null||a.position===void 0||a.normal===void 0||a.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const e=i.array,o=a.position.array,n=a.normal.array,s=a.uv.array,t=o.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ue(new Float32Array(4*t),4));const c=this.getAttribute("tangent").array,l=[],f=[];for(let E=0;E<t;E++)l[E]=new B,f[E]=new B;const d=new B,m=new B,g=new B,h=new Di,u=new Di,p=new Di,b=new B,k=new B;function y(E,U,W){d.fromArray(o,E*3),m.fromArray(o,U*3),g.fromArray(o,W*3),h.fromArray(s,E*2),u.fromArray(s,U*2),p.fromArray(s,W*2),m.sub(d),g.sub(d),u.sub(h),p.sub(h);const P=1/(u.x*p.y-p.x*u.y);isFinite(P)&&(b.copy(m).multiplyScalar(p.y).addScaledVector(g,-u.y).multiplyScalar(P),k.copy(g).multiplyScalar(u.x).addScaledVector(m,-p.x).multiplyScalar(P),l[E].add(b),l[U].add(b),l[W].add(b),f[E].add(k),f[U].add(k),f[W].add(k))}let S=this.groups;S.length===0&&(S=[{start:0,count:e.length}]);for(let E=0,U=S.length;E<U;++E){const W=S[E],P=W.start,z=W.count;for(let D=P,J=P+z;D<J;D+=3)y(e[D+0],e[D+1],e[D+2])}const _=new B,R=new B,T=new B,v=new B;function w(E){T.fromArray(n,E*3),v.copy(T);const U=l[E];_.copy(U),_.sub(T.multiplyScalar(T.dot(U))).normalize(),R.crossVectors(v,U);const P=R.dot(f[E])<0?-1:1;c[E*4]=_.x,c[E*4+1]=_.y,c[E*4+2]=_.z,c[E*4+3]=P}for(let E=0,U=S.length;E<U;++E){const W=S[E],P=W.start,z=W.count;for(let D=P,J=P+z;D<J;D+=3)w(e[D+0]),w(e[D+1]),w(e[D+2])}}computeVertexNormals(){const i=this.index,a=this.getAttribute("position");if(a!==void 0){let e=this.getAttribute("normal");if(e===void 0)e=new ue(new Float32Array(a.count*3),3),this.setAttribute("normal",e);else for(let m=0,g=e.count;m<g;m++)e.setXYZ(m,0,0,0);const o=new B,n=new B,s=new B,t=new B,c=new B,l=new B,f=new B,d=new B;if(i)for(let m=0,g=i.count;m<g;m+=3){const h=i.getX(m+0),u=i.getX(m+1),p=i.getX(m+2);o.fromBufferAttribute(a,h),n.fromBufferAttribute(a,u),s.fromBufferAttribute(a,p),f.subVectors(s,n),d.subVectors(o,n),f.cross(d),t.fromBufferAttribute(e,h),c.fromBufferAttribute(e,u),l.fromBufferAttribute(e,p),t.add(f),c.add(f),l.add(f),e.setXYZ(h,t.x,t.y,t.z),e.setXYZ(u,c.x,c.y,c.z),e.setXYZ(p,l.x,l.y,l.z)}else for(let m=0,g=a.count;m<g;m+=3)o.fromBufferAttribute(a,m+0),n.fromBufferAttribute(a,m+1),s.fromBufferAttribute(a,m+2),f.subVectors(s,n),d.subVectors(o,n),f.cross(d),e.setXYZ(m+0,f.x,f.y,f.z),e.setXYZ(m+1,f.x,f.y,f.z),e.setXYZ(m+2,f.x,f.y,f.z);this.normalizeNormals(),e.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const i=this.attributes.normal;for(let a=0,e=i.count;a<e;a++)sa.fromBufferAttribute(i,a),sa.normalize(),i.setXYZ(a,sa.x,sa.y,sa.z)}toNonIndexed(){function i(t,c){const l=t.array,f=t.itemSize,d=t.normalized,m=new l.constructor(c.length*f);let g=0,h=0;for(let u=0,p=c.length;u<p;u++){t.isInterleavedBufferAttribute?g=c[u]*t.data.stride+t.offset:g=c[u]*f;for(let b=0;b<f;b++)m[h++]=l[g++]}return new ue(m,f,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const a=new ge,e=this.index.array,o=this.attributes;for(const t in o){const c=o[t],l=i(c,e);a.setAttribute(t,l)}const n=this.morphAttributes;for(const t in n){const c=[],l=n[t];for(let f=0,d=l.length;f<d;f++){const m=l[f],g=i(m,e);c.push(g)}a.morphAttributes[t]=c}a.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let t=0,c=s.length;t<c;t++){const l=s[t];a.addGroup(l.start,l.count,l.materialIndex)}return a}toJSON(){const i={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),Object.keys(this.userData).length>0&&(i.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(i[l]=c[l]);return i}i.data={attributes:{}};const a=this.index;a!==null&&(i.data.index={type:a.array.constructor.name,array:Array.prototype.slice.call(a.array)});const e=this.attributes;for(const c in e){const l=e[c];i.data.attributes[c]=l.toJSON(i.data)}const o={};let n=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],f=[];for(let d=0,m=l.length;d<m;d++){const g=l[d];f.push(g.toJSON(i.data))}f.length>0&&(o[c]=f,n=!0)}n&&(i.data.morphAttributes=o,i.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(i.data.groups=JSON.parse(JSON.stringify(s)));const t=this.boundingSphere;return t!==null&&(i.data.boundingSphere={center:t.center.toArray(),radius:t.radius}),i}clone(){return new this.constructor().copy(this)}copy(i){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const a={};this.name=i.name;const e=i.index;e!==null&&this.setIndex(e.clone(a));const o=i.attributes;for(const l in o){const f=o[l];this.setAttribute(l,f.clone(a))}const n=i.morphAttributes;for(const l in n){const f=[],d=n[l];for(let m=0,g=d.length;m<g;m++)f.push(d[m].clone(a));this.morphAttributes[l]=f}this.morphTargetsRelative=i.morphTargetsRelative;const s=i.groups;for(let l=0,f=s.length;l<f;l++){const d=s[l];this.addGroup(d.start,d.count,d.materialIndex)}const t=i.boundingBox;t!==null&&(this.boundingBox=t.clone());const c=i.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=i.drawRange.start,this.drawRange.count=i.drawRange.count,this.userData=i.userData,i.parameters!==void 0&&(this.parameters=Object.assign({},i.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const fc=new ia,zo=new Ys,ss=new St,un=new B,dn=new B,pn=new B,rs=new B,Jn=new B,Xn=new Di,Yn=new Di,$n=new Di,cs=new B,Qn=new B;class te extends xa{constructor(i=new ge,a=new Qs){super(),this.isMesh=!0,this.type="Mesh",this.geometry=i,this.material=a,this.updateMorphTargets()}copy(i,a){return super.copy(i,a),i.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=i.morphTargetInfluences.slice()),i.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},i.morphTargetDictionary)),this.material=i.material,this.geometry=i.geometry,this}updateMorphTargets(){const a=this.geometry.morphAttributes,e=Object.keys(a);if(e.length>0){const o=a[e[0]];if(o!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,s=o.length;n<s;n++){const t=o[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=n}}}}getVertexPosition(i,a){const e=this.geometry,o=e.attributes.position,n=e.morphAttributes.position,s=e.morphTargetsRelative;a.fromBufferAttribute(o,i);const t=this.morphTargetInfluences;if(n&&t){Jn.set(0,0,0);for(let c=0,l=n.length;c<l;c++){const f=t[c],d=n[c];f!==0&&(rs.fromBufferAttribute(d,i),s?Jn.addScaledVector(rs,f):Jn.addScaledVector(rs.sub(a),f))}a.add(Jn)}return this.isSkinnedMesh&&this.boneTransform(i,a),a}raycast(i,a){const e=this.geometry,o=this.material,n=this.matrixWorld;if(o===void 0||(e.boundingSphere===null&&e.computeBoundingSphere(),ss.copy(e.boundingSphere),ss.applyMatrix4(n),i.ray.intersectsSphere(ss)===!1)||(fc.copy(n).invert(),zo.copy(i.ray).applyMatrix4(fc),e.boundingBox!==null&&zo.intersectsBox(e.boundingBox)===!1))return;let s;const t=e.index,c=e.attributes.position,l=e.attributes.uv,f=e.attributes.uv2,d=e.groups,m=e.drawRange;if(t!==null)if(Array.isArray(o))for(let g=0,h=d.length;g<h;g++){const u=d[g],p=o[u.materialIndex],b=Math.max(u.start,m.start),k=Math.min(t.count,Math.min(u.start+u.count,m.start+m.count));for(let y=b,S=k;y<S;y+=3){const _=t.getX(y),R=t.getX(y+1),T=t.getX(y+2);s=it(this,p,i,zo,l,f,_,R,T),s&&(s.faceIndex=Math.floor(y/3),s.face.materialIndex=u.materialIndex,a.push(s))}}else{const g=Math.max(0,m.start),h=Math.min(t.count,m.start+m.count);for(let u=g,p=h;u<p;u+=3){const b=t.getX(u),k=t.getX(u+1),y=t.getX(u+2);s=it(this,o,i,zo,l,f,b,k,y),s&&(s.faceIndex=Math.floor(u/3),a.push(s))}}else if(c!==void 0)if(Array.isArray(o))for(let g=0,h=d.length;g<h;g++){const u=d[g],p=o[u.materialIndex],b=Math.max(u.start,m.start),k=Math.min(c.count,Math.min(u.start+u.count,m.start+m.count));for(let y=b,S=k;y<S;y+=3){const _=y,R=y+1,T=y+2;s=it(this,p,i,zo,l,f,_,R,T),s&&(s.faceIndex=Math.floor(y/3),s.face.materialIndex=u.materialIndex,a.push(s))}}else{const g=Math.max(0,m.start),h=Math.min(c.count,m.start+m.count);for(let u=g,p=h;u<p;u+=3){const b=u,k=u+1,y=u+2;s=it(this,o,i,zo,l,f,b,k,y),s&&(s.faceIndex=Math.floor(u/3),a.push(s))}}}}function Om(r,i,a,e,o,n,s,t){let c;if(i.side===Ma?c=e.intersectTriangle(s,n,o,!0,t):c=e.intersectTriangle(o,n,s,i.side===Ve,t),c===null)return null;Qn.copy(t),Qn.applyMatrix4(r.matrixWorld);const l=a.ray.origin.distanceTo(Qn);return l<a.near||l>a.far?null:{distance:l,point:Qn.clone(),object:r}}function it(r,i,a,e,o,n,s,t,c){r.getVertexPosition(s,un),r.getVertexPosition(t,dn),r.getVertexPosition(c,pn);const l=Om(r,i,a,e,un,dn,pn,cs);if(l){o&&(Xn.fromBufferAttribute(o,s),Yn.fromBufferAttribute(o,t),$n.fromBufferAttribute(o,c),l.uv=Ae.getUV(cs,un,dn,pn,Xn,Yn,$n,new Di)),n&&(Xn.fromBufferAttribute(n,s),Yn.fromBufferAttribute(n,t),$n.fromBufferAttribute(n,c),l.uv2=Ae.getUV(cs,un,dn,pn,Xn,Yn,$n,new Di));const f={a:s,b:t,c,normal:new B,materialIndex:0};Ae.getNormal(un,dn,pn,f.normal),l.face=f}return l}class tn extends ge{constructor(i=1,a=1,e=1,o=1,n=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:i,height:a,depth:e,widthSegments:o,heightSegments:n,depthSegments:s};const t=this;o=Math.floor(o),n=Math.floor(n),s=Math.floor(s);const c=[],l=[],f=[],d=[];let m=0,g=0;h("z","y","x",-1,-1,e,a,i,s,n,0),h("z","y","x",1,-1,e,a,-i,s,n,1),h("x","z","y",1,1,i,e,a,o,s,2),h("x","z","y",1,-1,i,e,-a,o,s,3),h("x","y","z",1,-1,i,a,e,o,n,4),h("x","y","z",-1,-1,i,a,-e,o,n,5),this.setIndex(c),this.setAttribute("position",new se(l,3)),this.setAttribute("normal",new se(f,3)),this.setAttribute("uv",new se(d,2));function h(u,p,b,k,y,S,_,R,T,v,w){const E=S/T,U=_/v,W=S/2,P=_/2,z=R/2,D=T+1,J=v+1;let q=0,O=0;const Y=new B;for(let X=0;X<J;X++){const ci=X*U-P;for(let L=0;L<D;L++){const Z=L*E-W;Y[u]=Z*k,Y[p]=ci*y,Y[b]=z,l.push(Y.x,Y.y,Y.z),Y[u]=0,Y[p]=0,Y[b]=R>0?1:-1,f.push(Y.x,Y.y,Y.z),d.push(L/T),d.push(1-X/v),q+=1}}for(let X=0;X<v;X++)for(let ci=0;ci<T;ci++){const L=m+ci+D*X,Z=m+ci+D*(X+1),ii=m+(ci+1)+D*(X+1),ai=m+(ci+1)+D*X;c.push(L,Z,ai),c.push(Z,ii,ai),O+=6}t.addGroup(g,O,w),g+=O,m+=q}}static fromJSON(i){return new tn(i.width,i.height,i.depth,i.widthSegments,i.heightSegments,i.depthSegments)}}function Jo(r){const i={};for(const a in r){i[a]={};for(const e in r[a]){const o=r[a][e];o&&(o.isColor||o.isMatrix3||o.isMatrix4||o.isVector2||o.isVector3||o.isVector4||o.isTexture||o.isQuaternion)?i[a][e]=o.clone():Array.isArray(o)?i[a][e]=o.slice():i[a][e]=o}}return i}function _a(r){const i={};for(let a=0;a<r.length;a++){const e=Jo(r[a]);for(const o in e)i[o]=e[o]}return i}function Fm(r){const i=[];for(let a=0;a<r.length;a++)i.push(r[a].clone());return i}function dl(r){return r.getRenderTarget()===null&&r.outputEncoding===Gi?ce:An}const Km={clone:Jo,merge:_a};var Vm=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,jm=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ce extends Dn{constructor(i){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Vm,this.fragmentShader=jm,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,i!==void 0&&this.setValues(i)}copy(i){return super.copy(i),this.fragmentShader=i.fragmentShader,this.vertexShader=i.vertexShader,this.uniforms=Jo(i.uniforms),this.uniformsGroups=Fm(i.uniformsGroups),this.defines=Object.assign({},i.defines),this.wireframe=i.wireframe,this.wireframeLinewidth=i.wireframeLinewidth,this.fog=i.fog,this.lights=i.lights,this.clipping=i.clipping,this.extensions=Object.assign({},i.extensions),this.glslVersion=i.glslVersion,this}toJSON(i){const a=super.toJSON(i);a.glslVersion=this.glslVersion,a.uniforms={};for(const o in this.uniforms){const s=this.uniforms[o].value;s&&s.isTexture?a.uniforms[o]={type:"t",value:s.toJSON(i).uuid}:s&&s.isColor?a.uniforms[o]={type:"c",value:s.getHex()}:s&&s.isVector2?a.uniforms[o]={type:"v2",value:s.toArray()}:s&&s.isVector3?a.uniforms[o]={type:"v3",value:s.toArray()}:s&&s.isVector4?a.uniforms[o]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?a.uniforms[o]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?a.uniforms[o]={type:"m4",value:s.toArray()}:a.uniforms[o]={value:s}}Object.keys(this.defines).length>0&&(a.defines=this.defines),a.vertexShader=this.vertexShader,a.fragmentShader=this.fragmentShader;const e={};for(const o in this.extensions)this.extensions[o]===!0&&(e[o]=!0);return Object.keys(e).length>0&&(a.extensions=e),a}}class pl extends xa{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ia,this.projectionMatrix=new ia,this.projectionMatrixInverse=new ia}copy(i,a){return super.copy(i,a),this.matrixWorldInverse.copy(i.matrixWorldInverse),this.projectionMatrix.copy(i.projectionMatrix),this.projectionMatrixInverse.copy(i.projectionMatrixInverse),this}getWorldDirection(i){this.updateWorldMatrix(!0,!1);const a=this.matrixWorld.elements;return i.set(-a[8],-a[9],-a[10]).normalize()}updateMatrixWorld(i){super.updateMatrixWorld(i),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(i,a){super.updateWorldMatrix(i,a),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Ba extends pl{constructor(i=50,a=1,e=.1,o=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=i,this.zoom=1,this.near=e,this.far=o,this.focus=10,this.aspect=a,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(i,a){return super.copy(i,a),this.fov=i.fov,this.zoom=i.zoom,this.near=i.near,this.far=i.far,this.focus=i.focus,this.aspect=i.aspect,this.view=i.view===null?null:Object.assign({},i.view),this.filmGauge=i.filmGauge,this.filmOffset=i.filmOffset,this}setFocalLength(i){const a=.5*this.getFilmHeight()/i;this.fov=Qr*2*Math.atan(a),this.updateProjectionMatrix()}getFocalLength(){const i=Math.tan(Kt*.5*this.fov);return .5*this.getFilmHeight()/i}getEffectiveFOV(){return Qr*2*Math.atan(Math.tan(Kt*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(i,a,e,o,n,s){this.aspect=i/a,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=i,this.view.fullHeight=a,this.view.offsetX=e,this.view.offsetY=o,this.view.width=n,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const i=this.near;let a=i*Math.tan(Kt*.5*this.fov)/this.zoom,e=2*a,o=this.aspect*e,n=-.5*o;const s=this.view;if(this.view!==null&&this.view.enabled){const c=s.fullWidth,l=s.fullHeight;n+=s.offsetX*o/c,a-=s.offsetY*e/l,o*=s.width/c,e*=s.height/l}const t=this.filmOffset;t!==0&&(n+=i*t/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+o,a,a-e,i,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(i){const a=super.toJSON(i);return a.object.fov=this.fov,a.object.zoom=this.zoom,a.object.near=this.near,a.object.far=this.far,a.object.focus=this.focus,a.object.aspect=this.aspect,this.view!==null&&(a.object.view=Object.assign({},this.view)),a.object.filmGauge=this.filmGauge,a.object.filmOffset=this.filmOffset,a}}const Po=-90,Io=1;class Hm extends xa{constructor(i,a,e){super(),this.type="CubeCamera",this.renderTarget=e;const o=new Ba(Po,Io,i,a);o.layers=this.layers,o.up.set(0,1,0),o.lookAt(1,0,0),this.add(o);const n=new Ba(Po,Io,i,a);n.layers=this.layers,n.up.set(0,1,0),n.lookAt(-1,0,0),this.add(n);const s=new Ba(Po,Io,i,a);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(0,1,0),this.add(s);const t=new Ba(Po,Io,i,a);t.layers=this.layers,t.up.set(0,0,1),t.lookAt(0,-1,0),this.add(t);const c=new Ba(Po,Io,i,a);c.layers=this.layers,c.up.set(0,1,0),c.lookAt(0,0,1),this.add(c);const l=new Ba(Po,Io,i,a);l.layers=this.layers,l.up.set(0,1,0),l.lookAt(0,0,-1),this.add(l)}update(i,a){this.parent===null&&this.updateMatrixWorld();const e=this.renderTarget,[o,n,s,t,c,l]=this.children,f=i.getRenderTarget(),d=i.toneMapping,m=i.xr.enabled;i.toneMapping=Te,i.xr.enabled=!1;const g=e.texture.generateMipmaps;e.texture.generateMipmaps=!1,i.setRenderTarget(e,0),i.render(a,o),i.setRenderTarget(e,1),i.render(a,n),i.setRenderTarget(e,2),i.render(a,s),i.setRenderTarget(e,3),i.render(a,t),i.setRenderTarget(e,4),i.render(a,c),e.texture.generateMipmaps=g,i.setRenderTarget(e,5),i.render(a,l),i.setRenderTarget(f),i.toneMapping=d,i.xr.enabled=m,e.texture.needsPMREMUpdate=!0}}class gl extends wa{constructor(i,a,e,o,n,s,t,c,l,f){i=i!==void 0?i:[],a=a!==void 0?a:Wo,super(i,a,e,o,n,s,t,c,l,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(i){this.image=i}}class Wm extends yo{constructor(i=1,a={}){super(i,i,a),this.isWebGLCubeRenderTarget=!0;const e={width:i,height:i,depth:1},o=[e,e,e,e,e,e];this.texture=new gl(o,a.mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter,a.format,a.type,a.anisotropy,a.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=a.generateMipmaps!==void 0?a.generateMipmaps:!1,this.texture.minFilter=a.minFilter!==void 0?a.minFilter:Za}fromEquirectangularTexture(i,a){this.texture.type=a.type,this.texture.encoding=a.encoding,this.texture.generateMipmaps=a.generateMipmaps,this.texture.minFilter=a.minFilter,this.texture.magFilter=a.magFilter;const e={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},o=new tn(5,5,5),n=new Ce({name:"CubemapFromEquirect",uniforms:Jo(e.uniforms),vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,side:Ma,blending:Oe});n.uniforms.tEquirect.value=a;const s=new te(o,n),t=a.minFilter;return a.minFilter===wn&&(a.minFilter=Za),new Hm(1,10,this).update(i,s),a.minFilter=t,s.geometry.dispose(),s.material.dispose(),this}clear(i,a,e,o){const n=i.getRenderTarget();for(let s=0;s<6;s++)i.setRenderTarget(this,s),i.clear(a,e,o);i.setRenderTarget(n)}}const ls=new B,qm=new B,Zm=new Ga;class oo{constructor(i=new B(1,0,0),a=0){this.isPlane=!0,this.normal=i,this.constant=a}set(i,a){return this.normal.copy(i),this.constant=a,this}setComponents(i,a,e,o){return this.normal.set(i,a,e),this.constant=o,this}setFromNormalAndCoplanarPoint(i,a){return this.normal.copy(i),this.constant=-a.dot(this.normal),this}setFromCoplanarPoints(i,a,e){const o=ls.subVectors(e,a).cross(qm.subVectors(i,a)).normalize();return this.setFromNormalAndCoplanarPoint(o,i),this}copy(i){return this.normal.copy(i.normal),this.constant=i.constant,this}normalize(){const i=1/this.normal.length();return this.normal.multiplyScalar(i),this.constant*=i,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(i){return this.normal.dot(i)+this.constant}distanceToSphere(i){return this.distanceToPoint(i.center)-i.radius}projectPoint(i,a){return a.copy(this.normal).multiplyScalar(-this.distanceToPoint(i)).add(i)}intersectLine(i,a){const e=i.delta(ls),o=this.normal.dot(e);if(o===0)return this.distanceToPoint(i.start)===0?a.copy(i.start):null;const n=-(i.start.dot(this.normal)+this.constant)/o;return n<0||n>1?null:a.copy(e).multiplyScalar(n).add(i.start)}intersectsLine(i){const a=this.distanceToPoint(i.start),e=this.distanceToPoint(i.end);return a<0&&e>0||e<0&&a>0}intersectsBox(i){return i.intersectsPlane(this)}intersectsSphere(i){return i.intersectsPlane(this)}coplanarPoint(i){return i.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(i,a){const e=a||Zm.getNormalMatrix(i),o=this.coplanarPoint(ls).applyMatrix4(i),n=this.normal.applyMatrix3(e).normalize();return this.constant=-o.dot(n),this}translate(i){return this.constant-=i.dot(this.normal),this}equals(i){return i.normal.equals(this.normal)&&i.constant===this.constant}clone(){return new this.constructor().copy(this)}}const No=new St,at=new B;class hl{constructor(i=new oo,a=new oo,e=new oo,o=new oo,n=new oo,s=new oo){this.planes=[i,a,e,o,n,s]}set(i,a,e,o,n,s){const t=this.planes;return t[0].copy(i),t[1].copy(a),t[2].copy(e),t[3].copy(o),t[4].copy(n),t[5].copy(s),this}copy(i){const a=this.planes;for(let e=0;e<6;e++)a[e].copy(i.planes[e]);return this}setFromProjectionMatrix(i){const a=this.planes,e=i.elements,o=e[0],n=e[1],s=e[2],t=e[3],c=e[4],l=e[5],f=e[6],d=e[7],m=e[8],g=e[9],h=e[10],u=e[11],p=e[12],b=e[13],k=e[14],y=e[15];return a[0].setComponents(t-o,d-c,u-m,y-p).normalize(),a[1].setComponents(t+o,d+c,u+m,y+p).normalize(),a[2].setComponents(t+n,d+l,u+g,y+b).normalize(),a[3].setComponents(t-n,d-l,u-g,y-b).normalize(),a[4].setComponents(t-s,d-f,u-h,y-k).normalize(),a[5].setComponents(t+s,d+f,u+h,y+k).normalize(),this}intersectsObject(i){const a=i.geometry;return a.boundingSphere===null&&a.computeBoundingSphere(),No.copy(a.boundingSphere).applyMatrix4(i.matrixWorld),this.intersectsSphere(No)}intersectsSprite(i){return No.center.set(0,0,0),No.radius=.7071067811865476,No.applyMatrix4(i.matrixWorld),this.intersectsSphere(No)}intersectsSphere(i){const a=this.planes,e=i.center,o=-i.radius;for(let n=0;n<6;n++)if(a[n].distanceToPoint(e)<o)return!1;return!0}intersectsBox(i){const a=this.planes;for(let e=0;e<6;e++){const o=a[e];if(at.x=o.normal.x>0?i.max.x:i.min.x,at.y=o.normal.y>0?i.max.y:i.min.y,at.z=o.normal.z>0?i.max.z:i.min.z,o.distanceToPoint(at)<0)return!1}return!0}containsPoint(i){const a=this.planes;for(let e=0;e<6;e++)if(a[e].distanceToPoint(i)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function bl(){let r=null,i=!1,a=null,e=null;function o(n,s){a(n,s),e=r.requestAnimationFrame(o)}return{start:function(){i!==!0&&a!==null&&(e=r.requestAnimationFrame(o),i=!0)},stop:function(){r.cancelAnimationFrame(e),i=!1},setAnimationLoop:function(n){a=n},setContext:function(n){r=n}}}function Jm(r,i){const a=i.isWebGL2,e=new WeakMap;function o(l,f){const d=l.array,m=l.usage,g=r.createBuffer();r.bindBuffer(f,g),r.bufferData(f,d,m),l.onUploadCallback();let h;if(d instanceof Float32Array)h=5126;else if(d instanceof Uint16Array)if(l.isFloat16BufferAttribute)if(a)h=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else h=5123;else if(d instanceof Int16Array)h=5122;else if(d instanceof Uint32Array)h=5125;else if(d instanceof Int32Array)h=5124;else if(d instanceof Int8Array)h=5120;else if(d instanceof Uint8Array)h=5121;else if(d instanceof Uint8ClampedArray)h=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:g,type:h,bytesPerElement:d.BYTES_PER_ELEMENT,version:l.version}}function n(l,f,d){const m=f.array,g=f.updateRange;r.bindBuffer(d,l),g.count===-1?r.bufferSubData(d,0,m):(a?r.bufferSubData(d,g.offset*m.BYTES_PER_ELEMENT,m,g.offset,g.count):r.bufferSubData(d,g.offset*m.BYTES_PER_ELEMENT,m.subarray(g.offset,g.offset+g.count)),g.count=-1),f.onUploadCallback()}function s(l){return l.isInterleavedBufferAttribute&&(l=l.data),e.get(l)}function t(l){l.isInterleavedBufferAttribute&&(l=l.data);const f=e.get(l);f&&(r.deleteBuffer(f.buffer),e.delete(l))}function c(l,f){if(l.isGLBufferAttribute){const m=e.get(l);(!m||m.version<l.version)&&e.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);const d=e.get(l);d===void 0?e.set(l,o(l,f)):d.version<l.version&&(n(d.buffer,l,f),d.version=l.version)}return{get:s,remove:t,update:c}}class ir extends ge{constructor(i=1,a=1,e=1,o=1){super(),this.type="PlaneGeometry",this.parameters={width:i,height:a,widthSegments:e,heightSegments:o};const n=i/2,s=a/2,t=Math.floor(e),c=Math.floor(o),l=t+1,f=c+1,d=i/t,m=a/c,g=[],h=[],u=[],p=[];for(let b=0;b<f;b++){const k=b*m-s;for(let y=0;y<l;y++){const S=y*d-n;h.push(S,-k,0),u.push(0,0,1),p.push(y/t),p.push(1-b/c)}}for(let b=0;b<c;b++)for(let k=0;k<t;k++){const y=k+l*b,S=k+l*(b+1),_=k+1+l*(b+1),R=k+1+l*b;g.push(y,S,R),g.push(S,_,R)}this.setIndex(g),this.setAttribute("position",new se(h,3)),this.setAttribute("normal",new se(u,3)),this.setAttribute("uv",new se(p,2))}static fromJSON(i){return new ir(i.width,i.height,i.widthSegments,i.heightSegments)}}var Xm=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Ym=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,$m=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Qm=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,iu=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,au=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,eu="vec3 transformed = vec3( position );",ou=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,nu=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,tu=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,su=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,ru=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,cu=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,lu=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,fu=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,mu=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,uu=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,du=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,pu=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,gu=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,hu=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,bu=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,vu=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,yu=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,_u=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,ku=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Su="gl_FragColor = linearToOutputTexel( gl_FragColor );",Mu=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,wu=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,xu=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Au=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Ru=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Tu=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Cu=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Eu=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,zu=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Pu=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Iu=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Nu=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Lu=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Bu=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Du=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Gu=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Uu=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,Ou=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Fu=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Ku=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Vu=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,ju=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,Hu=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Wu=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,qu=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Zu=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Ju=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Xu=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Yu=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,$u=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Qu=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,id=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,ad=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,ed=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,od=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,nd=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,td=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,sd=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,rd=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,cd=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,ld=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,fd=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,md=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,ud=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,dd=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,pd=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,gd=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,hd=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,bd=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,vd=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,yd=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,_d=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,kd=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Sd=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Md=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,wd=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,xd=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Ad=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Rd=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Td=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Cd=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Ed=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,zd=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Pd=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,Id=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Nd=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Ld=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Bd=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Dd=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Gd=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Ud=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,Od=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,Fd=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Kd=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Vd=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,jd=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Hd=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,Wd=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,qd=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Zd=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Jd=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Xd=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Yd=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,$d=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Qd=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,ip=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,ap=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,ep=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,op=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,np=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,tp=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,sp=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,rp=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,cp=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,lp=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fp=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,mp=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,up=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,dp=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,pp=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,gp=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,hp=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,bp=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vp=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,yp=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,_p=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,kp=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Sp=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Mp=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,wp=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,xp=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Ap=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Rp=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Mi={alphamap_fragment:Xm,alphamap_pars_fragment:Ym,alphatest_fragment:$m,alphatest_pars_fragment:Qm,aomap_fragment:iu,aomap_pars_fragment:au,begin_vertex:eu,beginnormal_vertex:ou,bsdfs:nu,iridescence_fragment:tu,bumpmap_pars_fragment:su,clipping_planes_fragment:ru,clipping_planes_pars_fragment:cu,clipping_planes_pars_vertex:lu,clipping_planes_vertex:fu,color_fragment:mu,color_pars_fragment:uu,color_pars_vertex:du,color_vertex:pu,common:gu,cube_uv_reflection_fragment:hu,defaultnormal_vertex:bu,displacementmap_pars_vertex:vu,displacementmap_vertex:yu,emissivemap_fragment:_u,emissivemap_pars_fragment:ku,encodings_fragment:Su,encodings_pars_fragment:Mu,envmap_fragment:wu,envmap_common_pars_fragment:xu,envmap_pars_fragment:Au,envmap_pars_vertex:Ru,envmap_physical_pars_fragment:Uu,envmap_vertex:Tu,fog_vertex:Cu,fog_pars_vertex:Eu,fog_fragment:zu,fog_pars_fragment:Pu,gradientmap_pars_fragment:Iu,lightmap_fragment:Nu,lightmap_pars_fragment:Lu,lights_lambert_fragment:Bu,lights_lambert_pars_fragment:Du,lights_pars_begin:Gu,lights_toon_fragment:Ou,lights_toon_pars_fragment:Fu,lights_phong_fragment:Ku,lights_phong_pars_fragment:Vu,lights_physical_fragment:ju,lights_physical_pars_fragment:Hu,lights_fragment_begin:Wu,lights_fragment_maps:qu,lights_fragment_end:Zu,logdepthbuf_fragment:Ju,logdepthbuf_pars_fragment:Xu,logdepthbuf_pars_vertex:Yu,logdepthbuf_vertex:$u,map_fragment:Qu,map_pars_fragment:id,map_particle_fragment:ad,map_particle_pars_fragment:ed,metalnessmap_fragment:od,metalnessmap_pars_fragment:nd,morphcolor_vertex:td,morphnormal_vertex:sd,morphtarget_pars_vertex:rd,morphtarget_vertex:cd,normal_fragment_begin:ld,normal_fragment_maps:fd,normal_pars_fragment:md,normal_pars_vertex:ud,normal_vertex:dd,normalmap_pars_fragment:pd,clearcoat_normal_fragment_begin:gd,clearcoat_normal_fragment_maps:hd,clearcoat_pars_fragment:bd,iridescence_pars_fragment:vd,output_fragment:yd,packing:_d,premultiplied_alpha_fragment:kd,project_vertex:Sd,dithering_fragment:Md,dithering_pars_fragment:wd,roughnessmap_fragment:xd,roughnessmap_pars_fragment:Ad,shadowmap_pars_fragment:Rd,shadowmap_pars_vertex:Td,shadowmap_vertex:Cd,shadowmask_pars_fragment:Ed,skinbase_vertex:zd,skinning_pars_vertex:Pd,skinning_vertex:Id,skinnormal_vertex:Nd,specularmap_fragment:Ld,specularmap_pars_fragment:Bd,tonemapping_fragment:Dd,tonemapping_pars_fragment:Gd,transmission_fragment:Ud,transmission_pars_fragment:Od,uv_pars_fragment:Fd,uv_pars_vertex:Kd,uv_vertex:Vd,uv2_pars_fragment:jd,uv2_pars_vertex:Hd,uv2_vertex:Wd,worldpos_vertex:qd,background_vert:Zd,background_frag:Jd,backgroundCube_vert:Xd,backgroundCube_frag:Yd,cube_vert:$d,cube_frag:Qd,depth_vert:ip,depth_frag:ap,distanceRGBA_vert:ep,distanceRGBA_frag:op,equirect_vert:np,equirect_frag:tp,linedashed_vert:sp,linedashed_frag:rp,meshbasic_vert:cp,meshbasic_frag:lp,meshlambert_vert:fp,meshlambert_frag:mp,meshmatcap_vert:up,meshmatcap_frag:dp,meshnormal_vert:pp,meshnormal_frag:gp,meshphong_vert:hp,meshphong_frag:bp,meshphysical_vert:vp,meshphysical_frag:yp,meshtoon_vert:_p,meshtoon_frag:kp,points_vert:Sp,points_frag:Mp,shadow_vert:wp,shadow_frag:xp,sprite_vert:Ap,sprite_frag:Rp},oi={common:{diffuse:{value:new Ki(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Ga},uv2Transform:{value:new Ga},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Di(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ki(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ki(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ga}},sprite:{diffuse:{value:new Ki(16777215)},opacity:{value:1},center:{value:new Di(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ga}}},le={basic:{uniforms:_a([oi.common,oi.specularmap,oi.envmap,oi.aomap,oi.lightmap,oi.fog]),vertexShader:Mi.meshbasic_vert,fragmentShader:Mi.meshbasic_frag},lambert:{uniforms:_a([oi.common,oi.specularmap,oi.envmap,oi.aomap,oi.lightmap,oi.emissivemap,oi.bumpmap,oi.normalmap,oi.displacementmap,oi.fog,oi.lights,{emissive:{value:new Ki(0)}}]),vertexShader:Mi.meshlambert_vert,fragmentShader:Mi.meshlambert_frag},phong:{uniforms:_a([oi.common,oi.specularmap,oi.envmap,oi.aomap,oi.lightmap,oi.emissivemap,oi.bumpmap,oi.normalmap,oi.displacementmap,oi.fog,oi.lights,{emissive:{value:new Ki(0)},specular:{value:new Ki(1118481)},shininess:{value:30}}]),vertexShader:Mi.meshphong_vert,fragmentShader:Mi.meshphong_frag},standard:{uniforms:_a([oi.common,oi.envmap,oi.aomap,oi.lightmap,oi.emissivemap,oi.bumpmap,oi.normalmap,oi.displacementmap,oi.roughnessmap,oi.metalnessmap,oi.fog,oi.lights,{emissive:{value:new Ki(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Mi.meshphysical_vert,fragmentShader:Mi.meshphysical_frag},toon:{uniforms:_a([oi.common,oi.aomap,oi.lightmap,oi.emissivemap,oi.bumpmap,oi.normalmap,oi.displacementmap,oi.gradientmap,oi.fog,oi.lights,{emissive:{value:new Ki(0)}}]),vertexShader:Mi.meshtoon_vert,fragmentShader:Mi.meshtoon_frag},matcap:{uniforms:_a([oi.common,oi.bumpmap,oi.normalmap,oi.displacementmap,oi.fog,{matcap:{value:null}}]),vertexShader:Mi.meshmatcap_vert,fragmentShader:Mi.meshmatcap_frag},points:{uniforms:_a([oi.points,oi.fog]),vertexShader:Mi.points_vert,fragmentShader:Mi.points_frag},dashed:{uniforms:_a([oi.common,oi.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Mi.linedashed_vert,fragmentShader:Mi.linedashed_frag},depth:{uniforms:_a([oi.common,oi.displacementmap]),vertexShader:Mi.depth_vert,fragmentShader:Mi.depth_frag},normal:{uniforms:_a([oi.common,oi.bumpmap,oi.normalmap,oi.displacementmap,{opacity:{value:1}}]),vertexShader:Mi.meshnormal_vert,fragmentShader:Mi.meshnormal_frag},sprite:{uniforms:_a([oi.sprite,oi.fog]),vertexShader:Mi.sprite_vert,fragmentShader:Mi.sprite_frag},background:{uniforms:{uvTransform:{value:new Ga},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Mi.background_vert,fragmentShader:Mi.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Mi.backgroundCube_vert,fragmentShader:Mi.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Mi.cube_vert,fragmentShader:Mi.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Mi.equirect_vert,fragmentShader:Mi.equirect_frag},distanceRGBA:{uniforms:_a([oi.common,oi.displacementmap,{referencePosition:{value:new B},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Mi.distanceRGBA_vert,fragmentShader:Mi.distanceRGBA_frag},shadow:{uniforms:_a([oi.lights,oi.fog,{color:{value:new Ki(0)},opacity:{value:1}}]),vertexShader:Mi.shadow_vert,fragmentShader:Mi.shadow_frag}};le.physical={uniforms:_a([le.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Di(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Ki(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Di},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Ki(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Ki(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Mi.meshphysical_vert,fragmentShader:Mi.meshphysical_frag};const et={r:0,b:0,g:0};function Tp(r,i,a,e,o,n,s){const t=new Ki(0);let c=n===!0?0:1,l,f,d=null,m=0,g=null;function h(p,b){let k=!1,y=b.isScene===!0?b.background:null;y&&y.isTexture&&(y=(b.backgroundBlurriness>0?a:i).get(y));const S=r.xr,_=S.getSession&&S.getSession();_&&_.environmentBlendMode==="additive"&&(y=null),y===null?u(t,c):y&&y.isColor&&(u(y,1),k=!0),(r.autoClear||k)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),y&&(y.isCubeTexture||y.mapping===kt)?(f===void 0&&(f=new te(new tn(1,1,1),new Ce({name:"BackgroundCubeMaterial",uniforms:Jo(le.backgroundCube.uniforms),vertexShader:le.backgroundCube.vertexShader,fragmentShader:le.backgroundCube.fragmentShader,side:Ma,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(R,T,v){this.matrixWorld.copyPosition(v.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),o.update(f)),f.material.uniforms.envMap.value=y,f.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=b.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,f.material.toneMapped=y.encoding!==Gi,(d!==y||m!==y.version||g!==r.toneMapping)&&(f.material.needsUpdate=!0,d=y,m=y.version,g=r.toneMapping),f.layers.enableAll(),p.unshift(f,f.geometry,f.material,0,0,null)):y&&y.isTexture&&(l===void 0&&(l=new te(new ir(2,2),new Ce({name:"BackgroundMaterial",uniforms:Jo(le.background.uniforms),vertexShader:le.background.vertexShader,fragmentShader:le.background.fragmentShader,side:Ve,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),o.update(l)),l.material.uniforms.t2D.value=y,l.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,l.material.toneMapped=y.encoding!==Gi,y.matrixAutoUpdate===!0&&y.updateMatrix(),l.material.uniforms.uvTransform.value.copy(y.matrix),(d!==y||m!==y.version||g!==r.toneMapping)&&(l.material.needsUpdate=!0,d=y,m=y.version,g=r.toneMapping),l.layers.enableAll(),p.unshift(l,l.geometry,l.material,0,0,null))}function u(p,b){p.getRGB(et,dl(r)),e.buffers.color.setClear(et.r,et.g,et.b,b,s)}return{getClearColor:function(){return t},setClearColor:function(p,b=1){t.set(p),c=b,u(t,c)},getClearAlpha:function(){return c},setClearAlpha:function(p){c=p,u(t,c)},render:h}}function Cp(r,i,a,e){const o=r.getParameter(34921),n=e.isWebGL2?null:i.get("OES_vertex_array_object"),s=e.isWebGL2||n!==null,t={},c=p(null);let l=c,f=!1;function d(z,D,J,q,O){let Y=!1;if(s){const X=u(q,J,D);l!==X&&(l=X,g(l.object)),Y=b(z,q,J,O),Y&&k(z,q,J,O)}else{const X=D.wireframe===!0;(l.geometry!==q.id||l.program!==J.id||l.wireframe!==X)&&(l.geometry=q.id,l.program=J.id,l.wireframe=X,Y=!0)}O!==null&&a.update(O,34963),(Y||f)&&(f=!1,v(z,D,J,q),O!==null&&r.bindBuffer(34963,a.get(O).buffer))}function m(){return e.isWebGL2?r.createVertexArray():n.createVertexArrayOES()}function g(z){return e.isWebGL2?r.bindVertexArray(z):n.bindVertexArrayOES(z)}function h(z){return e.isWebGL2?r.deleteVertexArray(z):n.deleteVertexArrayOES(z)}function u(z,D,J){const q=J.wireframe===!0;let O=t[z.id];O===void 0&&(O={},t[z.id]=O);let Y=O[D.id];Y===void 0&&(Y={},O[D.id]=Y);let X=Y[q];return X===void 0&&(X=p(m()),Y[q]=X),X}function p(z){const D=[],J=[],q=[];for(let O=0;O<o;O++)D[O]=0,J[O]=0,q[O]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:D,enabledAttributes:J,attributeDivisors:q,object:z,attributes:{},index:null}}function b(z,D,J,q){const O=l.attributes,Y=D.attributes;let X=0;const ci=J.getAttributes();for(const L in ci)if(ci[L].location>=0){const ii=O[L];let ai=Y[L];if(ai===void 0&&(L==="instanceMatrix"&&z.instanceMatrix&&(ai=z.instanceMatrix),L==="instanceColor"&&z.instanceColor&&(ai=z.instanceColor)),ii===void 0||ii.attribute!==ai||ai&&ii.data!==ai.data)return!0;X++}return l.attributesNum!==X||l.index!==q}function k(z,D,J,q){const O={},Y=D.attributes;let X=0;const ci=J.getAttributes();for(const L in ci)if(ci[L].location>=0){let ii=Y[L];ii===void 0&&(L==="instanceMatrix"&&z.instanceMatrix&&(ii=z.instanceMatrix),L==="instanceColor"&&z.instanceColor&&(ii=z.instanceColor));const ai={};ai.attribute=ii,ii&&ii.data&&(ai.data=ii.data),O[L]=ai,X++}l.attributes=O,l.attributesNum=X,l.index=q}function y(){const z=l.newAttributes;for(let D=0,J=z.length;D<J;D++)z[D]=0}function S(z){_(z,0)}function _(z,D){const J=l.newAttributes,q=l.enabledAttributes,O=l.attributeDivisors;J[z]=1,q[z]===0&&(r.enableVertexAttribArray(z),q[z]=1),O[z]!==D&&((e.isWebGL2?r:i.get("ANGLE_instanced_arrays"))[e.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](z,D),O[z]=D)}function R(){const z=l.newAttributes,D=l.enabledAttributes;for(let J=0,q=D.length;J<q;J++)D[J]!==z[J]&&(r.disableVertexAttribArray(J),D[J]=0)}function T(z,D,J,q,O,Y){e.isWebGL2===!0&&(J===5124||J===5125)?r.vertexAttribIPointer(z,D,J,O,Y):r.vertexAttribPointer(z,D,J,q,O,Y)}function v(z,D,J,q){if(e.isWebGL2===!1&&(z.isInstancedMesh||q.isInstancedBufferGeometry)&&i.get("ANGLE_instanced_arrays")===null)return;y();const O=q.attributes,Y=J.getAttributes(),X=D.defaultAttributeValues;for(const ci in Y){const L=Y[ci];if(L.location>=0){let Z=O[ci];if(Z===void 0&&(ci==="instanceMatrix"&&z.instanceMatrix&&(Z=z.instanceMatrix),ci==="instanceColor"&&z.instanceColor&&(Z=z.instanceColor)),Z!==void 0){const ii=Z.normalized,ai=Z.itemSize,G=a.get(Z);if(G===void 0)continue;const ki=G.buffer,mi=G.type,ui=G.bytesPerElement;if(Z.isInterleavedBufferAttribute){const ri=Z.data,Bi=ri.stride,Si=Z.offset;if(ri.isInstancedInterleavedBuffer){for(let vi=0;vi<L.locationSize;vi++)_(L.location+vi,ri.meshPerAttribute);z.isInstancedMesh!==!0&&q._maxInstanceCount===void 0&&(q._maxInstanceCount=ri.meshPerAttribute*ri.count)}else for(let vi=0;vi<L.locationSize;vi++)S(L.location+vi);r.bindBuffer(34962,ki);for(let vi=0;vi<L.locationSize;vi++)T(L.location+vi,ai/L.locationSize,mi,ii,Bi*ui,(Si+ai/L.locationSize*vi)*ui)}else{if(Z.isInstancedBufferAttribute){for(let ri=0;ri<L.locationSize;ri++)_(L.location+ri,Z.meshPerAttribute);z.isInstancedMesh!==!0&&q._maxInstanceCount===void 0&&(q._maxInstanceCount=Z.meshPerAttribute*Z.count)}else for(let ri=0;ri<L.locationSize;ri++)S(L.location+ri);r.bindBuffer(34962,ki);for(let ri=0;ri<L.locationSize;ri++)T(L.location+ri,ai/L.locationSize,mi,ii,ai*ui,ai/L.locationSize*ri*ui)}}else if(X!==void 0){const ii=X[ci];if(ii!==void 0)switch(ii.length){case 2:r.vertexAttrib2fv(L.location,ii);break;case 3:r.vertexAttrib3fv(L.location,ii);break;case 4:r.vertexAttrib4fv(L.location,ii);break;default:r.vertexAttrib1fv(L.location,ii)}}}}R()}function w(){W();for(const z in t){const D=t[z];for(const J in D){const q=D[J];for(const O in q)h(q[O].object),delete q[O];delete D[J]}delete t[z]}}function E(z){if(t[z.id]===void 0)return;const D=t[z.id];for(const J in D){const q=D[J];for(const O in q)h(q[O].object),delete q[O];delete D[J]}delete t[z.id]}function U(z){for(const D in t){const J=t[D];if(J[z.id]===void 0)continue;const q=J[z.id];for(const O in q)h(q[O].object),delete q[O];delete J[z.id]}}function W(){P(),f=!0,l!==c&&(l=c,g(l.object))}function P(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:d,reset:W,resetDefaultState:P,dispose:w,releaseStatesOfGeometry:E,releaseStatesOfProgram:U,initAttributes:y,enableAttribute:S,disableUnusedAttributes:R}}function Ep(r,i,a,e){const o=e.isWebGL2;let n;function s(l){n=l}function t(l,f){r.drawArrays(n,l,f),a.update(f,n,1)}function c(l,f,d){if(d===0)return;let m,g;if(o)m=r,g="drawArraysInstanced";else if(m=i.get("ANGLE_instanced_arrays"),g="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](n,l,f,d),a.update(f,n,d)}this.setMode=s,this.render=t,this.renderInstances=c}function zp(r,i,a){let e;function o(){if(e!==void 0)return e;if(i.has("EXT_texture_filter_anisotropic")===!0){const T=i.get("EXT_texture_filter_anisotropic");e=r.getParameter(T.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else e=0;return e}function n(T){if(T==="highp"){if(r.getShaderPrecisionFormat(35633,36338).precision>0&&r.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";T="mediump"}return T==="mediump"&&r.getShaderPrecisionFormat(35633,36337).precision>0&&r.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s=typeof WebGL2RenderingContext<"u"&&r instanceof WebGL2RenderingContext;let t=a.precision!==void 0?a.precision:"highp";const c=n(t);c!==t&&(console.warn("THREE.WebGLRenderer:",t,"not supported, using",c,"instead."),t=c);const l=s||i.has("WEBGL_draw_buffers"),f=a.logarithmicDepthBuffer===!0,d=r.getParameter(34930),m=r.getParameter(35660),g=r.getParameter(3379),h=r.getParameter(34076),u=r.getParameter(34921),p=r.getParameter(36347),b=r.getParameter(36348),k=r.getParameter(36349),y=m>0,S=s||i.has("OES_texture_float"),_=y&&S,R=s?r.getParameter(36183):0;return{isWebGL2:s,drawBuffers:l,getMaxAnisotropy:o,getMaxPrecision:n,precision:t,logarithmicDepthBuffer:f,maxTextures:d,maxVertexTextures:m,maxTextureSize:g,maxCubemapSize:h,maxAttributes:u,maxVertexUniforms:p,maxVaryings:b,maxFragmentUniforms:k,vertexTextures:y,floatFragmentTextures:S,floatVertexTextures:_,maxSamples:R}}function Pp(r){const i=this;let a=null,e=0,o=!1,n=!1;const s=new oo,t=new Ga,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(d,m){const g=d.length!==0||m||e!==0||o;return o=m,e=d.length,g},this.beginShadows=function(){n=!0,f(null)},this.endShadows=function(){n=!1},this.setGlobalState=function(d,m){a=f(d,m,0)},this.setState=function(d,m,g){const h=d.clippingPlanes,u=d.clipIntersection,p=d.clipShadows,b=r.get(d);if(!o||h===null||h.length===0||n&&!p)n?f(null):l();else{const k=n?0:e,y=k*4;let S=b.clippingState||null;c.value=S,S=f(h,m,y,g);for(let _=0;_!==y;++_)S[_]=a[_];b.clippingState=S,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=k}};function l(){c.value!==a&&(c.value=a,c.needsUpdate=e>0),i.numPlanes=e,i.numIntersection=0}function f(d,m,g,h){const u=d!==null?d.length:0;let p=null;if(u!==0){if(p=c.value,h!==!0||p===null){const b=g+u*4,k=m.matrixWorldInverse;t.getNormalMatrix(k),(p===null||p.length<b)&&(p=new Float32Array(b));for(let y=0,S=g;y!==u;++y,S+=4)s.copy(d[y]).applyMatrix4(k,t),s.normal.toArray(p,S),p[S+3]=s.constant}c.value=p,c.needsUpdate=!0}return i.numPlanes=u,i.numIntersection=0,p}}function Ip(r){let i=new WeakMap;function a(s,t){return t===xs?s.mapping=Wo:t===As&&(s.mapping=qo),s}function e(s){if(s&&s.isTexture&&s.isRenderTargetTexture===!1){const t=s.mapping;if(t===xs||t===As)if(i.has(s)){const c=i.get(s).texture;return a(c,s.mapping)}else{const c=s.image;if(c&&c.height>0){const l=new Wm(c.height/2);return l.fromEquirectangularTexture(r,s),i.set(s,l),s.addEventListener("dispose",o),a(l.texture,s.mapping)}else return null}}return s}function o(s){const t=s.target;t.removeEventListener("dispose",o);const c=i.get(t);c!==void 0&&(i.delete(t),c.dispose())}function n(){i=new WeakMap}return{get:e,dispose:n}}class Np extends pl{constructor(i=-1,a=1,e=1,o=-1,n=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=i,this.right=a,this.top=e,this.bottom=o,this.near=n,this.far=s,this.updateProjectionMatrix()}copy(i,a){return super.copy(i,a),this.left=i.left,this.right=i.right,this.top=i.top,this.bottom=i.bottom,this.near=i.near,this.far=i.far,this.zoom=i.zoom,this.view=i.view===null?null:Object.assign({},i.view),this}setViewOffset(i,a,e,o,n,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=i,this.view.fullHeight=a,this.view.offsetX=e,this.view.offsetY=o,this.view.width=n,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const i=(this.right-this.left)/(2*this.zoom),a=(this.top-this.bottom)/(2*this.zoom),e=(this.right+this.left)/2,o=(this.top+this.bottom)/2;let n=e-i,s=e+i,t=o+a,c=o-a;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;n+=l*this.view.offsetX,s=n+l*this.view.width,t-=f*this.view.offsetY,c=t-f*this.view.height}this.projectionMatrix.makeOrthographic(n,s,t,c,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(i){const a=super.toJSON(i);return a.object.zoom=this.zoom,a.object.left=this.left,a.object.right=this.right,a.object.top=this.top,a.object.bottom=this.bottom,a.object.near=this.near,a.object.far=this.far,this.view!==null&&(a.object.view=Object.assign({},this.view)),a}}const Go=4,mc=[.125,.215,.35,.446,.526,.582],so=20,fs=new Np,uc=new Ki;let ms=null;const no=(1+Math.sqrt(5))/2,Lo=1/no,dc=[new B(1,1,1),new B(-1,1,1),new B(1,1,-1),new B(-1,1,-1),new B(0,no,Lo),new B(0,no,-Lo),new B(Lo,0,no),new B(-Lo,0,no),new B(no,Lo,0),new B(-no,Lo,0)];class pc{constructor(i){this._renderer=i,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(i,a=0,e=.1,o=100){ms=this._renderer.getRenderTarget(),this._setSize(256);const n=this._allocateTargets();return n.depthBuffer=!0,this._sceneToCubeUV(i,e,o,n),a>0&&this._blur(n,0,0,a),this._applyPMREM(n),this._cleanup(n),n}fromEquirectangular(i,a=null){return this._fromTexture(i,a)}fromCubemap(i,a=null){return this._fromTexture(i,a)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=bc(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=hc(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(i){this._lodMax=Math.floor(Math.log2(i)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let i=0;i<this._lodPlanes.length;i++)this._lodPlanes[i].dispose()}_cleanup(i){this._renderer.setRenderTarget(ms),i.scissorTest=!1,ot(i,0,0,i.width,i.height)}_fromTexture(i,a){i.mapping===Wo||i.mapping===qo?this._setSize(i.image.length===0?16:i.image[0].width||i.image[0].image.width):this._setSize(i.image.width/4),ms=this._renderer.getRenderTarget();const e=a||this._allocateTargets();return this._textureToCubeUV(i,e),this._applyPMREM(e),this._cleanup(e),e}_allocateTargets(){const i=3*Math.max(this._cubeSize,112),a=4*this._cubeSize,e={magFilter:Za,minFilter:Za,generateMipmaps:!1,type:xn,format:ne,encoding:vo,depthBuffer:!1},o=gc(i,a,e);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==i||this._pingPongRenderTarget.height!==a){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=gc(i,a,e);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Lp(n)),this._blurMaterial=Bp(n,i,a)}return o}_compileMaterial(i){const a=new te(this._lodPlanes[0],i);this._renderer.compile(a,fs)}_sceneToCubeUV(i,a,e,o){const t=new Ba(90,1,a,e),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],f=this._renderer,d=f.autoClear,m=f.toneMapping;f.getClearColor(uc),f.toneMapping=Te,f.autoClear=!1;const g=new Qs({name:"PMREM.Background",side:Ma,depthWrite:!1,depthTest:!1}),h=new te(new tn,g);let u=!1;const p=i.background;p?p.isColor&&(g.color.copy(p),i.background=null,u=!0):(g.color.copy(uc),u=!0);for(let b=0;b<6;b++){const k=b%3;k===0?(t.up.set(0,c[b],0),t.lookAt(l[b],0,0)):k===1?(t.up.set(0,0,c[b]),t.lookAt(0,l[b],0)):(t.up.set(0,c[b],0),t.lookAt(0,0,l[b]));const y=this._cubeSize;ot(o,k*y,b>2?y:0,y,y),f.setRenderTarget(o),u&&f.render(h,t),f.render(i,t)}h.geometry.dispose(),h.material.dispose(),f.toneMapping=m,f.autoClear=d,i.background=p}_textureToCubeUV(i,a){const e=this._renderer,o=i.mapping===Wo||i.mapping===qo;o?(this._cubemapMaterial===null&&(this._cubemapMaterial=bc()),this._cubemapMaterial.uniforms.flipEnvMap.value=i.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=hc());const n=o?this._cubemapMaterial:this._equirectMaterial,s=new te(this._lodPlanes[0],n),t=n.uniforms;t.envMap.value=i;const c=this._cubeSize;ot(a,0,0,3*c,2*c),e.setRenderTarget(a),e.render(s,fs)}_applyPMREM(i){const a=this._renderer,e=a.autoClear;a.autoClear=!1;for(let o=1;o<this._lodPlanes.length;o++){const n=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),s=dc[(o-1)%dc.length];this._blur(i,o-1,o,n,s)}a.autoClear=e}_blur(i,a,e,o,n){const s=this._pingPongRenderTarget;this._halfBlur(i,s,a,e,o,"latitudinal",n),this._halfBlur(s,i,e,e,o,"longitudinal",n)}_halfBlur(i,a,e,o,n,s,t){const c=this._renderer,l=this._blurMaterial;s!=="latitudinal"&&s!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,d=new te(this._lodPlanes[o],l),m=l.uniforms,g=this._sizeLods[e]-1,h=isFinite(n)?Math.PI/(2*g):2*Math.PI/(2*so-1),u=n/h,p=isFinite(n)?1+Math.floor(f*u):so;p>so&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${so}`);const b=[];let k=0;for(let T=0;T<so;++T){const v=T/u,w=Math.exp(-v*v/2);b.push(w),T===0?k+=w:T<p&&(k+=2*w)}for(let T=0;T<b.length;T++)b[T]=b[T]/k;m.envMap.value=i.texture,m.samples.value=p,m.weights.value=b,m.latitudinal.value=s==="latitudinal",t&&(m.poleAxis.value=t);const{_lodMax:y}=this;m.dTheta.value=h,m.mipInt.value=y-e;const S=this._sizeLods[o],_=3*S*(o>y-Go?o-y+Go:0),R=4*(this._cubeSize-S);ot(a,_,R,3*S,2*S),c.setRenderTarget(a),c.render(d,fs)}}function Lp(r){const i=[],a=[],e=[];let o=r;const n=r-Go+1+mc.length;for(let s=0;s<n;s++){const t=Math.pow(2,o);a.push(t);let c=1/t;s>r-Go?c=mc[s-r+Go-1]:s===0&&(c=0),e.push(c);const l=1/(t-2),f=-l,d=1+l,m=[f,f,d,f,d,d,f,f,d,d,f,d],g=6,h=6,u=3,p=2,b=1,k=new Float32Array(u*h*g),y=new Float32Array(p*h*g),S=new Float32Array(b*h*g);for(let R=0;R<g;R++){const T=R%3*2/3-1,v=R>2?0:-1,w=[T,v,0,T+2/3,v,0,T+2/3,v+1,0,T,v,0,T+2/3,v+1,0,T,v+1,0];k.set(w,u*h*R),y.set(m,p*h*R);const E=[R,R,R,R,R,R];S.set(E,b*h*R)}const _=new ge;_.setAttribute("position",new ue(k,u)),_.setAttribute("uv",new ue(y,p)),_.setAttribute("faceIndex",new ue(S,b)),i.push(_),o>Go&&o--}return{lodPlanes:i,sizeLods:a,sigmas:e}}function gc(r,i,a){const e=new yo(r,i,a);return e.texture.mapping=kt,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function ot(r,i,a,e,o){r.viewport.set(i,a,e,o),r.scissor.set(i,a,e,o)}function Bp(r,i,a){const e=new Float32Array(so),o=new B(0,1,0);return new Ce({name:"SphericalGaussianBlur",defines:{n:so,CUBEUV_TEXEL_WIDTH:1/i,CUBEUV_TEXEL_HEIGHT:1/a,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:o}},vertexShader:ar(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Oe,depthTest:!1,depthWrite:!1})}function hc(){return new Ce({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:ar(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Oe,depthTest:!1,depthWrite:!1})}function bc(){return new Ce({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:ar(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Oe,depthTest:!1,depthWrite:!1})}function ar(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Dp(r){let i=new WeakMap,a=null;function e(t){if(t&&t.isTexture){const c=t.mapping,l=c===xs||c===As,f=c===Wo||c===qo;if(l||f)if(t.isRenderTargetTexture&&t.needsPMREMUpdate===!0){t.needsPMREMUpdate=!1;let d=i.get(t);return a===null&&(a=new pc(r)),d=l?a.fromEquirectangular(t,d):a.fromCubemap(t,d),i.set(t,d),d.texture}else{if(i.has(t))return i.get(t).texture;{const d=t.image;if(l&&d&&d.height>0||f&&d&&o(d)){a===null&&(a=new pc(r));const m=l?a.fromEquirectangular(t):a.fromCubemap(t);return i.set(t,m),t.addEventListener("dispose",n),m.texture}else return null}}}return t}function o(t){let c=0;const l=6;for(let f=0;f<l;f++)t[f]!==void 0&&c++;return c===l}function n(t){const c=t.target;c.removeEventListener("dispose",n);const l=i.get(c);l!==void 0&&(i.delete(c),l.dispose())}function s(){i=new WeakMap,a!==null&&(a.dispose(),a=null)}return{get:e,dispose:s}}function Gp(r){const i={};function a(e){if(i[e]!==void 0)return i[e];let o;switch(e){case"WEBGL_depth_texture":o=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":o=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":o=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":o=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:o=r.getExtension(e)}return i[e]=o,o}return{has:function(e){return a(e)!==null},init:function(e){e.isWebGL2?a("EXT_color_buffer_float"):(a("WEBGL_depth_texture"),a("OES_texture_float"),a("OES_texture_half_float"),a("OES_texture_half_float_linear"),a("OES_standard_derivatives"),a("OES_element_index_uint"),a("OES_vertex_array_object"),a("ANGLE_instanced_arrays")),a("OES_texture_float_linear"),a("EXT_color_buffer_half_float"),a("WEBGL_multisampled_render_to_texture")},get:function(e){const o=a(e);return o===null&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),o}}}function Up(r,i,a,e){const o={},n=new WeakMap;function s(d){const m=d.target;m.index!==null&&i.remove(m.index);for(const h in m.attributes)i.remove(m.attributes[h]);m.removeEventListener("dispose",s),delete o[m.id];const g=n.get(m);g&&(i.remove(g),n.delete(m)),e.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,a.memory.geometries--}function t(d,m){return o[m.id]===!0||(m.addEventListener("dispose",s),o[m.id]=!0,a.memory.geometries++),m}function c(d){const m=d.attributes;for(const h in m)i.update(m[h],34962);const g=d.morphAttributes;for(const h in g){const u=g[h];for(let p=0,b=u.length;p<b;p++)i.update(u[p],34962)}}function l(d){const m=[],g=d.index,h=d.attributes.position;let u=0;if(g!==null){const k=g.array;u=g.version;for(let y=0,S=k.length;y<S;y+=3){const _=k[y+0],R=k[y+1],T=k[y+2];m.push(_,R,R,T,T,_)}}else{const k=h.array;u=h.version;for(let y=0,S=k.length/3-1;y<S;y+=3){const _=y+0,R=y+1,T=y+2;m.push(_,R,R,T,T,_)}}const p=new(sl(m)?ul:ml)(m,1);p.version=u;const b=n.get(d);b&&i.remove(b),n.set(d,p)}function f(d){const m=n.get(d);if(m){const g=d.index;g!==null&&m.version<g.version&&l(d)}else l(d);return n.get(d)}return{get:t,update:c,getWireframeAttribute:f}}function Op(r,i,a,e){const o=e.isWebGL2;let n;function s(m){n=m}let t,c;function l(m){t=m.type,c=m.bytesPerElement}function f(m,g){r.drawElements(n,g,t,m*c),a.update(g,n,1)}function d(m,g,h){if(h===0)return;let u,p;if(o)u=r,p="drawElementsInstanced";else if(u=i.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",u===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}u[p](n,g,t,m*c,h),a.update(g,n,h)}this.setMode=s,this.setIndex=l,this.render=f,this.renderInstances=d}function Fp(r){const i={geometries:0,textures:0},a={frame:0,calls:0,triangles:0,points:0,lines:0};function e(n,s,t){switch(a.calls++,s){case 4:a.triangles+=t*(n/3);break;case 1:a.lines+=t*(n/2);break;case 3:a.lines+=t*(n-1);break;case 2:a.lines+=t*n;break;case 0:a.points+=t*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",s);break}}function o(){a.frame++,a.calls=0,a.triangles=0,a.points=0,a.lines=0}return{memory:i,render:a,programs:null,autoReset:!0,reset:o,update:e}}function Kp(r,i){return r[0]-i[0]}function Vp(r,i){return Math.abs(i[1])-Math.abs(r[1])}function jp(r,i,a){const e={},o=new Float32Array(8),n=new WeakMap,s=new la,t=[];for(let l=0;l<8;l++)t[l]=[l,0];function c(l,f,d,m){const g=l.morphTargetInfluences;if(i.isWebGL2===!0){const u=f.morphAttributes.position||f.morphAttributes.normal||f.morphAttributes.color,p=u!==void 0?u.length:0;let b=n.get(f);if(b===void 0||b.count!==p){let J=function(){z.dispose(),n.delete(f),f.removeEventListener("dispose",J)};var h=J;b!==void 0&&b.texture.dispose();const S=f.morphAttributes.position!==void 0,_=f.morphAttributes.normal!==void 0,R=f.morphAttributes.color!==void 0,T=f.morphAttributes.position||[],v=f.morphAttributes.normal||[],w=f.morphAttributes.color||[];let E=0;S===!0&&(E=1),_===!0&&(E=2),R===!0&&(E=3);let U=f.attributes.position.count*E,W=1;U>i.maxTextureSize&&(W=Math.ceil(U/i.maxTextureSize),U=i.maxTextureSize);const P=new Float32Array(U*W*4*p),z=new fl(P,U,W,p);z.type=co,z.needsUpdate=!0;const D=E*4;for(let q=0;q<p;q++){const O=T[q],Y=v[q],X=w[q],ci=U*W*4*q;for(let L=0;L<O.count;L++){const Z=L*D;S===!0&&(s.fromBufferAttribute(O,L),P[ci+Z+0]=s.x,P[ci+Z+1]=s.y,P[ci+Z+2]=s.z,P[ci+Z+3]=0),_===!0&&(s.fromBufferAttribute(Y,L),P[ci+Z+4]=s.x,P[ci+Z+5]=s.y,P[ci+Z+6]=s.z,P[ci+Z+7]=0),R===!0&&(s.fromBufferAttribute(X,L),P[ci+Z+8]=s.x,P[ci+Z+9]=s.y,P[ci+Z+10]=s.z,P[ci+Z+11]=X.itemSize===4?s.w:1)}}b={count:p,texture:z,size:new Di(U,W)},n.set(f,b),f.addEventListener("dispose",J)}let k=0;for(let S=0;S<g.length;S++)k+=g[S];const y=f.morphTargetsRelative?1:1-k;m.getUniforms().setValue(r,"morphTargetBaseInfluence",y),m.getUniforms().setValue(r,"morphTargetInfluences",g),m.getUniforms().setValue(r,"morphTargetsTexture",b.texture,a),m.getUniforms().setValue(r,"morphTargetsTextureSize",b.size)}else{const u=g===void 0?0:g.length;let p=e[f.id];if(p===void 0||p.length!==u){p=[];for(let _=0;_<u;_++)p[_]=[_,0];e[f.id]=p}for(let _=0;_<u;_++){const R=p[_];R[0]=_,R[1]=g[_]}p.sort(Vp);for(let _=0;_<8;_++)_<u&&p[_][1]?(t[_][0]=p[_][0],t[_][1]=p[_][1]):(t[_][0]=Number.MAX_SAFE_INTEGER,t[_][1]=0);t.sort(Kp);const b=f.morphAttributes.position,k=f.morphAttributes.normal;let y=0;for(let _=0;_<8;_++){const R=t[_],T=R[0],v=R[1];T!==Number.MAX_SAFE_INTEGER&&v?(b&&f.getAttribute("morphTarget"+_)!==b[T]&&f.setAttribute("morphTarget"+_,b[T]),k&&f.getAttribute("morphNormal"+_)!==k[T]&&f.setAttribute("morphNormal"+_,k[T]),o[_]=v,y+=v):(b&&f.hasAttribute("morphTarget"+_)===!0&&f.deleteAttribute("morphTarget"+_),k&&f.hasAttribute("morphNormal"+_)===!0&&f.deleteAttribute("morphNormal"+_),o[_]=0)}const S=f.morphTargetsRelative?1:1-y;m.getUniforms().setValue(r,"morphTargetBaseInfluence",S),m.getUniforms().setValue(r,"morphTargetInfluences",o)}}return{update:c}}function Hp(r,i,a,e){let o=new WeakMap;function n(c){const l=e.render.frame,f=c.geometry,d=i.get(c,f);return o.get(d)!==l&&(i.update(d),o.set(d,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",t)===!1&&c.addEventListener("dispose",t),a.update(c.instanceMatrix,34962),c.instanceColor!==null&&a.update(c.instanceColor,34962)),d}function s(){o=new WeakMap}function t(c){const l=c.target;l.removeEventListener("dispose",t),a.remove(l.instanceMatrix),l.instanceColor!==null&&a.remove(l.instanceColor)}return{update:n,dispose:s}}const vl=new wa,yl=new fl,_l=new Em,kl=new gl,vc=[],yc=[],_c=new Float32Array(16),kc=new Float32Array(9),Sc=new Float32Array(4);function sn(r,i,a){const e=r[0];if(e<=0||e>0)return r;const o=i*a;let n=vc[o];if(n===void 0&&(n=new Float32Array(o),vc[o]=n),i!==0){e.toArray(n,0);for(let s=1,t=0;s!==i;++s)t+=a,r[s].toArray(n,t)}return n}function aa(r,i){if(r.length!==i.length)return!1;for(let a=0,e=r.length;a<e;a++)if(r[a]!==i[a])return!1;return!0}function ea(r,i){for(let a=0,e=i.length;a<e;a++)r[a]=i[a]}function wt(r,i){let a=yc[i];a===void 0&&(a=new Int32Array(i),yc[i]=a);for(let e=0;e!==i;++e)a[e]=r.allocateTextureUnit();return a}function Wp(r,i){const a=this.cache;a[0]!==i&&(r.uniform1f(this.addr,i),a[0]=i)}function qp(r,i){const a=this.cache;if(i.x!==void 0)(a[0]!==i.x||a[1]!==i.y)&&(r.uniform2f(this.addr,i.x,i.y),a[0]=i.x,a[1]=i.y);else{if(aa(a,i))return;r.uniform2fv(this.addr,i),ea(a,i)}}function Zp(r,i){const a=this.cache;if(i.x!==void 0)(a[0]!==i.x||a[1]!==i.y||a[2]!==i.z)&&(r.uniform3f(this.addr,i.x,i.y,i.z),a[0]=i.x,a[1]=i.y,a[2]=i.z);else if(i.r!==void 0)(a[0]!==i.r||a[1]!==i.g||a[2]!==i.b)&&(r.uniform3f(this.addr,i.r,i.g,i.b),a[0]=i.r,a[1]=i.g,a[2]=i.b);else{if(aa(a,i))return;r.uniform3fv(this.addr,i),ea(a,i)}}function Jp(r,i){const a=this.cache;if(i.x!==void 0)(a[0]!==i.x||a[1]!==i.y||a[2]!==i.z||a[3]!==i.w)&&(r.uniform4f(this.addr,i.x,i.y,i.z,i.w),a[0]=i.x,a[1]=i.y,a[2]=i.z,a[3]=i.w);else{if(aa(a,i))return;r.uniform4fv(this.addr,i),ea(a,i)}}function Xp(r,i){const a=this.cache,e=i.elements;if(e===void 0){if(aa(a,i))return;r.uniformMatrix2fv(this.addr,!1,i),ea(a,i)}else{if(aa(a,e))return;Sc.set(e),r.uniformMatrix2fv(this.addr,!1,Sc),ea(a,e)}}function Yp(r,i){const a=this.cache,e=i.elements;if(e===void 0){if(aa(a,i))return;r.uniformMatrix3fv(this.addr,!1,i),ea(a,i)}else{if(aa(a,e))return;kc.set(e),r.uniformMatrix3fv(this.addr,!1,kc),ea(a,e)}}function $p(r,i){const a=this.cache,e=i.elements;if(e===void 0){if(aa(a,i))return;r.uniformMatrix4fv(this.addr,!1,i),ea(a,i)}else{if(aa(a,e))return;_c.set(e),r.uniformMatrix4fv(this.addr,!1,_c),ea(a,e)}}function Qp(r,i){const a=this.cache;a[0]!==i&&(r.uniform1i(this.addr,i),a[0]=i)}function ig(r,i){const a=this.cache;if(i.x!==void 0)(a[0]!==i.x||a[1]!==i.y)&&(r.uniform2i(this.addr,i.x,i.y),a[0]=i.x,a[1]=i.y);else{if(aa(a,i))return;r.uniform2iv(this.addr,i),ea(a,i)}}function ag(r,i){const a=this.cache;if(i.x!==void 0)(a[0]!==i.x||a[1]!==i.y||a[2]!==i.z)&&(r.uniform3i(this.addr,i.x,i.y,i.z),a[0]=i.x,a[1]=i.y,a[2]=i.z);else{if(aa(a,i))return;r.uniform3iv(this.addr,i),ea(a,i)}}function eg(r,i){const a=this.cache;if(i.x!==void 0)(a[0]!==i.x||a[1]!==i.y||a[2]!==i.z||a[3]!==i.w)&&(r.uniform4i(this.addr,i.x,i.y,i.z,i.w),a[0]=i.x,a[1]=i.y,a[2]=i.z,a[3]=i.w);else{if(aa(a,i))return;r.uniform4iv(this.addr,i),ea(a,i)}}function og(r,i){const a=this.cache;a[0]!==i&&(r.uniform1ui(this.addr,i),a[0]=i)}function ng(r,i){const a=this.cache;if(i.x!==void 0)(a[0]!==i.x||a[1]!==i.y)&&(r.uniform2ui(this.addr,i.x,i.y),a[0]=i.x,a[1]=i.y);else{if(aa(a,i))return;r.uniform2uiv(this.addr,i),ea(a,i)}}function tg(r,i){const a=this.cache;if(i.x!==void 0)(a[0]!==i.x||a[1]!==i.y||a[2]!==i.z)&&(r.uniform3ui(this.addr,i.x,i.y,i.z),a[0]=i.x,a[1]=i.y,a[2]=i.z);else{if(aa(a,i))return;r.uniform3uiv(this.addr,i),ea(a,i)}}function sg(r,i){const a=this.cache;if(i.x!==void 0)(a[0]!==i.x||a[1]!==i.y||a[2]!==i.z||a[3]!==i.w)&&(r.uniform4ui(this.addr,i.x,i.y,i.z,i.w),a[0]=i.x,a[1]=i.y,a[2]=i.z,a[3]=i.w);else{if(aa(a,i))return;r.uniform4uiv(this.addr,i),ea(a,i)}}function rg(r,i,a){const e=this.cache,o=a.allocateTextureUnit();e[0]!==o&&(r.uniform1i(this.addr,o),e[0]=o),a.setTexture2D(i||vl,o)}function cg(r,i,a){const e=this.cache,o=a.allocateTextureUnit();e[0]!==o&&(r.uniform1i(this.addr,o),e[0]=o),a.setTexture3D(i||_l,o)}function lg(r,i,a){const e=this.cache,o=a.allocateTextureUnit();e[0]!==o&&(r.uniform1i(this.addr,o),e[0]=o),a.setTextureCube(i||kl,o)}function fg(r,i,a){const e=this.cache,o=a.allocateTextureUnit();e[0]!==o&&(r.uniform1i(this.addr,o),e[0]=o),a.setTexture2DArray(i||yl,o)}function mg(r){switch(r){case 5126:return Wp;case 35664:return qp;case 35665:return Zp;case 35666:return Jp;case 35674:return Xp;case 35675:return Yp;case 35676:return $p;case 5124:case 35670:return Qp;case 35667:case 35671:return ig;case 35668:case 35672:return ag;case 35669:case 35673:return eg;case 5125:return og;case 36294:return ng;case 36295:return tg;case 36296:return sg;case 35678:case 36198:case 36298:case 36306:case 35682:return rg;case 35679:case 36299:case 36307:return cg;case 35680:case 36300:case 36308:case 36293:return lg;case 36289:case 36303:case 36311:case 36292:return fg}}function ug(r,i){r.uniform1fv(this.addr,i)}function dg(r,i){const a=sn(i,this.size,2);r.uniform2fv(this.addr,a)}function pg(r,i){const a=sn(i,this.size,3);r.uniform3fv(this.addr,a)}function gg(r,i){const a=sn(i,this.size,4);r.uniform4fv(this.addr,a)}function hg(r,i){const a=sn(i,this.size,4);r.uniformMatrix2fv(this.addr,!1,a)}function bg(r,i){const a=sn(i,this.size,9);r.uniformMatrix3fv(this.addr,!1,a)}function vg(r,i){const a=sn(i,this.size,16);r.uniformMatrix4fv(this.addr,!1,a)}function yg(r,i){r.uniform1iv(this.addr,i)}function _g(r,i){r.uniform2iv(this.addr,i)}function kg(r,i){r.uniform3iv(this.addr,i)}function Sg(r,i){r.uniform4iv(this.addr,i)}function Mg(r,i){r.uniform1uiv(this.addr,i)}function wg(r,i){r.uniform2uiv(this.addr,i)}function xg(r,i){r.uniform3uiv(this.addr,i)}function Ag(r,i){r.uniform4uiv(this.addr,i)}function Rg(r,i,a){const e=this.cache,o=i.length,n=wt(a,o);aa(e,n)||(r.uniform1iv(this.addr,n),ea(e,n));for(let s=0;s!==o;++s)a.setTexture2D(i[s]||vl,n[s])}function Tg(r,i,a){const e=this.cache,o=i.length,n=wt(a,o);aa(e,n)||(r.uniform1iv(this.addr,n),ea(e,n));for(let s=0;s!==o;++s)a.setTexture3D(i[s]||_l,n[s])}function Cg(r,i,a){const e=this.cache,o=i.length,n=wt(a,o);aa(e,n)||(r.uniform1iv(this.addr,n),ea(e,n));for(let s=0;s!==o;++s)a.setTextureCube(i[s]||kl,n[s])}function Eg(r,i,a){const e=this.cache,o=i.length,n=wt(a,o);aa(e,n)||(r.uniform1iv(this.addr,n),ea(e,n));for(let s=0;s!==o;++s)a.setTexture2DArray(i[s]||yl,n[s])}function zg(r){switch(r){case 5126:return ug;case 35664:return dg;case 35665:return pg;case 35666:return gg;case 35674:return hg;case 35675:return bg;case 35676:return vg;case 5124:case 35670:return yg;case 35667:case 35671:return _g;case 35668:case 35672:return kg;case 35669:case 35673:return Sg;case 5125:return Mg;case 36294:return wg;case 36295:return xg;case 36296:return Ag;case 35678:case 36198:case 36298:case 36306:case 35682:return Rg;case 35679:case 36299:case 36307:return Tg;case 35680:case 36300:case 36308:case 36293:return Cg;case 36289:case 36303:case 36311:case 36292:return Eg}}class Pg{constructor(i,a,e){this.id=i,this.addr=e,this.cache=[],this.setValue=mg(a.type)}}class Ig{constructor(i,a,e){this.id=i,this.addr=e,this.cache=[],this.size=a.size,this.setValue=zg(a.type)}}class Ng{constructor(i){this.id=i,this.seq=[],this.map={}}setValue(i,a,e){const o=this.seq;for(let n=0,s=o.length;n!==s;++n){const t=o[n];t.setValue(i,a[t.id],e)}}}const us=/(\w+)(\])?(\[|\.)?/g;function Mc(r,i){r.seq.push(i),r.map[i.id]=i}function Lg(r,i,a){const e=r.name,o=e.length;for(us.lastIndex=0;;){const n=us.exec(e),s=us.lastIndex;let t=n[1];const c=n[2]==="]",l=n[3];if(c&&(t=t|0),l===void 0||l==="["&&s+2===o){Mc(a,l===void 0?new Pg(t,r,i):new Ig(t,r,i));break}else{let d=a.map[t];d===void 0&&(d=new Ng(t),Mc(a,d)),a=d}}}class ct{constructor(i,a){this.seq=[],this.map={};const e=i.getProgramParameter(a,35718);for(let o=0;o<e;++o){const n=i.getActiveUniform(a,o),s=i.getUniformLocation(a,n.name);Lg(n,s,this)}}setValue(i,a,e,o){const n=this.map[a];n!==void 0&&n.setValue(i,e,o)}setOptional(i,a,e){const o=a[e];o!==void 0&&this.setValue(i,e,o)}static upload(i,a,e,o){for(let n=0,s=a.length;n!==s;++n){const t=a[n],c=e[t.id];c.needsUpdate!==!1&&t.setValue(i,c.value,o)}}static seqWithValue(i,a){const e=[];for(let o=0,n=i.length;o!==n;++o){const s=i[o];s.id in a&&e.push(s)}return e}}function wc(r,i,a){const e=r.createShader(i);return r.shaderSource(e,a),r.compileShader(e),e}let Bg=0;function Dg(r,i){const a=r.split(`
`),e=[],o=Math.max(i-6,0),n=Math.min(i+6,a.length);for(let s=o;s<n;s++){const t=s+1;e.push(`${t===i?">":" "} ${t}: ${a[s]}`)}return e.join(`
`)}function Gg(r){switch(r){case vo:return["Linear","( value )"];case Gi:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function xc(r,i,a){const e=r.getShaderParameter(i,35713),o=r.getShaderInfoLog(i).trim();if(e&&o==="")return"";const n=/ERROR: 0:(\d+)/.exec(o);if(n){const s=parseInt(n[1]);return a.toUpperCase()+`

`+o+`

`+Dg(r.getShaderSource(i),s)}else return o}function Ug(r,i){const a=Gg(i);return"vec4 "+r+"( vec4 value ) { return LinearTo"+a[0]+a[1]+"; }"}function Og(r,i){let a;switch(i){case em:a="Linear";break;case om:a="Reinhard";break;case nm:a="OptimizedCineon";break;case tm:a="ACESFilmic";break;case sm:a="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",i),a="Linear"}return"vec3 "+r+"( vec3 color ) { return "+a+"ToneMapping( color ); }"}function Fg(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(bn).join(`
`)}function Kg(r){const i=[];for(const a in r){const e=r[a];e!==!1&&i.push("#define "+a+" "+e)}return i.join(`
`)}function Vg(r,i){const a={},e=r.getProgramParameter(i,35721);for(let o=0;o<e;o++){const n=r.getActiveAttrib(i,o),s=n.name;let t=1;n.type===35674&&(t=2),n.type===35675&&(t=3),n.type===35676&&(t=4),a[s]={type:n.type,location:r.getAttribLocation(i,s),locationSize:t}}return a}function bn(r){return r!==""}function Ac(r,i){const a=i.numSpotLightShadows+i.numSpotLightMaps-i.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,i.numDirLights).replace(/NUM_SPOT_LIGHTS/g,i.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,i.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,a).replace(/NUM_RECT_AREA_LIGHTS/g,i.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,i.numPointLights).replace(/NUM_HEMI_LIGHTS/g,i.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,i.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,i.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,i.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,i.numPointLightShadows)}function Rc(r,i){return r.replace(/NUM_CLIPPING_PLANES/g,i.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,i.numClippingPlanes-i.numClipIntersection)}const jg=/^[ \t]*#include +<([\w\d./]+)>/gm;function zs(r){return r.replace(jg,Hg)}function Hg(r,i){const a=Mi[i];if(a===void 0)throw new Error("Can not resolve #include <"+i+">");return zs(a)}const Wg=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Tc(r){return r.replace(Wg,qg)}function qg(r,i,a,e){let o="";for(let n=parseInt(i);n<parseInt(a);n++)o+=e.replace(/\[\s*i\s*\]/g,"[ "+n+" ]").replace(/UNROLLED_LOOP_INDEX/g,n);return o}function Cc(r){let i="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?i+=`
#define HIGH_PRECISION`:r.precision==="mediump"?i+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(i+=`
#define LOW_PRECISION`),i}function Zg(r){let i="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===il?i="SHADOWMAP_TYPE_PCF":r.shadowMapType===Nf?i="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===hn&&(i="SHADOWMAP_TYPE_VSM"),i}function Jg(r){let i="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case Wo:case qo:i="ENVMAP_TYPE_CUBE";break;case kt:i="ENVMAP_TYPE_CUBE_UV";break}return i}function Xg(r){let i="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case qo:i="ENVMAP_MODE_REFRACTION";break}return i}function Yg(r){let i="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case ol:i="ENVMAP_BLENDING_MULTIPLY";break;case im:i="ENVMAP_BLENDING_MIX";break;case am:i="ENVMAP_BLENDING_ADD";break}return i}function $g(r){const i=r.envMapCubeUVHeight;if(i===null)return null;const a=Math.log2(i)-2,e=1/i;return{texelWidth:1/(3*Math.max(Math.pow(2,a),7*16)),texelHeight:e,maxMip:a}}function Qg(r,i,a,e){const o=r.getContext(),n=a.defines;let s=a.vertexShader,t=a.fragmentShader;const c=Zg(a),l=Jg(a),f=Xg(a),d=Yg(a),m=$g(a),g=a.isWebGL2?"":Fg(a),h=Kg(n),u=o.createProgram();let p,b,k=a.glslVersion?"#version "+a.glslVersion+`
`:"";a.isRawShaderMaterial?(p=[h].filter(bn).join(`
`),p.length>0&&(p+=`
`),b=[g,h].filter(bn).join(`
`),b.length>0&&(b+=`
`)):(p=[Cc(a),"#define SHADER_NAME "+a.shaderName,h,a.instancing?"#define USE_INSTANCING":"",a.instancingColor?"#define USE_INSTANCING_COLOR":"",a.supportsVertexTextures?"#define VERTEX_TEXTURES":"",a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp2?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+f:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.normalMap&&a.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",a.clearcoatMap?"#define USE_CLEARCOATMAP":"",a.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",a.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",a.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",a.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",a.specularColorMap?"#define USE_SPECULARCOLORMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.transmission?"#define USE_TRANSMISSION":"",a.transmissionMap?"#define USE_TRANSMISSIONMAP":"",a.thicknessMap?"#define USE_THICKNESSMAP":"",a.sheenColorMap?"#define USE_SHEENCOLORMAP":"",a.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors?"#define USE_COLOR":"",a.vertexAlphas?"#define USE_COLOR_ALPHA":"",a.vertexUvs?"#define USE_UV":"",a.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&&a.flatShading===!1?"#define USE_MORPHNORMALS":"",a.morphColors&&a.isWebGL2?"#define USE_MORPHCOLORS":"",a.morphTargetsCount>0&&a.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",a.morphTargetsCount>0&&a.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+a.morphTextureStride:"",a.morphTargetsCount>0&&a.isWebGL2?"#define MORPHTARGETS_COUNT "+a.morphTargetsCount:"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+c:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&a.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(bn).join(`
`),b=[g,Cc(a),"#define SHADER_NAME "+a.shaderName,h,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp2?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.matcap?"#define USE_MATCAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+l:"",a.envMap?"#define "+f:"",a.envMap?"#define "+d:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.normalMap&&a.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",a.clearcoat?"#define USE_CLEARCOAT":"",a.clearcoatMap?"#define USE_CLEARCOATMAP":"",a.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",a.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",a.iridescence?"#define USE_IRIDESCENCE":"",a.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",a.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",a.specularColorMap?"#define USE_SPECULARCOLORMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.alphaTest?"#define USE_ALPHATEST":"",a.sheen?"#define USE_SHEEN":"",a.sheenColorMap?"#define USE_SHEENCOLORMAP":"",a.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",a.transmission?"#define USE_TRANSMISSION":"",a.transmissionMap?"#define USE_TRANSMISSIONMAP":"",a.thicknessMap?"#define USE_THICKNESSMAP":"",a.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors||a.instancingColor?"#define USE_COLOR":"",a.vertexAlphas?"#define USE_COLOR_ALPHA":"",a.vertexUvs?"#define USE_UV":"",a.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+c:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&a.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",a.toneMapping!==Te?"#define TONE_MAPPING":"",a.toneMapping!==Te?Mi.tonemapping_pars_fragment:"",a.toneMapping!==Te?Og("toneMapping",a.toneMapping):"",a.dithering?"#define DITHERING":"",a.opaque?"#define OPAQUE":"",Mi.encodings_pars_fragment,Ug("linearToOutputTexel",a.outputEncoding),a.useDepthPacking?"#define DEPTH_PACKING "+a.depthPacking:"",`
`].filter(bn).join(`
`)),s=zs(s),s=Ac(s,a),s=Rc(s,a),t=zs(t),t=Ac(t,a),t=Rc(t,a),s=Tc(s),t=Tc(t),a.isWebGL2&&a.isRawShaderMaterial!==!0&&(k=`#version 300 es
`,p=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,b=["#define varying in",a.glslVersion===$r?"":"layout(location = 0) out highp vec4 pc_fragColor;",a.glslVersion===$r?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+b);const y=k+p+s,S=k+b+t,_=wc(o,35633,y),R=wc(o,35632,S);if(o.attachShader(u,_),o.attachShader(u,R),a.index0AttributeName!==void 0?o.bindAttribLocation(u,0,a.index0AttributeName):a.morphTargets===!0&&o.bindAttribLocation(u,0,"position"),o.linkProgram(u),r.debug.checkShaderErrors){const w=o.getProgramInfoLog(u).trim(),E=o.getShaderInfoLog(_).trim(),U=o.getShaderInfoLog(R).trim();let W=!0,P=!0;if(o.getProgramParameter(u,35714)===!1){W=!1;const z=xc(o,_,"vertex"),D=xc(o,R,"fragment");console.error("THREE.WebGLProgram: Shader Error "+o.getError()+" - VALIDATE_STATUS "+o.getProgramParameter(u,35715)+`

Program Info Log: `+w+`
`+z+`
`+D)}else w!==""?console.warn("THREE.WebGLProgram: Program Info Log:",w):(E===""||U==="")&&(P=!1);P&&(this.diagnostics={runnable:W,programLog:w,vertexShader:{log:E,prefix:p},fragmentShader:{log:U,prefix:b}})}o.deleteShader(_),o.deleteShader(R);let T;this.getUniforms=function(){return T===void 0&&(T=new ct(o,u)),T};let v;return this.getAttributes=function(){return v===void 0&&(v=Vg(o,u)),v},this.destroy=function(){e.releaseStatesOfProgram(this),o.deleteProgram(u),this.program=void 0},this.name=a.shaderName,this.id=Bg++,this.cacheKey=i,this.usedTimes=1,this.program=u,this.vertexShader=_,this.fragmentShader=R,this}let ih=0;class ah{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(i){const a=i.vertexShader,e=i.fragmentShader,o=this._getShaderStage(a),n=this._getShaderStage(e),s=this._getShaderCacheForMaterial(i);return s.has(o)===!1&&(s.add(o),o.usedTimes++),s.has(n)===!1&&(s.add(n),n.usedTimes++),this}remove(i){const a=this.materialCache.get(i);for(const e of a)e.usedTimes--,e.usedTimes===0&&this.shaderCache.delete(e.code);return this.materialCache.delete(i),this}getVertexShaderID(i){return this._getShaderStage(i.vertexShader).id}getFragmentShaderID(i){return this._getShaderStage(i.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(i){const a=this.materialCache;let e=a.get(i);return e===void 0&&(e=new Set,a.set(i,e)),e}_getShaderStage(i){const a=this.shaderCache;let e=a.get(i);return e===void 0&&(e=new eh(i),a.set(i,e)),e}}class eh{constructor(i){this.id=ih++,this.code=i,this.usedTimes=0}}function oh(r,i,a,e,o,n,s){const t=new $s,c=new ah,l=[],f=o.isWebGL2,d=o.logarithmicDepthBuffer,m=o.vertexTextures;let g=o.precision;const h={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function u(v,w,E,U,W){const P=U.fog,z=W.geometry,D=v.isMeshStandardMaterial?U.environment:null,J=(v.isMeshStandardMaterial?a:i).get(v.envMap||D),q=J&&J.mapping===kt?J.image.height:null,O=h[v.type];v.precision!==null&&(g=o.getMaxPrecision(v.precision),g!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",g,"instead."));const Y=z.morphAttributes.position||z.morphAttributes.normal||z.morphAttributes.color,X=Y!==void 0?Y.length:0;let ci=0;z.morphAttributes.position!==void 0&&(ci=1),z.morphAttributes.normal!==void 0&&(ci=2),z.morphAttributes.color!==void 0&&(ci=3);let L,Z,ii,ai;if(O){const Bi=le[O];L=Bi.vertexShader,Z=Bi.fragmentShader}else L=v.vertexShader,Z=v.fragmentShader,c.update(v),ii=c.getVertexShaderID(v),ai=c.getFragmentShaderID(v);const G=r.getRenderTarget(),ki=v.alphaTest>0,mi=v.clearcoat>0,ui=v.iridescence>0;return{isWebGL2:f,shaderID:O,shaderName:v.type,vertexShader:L,fragmentShader:Z,defines:v.defines,customVertexShaderID:ii,customFragmentShaderID:ai,isRawShaderMaterial:v.isRawShaderMaterial===!0,glslVersion:v.glslVersion,precision:g,instancing:W.isInstancedMesh===!0,instancingColor:W.isInstancedMesh===!0&&W.instanceColor!==null,supportsVertexTextures:m,outputEncoding:G===null?r.outputEncoding:G.isXRRenderTarget===!0?G.texture.encoding:vo,map:!!v.map,matcap:!!v.matcap,envMap:!!J,envMapMode:J&&J.mapping,envMapCubeUVHeight:q,lightMap:!!v.lightMap,aoMap:!!v.aoMap,emissiveMap:!!v.emissiveMap,bumpMap:!!v.bumpMap,normalMap:!!v.normalMap,objectSpaceNormalMap:v.normalMapType===Am,tangentSpaceNormalMap:v.normalMapType===xm,decodeVideoTexture:!!v.map&&v.map.isVideoTexture===!0&&v.map.encoding===Gi,clearcoat:mi,clearcoatMap:mi&&!!v.clearcoatMap,clearcoatRoughnessMap:mi&&!!v.clearcoatRoughnessMap,clearcoatNormalMap:mi&&!!v.clearcoatNormalMap,iridescence:ui,iridescenceMap:ui&&!!v.iridescenceMap,iridescenceThicknessMap:ui&&!!v.iridescenceThicknessMap,displacementMap:!!v.displacementMap,roughnessMap:!!v.roughnessMap,metalnessMap:!!v.metalnessMap,specularMap:!!v.specularMap,specularIntensityMap:!!v.specularIntensityMap,specularColorMap:!!v.specularColorMap,opaque:v.transparent===!1&&v.blending===Fo,alphaMap:!!v.alphaMap,alphaTest:ki,gradientMap:!!v.gradientMap,sheen:v.sheen>0,sheenColorMap:!!v.sheenColorMap,sheenRoughnessMap:!!v.sheenRoughnessMap,transmission:v.transmission>0,transmissionMap:!!v.transmissionMap,thicknessMap:!!v.thicknessMap,combine:v.combine,vertexTangents:!!v.normalMap&&!!z.attributes.tangent,vertexColors:v.vertexColors,vertexAlphas:v.vertexColors===!0&&!!z.attributes.color&&z.attributes.color.itemSize===4,vertexUvs:!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatMap||!!v.clearcoatRoughnessMap||!!v.clearcoatNormalMap||!!v.iridescenceMap||!!v.iridescenceThicknessMap||!!v.displacementMap||!!v.transmissionMap||!!v.thicknessMap||!!v.specularIntensityMap||!!v.specularColorMap||!!v.sheenColorMap||!!v.sheenRoughnessMap,uvsVertexOnly:!(v.map||v.bumpMap||v.normalMap||v.specularMap||v.alphaMap||v.emissiveMap||v.roughnessMap||v.metalnessMap||v.clearcoatNormalMap||v.iridescenceMap||v.iridescenceThicknessMap||v.transmission>0||v.transmissionMap||v.thicknessMap||v.specularIntensityMap||v.specularColorMap||v.sheen>0||v.sheenColorMap||v.sheenRoughnessMap)&&!!v.displacementMap,fog:!!P,useFog:v.fog===!0,fogExp2:P&&P.isFogExp2,flatShading:!!v.flatShading,sizeAttenuation:v.sizeAttenuation,logarithmicDepthBuffer:d,skinning:W.isSkinnedMesh===!0,morphTargets:z.morphAttributes.position!==void 0,morphNormals:z.morphAttributes.normal!==void 0,morphColors:z.morphAttributes.color!==void 0,morphTargetsCount:X,morphTextureStride:ci,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:v.dithering,shadowMapEnabled:r.shadowMap.enabled&&E.length>0,shadowMapType:r.shadowMap.type,toneMapping:v.toneMapped?r.toneMapping:Te,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:v.premultipliedAlpha,doubleSided:v.side===Be,flipSided:v.side===Ma,useDepthPacking:!!v.depthPacking,depthPacking:v.depthPacking||0,index0AttributeName:v.index0AttributeName,extensionDerivatives:v.extensions&&v.extensions.derivatives,extensionFragDepth:v.extensions&&v.extensions.fragDepth,extensionDrawBuffers:v.extensions&&v.extensions.drawBuffers,extensionShaderTextureLOD:v.extensions&&v.extensions.shaderTextureLOD,rendererExtensionFragDepth:f||e.has("EXT_frag_depth"),rendererExtensionDrawBuffers:f||e.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:f||e.has("EXT_shader_texture_lod"),customProgramCacheKey:v.customProgramCacheKey()}}function p(v){const w=[];if(v.shaderID?w.push(v.shaderID):(w.push(v.customVertexShaderID),w.push(v.customFragmentShaderID)),v.defines!==void 0)for(const E in v.defines)w.push(E),w.push(v.defines[E]);return v.isRawShaderMaterial===!1&&(b(w,v),k(w,v),w.push(r.outputEncoding)),w.push(v.customProgramCacheKey),w.join()}function b(v,w){v.push(w.precision),v.push(w.outputEncoding),v.push(w.envMapMode),v.push(w.envMapCubeUVHeight),v.push(w.combine),v.push(w.vertexUvs),v.push(w.fogExp2),v.push(w.sizeAttenuation),v.push(w.morphTargetsCount),v.push(w.morphAttributeCount),v.push(w.numDirLights),v.push(w.numPointLights),v.push(w.numSpotLights),v.push(w.numSpotLightMaps),v.push(w.numHemiLights),v.push(w.numRectAreaLights),v.push(w.numDirLightShadows),v.push(w.numPointLightShadows),v.push(w.numSpotLightShadows),v.push(w.numSpotLightShadowsWithMaps),v.push(w.shadowMapType),v.push(w.toneMapping),v.push(w.numClippingPlanes),v.push(w.numClipIntersection),v.push(w.depthPacking)}function k(v,w){t.disableAll(),w.isWebGL2&&t.enable(0),w.supportsVertexTextures&&t.enable(1),w.instancing&&t.enable(2),w.instancingColor&&t.enable(3),w.map&&t.enable(4),w.matcap&&t.enable(5),w.envMap&&t.enable(6),w.lightMap&&t.enable(7),w.aoMap&&t.enable(8),w.emissiveMap&&t.enable(9),w.bumpMap&&t.enable(10),w.normalMap&&t.enable(11),w.objectSpaceNormalMap&&t.enable(12),w.tangentSpaceNormalMap&&t.enable(13),w.clearcoat&&t.enable(14),w.clearcoatMap&&t.enable(15),w.clearcoatRoughnessMap&&t.enable(16),w.clearcoatNormalMap&&t.enable(17),w.iridescence&&t.enable(18),w.iridescenceMap&&t.enable(19),w.iridescenceThicknessMap&&t.enable(20),w.displacementMap&&t.enable(21),w.specularMap&&t.enable(22),w.roughnessMap&&t.enable(23),w.metalnessMap&&t.enable(24),w.gradientMap&&t.enable(25),w.alphaMap&&t.enable(26),w.alphaTest&&t.enable(27),w.vertexColors&&t.enable(28),w.vertexAlphas&&t.enable(29),w.vertexUvs&&t.enable(30),w.vertexTangents&&t.enable(31),w.uvsVertexOnly&&t.enable(32),v.push(t.mask),t.disableAll(),w.fog&&t.enable(0),w.useFog&&t.enable(1),w.flatShading&&t.enable(2),w.logarithmicDepthBuffer&&t.enable(3),w.skinning&&t.enable(4),w.morphTargets&&t.enable(5),w.morphNormals&&t.enable(6),w.morphColors&&t.enable(7),w.premultipliedAlpha&&t.enable(8),w.shadowMapEnabled&&t.enable(9),w.physicallyCorrectLights&&t.enable(10),w.doubleSided&&t.enable(11),w.flipSided&&t.enable(12),w.useDepthPacking&&t.enable(13),w.dithering&&t.enable(14),w.specularIntensityMap&&t.enable(15),w.specularColorMap&&t.enable(16),w.transmission&&t.enable(17),w.transmissionMap&&t.enable(18),w.thicknessMap&&t.enable(19),w.sheen&&t.enable(20),w.sheenColorMap&&t.enable(21),w.sheenRoughnessMap&&t.enable(22),w.decodeVideoTexture&&t.enable(23),w.opaque&&t.enable(24),v.push(t.mask)}function y(v){const w=h[v.type];let E;if(w){const U=le[w];E=Km.clone(U.uniforms)}else E=v.uniforms;return E}function S(v,w){let E;for(let U=0,W=l.length;U<W;U++){const P=l[U];if(P.cacheKey===w){E=P,++E.usedTimes;break}}return E===void 0&&(E=new Qg(r,w,v,n),l.push(E)),E}function _(v){if(--v.usedTimes===0){const w=l.indexOf(v);l[w]=l[l.length-1],l.pop(),v.destroy()}}function R(v){c.remove(v)}function T(){c.dispose()}return{getParameters:u,getProgramCacheKey:p,getUniforms:y,acquireProgram:S,releaseProgram:_,releaseShaderCache:R,programs:l,dispose:T}}function nh(){let r=new WeakMap;function i(n){let s=r.get(n);return s===void 0&&(s={},r.set(n,s)),s}function a(n){r.delete(n)}function e(n,s,t){r.get(n)[s]=t}function o(){r=new WeakMap}return{get:i,remove:a,update:e,dispose:o}}function th(r,i){return r.groupOrder!==i.groupOrder?r.groupOrder-i.groupOrder:r.renderOrder!==i.renderOrder?r.renderOrder-i.renderOrder:r.material.id!==i.material.id?r.material.id-i.material.id:r.z!==i.z?r.z-i.z:r.id-i.id}function Ec(r,i){return r.groupOrder!==i.groupOrder?r.groupOrder-i.groupOrder:r.renderOrder!==i.renderOrder?r.renderOrder-i.renderOrder:r.z!==i.z?i.z-r.z:r.id-i.id}function zc(){const r=[];let i=0;const a=[],e=[],o=[];function n(){i=0,a.length=0,e.length=0,o.length=0}function s(d,m,g,h,u,p){let b=r[i];return b===void 0?(b={id:d.id,object:d,geometry:m,material:g,groupOrder:h,renderOrder:d.renderOrder,z:u,group:p},r[i]=b):(b.id=d.id,b.object=d,b.geometry=m,b.material=g,b.groupOrder=h,b.renderOrder=d.renderOrder,b.z=u,b.group=p),i++,b}function t(d,m,g,h,u,p){const b=s(d,m,g,h,u,p);g.transmission>0?e.push(b):g.transparent===!0?o.push(b):a.push(b)}function c(d,m,g,h,u,p){const b=s(d,m,g,h,u,p);g.transmission>0?e.unshift(b):g.transparent===!0?o.unshift(b):a.unshift(b)}function l(d,m){a.length>1&&a.sort(d||th),e.length>1&&e.sort(m||Ec),o.length>1&&o.sort(m||Ec)}function f(){for(let d=i,m=r.length;d<m;d++){const g=r[d];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:a,transmissive:e,transparent:o,init:n,push:t,unshift:c,finish:f,sort:l}}function sh(){let r=new WeakMap;function i(e,o){const n=r.get(e);let s;return n===void 0?(s=new zc,r.set(e,[s])):o>=n.length?(s=new zc,n.push(s)):s=n[o],s}function a(){r=new WeakMap}return{get:i,dispose:a}}function rh(){const r={};return{get:function(i){if(r[i.id]!==void 0)return r[i.id];let a;switch(i.type){case"DirectionalLight":a={direction:new B,color:new Ki};break;case"SpotLight":a={position:new B,direction:new B,color:new Ki,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":a={position:new B,color:new Ki,distance:0,decay:0};break;case"HemisphereLight":a={direction:new B,skyColor:new Ki,groundColor:new Ki};break;case"RectAreaLight":a={color:new Ki,position:new B,halfWidth:new B,halfHeight:new B};break}return r[i.id]=a,a}}}function ch(){const r={};return{get:function(i){if(r[i.id]!==void 0)return r[i.id];let a;switch(i.type){case"DirectionalLight":a={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Di};break;case"SpotLight":a={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Di};break;case"PointLight":a={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Di,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[i.id]=a,a}}}let lh=0;function fh(r,i){return(i.castShadow?2:0)-(r.castShadow?2:0)+(i.map?1:0)-(r.map?1:0)}function mh(r,i){const a=new rh,e=ch(),o={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let f=0;f<9;f++)o.probe.push(new B);const n=new B,s=new ia,t=new ia;function c(f,d){let m=0,g=0,h=0;for(let U=0;U<9;U++)o.probe[U].set(0,0,0);let u=0,p=0,b=0,k=0,y=0,S=0,_=0,R=0,T=0,v=0;f.sort(fh);const w=d!==!0?Math.PI:1;for(let U=0,W=f.length;U<W;U++){const P=f[U],z=P.color,D=P.intensity,J=P.distance,q=P.shadow&&P.shadow.map?P.shadow.map.texture:null;if(P.isAmbientLight)m+=z.r*D*w,g+=z.g*D*w,h+=z.b*D*w;else if(P.isLightProbe)for(let O=0;O<9;O++)o.probe[O].addScaledVector(P.sh.coefficients[O],D);else if(P.isDirectionalLight){const O=a.get(P);if(O.color.copy(P.color).multiplyScalar(P.intensity*w),P.castShadow){const Y=P.shadow,X=e.get(P);X.shadowBias=Y.bias,X.shadowNormalBias=Y.normalBias,X.shadowRadius=Y.radius,X.shadowMapSize=Y.mapSize,o.directionalShadow[u]=X,o.directionalShadowMap[u]=q,o.directionalShadowMatrix[u]=P.shadow.matrix,S++}o.directional[u]=O,u++}else if(P.isSpotLight){const O=a.get(P);O.position.setFromMatrixPosition(P.matrixWorld),O.color.copy(z).multiplyScalar(D*w),O.distance=J,O.coneCos=Math.cos(P.angle),O.penumbraCos=Math.cos(P.angle*(1-P.penumbra)),O.decay=P.decay,o.spot[b]=O;const Y=P.shadow;if(P.map&&(o.spotLightMap[T]=P.map,T++,Y.updateMatrices(P),P.castShadow&&v++),o.spotLightMatrix[b]=Y.matrix,P.castShadow){const X=e.get(P);X.shadowBias=Y.bias,X.shadowNormalBias=Y.normalBias,X.shadowRadius=Y.radius,X.shadowMapSize=Y.mapSize,o.spotShadow[b]=X,o.spotShadowMap[b]=q,R++}b++}else if(P.isRectAreaLight){const O=a.get(P);O.color.copy(z).multiplyScalar(D),O.halfWidth.set(P.width*.5,0,0),O.halfHeight.set(0,P.height*.5,0),o.rectArea[k]=O,k++}else if(P.isPointLight){const O=a.get(P);if(O.color.copy(P.color).multiplyScalar(P.intensity*w),O.distance=P.distance,O.decay=P.decay,P.castShadow){const Y=P.shadow,X=e.get(P);X.shadowBias=Y.bias,X.shadowNormalBias=Y.normalBias,X.shadowRadius=Y.radius,X.shadowMapSize=Y.mapSize,X.shadowCameraNear=Y.camera.near,X.shadowCameraFar=Y.camera.far,o.pointShadow[p]=X,o.pointShadowMap[p]=q,o.pointShadowMatrix[p]=P.shadow.matrix,_++}o.point[p]=O,p++}else if(P.isHemisphereLight){const O=a.get(P);O.skyColor.copy(P.color).multiplyScalar(D*w),O.groundColor.copy(P.groundColor).multiplyScalar(D*w),o.hemi[y]=O,y++}}k>0&&(i.isWebGL2||r.has("OES_texture_float_linear")===!0?(o.rectAreaLTC1=oi.LTC_FLOAT_1,o.rectAreaLTC2=oi.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(o.rectAreaLTC1=oi.LTC_HALF_1,o.rectAreaLTC2=oi.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),o.ambient[0]=m,o.ambient[1]=g,o.ambient[2]=h;const E=o.hash;(E.directionalLength!==u||E.pointLength!==p||E.spotLength!==b||E.rectAreaLength!==k||E.hemiLength!==y||E.numDirectionalShadows!==S||E.numPointShadows!==_||E.numSpotShadows!==R||E.numSpotMaps!==T)&&(o.directional.length=u,o.spot.length=b,o.rectArea.length=k,o.point.length=p,o.hemi.length=y,o.directionalShadow.length=S,o.directionalShadowMap.length=S,o.pointShadow.length=_,o.pointShadowMap.length=_,o.spotShadow.length=R,o.spotShadowMap.length=R,o.directionalShadowMatrix.length=S,o.pointShadowMatrix.length=_,o.spotLightMatrix.length=R+T-v,o.spotLightMap.length=T,o.numSpotLightShadowsWithMaps=v,E.directionalLength=u,E.pointLength=p,E.spotLength=b,E.rectAreaLength=k,E.hemiLength=y,E.numDirectionalShadows=S,E.numPointShadows=_,E.numSpotShadows=R,E.numSpotMaps=T,o.version=lh++)}function l(f,d){let m=0,g=0,h=0,u=0,p=0;const b=d.matrixWorldInverse;for(let k=0,y=f.length;k<y;k++){const S=f[k];if(S.isDirectionalLight){const _=o.directional[m];_.direction.setFromMatrixPosition(S.matrixWorld),n.setFromMatrixPosition(S.target.matrixWorld),_.direction.sub(n),_.direction.transformDirection(b),m++}else if(S.isSpotLight){const _=o.spot[h];_.position.setFromMatrixPosition(S.matrixWorld),_.position.applyMatrix4(b),_.direction.setFromMatrixPosition(S.matrixWorld),n.setFromMatrixPosition(S.target.matrixWorld),_.direction.sub(n),_.direction.transformDirection(b),h++}else if(S.isRectAreaLight){const _=o.rectArea[u];_.position.setFromMatrixPosition(S.matrixWorld),_.position.applyMatrix4(b),t.identity(),s.copy(S.matrixWorld),s.premultiply(b),t.extractRotation(s),_.halfWidth.set(S.width*.5,0,0),_.halfHeight.set(0,S.height*.5,0),_.halfWidth.applyMatrix4(t),_.halfHeight.applyMatrix4(t),u++}else if(S.isPointLight){const _=o.point[g];_.position.setFromMatrixPosition(S.matrixWorld),_.position.applyMatrix4(b),g++}else if(S.isHemisphereLight){const _=o.hemi[p];_.direction.setFromMatrixPosition(S.matrixWorld),_.direction.transformDirection(b),p++}}}return{setup:c,setupView:l,state:o}}function Pc(r,i){const a=new mh(r,i),e=[],o=[];function n(){e.length=0,o.length=0}function s(d){e.push(d)}function t(d){o.push(d)}function c(d){a.setup(e,d)}function l(d){a.setupView(e,d)}return{init:n,state:{lightsArray:e,shadowsArray:o,lights:a},setupLights:c,setupLightsView:l,pushLight:s,pushShadow:t}}function uh(r,i){let a=new WeakMap;function e(n,s=0){const t=a.get(n);let c;return t===void 0?(c=new Pc(r,i),a.set(n,[c])):s>=t.length?(c=new Pc(r,i),t.push(c)):c=t[s],c}function o(){a=new WeakMap}return{get:e,dispose:o}}class dh extends Dn{constructor(i){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Mm,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(i)}copy(i){return super.copy(i),this.depthPacking=i.depthPacking,this.map=i.map,this.alphaMap=i.alphaMap,this.displacementMap=i.displacementMap,this.displacementScale=i.displacementScale,this.displacementBias=i.displacementBias,this.wireframe=i.wireframe,this.wireframeLinewidth=i.wireframeLinewidth,this}}class ph extends Dn{constructor(i){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new B,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(i)}copy(i){return super.copy(i),this.referencePosition.copy(i.referencePosition),this.nearDistance=i.nearDistance,this.farDistance=i.farDistance,this.map=i.map,this.alphaMap=i.alphaMap,this.displacementMap=i.displacementMap,this.displacementScale=i.displacementScale,this.displacementBias=i.displacementBias,this}}const gh=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,hh=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function bh(r,i,a){let e=new hl;const o=new Di,n=new Di,s=new la,t=new dh({depthPacking:wm}),c=new ph,l={},f=a.maxTextureSize,d={[Ve]:Ma,[Ma]:Ve,[Be]:Be},m=new Ce({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Di},radius:{value:4}},vertexShader:gh,fragmentShader:hh}),g=m.clone();g.defines.HORIZONTAL_PASS=1;const h=new ge;h.setAttribute("position",new ue(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const u=new te(h,m),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=il,this.render=function(S,_,R){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||S.length===0)return;const T=r.getRenderTarget(),v=r.getActiveCubeFace(),w=r.getActiveMipmapLevel(),E=r.state;E.setBlending(Oe),E.buffers.color.setClear(1,1,1,1),E.buffers.depth.setTest(!0),E.setScissorTest(!1);for(let U=0,W=S.length;U<W;U++){const P=S[U],z=P.shadow;if(z===void 0){console.warn("THREE.WebGLShadowMap:",P,"has no shadow.");continue}if(z.autoUpdate===!1&&z.needsUpdate===!1)continue;o.copy(z.mapSize);const D=z.getFrameExtents();if(o.multiply(D),n.copy(z.mapSize),(o.x>f||o.y>f)&&(o.x>f&&(n.x=Math.floor(f/D.x),o.x=n.x*D.x,z.mapSize.x=n.x),o.y>f&&(n.y=Math.floor(f/D.y),o.y=n.y*D.y,z.mapSize.y=n.y)),z.map===null){const q=this.type!==hn?{minFilter:ka,magFilter:ka}:{};z.map=new yo(o.x,o.y,q),z.map.texture.name=P.name+".shadowMap",z.camera.updateProjectionMatrix()}r.setRenderTarget(z.map),r.clear();const J=z.getViewportCount();for(let q=0;q<J;q++){const O=z.getViewport(q);s.set(n.x*O.x,n.y*O.y,n.x*O.z,n.y*O.w),E.viewport(s),z.updateMatrices(P,q),e=z.getFrustum(),y(_,R,z.camera,P,this.type)}z.isPointLightShadow!==!0&&this.type===hn&&b(z,R),z.needsUpdate=!1}p.needsUpdate=!1,r.setRenderTarget(T,v,w)};function b(S,_){const R=i.update(u);m.defines.VSM_SAMPLES!==S.blurSamples&&(m.defines.VSM_SAMPLES=S.blurSamples,g.defines.VSM_SAMPLES=S.blurSamples,m.needsUpdate=!0,g.needsUpdate=!0),S.mapPass===null&&(S.mapPass=new yo(o.x,o.y)),m.uniforms.shadow_pass.value=S.map.texture,m.uniforms.resolution.value=S.mapSize,m.uniforms.radius.value=S.radius,r.setRenderTarget(S.mapPass),r.clear(),r.renderBufferDirect(_,null,R,m,u,null),g.uniforms.shadow_pass.value=S.mapPass.texture,g.uniforms.resolution.value=S.mapSize,g.uniforms.radius.value=S.radius,r.setRenderTarget(S.map),r.clear(),r.renderBufferDirect(_,null,R,g,u,null)}function k(S,_,R,T,v,w){let E=null;const U=R.isPointLight===!0?S.customDistanceMaterial:S.customDepthMaterial;if(U!==void 0)E=U;else if(E=R.isPointLight===!0?c:t,r.localClippingEnabled&&_.clipShadows===!0&&Array.isArray(_.clippingPlanes)&&_.clippingPlanes.length!==0||_.displacementMap&&_.displacementScale!==0||_.alphaMap&&_.alphaTest>0||_.map&&_.alphaTest>0){const W=E.uuid,P=_.uuid;let z=l[W];z===void 0&&(z={},l[W]=z);let D=z[P];D===void 0&&(D=E.clone(),z[P]=D),E=D}return E.visible=_.visible,E.wireframe=_.wireframe,w===hn?E.side=_.shadowSide!==null?_.shadowSide:_.side:E.side=_.shadowSide!==null?_.shadowSide:d[_.side],E.alphaMap=_.alphaMap,E.alphaTest=_.alphaTest,E.map=_.map,E.clipShadows=_.clipShadows,E.clippingPlanes=_.clippingPlanes,E.clipIntersection=_.clipIntersection,E.displacementMap=_.displacementMap,E.displacementScale=_.displacementScale,E.displacementBias=_.displacementBias,E.wireframeLinewidth=_.wireframeLinewidth,E.linewidth=_.linewidth,R.isPointLight===!0&&E.isMeshDistanceMaterial===!0&&(E.referencePosition.setFromMatrixPosition(R.matrixWorld),E.nearDistance=T,E.farDistance=v),E}function y(S,_,R,T,v){if(S.visible===!1)return;if(S.layers.test(_.layers)&&(S.isMesh||S.isLine||S.isPoints)&&(S.castShadow||S.receiveShadow&&v===hn)&&(!S.frustumCulled||e.intersectsObject(S))){S.modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,S.matrixWorld);const U=i.update(S),W=S.material;if(Array.isArray(W)){const P=U.groups;for(let z=0,D=P.length;z<D;z++){const J=P[z],q=W[J.materialIndex];if(q&&q.visible){const O=k(S,q,T,R.near,R.far,v);r.renderBufferDirect(R,null,U,O,S,J)}}}else if(W.visible){const P=k(S,W,T,R.near,R.far,v);r.renderBufferDirect(R,null,U,P,S,null)}}const E=S.children;for(let U=0,W=E.length;U<W;U++)y(E[U],_,R,T,v)}}function vh(r,i,a){const e=a.isWebGL2;function o(){let C=!1;const F=new la;let $=null;const si=new la(0,0,0,0);return{setMask:function(fi){$!==fi&&!C&&(r.colorMask(fi,fi,fi,fi),$=fi)},setLocked:function(fi){C=fi},setClear:function(fi,Pi,na,ma,Ze){Ze===!0&&(fi*=ma,Pi*=ma,na*=ma),F.set(fi,Pi,na,ma),si.equals(F)===!1&&(r.clearColor(fi,Pi,na,ma),si.copy(F))},reset:function(){C=!1,$=null,si.set(-1,0,0,0)}}}function n(){let C=!1,F=null,$=null,si=null;return{setTest:function(fi){fi?ki(2929):mi(2929)},setMask:function(fi){F!==fi&&!C&&(r.depthMask(fi),F=fi)},setFunc:function(fi){if($!==fi){switch(fi){case qf:r.depthFunc(512);break;case Zf:r.depthFunc(519);break;case Jf:r.depthFunc(513);break;case ws:r.depthFunc(515);break;case Xf:r.depthFunc(514);break;case Yf:r.depthFunc(518);break;case $f:r.depthFunc(516);break;case Qf:r.depthFunc(517);break;default:r.depthFunc(515)}$=fi}},setLocked:function(fi){C=fi},setClear:function(fi){si!==fi&&(r.clearDepth(fi),si=fi)},reset:function(){C=!1,F=null,$=null,si=null}}}function s(){let C=!1,F=null,$=null,si=null,fi=null,Pi=null,na=null,ma=null,Ze=null;return{setTest:function(Oi){C||(Oi?ki(2960):mi(2960))},setMask:function(Oi){F!==Oi&&!C&&(r.stencilMask(Oi),F=Oi)},setFunc:function(Oi,be,ja){($!==Oi||si!==be||fi!==ja)&&(r.stencilFunc(Oi,be,ja),$=Oi,si=be,fi=ja)},setOp:function(Oi,be,ja){(Pi!==Oi||na!==be||ma!==ja)&&(r.stencilOp(Oi,be,ja),Pi=Oi,na=be,ma=ja)},setLocked:function(Oi){C=Oi},setClear:function(Oi){Ze!==Oi&&(r.clearStencil(Oi),Ze=Oi)},reset:function(){C=!1,F=null,$=null,si=null,fi=null,Pi=null,na=null,ma=null,Ze=null}}}const t=new o,c=new n,l=new s,f=new WeakMap,d=new WeakMap;let m={},g={},h=new WeakMap,u=[],p=null,b=!1,k=null,y=null,S=null,_=null,R=null,T=null,v=null,w=!1,E=null,U=null,W=null,P=null,z=null;const D=r.getParameter(35661);let J=!1,q=0;const O=r.getParameter(7938);O.indexOf("WebGL")!==-1?(q=parseFloat(/^WebGL (\d)/.exec(O)[1]),J=q>=1):O.indexOf("OpenGL ES")!==-1&&(q=parseFloat(/^OpenGL ES (\d)/.exec(O)[1]),J=q>=2);let Y=null,X={};const ci=r.getParameter(3088),L=r.getParameter(2978),Z=new la().fromArray(ci),ii=new la().fromArray(L);function ai(C,F,$){const si=new Uint8Array(4),fi=r.createTexture();r.bindTexture(C,fi),r.texParameteri(C,10241,9728),r.texParameteri(C,10240,9728);for(let Pi=0;Pi<$;Pi++)r.texImage2D(F+Pi,0,6408,1,1,0,6408,5121,si);return fi}const G={};G[3553]=ai(3553,3553,1),G[34067]=ai(34067,34069,6),t.setClear(0,0,0,1),c.setClear(1),l.setClear(0),ki(2929),c.setFunc(ws),fa(!1),Va(Sr),ki(2884),ba(Oe);function ki(C){m[C]!==!0&&(r.enable(C),m[C]=!0)}function mi(C){m[C]!==!1&&(r.disable(C),m[C]=!1)}function ui(C,F){return g[C]!==F?(r.bindFramebuffer(C,F),g[C]=F,e&&(C===36009&&(g[36160]=F),C===36160&&(g[36009]=F)),!0):!1}function ri(C,F){let $=u,si=!1;if(C)if($=h.get(F),$===void 0&&($=[],h.set(F,$)),C.isWebGLMultipleRenderTargets){const fi=C.texture;if($.length!==fi.length||$[0]!==36064){for(let Pi=0,na=fi.length;Pi<na;Pi++)$[Pi]=36064+Pi;$.length=fi.length,si=!0}}else $[0]!==36064&&($[0]=36064,si=!0);else $[0]!==1029&&($[0]=1029,si=!0);si&&(a.isWebGL2?r.drawBuffers($):i.get("WEBGL_draw_buffers").drawBuffersWEBGL($))}function Bi(C){return p!==C?(r.useProgram(C),p=C,!0):!1}const Si={[Do]:32774,[Bf]:32778,[Df]:32779};if(e)Si[xr]=32775,Si[Ar]=32776;else{const C=i.get("EXT_blend_minmax");C!==null&&(Si[xr]=C.MIN_EXT,Si[Ar]=C.MAX_EXT)}const vi={[Gf]:0,[Uf]:1,[Of]:768,[al]:770,[Wf]:776,[jf]:774,[Kf]:772,[Ff]:769,[el]:771,[Hf]:775,[Vf]:773};function ba(C,F,$,si,fi,Pi,na,ma){if(C===Oe){b===!0&&(mi(3042),b=!1);return}if(b===!1&&(ki(3042),b=!0),C!==Lf){if(C!==k||ma!==w){if((y!==Do||R!==Do)&&(r.blendEquation(32774),y=Do,R=Do),ma)switch(C){case Fo:r.blendFuncSeparate(1,771,1,771);break;case Ms:r.blendFunc(1,1);break;case Mr:r.blendFuncSeparate(0,769,0,1);break;case wr:r.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",C);break}else switch(C){case Fo:r.blendFuncSeparate(770,771,1,771);break;case Ms:r.blendFunc(770,1);break;case Mr:r.blendFuncSeparate(0,769,0,1);break;case wr:r.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",C);break}S=null,_=null,T=null,v=null,k=C,w=ma}return}fi=fi||F,Pi=Pi||$,na=na||si,(F!==y||fi!==R)&&(r.blendEquationSeparate(Si[F],Si[fi]),y=F,R=fi),($!==S||si!==_||Pi!==T||na!==v)&&(r.blendFuncSeparate(vi[$],vi[si],vi[Pi],vi[na]),S=$,_=si,T=Pi,v=na),k=C,w=!1}function Ka(C,F){C.side===Be?mi(2884):ki(2884);let $=C.side===Ma;F&&($=!$),fa($),C.blending===Fo&&C.transparent===!1?ba(Oe):ba(C.blending,C.blendEquation,C.blendSrc,C.blendDst,C.blendEquationAlpha,C.blendSrcAlpha,C.blendDstAlpha,C.premultipliedAlpha),c.setFunc(C.depthFunc),c.setTest(C.depthTest),c.setMask(C.depthWrite),t.setMask(C.colorWrite);const si=C.stencilWrite;l.setTest(si),si&&(l.setMask(C.stencilWriteMask),l.setFunc(C.stencilFunc,C.stencilRef,C.stencilFuncMask),l.setOp(C.stencilFail,C.stencilZFail,C.stencilZPass)),Ii(C.polygonOffset,C.polygonOffsetFactor,C.polygonOffsetUnits),C.alphaToCoverage===!0?ki(32926):mi(32926)}function fa(C){E!==C&&(C?r.frontFace(2304):r.frontFace(2305),E=C)}function Va(C){C!==Pf?(ki(2884),C!==U&&(C===Sr?r.cullFace(1029):C===If?r.cullFace(1028):r.cullFace(1032))):mi(2884),U=C}function Yi(C){C!==W&&(J&&r.lineWidth(C),W=C)}function Ii(C,F,$){C?(ki(32823),(P!==F||z!==$)&&(r.polygonOffset(F,$),P=F,z=$)):mi(32823)}function he(C){C?ki(3089):mi(3089)}function Qa(C){C===void 0&&(C=33984+D-1),Y!==C&&(r.activeTexture(C),Y=C)}function A(C,F,$){$===void 0&&(Y===null?$=33984+D-1:$=Y);let si=X[$];si===void 0&&(si={type:void 0,texture:void 0},X[$]=si),(si.type!==C||si.texture!==F)&&(Y!==$&&(r.activeTexture($),Y=$),r.bindTexture(C,F||G[C]),si.type=C,si.texture=F)}function M(){const C=X[Y];C!==void 0&&C.type!==void 0&&(r.bindTexture(C.type,null),C.type=void 0,C.texture=void 0)}function V(){try{r.compressedTexImage2D.apply(r,arguments)}catch(C){console.error("THREE.WebGLState:",C)}}function Q(){try{r.compressedTexImage3D.apply(r,arguments)}catch(C){console.error("THREE.WebGLState:",C)}}function ei(){try{r.texSubImage2D.apply(r,arguments)}catch(C){console.error("THREE.WebGLState:",C)}}function ni(){try{r.texSubImage3D.apply(r,arguments)}catch(C){console.error("THREE.WebGLState:",C)}}function yi(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(C){console.error("THREE.WebGLState:",C)}}function ti(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(C){console.error("THREE.WebGLState:",C)}}function H(){try{r.texStorage2D.apply(r,arguments)}catch(C){console.error("THREE.WebGLState:",C)}}function gi(){try{r.texStorage3D.apply(r,arguments)}catch(C){console.error("THREE.WebGLState:",C)}}function bi(){try{r.texImage2D.apply(r,arguments)}catch(C){console.error("THREE.WebGLState:",C)}}function li(){try{r.texImage3D.apply(r,arguments)}catch(C){console.error("THREE.WebGLState:",C)}}function hi(C){Z.equals(C)===!1&&(r.scissor(C.x,C.y,C.z,C.w),Z.copy(C))}function di(C){ii.equals(C)===!1&&(r.viewport(C.x,C.y,C.z,C.w),ii.copy(C))}function Ei(C,F){let $=d.get(F);$===void 0&&($=new WeakMap,d.set(F,$));let si=$.get(C);si===void 0&&(si=r.getUniformBlockIndex(F,C.name),$.set(C,si))}function Ui(C,F){const si=d.get(F).get(C);f.get(F)!==si&&(r.uniformBlockBinding(F,si,C.__bindingPointIndex),f.set(F,si))}function oa(){r.disable(3042),r.disable(2884),r.disable(2929),r.disable(32823),r.disable(3089),r.disable(2960),r.disable(32926),r.blendEquation(32774),r.blendFunc(1,0),r.blendFuncSeparate(1,0,1,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(513),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(519,0,4294967295),r.stencilOp(7680,7680,7680),r.clearStencil(0),r.cullFace(1029),r.frontFace(2305),r.polygonOffset(0,0),r.activeTexture(33984),r.bindFramebuffer(36160,null),e===!0&&(r.bindFramebuffer(36009,null),r.bindFramebuffer(36008,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),m={},Y=null,X={},g={},h=new WeakMap,u=[],p=null,b=!1,k=null,y=null,S=null,_=null,R=null,T=null,v=null,w=!1,E=null,U=null,W=null,P=null,z=null,Z.set(0,0,r.canvas.width,r.canvas.height),ii.set(0,0,r.canvas.width,r.canvas.height),t.reset(),c.reset(),l.reset()}return{buffers:{color:t,depth:c,stencil:l},enable:ki,disable:mi,bindFramebuffer:ui,drawBuffers:ri,useProgram:Bi,setBlending:ba,setMaterial:Ka,setFlipSided:fa,setCullFace:Va,setLineWidth:Yi,setPolygonOffset:Ii,setScissorTest:he,activeTexture:Qa,bindTexture:A,unbindTexture:M,compressedTexImage2D:V,compressedTexImage3D:Q,texImage2D:bi,texImage3D:li,updateUBOMapping:Ei,uniformBlockBinding:Ui,texStorage2D:H,texStorage3D:gi,texSubImage2D:ei,texSubImage3D:ni,compressedTexSubImage2D:yi,compressedTexSubImage3D:ti,scissor:hi,viewport:di,reset:oa}}function yh(r,i,a,e,o,n,s){const t=o.isWebGL2,c=o.maxTextures,l=o.maxCubemapSize,f=o.maxTextureSize,d=o.maxSamples,m=i.has("WEBGL_multisampled_render_to_texture")?i.get("WEBGL_multisampled_render_to_texture"):null,g=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new WeakMap;let u;const p=new WeakMap;let b=!1;try{b=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function k(A,M){return b?new OffscreenCanvas(A,M):Rn("canvas")}function y(A,M,V,Q){let ei=1;if((A.width>Q||A.height>Q)&&(ei=Q/Math.max(A.width,A.height)),ei<1||M===!0)if(typeof HTMLImageElement<"u"&&A instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&A instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&A instanceof ImageBitmap){const ni=M?Es:Math.floor,yi=ni(ei*A.width),ti=ni(ei*A.height);u===void 0&&(u=k(yi,ti));const H=V?k(yi,ti):u;return H.width=yi,H.height=ti,H.getContext("2d").drawImage(A,0,0,yi,ti),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+A.width+"x"+A.height+") to ("+yi+"x"+ti+")."),H}else return"data"in A&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+A.width+"x"+A.height+")."),A;return A}function S(A){return ic(A.width)&&ic(A.height)}function _(A){return t?!1:A.wrapS!==oe||A.wrapT!==oe||A.minFilter!==ka&&A.minFilter!==Za}function R(A,M){return A.generateMipmaps&&M&&A.minFilter!==ka&&A.minFilter!==Za}function T(A){r.generateMipmap(A)}function v(A,M,V,Q,ei=!1){if(t===!1)return M;if(A!==null){if(r[A]!==void 0)return r[A];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+A+"'")}let ni=M;return M===6403&&(V===5126&&(ni=33326),V===5131&&(ni=33325),V===5121&&(ni=33321)),M===33319&&(V===5126&&(ni=33328),V===5131&&(ni=33327),V===5121&&(ni=33323)),M===6408&&(V===5126&&(ni=34836),V===5131&&(ni=34842),V===5121&&(ni=Q===Gi&&ei===!1?35907:32856),V===32819&&(ni=32854),V===32820&&(ni=32855)),(ni===33325||ni===33326||ni===33327||ni===33328||ni===34842||ni===34836)&&i.get("EXT_color_buffer_float"),ni}function w(A,M,V){return R(A,V)===!0||A.isFramebufferTexture&&A.minFilter!==ka&&A.minFilter!==Za?Math.log2(Math.max(M.width,M.height))+1:A.mipmaps!==void 0&&A.mipmaps.length>0?A.mipmaps.length:A.isCompressedTexture&&Array.isArray(A.image)?M.mipmaps.length:1}function E(A){return A===ka||A===Rr||A===Lt?9728:9729}function U(A){const M=A.target;M.removeEventListener("dispose",U),P(M),M.isVideoTexture&&h.delete(M)}function W(A){const M=A.target;M.removeEventListener("dispose",W),D(M)}function P(A){const M=e.get(A);if(M.__webglInit===void 0)return;const V=A.source,Q=p.get(V);if(Q){const ei=Q[M.__cacheKey];ei.usedTimes--,ei.usedTimes===0&&z(A),Object.keys(Q).length===0&&p.delete(V)}e.remove(A)}function z(A){const M=e.get(A);r.deleteTexture(M.__webglTexture);const V=A.source,Q=p.get(V);delete Q[M.__cacheKey],s.memory.textures--}function D(A){const M=A.texture,V=e.get(A),Q=e.get(M);if(Q.__webglTexture!==void 0&&(r.deleteTexture(Q.__webglTexture),s.memory.textures--),A.depthTexture&&A.depthTexture.dispose(),A.isWebGLCubeRenderTarget)for(let ei=0;ei<6;ei++)r.deleteFramebuffer(V.__webglFramebuffer[ei]),V.__webglDepthbuffer&&r.deleteRenderbuffer(V.__webglDepthbuffer[ei]);else{if(r.deleteFramebuffer(V.__webglFramebuffer),V.__webglDepthbuffer&&r.deleteRenderbuffer(V.__webglDepthbuffer),V.__webglMultisampledFramebuffer&&r.deleteFramebuffer(V.__webglMultisampledFramebuffer),V.__webglColorRenderbuffer)for(let ei=0;ei<V.__webglColorRenderbuffer.length;ei++)V.__webglColorRenderbuffer[ei]&&r.deleteRenderbuffer(V.__webglColorRenderbuffer[ei]);V.__webglDepthRenderbuffer&&r.deleteRenderbuffer(V.__webglDepthRenderbuffer)}if(A.isWebGLMultipleRenderTargets)for(let ei=0,ni=M.length;ei<ni;ei++){const yi=e.get(M[ei]);yi.__webglTexture&&(r.deleteTexture(yi.__webglTexture),s.memory.textures--),e.remove(M[ei])}e.remove(M),e.remove(A)}let J=0;function q(){J=0}function O(){const A=J;return A>=c&&console.warn("THREE.WebGLTextures: Trying to use "+A+" texture units while this GPU supports only "+c),J+=1,A}function Y(A){const M=[];return M.push(A.wrapS),M.push(A.wrapT),M.push(A.wrapR||0),M.push(A.magFilter),M.push(A.minFilter),M.push(A.anisotropy),M.push(A.internalFormat),M.push(A.format),M.push(A.type),M.push(A.generateMipmaps),M.push(A.premultiplyAlpha),M.push(A.flipY),M.push(A.unpackAlignment),M.push(A.encoding),M.join()}function X(A,M){const V=e.get(A);if(A.isVideoTexture&&he(A),A.isRenderTargetTexture===!1&&A.version>0&&V.__version!==A.version){const Q=A.image;if(Q===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Q.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{mi(V,A,M);return}}a.bindTexture(3553,V.__webglTexture,33984+M)}function ci(A,M){const V=e.get(A);if(A.version>0&&V.__version!==A.version){mi(V,A,M);return}a.bindTexture(35866,V.__webglTexture,33984+M)}function L(A,M){const V=e.get(A);if(A.version>0&&V.__version!==A.version){mi(V,A,M);return}a.bindTexture(32879,V.__webglTexture,33984+M)}function Z(A,M){const V=e.get(A);if(A.version>0&&V.__version!==A.version){ui(V,A,M);return}a.bindTexture(34067,V.__webglTexture,33984+M)}const ii={[Rs]:10497,[oe]:33071,[Ts]:33648},ai={[ka]:9728,[Rr]:9984,[Lt]:9986,[Za]:9729,[rm]:9985,[wn]:9987};function G(A,M,V){if(V?(r.texParameteri(A,10242,ii[M.wrapS]),r.texParameteri(A,10243,ii[M.wrapT]),(A===32879||A===35866)&&r.texParameteri(A,32882,ii[M.wrapR]),r.texParameteri(A,10240,ai[M.magFilter]),r.texParameteri(A,10241,ai[M.minFilter])):(r.texParameteri(A,10242,33071),r.texParameteri(A,10243,33071),(A===32879||A===35866)&&r.texParameteri(A,32882,33071),(M.wrapS!==oe||M.wrapT!==oe)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(A,10240,E(M.magFilter)),r.texParameteri(A,10241,E(M.minFilter)),M.minFilter!==ka&&M.minFilter!==Za&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),i.has("EXT_texture_filter_anisotropic")===!0){const Q=i.get("EXT_texture_filter_anisotropic");if(M.magFilter===ka||M.minFilter!==Lt&&M.minFilter!==wn||M.type===co&&i.has("OES_texture_float_linear")===!1||t===!1&&M.type===xn&&i.has("OES_texture_half_float_linear")===!1)return;(M.anisotropy>1||e.get(M).__currentAnisotropy)&&(r.texParameterf(A,Q.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(M.anisotropy,o.getMaxAnisotropy())),e.get(M).__currentAnisotropy=M.anisotropy)}}function ki(A,M){let V=!1;A.__webglInit===void 0&&(A.__webglInit=!0,M.addEventListener("dispose",U));const Q=M.source;let ei=p.get(Q);ei===void 0&&(ei={},p.set(Q,ei));const ni=Y(M);if(ni!==A.__cacheKey){ei[ni]===void 0&&(ei[ni]={texture:r.createTexture(),usedTimes:0},s.memory.textures++,V=!0),ei[ni].usedTimes++;const yi=ei[A.__cacheKey];yi!==void 0&&(ei[A.__cacheKey].usedTimes--,yi.usedTimes===0&&z(M)),A.__cacheKey=ni,A.__webglTexture=ei[ni].texture}return V}function mi(A,M,V){let Q=3553;(M.isDataArrayTexture||M.isCompressedArrayTexture)&&(Q=35866),M.isData3DTexture&&(Q=32879);const ei=ki(A,M),ni=M.source;a.bindTexture(Q,A.__webglTexture,33984+V);const yi=e.get(ni);if(ni.version!==yi.__version||ei===!0){a.activeTexture(33984+V),r.pixelStorei(37440,M.flipY),r.pixelStorei(37441,M.premultiplyAlpha),r.pixelStorei(3317,M.unpackAlignment),r.pixelStorei(37443,0);const ti=_(M)&&S(M.image)===!1;let H=y(M.image,ti,!1,f);H=Qa(M,H);const gi=S(H)||t,bi=n.convert(M.format,M.encoding);let li=n.convert(M.type),hi=v(M.internalFormat,bi,li,M.encoding,M.isVideoTexture);G(Q,M,gi);let di;const Ei=M.mipmaps,Ui=t&&M.isVideoTexture!==!0,oa=yi.__version===void 0||ei===!0,C=w(M,H,gi);if(M.isDepthTexture)hi=6402,t?M.type===co?hi=36012:M.type===ro?hi=33190:M.type===Ko?hi=35056:hi=33189:M.type===co&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),M.format===fo&&hi===6402&&M.type!==tl&&M.type!==ro&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),M.type=ro,li=n.convert(M.type)),M.format===Zo&&hi===6402&&(hi=34041,M.type!==Ko&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),M.type=Ko,li=n.convert(M.type))),oa&&(Ui?a.texStorage2D(3553,1,hi,H.width,H.height):a.texImage2D(3553,0,hi,H.width,H.height,0,bi,li,null));else if(M.isDataTexture)if(Ei.length>0&&gi){Ui&&oa&&a.texStorage2D(3553,C,hi,Ei[0].width,Ei[0].height);for(let F=0,$=Ei.length;F<$;F++)di=Ei[F],Ui?a.texSubImage2D(3553,F,0,0,di.width,di.height,bi,li,di.data):a.texImage2D(3553,F,hi,di.width,di.height,0,bi,li,di.data);M.generateMipmaps=!1}else Ui?(oa&&a.texStorage2D(3553,C,hi,H.width,H.height),a.texSubImage2D(3553,0,0,0,H.width,H.height,bi,li,H.data)):a.texImage2D(3553,0,hi,H.width,H.height,0,bi,li,H.data);else if(M.isCompressedTexture)if(M.isCompressedArrayTexture){Ui&&oa&&a.texStorage3D(35866,C,hi,Ei[0].width,Ei[0].height,H.depth);for(let F=0,$=Ei.length;F<$;F++)di=Ei[F],M.format!==ne?bi!==null?Ui?a.compressedTexSubImage3D(35866,F,0,0,0,di.width,di.height,H.depth,bi,di.data,0,0):a.compressedTexImage3D(35866,F,hi,di.width,di.height,H.depth,0,di.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ui?a.texSubImage3D(35866,F,0,0,0,di.width,di.height,H.depth,bi,li,di.data):a.texImage3D(35866,F,hi,di.width,di.height,H.depth,0,bi,li,di.data)}else{Ui&&oa&&a.texStorage2D(3553,C,hi,Ei[0].width,Ei[0].height);for(let F=0,$=Ei.length;F<$;F++)di=Ei[F],M.format!==ne?bi!==null?Ui?a.compressedTexSubImage2D(3553,F,0,0,di.width,di.height,bi,di.data):a.compressedTexImage2D(3553,F,hi,di.width,di.height,0,di.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ui?a.texSubImage2D(3553,F,0,0,di.width,di.height,bi,li,di.data):a.texImage2D(3553,F,hi,di.width,di.height,0,bi,li,di.data)}else if(M.isDataArrayTexture)Ui?(oa&&a.texStorage3D(35866,C,hi,H.width,H.height,H.depth),a.texSubImage3D(35866,0,0,0,0,H.width,H.height,H.depth,bi,li,H.data)):a.texImage3D(35866,0,hi,H.width,H.height,H.depth,0,bi,li,H.data);else if(M.isData3DTexture)Ui?(oa&&a.texStorage3D(32879,C,hi,H.width,H.height,H.depth),a.texSubImage3D(32879,0,0,0,0,H.width,H.height,H.depth,bi,li,H.data)):a.texImage3D(32879,0,hi,H.width,H.height,H.depth,0,bi,li,H.data);else if(M.isFramebufferTexture){if(oa)if(Ui)a.texStorage2D(3553,C,hi,H.width,H.height);else{let F=H.width,$=H.height;for(let si=0;si<C;si++)a.texImage2D(3553,si,hi,F,$,0,bi,li,null),F>>=1,$>>=1}}else if(Ei.length>0&&gi){Ui&&oa&&a.texStorage2D(3553,C,hi,Ei[0].width,Ei[0].height);for(let F=0,$=Ei.length;F<$;F++)di=Ei[F],Ui?a.texSubImage2D(3553,F,0,0,bi,li,di):a.texImage2D(3553,F,hi,bi,li,di);M.generateMipmaps=!1}else Ui?(oa&&a.texStorage2D(3553,C,hi,H.width,H.height),a.texSubImage2D(3553,0,0,0,bi,li,H)):a.texImage2D(3553,0,hi,bi,li,H);R(M,gi)&&T(Q),yi.__version=ni.version,M.onUpdate&&M.onUpdate(M)}A.__version=M.version}function ui(A,M,V){if(M.image.length!==6)return;const Q=ki(A,M),ei=M.source;a.bindTexture(34067,A.__webglTexture,33984+V);const ni=e.get(ei);if(ei.version!==ni.__version||Q===!0){a.activeTexture(33984+V),r.pixelStorei(37440,M.flipY),r.pixelStorei(37441,M.premultiplyAlpha),r.pixelStorei(3317,M.unpackAlignment),r.pixelStorei(37443,0);const yi=M.isCompressedTexture||M.image[0].isCompressedTexture,ti=M.image[0]&&M.image[0].isDataTexture,H=[];for(let F=0;F<6;F++)!yi&&!ti?H[F]=y(M.image[F],!1,!0,l):H[F]=ti?M.image[F].image:M.image[F],H[F]=Qa(M,H[F]);const gi=H[0],bi=S(gi)||t,li=n.convert(M.format,M.encoding),hi=n.convert(M.type),di=v(M.internalFormat,li,hi,M.encoding),Ei=t&&M.isVideoTexture!==!0,Ui=ni.__version===void 0||Q===!0;let oa=w(M,gi,bi);G(34067,M,bi);let C;if(yi){Ei&&Ui&&a.texStorage2D(34067,oa,di,gi.width,gi.height);for(let F=0;F<6;F++){C=H[F].mipmaps;for(let $=0;$<C.length;$++){const si=C[$];M.format!==ne?li!==null?Ei?a.compressedTexSubImage2D(34069+F,$,0,0,si.width,si.height,li,si.data):a.compressedTexImage2D(34069+F,$,di,si.width,si.height,0,si.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Ei?a.texSubImage2D(34069+F,$,0,0,si.width,si.height,li,hi,si.data):a.texImage2D(34069+F,$,di,si.width,si.height,0,li,hi,si.data)}}}else{C=M.mipmaps,Ei&&Ui&&(C.length>0&&oa++,a.texStorage2D(34067,oa,di,H[0].width,H[0].height));for(let F=0;F<6;F++)if(ti){Ei?a.texSubImage2D(34069+F,0,0,0,H[F].width,H[F].height,li,hi,H[F].data):a.texImage2D(34069+F,0,di,H[F].width,H[F].height,0,li,hi,H[F].data);for(let $=0;$<C.length;$++){const fi=C[$].image[F].image;Ei?a.texSubImage2D(34069+F,$+1,0,0,fi.width,fi.height,li,hi,fi.data):a.texImage2D(34069+F,$+1,di,fi.width,fi.height,0,li,hi,fi.data)}}else{Ei?a.texSubImage2D(34069+F,0,0,0,li,hi,H[F]):a.texImage2D(34069+F,0,di,li,hi,H[F]);for(let $=0;$<C.length;$++){const si=C[$];Ei?a.texSubImage2D(34069+F,$+1,0,0,li,hi,si.image[F]):a.texImage2D(34069+F,$+1,di,li,hi,si.image[F])}}}R(M,bi)&&T(34067),ni.__version=ei.version,M.onUpdate&&M.onUpdate(M)}A.__version=M.version}function ri(A,M,V,Q,ei){const ni=n.convert(V.format,V.encoding),yi=n.convert(V.type),ti=v(V.internalFormat,ni,yi,V.encoding);e.get(M).__hasExternalTextures||(ei===32879||ei===35866?a.texImage3D(ei,0,ti,M.width,M.height,M.depth,0,ni,yi,null):a.texImage2D(ei,0,ti,M.width,M.height,0,ni,yi,null)),a.bindFramebuffer(36160,A),Ii(M)?m.framebufferTexture2DMultisampleEXT(36160,Q,ei,e.get(V).__webglTexture,0,Yi(M)):(ei===3553||ei>=34069&&ei<=34074)&&r.framebufferTexture2D(36160,Q,ei,e.get(V).__webglTexture,0),a.bindFramebuffer(36160,null)}function Bi(A,M,V){if(r.bindRenderbuffer(36161,A),M.depthBuffer&&!M.stencilBuffer){let Q=33189;if(V||Ii(M)){const ei=M.depthTexture;ei&&ei.isDepthTexture&&(ei.type===co?Q=36012:ei.type===ro&&(Q=33190));const ni=Yi(M);Ii(M)?m.renderbufferStorageMultisampleEXT(36161,ni,Q,M.width,M.height):r.renderbufferStorageMultisample(36161,ni,Q,M.width,M.height)}else r.renderbufferStorage(36161,Q,M.width,M.height);r.framebufferRenderbuffer(36160,36096,36161,A)}else if(M.depthBuffer&&M.stencilBuffer){const Q=Yi(M);V&&Ii(M)===!1?r.renderbufferStorageMultisample(36161,Q,35056,M.width,M.height):Ii(M)?m.renderbufferStorageMultisampleEXT(36161,Q,35056,M.width,M.height):r.renderbufferStorage(36161,34041,M.width,M.height),r.framebufferRenderbuffer(36160,33306,36161,A)}else{const Q=M.isWebGLMultipleRenderTargets===!0?M.texture:[M.texture];for(let ei=0;ei<Q.length;ei++){const ni=Q[ei],yi=n.convert(ni.format,ni.encoding),ti=n.convert(ni.type),H=v(ni.internalFormat,yi,ti,ni.encoding),gi=Yi(M);V&&Ii(M)===!1?r.renderbufferStorageMultisample(36161,gi,H,M.width,M.height):Ii(M)?m.renderbufferStorageMultisampleEXT(36161,gi,H,M.width,M.height):r.renderbufferStorage(36161,H,M.width,M.height)}}r.bindRenderbuffer(36161,null)}function Si(A,M){if(M&&M.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(a.bindFramebuffer(36160,A),!(M.depthTexture&&M.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!e.get(M.depthTexture).__webglTexture||M.depthTexture.image.width!==M.width||M.depthTexture.image.height!==M.height)&&(M.depthTexture.image.width=M.width,M.depthTexture.image.height=M.height,M.depthTexture.needsUpdate=!0),X(M.depthTexture,0);const Q=e.get(M.depthTexture).__webglTexture,ei=Yi(M);if(M.depthTexture.format===fo)Ii(M)?m.framebufferTexture2DMultisampleEXT(36160,36096,3553,Q,0,ei):r.framebufferTexture2D(36160,36096,3553,Q,0);else if(M.depthTexture.format===Zo)Ii(M)?m.framebufferTexture2DMultisampleEXT(36160,33306,3553,Q,0,ei):r.framebufferTexture2D(36160,33306,3553,Q,0);else throw new Error("Unknown depthTexture format")}function vi(A){const M=e.get(A),V=A.isWebGLCubeRenderTarget===!0;if(A.depthTexture&&!M.__autoAllocateDepthBuffer){if(V)throw new Error("target.depthTexture not supported in Cube render targets");Si(M.__webglFramebuffer,A)}else if(V){M.__webglDepthbuffer=[];for(let Q=0;Q<6;Q++)a.bindFramebuffer(36160,M.__webglFramebuffer[Q]),M.__webglDepthbuffer[Q]=r.createRenderbuffer(),Bi(M.__webglDepthbuffer[Q],A,!1)}else a.bindFramebuffer(36160,M.__webglFramebuffer),M.__webglDepthbuffer=r.createRenderbuffer(),Bi(M.__webglDepthbuffer,A,!1);a.bindFramebuffer(36160,null)}function ba(A,M,V){const Q=e.get(A);M!==void 0&&ri(Q.__webglFramebuffer,A,A.texture,36064,3553),V!==void 0&&vi(A)}function Ka(A){const M=A.texture,V=e.get(A),Q=e.get(M);A.addEventListener("dispose",W),A.isWebGLMultipleRenderTargets!==!0&&(Q.__webglTexture===void 0&&(Q.__webglTexture=r.createTexture()),Q.__version=M.version,s.memory.textures++);const ei=A.isWebGLCubeRenderTarget===!0,ni=A.isWebGLMultipleRenderTargets===!0,yi=S(A)||t;if(ei){V.__webglFramebuffer=[];for(let ti=0;ti<6;ti++)V.__webglFramebuffer[ti]=r.createFramebuffer()}else{if(V.__webglFramebuffer=r.createFramebuffer(),ni)if(o.drawBuffers){const ti=A.texture;for(let H=0,gi=ti.length;H<gi;H++){const bi=e.get(ti[H]);bi.__webglTexture===void 0&&(bi.__webglTexture=r.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(t&&A.samples>0&&Ii(A)===!1){const ti=ni?M:[M];V.__webglMultisampledFramebuffer=r.createFramebuffer(),V.__webglColorRenderbuffer=[],a.bindFramebuffer(36160,V.__webglMultisampledFramebuffer);for(let H=0;H<ti.length;H++){const gi=ti[H];V.__webglColorRenderbuffer[H]=r.createRenderbuffer(),r.bindRenderbuffer(36161,V.__webglColorRenderbuffer[H]);const bi=n.convert(gi.format,gi.encoding),li=n.convert(gi.type),hi=v(gi.internalFormat,bi,li,gi.encoding,A.isXRRenderTarget===!0),di=Yi(A);r.renderbufferStorageMultisample(36161,di,hi,A.width,A.height),r.framebufferRenderbuffer(36160,36064+H,36161,V.__webglColorRenderbuffer[H])}r.bindRenderbuffer(36161,null),A.depthBuffer&&(V.__webglDepthRenderbuffer=r.createRenderbuffer(),Bi(V.__webglDepthRenderbuffer,A,!0)),a.bindFramebuffer(36160,null)}}if(ei){a.bindTexture(34067,Q.__webglTexture),G(34067,M,yi);for(let ti=0;ti<6;ti++)ri(V.__webglFramebuffer[ti],A,M,36064,34069+ti);R(M,yi)&&T(34067),a.unbindTexture()}else if(ni){const ti=A.texture;for(let H=0,gi=ti.length;H<gi;H++){const bi=ti[H],li=e.get(bi);a.bindTexture(3553,li.__webglTexture),G(3553,bi,yi),ri(V.__webglFramebuffer,A,bi,36064+H,3553),R(bi,yi)&&T(3553)}a.unbindTexture()}else{let ti=3553;(A.isWebGL3DRenderTarget||A.isWebGLArrayRenderTarget)&&(t?ti=A.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),a.bindTexture(ti,Q.__webglTexture),G(ti,M,yi),ri(V.__webglFramebuffer,A,M,36064,ti),R(M,yi)&&T(ti),a.unbindTexture()}A.depthBuffer&&vi(A)}function fa(A){const M=S(A)||t,V=A.isWebGLMultipleRenderTargets===!0?A.texture:[A.texture];for(let Q=0,ei=V.length;Q<ei;Q++){const ni=V[Q];if(R(ni,M)){const yi=A.isWebGLCubeRenderTarget?34067:3553,ti=e.get(ni).__webglTexture;a.bindTexture(yi,ti),T(yi),a.unbindTexture()}}}function Va(A){if(t&&A.samples>0&&Ii(A)===!1){const M=A.isWebGLMultipleRenderTargets?A.texture:[A.texture],V=A.width,Q=A.height;let ei=16384;const ni=[],yi=A.stencilBuffer?33306:36096,ti=e.get(A),H=A.isWebGLMultipleRenderTargets===!0;if(H)for(let gi=0;gi<M.length;gi++)a.bindFramebuffer(36160,ti.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064+gi,36161,null),a.bindFramebuffer(36160,ti.__webglFramebuffer),r.framebufferTexture2D(36009,36064+gi,3553,null,0);a.bindFramebuffer(36008,ti.__webglMultisampledFramebuffer),a.bindFramebuffer(36009,ti.__webglFramebuffer);for(let gi=0;gi<M.length;gi++){ni.push(36064+gi),A.depthBuffer&&ni.push(yi);const bi=ti.__ignoreDepthValues!==void 0?ti.__ignoreDepthValues:!1;if(bi===!1&&(A.depthBuffer&&(ei|=256),A.stencilBuffer&&(ei|=1024)),H&&r.framebufferRenderbuffer(36008,36064,36161,ti.__webglColorRenderbuffer[gi]),bi===!0&&(r.invalidateFramebuffer(36008,[yi]),r.invalidateFramebuffer(36009,[yi])),H){const li=e.get(M[gi]).__webglTexture;r.framebufferTexture2D(36009,36064,3553,li,0)}r.blitFramebuffer(0,0,V,Q,0,0,V,Q,ei,9728),g&&r.invalidateFramebuffer(36008,ni)}if(a.bindFramebuffer(36008,null),a.bindFramebuffer(36009,null),H)for(let gi=0;gi<M.length;gi++){a.bindFramebuffer(36160,ti.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064+gi,36161,ti.__webglColorRenderbuffer[gi]);const bi=e.get(M[gi]).__webglTexture;a.bindFramebuffer(36160,ti.__webglFramebuffer),r.framebufferTexture2D(36009,36064+gi,3553,bi,0)}a.bindFramebuffer(36009,ti.__webglMultisampledFramebuffer)}}function Yi(A){return Math.min(d,A.samples)}function Ii(A){const M=e.get(A);return t&&A.samples>0&&i.has("WEBGL_multisampled_render_to_texture")===!0&&M.__useRenderToTexture!==!1}function he(A){const M=s.render.frame;h.get(A)!==M&&(h.set(A,M),A.update())}function Qa(A,M){const V=A.encoding,Q=A.format,ei=A.type;return A.isCompressedTexture===!0||A.isVideoTexture===!0||A.format===Cs||V!==vo&&(V===Gi?t===!1?i.has("EXT_sRGB")===!0&&Q===ne?(A.format=Cs,A.minFilter=Za,A.generateMipmaps=!1):M=cl.sRGBToLinear(M):(Q!==ne||ei!==bo)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",V)),M}this.allocateTextureUnit=O,this.resetTextureUnits=q,this.setTexture2D=X,this.setTexture2DArray=ci,this.setTexture3D=L,this.setTextureCube=Z,this.rebindTextures=ba,this.setupRenderTarget=Ka,this.updateRenderTargetMipmap=fa,this.updateMultisampleRenderTarget=Va,this.setupDepthRenderbuffer=vi,this.setupFrameBufferTexture=ri,this.useMultisampledRTT=Ii}function _h(r,i,a){const e=a.isWebGL2;function o(n,s=null){let t;if(n===bo)return 5121;if(n===mm)return 32819;if(n===um)return 32820;if(n===cm)return 5120;if(n===lm)return 5122;if(n===tl)return 5123;if(n===fm)return 5124;if(n===ro)return 5125;if(n===co)return 5126;if(n===xn)return e?5131:(t=i.get("OES_texture_half_float"),t!==null?t.HALF_FLOAT_OES:null);if(n===dm)return 6406;if(n===ne)return 6408;if(n===pm)return 6409;if(n===gm)return 6410;if(n===fo)return 6402;if(n===Zo)return 34041;if(n===Cs)return t=i.get("EXT_sRGB"),t!==null?t.SRGB_ALPHA_EXT:null;if(n===hm)return 6403;if(n===bm)return 36244;if(n===vm)return 33319;if(n===ym)return 33320;if(n===_m)return 36249;if(n===Bt||n===Dt||n===Gt||n===Ut)if(s===Gi)if(t=i.get("WEBGL_compressed_texture_s3tc_srgb"),t!==null){if(n===Bt)return t.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Dt)return t.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Gt)return t.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Ut)return t.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(t=i.get("WEBGL_compressed_texture_s3tc"),t!==null){if(n===Bt)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Dt)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Gt)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Ut)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Tr||n===Cr||n===Er||n===zr)if(t=i.get("WEBGL_compressed_texture_pvrtc"),t!==null){if(n===Tr)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Cr)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Er)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===zr)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===km)return t=i.get("WEBGL_compressed_texture_etc1"),t!==null?t.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===Pr||n===Ir)if(t=i.get("WEBGL_compressed_texture_etc"),t!==null){if(n===Pr)return s===Gi?t.COMPRESSED_SRGB8_ETC2:t.COMPRESSED_RGB8_ETC2;if(n===Ir)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:t.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Nr||n===Lr||n===Br||n===Dr||n===Gr||n===Ur||n===Or||n===Fr||n===Kr||n===Vr||n===jr||n===Hr||n===Wr||n===qr)if(t=i.get("WEBGL_compressed_texture_astc"),t!==null){if(n===Nr)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:t.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Lr)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:t.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Br)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:t.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Dr)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:t.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Gr)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:t.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Ur)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:t.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Or)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:t.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Fr)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:t.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Kr)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:t.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Vr)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:t.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===jr)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:t.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Hr)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:t.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Wr)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:t.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===qr)return s===Gi?t.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:t.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Ot)if(t=i.get("EXT_texture_compression_bptc"),t!==null){if(n===Ot)return s===Gi?t.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:t.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(n===Sm||n===Zr||n===Jr||n===Xr)if(t=i.get("EXT_texture_compression_rgtc"),t!==null){if(n===Ot)return t.COMPRESSED_RED_RGTC1_EXT;if(n===Zr)return t.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Jr)return t.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Xr)return t.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Ko?e?34042:(t=i.get("WEBGL_depth_texture"),t!==null?t.UNSIGNED_INT_24_8_WEBGL:null):r[n]!==void 0?r[n]:null}return{convert:o}}class kh extends Ba{constructor(i=[]){super(),this.isArrayCamera=!0,this.cameras=i}}class vn extends xa{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Sh={type:"move"};class ds{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new vn,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new vn,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new B,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new B),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new vn,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new B,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new B),this._grip}dispatchEvent(i){return this._targetRay!==null&&this._targetRay.dispatchEvent(i),this._grip!==null&&this._grip.dispatchEvent(i),this._hand!==null&&this._hand.dispatchEvent(i),this}connect(i){if(i&&i.hand){const a=this._hand;if(a)for(const e of i.hand.values())this._getHandJoint(a,e)}return this.dispatchEvent({type:"connected",data:i}),this}disconnect(i){return this.dispatchEvent({type:"disconnected",data:i}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(i,a,e){let o=null,n=null,s=null;const t=this._targetRay,c=this._grip,l=this._hand;if(i&&a.session.visibilityState!=="visible-blurred"){if(l&&i.hand){s=!0;for(const u of i.hand.values()){const p=a.getJointPose(u,e),b=this._getHandJoint(l,u);p!==null&&(b.matrix.fromArray(p.transform.matrix),b.matrix.decompose(b.position,b.rotation,b.scale),b.jointRadius=p.radius),b.visible=p!==null}const f=l.joints["index-finger-tip"],d=l.joints["thumb-tip"],m=f.position.distanceTo(d.position),g=.02,h=.005;l.inputState.pinching&&m>g+h?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:i.handedness,target:this})):!l.inputState.pinching&&m<=g-h&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:i.handedness,target:this}))}else c!==null&&i.gripSpace&&(n=a.getPose(i.gripSpace,e),n!==null&&(c.matrix.fromArray(n.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),n.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(n.linearVelocity)):c.hasLinearVelocity=!1,n.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(n.angularVelocity)):c.hasAngularVelocity=!1));t!==null&&(o=a.getPose(i.targetRaySpace,e),o===null&&n!==null&&(o=n),o!==null&&(t.matrix.fromArray(o.transform.matrix),t.matrix.decompose(t.position,t.rotation,t.scale),o.linearVelocity?(t.hasLinearVelocity=!0,t.linearVelocity.copy(o.linearVelocity)):t.hasLinearVelocity=!1,o.angularVelocity?(t.hasAngularVelocity=!0,t.angularVelocity.copy(o.angularVelocity)):t.hasAngularVelocity=!1,this.dispatchEvent(Sh)))}return t!==null&&(t.visible=o!==null),c!==null&&(c.visible=n!==null),l!==null&&(l.visible=s!==null),this}_getHandJoint(i,a){if(i.joints[a.jointName]===void 0){const e=new vn;e.matrixAutoUpdate=!1,e.visible=!1,i.joints[a.jointName]=e,i.add(e)}return i.joints[a.jointName]}}class Mh extends wa{constructor(i,a,e,o,n,s,t,c,l,f){if(f=f!==void 0?f:fo,f!==fo&&f!==Zo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");e===void 0&&f===fo&&(e=ro),e===void 0&&f===Zo&&(e=Ko),super(null,o,n,s,t,c,f,e,l),this.isDepthTexture=!0,this.image={width:i,height:a},this.magFilter=t!==void 0?t:ka,this.minFilter=c!==void 0?c:ka,this.flipY=!1,this.generateMipmaps=!1}}class wh extends nn{constructor(i,a){super();const e=this;let o=null,n=1,s=null,t="local-floor",c=1,l=null,f=null,d=null,m=null,g=null,h=null;const u=a.getContextAttributes();let p=null,b=null;const k=[],y=[],S=new Set,_=new Map,R=new Ba;R.layers.enable(1),R.viewport=new la;const T=new Ba;T.layers.enable(2),T.viewport=new la;const v=[R,T],w=new kh;w.layers.enable(1),w.layers.enable(2);let E=null,U=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(L){let Z=k[L];return Z===void 0&&(Z=new ds,k[L]=Z),Z.getTargetRaySpace()},this.getControllerGrip=function(L){let Z=k[L];return Z===void 0&&(Z=new ds,k[L]=Z),Z.getGripSpace()},this.getHand=function(L){let Z=k[L];return Z===void 0&&(Z=new ds,k[L]=Z),Z.getHandSpace()};function W(L){const Z=y.indexOf(L.inputSource);if(Z===-1)return;const ii=k[Z];ii!==void 0&&ii.dispatchEvent({type:L.type,data:L.inputSource})}function P(){o.removeEventListener("select",W),o.removeEventListener("selectstart",W),o.removeEventListener("selectend",W),o.removeEventListener("squeeze",W),o.removeEventListener("squeezestart",W),o.removeEventListener("squeezeend",W),o.removeEventListener("end",P),o.removeEventListener("inputsourceschange",z);for(let L=0;L<k.length;L++){const Z=y[L];Z!==null&&(y[L]=null,k[L].disconnect(Z))}E=null,U=null,i.setRenderTarget(p),g=null,m=null,d=null,o=null,b=null,ci.stop(),e.isPresenting=!1,e.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(L){n=L,e.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(L){t=L,e.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||s},this.setReferenceSpace=function(L){l=L},this.getBaseLayer=function(){return m!==null?m:g},this.getBinding=function(){return d},this.getFrame=function(){return h},this.getSession=function(){return o},this.setSession=async function(L){if(o=L,o!==null){if(p=i.getRenderTarget(),o.addEventListener("select",W),o.addEventListener("selectstart",W),o.addEventListener("selectend",W),o.addEventListener("squeeze",W),o.addEventListener("squeezestart",W),o.addEventListener("squeezeend",W),o.addEventListener("end",P),o.addEventListener("inputsourceschange",z),u.xrCompatible!==!0&&await a.makeXRCompatible(),o.renderState.layers===void 0||i.capabilities.isWebGL2===!1){const Z={antialias:o.renderState.layers===void 0?u.antialias:!0,alpha:u.alpha,depth:u.depth,stencil:u.stencil,framebufferScaleFactor:n};g=new XRWebGLLayer(o,a,Z),o.updateRenderState({baseLayer:g}),b=new yo(g.framebufferWidth,g.framebufferHeight,{format:ne,type:bo,encoding:i.outputEncoding,stencilBuffer:u.stencil})}else{let Z=null,ii=null,ai=null;u.depth&&(ai=u.stencil?35056:33190,Z=u.stencil?Zo:fo,ii=u.stencil?Ko:ro);const G={colorFormat:32856,depthFormat:ai,scaleFactor:n};d=new XRWebGLBinding(o,a),m=d.createProjectionLayer(G),o.updateRenderState({layers:[m]}),b=new yo(m.textureWidth,m.textureHeight,{format:ne,type:bo,depthTexture:new Mh(m.textureWidth,m.textureHeight,ii,void 0,void 0,void 0,void 0,void 0,void 0,Z),stencilBuffer:u.stencil,encoding:i.outputEncoding,samples:u.antialias?4:0});const ki=i.properties.get(b);ki.__ignoreDepthValues=m.ignoreDepthValues}b.isXRRenderTarget=!0,this.setFoveation(c),l=null,s=await o.requestReferenceSpace(t),ci.setContext(o),ci.start(),e.isPresenting=!0,e.dispatchEvent({type:"sessionstart"})}};function z(L){for(let Z=0;Z<L.removed.length;Z++){const ii=L.removed[Z],ai=y.indexOf(ii);ai>=0&&(y[ai]=null,k[ai].disconnect(ii))}for(let Z=0;Z<L.added.length;Z++){const ii=L.added[Z];let ai=y.indexOf(ii);if(ai===-1){for(let ki=0;ki<k.length;ki++)if(ki>=y.length){y.push(ii),ai=ki;break}else if(y[ki]===null){y[ki]=ii,ai=ki;break}if(ai===-1)break}const G=k[ai];G&&G.connect(ii)}}const D=new B,J=new B;function q(L,Z,ii){D.setFromMatrixPosition(Z.matrixWorld),J.setFromMatrixPosition(ii.matrixWorld);const ai=D.distanceTo(J),G=Z.projectionMatrix.elements,ki=ii.projectionMatrix.elements,mi=G[14]/(G[10]-1),ui=G[14]/(G[10]+1),ri=(G[9]+1)/G[5],Bi=(G[9]-1)/G[5],Si=(G[8]-1)/G[0],vi=(ki[8]+1)/ki[0],ba=mi*Si,Ka=mi*vi,fa=ai/(-Si+vi),Va=fa*-Si;Z.matrixWorld.decompose(L.position,L.quaternion,L.scale),L.translateX(Va),L.translateZ(fa),L.matrixWorld.compose(L.position,L.quaternion,L.scale),L.matrixWorldInverse.copy(L.matrixWorld).invert();const Yi=mi+fa,Ii=ui+fa,he=ba-Va,Qa=Ka+(ai-Va),A=ri*ui/Ii*Yi,M=Bi*ui/Ii*Yi;L.projectionMatrix.makePerspective(he,Qa,A,M,Yi,Ii)}function O(L,Z){Z===null?L.matrixWorld.copy(L.matrix):L.matrixWorld.multiplyMatrices(Z.matrixWorld,L.matrix),L.matrixWorldInverse.copy(L.matrixWorld).invert()}this.updateCamera=function(L){if(o===null)return;w.near=T.near=R.near=L.near,w.far=T.far=R.far=L.far,(E!==w.near||U!==w.far)&&(o.updateRenderState({depthNear:w.near,depthFar:w.far}),E=w.near,U=w.far);const Z=L.parent,ii=w.cameras;O(w,Z);for(let G=0;G<ii.length;G++)O(ii[G],Z);w.matrixWorld.decompose(w.position,w.quaternion,w.scale),L.matrix.copy(w.matrix),L.matrix.decompose(L.position,L.quaternion,L.scale);const ai=L.children;for(let G=0,ki=ai.length;G<ki;G++)ai[G].updateMatrixWorld(!0);ii.length===2?q(w,R,T):w.projectionMatrix.copy(R.projectionMatrix)},this.getCamera=function(){return w},this.getFoveation=function(){if(!(m===null&&g===null))return c},this.setFoveation=function(L){c=L,m!==null&&(m.fixedFoveation=L),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=L)},this.getPlanes=function(){return S};let Y=null;function X(L,Z){if(f=Z.getViewerPose(l||s),h=Z,f!==null){const ii=f.views;g!==null&&(i.setRenderTargetFramebuffer(b,g.framebuffer),i.setRenderTarget(b));let ai=!1;ii.length!==w.cameras.length&&(w.cameras.length=0,ai=!0);for(let G=0;G<ii.length;G++){const ki=ii[G];let mi=null;if(g!==null)mi=g.getViewport(ki);else{const ri=d.getViewSubImage(m,ki);mi=ri.viewport,G===0&&(i.setRenderTargetTextures(b,ri.colorTexture,m.ignoreDepthValues?void 0:ri.depthStencilTexture),i.setRenderTarget(b))}let ui=v[G];ui===void 0&&(ui=new Ba,ui.layers.enable(G),ui.viewport=new la,v[G]=ui),ui.matrix.fromArray(ki.transform.matrix),ui.projectionMatrix.fromArray(ki.projectionMatrix),ui.viewport.set(mi.x,mi.y,mi.width,mi.height),G===0&&w.matrix.copy(ui.matrix),ai===!0&&w.cameras.push(ui)}}for(let ii=0;ii<k.length;ii++){const ai=y[ii],G=k[ii];ai!==null&&G!==void 0&&G.update(ai,Z,l||s)}if(Y&&Y(L,Z),Z.detectedPlanes){e.dispatchEvent({type:"planesdetected",data:Z.detectedPlanes});let ii=null;for(const ai of S)Z.detectedPlanes.has(ai)||(ii===null&&(ii=[]),ii.push(ai));if(ii!==null)for(const ai of ii)S.delete(ai),_.delete(ai),e.dispatchEvent({type:"planeremoved",data:ai});for(const ai of Z.detectedPlanes)if(!S.has(ai))S.add(ai),_.set(ai,Z.lastChangedTime),e.dispatchEvent({type:"planeadded",data:ai});else{const G=_.get(ai);ai.lastChangedTime>G&&(_.set(ai,ai.lastChangedTime),e.dispatchEvent({type:"planechanged",data:ai}))}}h=null}const ci=new bl;ci.setAnimationLoop(X),this.setAnimationLoop=function(L){Y=L},this.dispose=function(){}}}function xh(r,i){function a(u,p){p.color.getRGB(u.fogColor.value,dl(r)),p.isFog?(u.fogNear.value=p.near,u.fogFar.value=p.far):p.isFogExp2&&(u.fogDensity.value=p.density)}function e(u,p,b,k,y){p.isMeshBasicMaterial||p.isMeshLambertMaterial?o(u,p):p.isMeshToonMaterial?(o(u,p),f(u,p)):p.isMeshPhongMaterial?(o(u,p),l(u,p)):p.isMeshStandardMaterial?(o(u,p),d(u,p),p.isMeshPhysicalMaterial&&m(u,p,y)):p.isMeshMatcapMaterial?(o(u,p),g(u,p)):p.isMeshDepthMaterial?o(u,p):p.isMeshDistanceMaterial?(o(u,p),h(u,p)):p.isMeshNormalMaterial?o(u,p):p.isLineBasicMaterial?(n(u,p),p.isLineDashedMaterial&&s(u,p)):p.isPointsMaterial?t(u,p,b,k):p.isSpriteMaterial?c(u,p):p.isShadowMaterial?(u.color.value.copy(p.color),u.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function o(u,p){u.opacity.value=p.opacity,p.color&&u.diffuse.value.copy(p.color),p.emissive&&u.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(u.map.value=p.map),p.alphaMap&&(u.alphaMap.value=p.alphaMap),p.bumpMap&&(u.bumpMap.value=p.bumpMap,u.bumpScale.value=p.bumpScale,p.side===Ma&&(u.bumpScale.value*=-1)),p.displacementMap&&(u.displacementMap.value=p.displacementMap,u.displacementScale.value=p.displacementScale,u.displacementBias.value=p.displacementBias),p.emissiveMap&&(u.emissiveMap.value=p.emissiveMap),p.normalMap&&(u.normalMap.value=p.normalMap,u.normalScale.value.copy(p.normalScale),p.side===Ma&&u.normalScale.value.negate()),p.specularMap&&(u.specularMap.value=p.specularMap),p.alphaTest>0&&(u.alphaTest.value=p.alphaTest);const b=i.get(p).envMap;if(b&&(u.envMap.value=b,u.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,u.reflectivity.value=p.reflectivity,u.ior.value=p.ior,u.refractionRatio.value=p.refractionRatio),p.lightMap){u.lightMap.value=p.lightMap;const S=r.physicallyCorrectLights!==!0?Math.PI:1;u.lightMapIntensity.value=p.lightMapIntensity*S}p.aoMap&&(u.aoMap.value=p.aoMap,u.aoMapIntensity.value=p.aoMapIntensity);let k;p.map?k=p.map:p.specularMap?k=p.specularMap:p.displacementMap?k=p.displacementMap:p.normalMap?k=p.normalMap:p.bumpMap?k=p.bumpMap:p.roughnessMap?k=p.roughnessMap:p.metalnessMap?k=p.metalnessMap:p.alphaMap?k=p.alphaMap:p.emissiveMap?k=p.emissiveMap:p.clearcoatMap?k=p.clearcoatMap:p.clearcoatNormalMap?k=p.clearcoatNormalMap:p.clearcoatRoughnessMap?k=p.clearcoatRoughnessMap:p.iridescenceMap?k=p.iridescenceMap:p.iridescenceThicknessMap?k=p.iridescenceThicknessMap:p.specularIntensityMap?k=p.specularIntensityMap:p.specularColorMap?k=p.specularColorMap:p.transmissionMap?k=p.transmissionMap:p.thicknessMap?k=p.thicknessMap:p.sheenColorMap?k=p.sheenColorMap:p.sheenRoughnessMap&&(k=p.sheenRoughnessMap),k!==void 0&&(k.isWebGLRenderTarget&&(k=k.texture),k.matrixAutoUpdate===!0&&k.updateMatrix(),u.uvTransform.value.copy(k.matrix));let y;p.aoMap?y=p.aoMap:p.lightMap&&(y=p.lightMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),u.uv2Transform.value.copy(y.matrix))}function n(u,p){u.diffuse.value.copy(p.color),u.opacity.value=p.opacity}function s(u,p){u.dashSize.value=p.dashSize,u.totalSize.value=p.dashSize+p.gapSize,u.scale.value=p.scale}function t(u,p,b,k){u.diffuse.value.copy(p.color),u.opacity.value=p.opacity,u.size.value=p.size*b,u.scale.value=k*.5,p.map&&(u.map.value=p.map),p.alphaMap&&(u.alphaMap.value=p.alphaMap),p.alphaTest>0&&(u.alphaTest.value=p.alphaTest);let y;p.map?y=p.map:p.alphaMap&&(y=p.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),u.uvTransform.value.copy(y.matrix))}function c(u,p){u.diffuse.value.copy(p.color),u.opacity.value=p.opacity,u.rotation.value=p.rotation,p.map&&(u.map.value=p.map),p.alphaMap&&(u.alphaMap.value=p.alphaMap),p.alphaTest>0&&(u.alphaTest.value=p.alphaTest);let b;p.map?b=p.map:p.alphaMap&&(b=p.alphaMap),b!==void 0&&(b.matrixAutoUpdate===!0&&b.updateMatrix(),u.uvTransform.value.copy(b.matrix))}function l(u,p){u.specular.value.copy(p.specular),u.shininess.value=Math.max(p.shininess,1e-4)}function f(u,p){p.gradientMap&&(u.gradientMap.value=p.gradientMap)}function d(u,p){u.roughness.value=p.roughness,u.metalness.value=p.metalness,p.roughnessMap&&(u.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(u.metalnessMap.value=p.metalnessMap),i.get(p).envMap&&(u.envMapIntensity.value=p.envMapIntensity)}function m(u,p,b){u.ior.value=p.ior,p.sheen>0&&(u.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),u.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(u.sheenColorMap.value=p.sheenColorMap),p.sheenRoughnessMap&&(u.sheenRoughnessMap.value=p.sheenRoughnessMap)),p.clearcoat>0&&(u.clearcoat.value=p.clearcoat,u.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(u.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(u.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(u.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),u.clearcoatNormalMap.value=p.clearcoatNormalMap,p.side===Ma&&u.clearcoatNormalScale.value.negate())),p.iridescence>0&&(u.iridescence.value=p.iridescence,u.iridescenceIOR.value=p.iridescenceIOR,u.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],u.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(u.iridescenceMap.value=p.iridescenceMap),p.iridescenceThicknessMap&&(u.iridescenceThicknessMap.value=p.iridescenceThicknessMap)),p.transmission>0&&(u.transmission.value=p.transmission,u.transmissionSamplerMap.value=b.texture,u.transmissionSamplerSize.value.set(b.width,b.height),p.transmissionMap&&(u.transmissionMap.value=p.transmissionMap),u.thickness.value=p.thickness,p.thicknessMap&&(u.thicknessMap.value=p.thicknessMap),u.attenuationDistance.value=p.attenuationDistance,u.attenuationColor.value.copy(p.attenuationColor)),u.specularIntensity.value=p.specularIntensity,u.specularColor.value.copy(p.specularColor),p.specularIntensityMap&&(u.specularIntensityMap.value=p.specularIntensityMap),p.specularColorMap&&(u.specularColorMap.value=p.specularColorMap)}function g(u,p){p.matcap&&(u.matcap.value=p.matcap)}function h(u,p){u.referencePosition.value.copy(p.referencePosition),u.nearDistance.value=p.nearDistance,u.farDistance.value=p.farDistance}return{refreshFogUniforms:a,refreshMaterialUniforms:e}}function Ah(r,i,a,e){let o={},n={},s=[];const t=a.isWebGL2?r.getParameter(35375):0;function c(k,y){const S=y.program;e.uniformBlockBinding(k,S)}function l(k,y){let S=o[k.id];S===void 0&&(h(k),S=f(k),o[k.id]=S,k.addEventListener("dispose",p));const _=y.program;e.updateUBOMapping(k,_);const R=i.render.frame;n[k.id]!==R&&(m(k),n[k.id]=R)}function f(k){const y=d();k.__bindingPointIndex=y;const S=r.createBuffer(),_=k.__size,R=k.usage;return r.bindBuffer(35345,S),r.bufferData(35345,_,R),r.bindBuffer(35345,null),r.bindBufferBase(35345,y,S),S}function d(){for(let k=0;k<t;k++)if(s.indexOf(k)===-1)return s.push(k),k;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(k){const y=o[k.id],S=k.uniforms,_=k.__cache;r.bindBuffer(35345,y);for(let R=0,T=S.length;R<T;R++){const v=S[R];if(g(v,R,_)===!0){const w=v.__offset,E=Array.isArray(v.value)?v.value:[v.value];let U=0;for(let W=0;W<E.length;W++){const P=E[W],z=u(P);typeof P=="number"?(v.__data[0]=P,r.bufferSubData(35345,w+U,v.__data)):P.isMatrix3?(v.__data[0]=P.elements[0],v.__data[1]=P.elements[1],v.__data[2]=P.elements[2],v.__data[3]=P.elements[0],v.__data[4]=P.elements[3],v.__data[5]=P.elements[4],v.__data[6]=P.elements[5],v.__data[7]=P.elements[0],v.__data[8]=P.elements[6],v.__data[9]=P.elements[7],v.__data[10]=P.elements[8],v.__data[11]=P.elements[0]):(P.toArray(v.__data,U),U+=z.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(35345,w,v.__data)}}r.bindBuffer(35345,null)}function g(k,y,S){const _=k.value;if(S[y]===void 0){if(typeof _=="number")S[y]=_;else{const R=Array.isArray(_)?_:[_],T=[];for(let v=0;v<R.length;v++)T.push(R[v].clone());S[y]=T}return!0}else if(typeof _=="number"){if(S[y]!==_)return S[y]=_,!0}else{const R=Array.isArray(S[y])?S[y]:[S[y]],T=Array.isArray(_)?_:[_];for(let v=0;v<R.length;v++){const w=R[v];if(w.equals(T[v])===!1)return w.copy(T[v]),!0}}return!1}function h(k){const y=k.uniforms;let S=0;const _=16;let R=0;for(let T=0,v=y.length;T<v;T++){const w=y[T],E={boundary:0,storage:0},U=Array.isArray(w.value)?w.value:[w.value];for(let W=0,P=U.length;W<P;W++){const z=U[W],D=u(z);E.boundary+=D.boundary,E.storage+=D.storage}if(w.__data=new Float32Array(E.storage/Float32Array.BYTES_PER_ELEMENT),w.__offset=S,T>0){R=S%_;const W=_-R;R!==0&&W-E.boundary<0&&(S+=_-R,w.__offset=S)}S+=E.storage}return R=S%_,R>0&&(S+=_-R),k.__size=S,k.__cache={},this}function u(k){const y={boundary:0,storage:0};return typeof k=="number"?(y.boundary=4,y.storage=4):k.isVector2?(y.boundary=8,y.storage=8):k.isVector3||k.isColor?(y.boundary=16,y.storage=12):k.isVector4?(y.boundary=16,y.storage=16):k.isMatrix3?(y.boundary=48,y.storage=48):k.isMatrix4?(y.boundary=64,y.storage=64):k.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",k),y}function p(k){const y=k.target;y.removeEventListener("dispose",p);const S=s.indexOf(y.__bindingPointIndex);s.splice(S,1),r.deleteBuffer(o[y.id]),delete o[y.id],delete n[y.id]}function b(){for(const k in o)r.deleteBuffer(o[k]);s=[],o={},n={}}return{bind:c,update:l,dispose:b}}function Rh(){const r=Rn("canvas");return r.style.display="block",r}function Sl(r={}){this.isWebGLRenderer=!0;const i=r.canvas!==void 0?r.canvas:Rh(),a=r.context!==void 0?r.context:null,e=r.depth!==void 0?r.depth:!0,o=r.stencil!==void 0?r.stencil:!0,n=r.antialias!==void 0?r.antialias:!1,s=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,t=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,c=r.powerPreference!==void 0?r.powerPreference:"default",l=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let f;a!==null?f=a.getContextAttributes().alpha:f=r.alpha!==void 0?r.alpha:!1;let d=null,m=null;const g=[],h=[];this.domElement=i,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=vo,this.physicallyCorrectLights=!1,this.toneMapping=Te,this.toneMappingExposure=1;const u=this;let p=!1,b=0,k=0,y=null,S=-1,_=null;const R=new la,T=new la;let v=null,w=i.width,E=i.height,U=1,W=null,P=null;const z=new la(0,0,w,E),D=new la(0,0,w,E);let J=!1;const q=new hl;let O=!1,Y=!1,X=null;const ci=new ia,L=new Di,Z=new B,ii={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ai(){return y===null?U:1}let G=a;function ki(x,N){for(let K=0;K<x.length;K++){const I=x[K],j=i.getContext(I,N);if(j!==null)return j}return null}try{const x={alpha:!0,depth:e,stencil:o,antialias:n,premultipliedAlpha:s,preserveDrawingBuffer:t,powerPreference:c,failIfMajorPerformanceCaveat:l};if("setAttribute"in i&&i.setAttribute("data-engine",`three.js r${Xs}`),i.addEventListener("webglcontextlost",hi,!1),i.addEventListener("webglcontextrestored",di,!1),i.addEventListener("webglcontextcreationerror",Ei,!1),G===null){const N=["webgl2","webgl","experimental-webgl"];if(u.isWebGL1Renderer===!0&&N.shift(),G=ki(N,x),G===null)throw ki(N)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}G.getShaderPrecisionFormat===void 0&&(G.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(x){throw console.error("THREE.WebGLRenderer: "+x.message),x}let mi,ui,ri,Bi,Si,vi,ba,Ka,fa,Va,Yi,Ii,he,Qa,A,M,V,Q,ei,ni,yi,ti,H,gi;function bi(){mi=new Gp(G),ui=new zp(G,mi,r),mi.init(ui),ti=new _h(G,mi,ui),ri=new vh(G,mi,ui),Bi=new Fp,Si=new nh,vi=new yh(G,mi,ri,Si,ui,ti,Bi),ba=new Ip(u),Ka=new Dp(u),fa=new Jm(G,ui),H=new Cp(G,mi,fa,ui),Va=new Up(G,fa,Bi,H),Yi=new Hp(G,Va,fa,Bi),ei=new jp(G,ui,vi),M=new Pp(Si),Ii=new oh(u,ba,Ka,mi,ui,H,M),he=new xh(u,Si),Qa=new sh,A=new uh(mi,ui),Q=new Tp(u,ba,Ka,ri,Yi,f,s),V=new bh(u,Yi,ui),gi=new Ah(G,Bi,ui,ri),ni=new Ep(G,mi,Bi,ui),yi=new Op(G,mi,Bi,ui),Bi.programs=Ii.programs,u.capabilities=ui,u.extensions=mi,u.properties=Si,u.renderLists=Qa,u.shadowMap=V,u.state=ri,u.info=Bi}bi();const li=new wh(u,G);this.xr=li,this.getContext=function(){return G},this.getContextAttributes=function(){return G.getContextAttributes()},this.forceContextLoss=function(){const x=mi.get("WEBGL_lose_context");x&&x.loseContext()},this.forceContextRestore=function(){const x=mi.get("WEBGL_lose_context");x&&x.restoreContext()},this.getPixelRatio=function(){return U},this.setPixelRatio=function(x){x!==void 0&&(U=x,this.setSize(w,E,!1))},this.getSize=function(x){return x.set(w,E)},this.setSize=function(x,N,K){if(li.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}w=x,E=N,i.width=Math.floor(x*U),i.height=Math.floor(N*U),K!==!1&&(i.style.width=x+"px",i.style.height=N+"px"),this.setViewport(0,0,x,N)},this.getDrawingBufferSize=function(x){return x.set(w*U,E*U).floor()},this.setDrawingBufferSize=function(x,N,K){w=x,E=N,U=K,i.width=Math.floor(x*K),i.height=Math.floor(N*K),this.setViewport(0,0,x,N)},this.getCurrentViewport=function(x){return x.copy(R)},this.getViewport=function(x){return x.copy(z)},this.setViewport=function(x,N,K,I){x.isVector4?z.set(x.x,x.y,x.z,x.w):z.set(x,N,K,I),ri.viewport(R.copy(z).multiplyScalar(U).floor())},this.getScissor=function(x){return x.copy(D)},this.setScissor=function(x,N,K,I){x.isVector4?D.set(x.x,x.y,x.z,x.w):D.set(x,N,K,I),ri.scissor(T.copy(D).multiplyScalar(U).floor())},this.getScissorTest=function(){return J},this.setScissorTest=function(x){ri.setScissorTest(J=x)},this.setOpaqueSort=function(x){W=x},this.setTransparentSort=function(x){P=x},this.getClearColor=function(x){return x.copy(Q.getClearColor())},this.setClearColor=function(){Q.setClearColor.apply(Q,arguments)},this.getClearAlpha=function(){return Q.getClearAlpha()},this.setClearAlpha=function(){Q.setClearAlpha.apply(Q,arguments)},this.clear=function(x=!0,N=!0,K=!0){let I=0;x&&(I|=16384),N&&(I|=256),K&&(I|=1024),G.clear(I)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){i.removeEventListener("webglcontextlost",hi,!1),i.removeEventListener("webglcontextrestored",di,!1),i.removeEventListener("webglcontextcreationerror",Ei,!1),Qa.dispose(),A.dispose(),Si.dispose(),ba.dispose(),Ka.dispose(),Yi.dispose(),H.dispose(),gi.dispose(),Ii.dispose(),li.dispose(),li.removeEventListener("sessionstart",si),li.removeEventListener("sessionend",fi),X&&(X.dispose(),X=null),Pi.stop()};function hi(x){x.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function di(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1;const x=Bi.autoReset,N=V.enabled,K=V.autoUpdate,I=V.needsUpdate,j=V.type;bi(),Bi.autoReset=x,V.enabled=N,V.autoUpdate=K,V.needsUpdate=I,V.type=j}function Ei(x){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",x.statusMessage)}function Ui(x){const N=x.target;N.removeEventListener("dispose",Ui),oa(N)}function oa(x){C(x),Si.remove(x)}function C(x){const N=Si.get(x).programs;N!==void 0&&(N.forEach(function(K){Ii.releaseProgram(K)}),x.isShaderMaterial&&Ii.releaseShaderCache(x))}this.renderBufferDirect=function(x,N,K,I,j,pi){N===null&&(N=ii);const _i=j.isMesh&&j.matrixWorld.determinant()<0,wi=Tf(x,N,K,I,j);ri.setMaterial(I,_i);let xi=K.index,zi=1;I.wireframe===!0&&(xi=Va.getWireframeAttribute(K),zi=2);const Ri=K.drawRange,Ti=K.attributes.position;let qi=Ri.start*zi,Ca=(Ri.start+Ri.count)*zi;pi!==null&&(qi=Math.max(qi,pi.start*zi),Ca=Math.min(Ca,(pi.start+pi.count)*zi)),xi!==null?(qi=Math.max(qi,0),Ca=Math.min(Ca,xi.count)):Ti!=null&&(qi=Math.max(qi,0),Ca=Math.min(Ca,Ti.count));const ve=Ca-qi;if(ve<0||ve===1/0)return;H.setup(j,I,wi,K,xi);let Je,Zi=ni;if(xi!==null&&(Je=fa.get(xi),Zi=yi,Zi.setIndex(Je)),j.isMesh)I.wireframe===!0?(ri.setLineWidth(I.wireframeLinewidth*ai()),Zi.setMode(1)):Zi.setMode(4);else if(j.isLine){let Ci=I.linewidth;Ci===void 0&&(Ci=1),ri.setLineWidth(Ci*ai()),j.isLineSegments?Zi.setMode(1):j.isLineLoop?Zi.setMode(2):Zi.setMode(3)}else j.isPoints?Zi.setMode(0):j.isSprite&&Zi.setMode(4);if(j.isInstancedMesh)Zi.renderInstances(qi,ve,j.count);else if(K.isInstancedBufferGeometry){const Ci=K._maxInstanceCount!==void 0?K._maxInstanceCount:1/0,zt=Math.min(K.instanceCount,Ci);Zi.renderInstances(qi,ve,zt)}else Zi.render(qi,ve)},this.compile=function(x,N){function K(I,j,pi){I.transparent===!0&&I.side===Be&&I.forceSinglePass===!1?(I.side=Ma,I.needsUpdate=!0,ja(I,j,pi),I.side=Ve,I.needsUpdate=!0,ja(I,j,pi),I.side=Be):ja(I,j,pi)}m=A.get(x),m.init(),h.push(m),x.traverseVisible(function(I){I.isLight&&I.layers.test(N.layers)&&(m.pushLight(I),I.castShadow&&m.pushShadow(I))}),m.setupLights(u.physicallyCorrectLights),x.traverse(function(I){const j=I.material;if(j)if(Array.isArray(j))for(let pi=0;pi<j.length;pi++){const _i=j[pi];K(_i,x,I)}else K(j,x,I)}),h.pop(),m=null};let F=null;function $(x){F&&F(x)}function si(){Pi.stop()}function fi(){Pi.start()}const Pi=new bl;Pi.setAnimationLoop($),typeof self<"u"&&Pi.setContext(self),this.setAnimationLoop=function(x){F=x,li.setAnimationLoop(x),x===null?Pi.stop():Pi.start()},li.addEventListener("sessionstart",si),li.addEventListener("sessionend",fi),this.render=function(x,N){if(N!==void 0&&N.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(p===!0)return;x.matrixWorldAutoUpdate===!0&&x.updateMatrixWorld(),N.parent===null&&N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),li.enabled===!0&&li.isPresenting===!0&&(li.cameraAutoUpdate===!0&&li.updateCamera(N),N=li.getCamera()),x.isScene===!0&&x.onBeforeRender(u,x,N,y),m=A.get(x,h.length),m.init(),h.push(m),ci.multiplyMatrices(N.projectionMatrix,N.matrixWorldInverse),q.setFromProjectionMatrix(ci),Y=this.localClippingEnabled,O=M.init(this.clippingPlanes,Y),d=Qa.get(x,g.length),d.init(),g.push(d),na(x,N,0,u.sortObjects),d.finish(),u.sortObjects===!0&&d.sort(W,P),O===!0&&M.beginShadows();const K=m.state.shadowsArray;if(V.render(K,x,N),O===!0&&M.endShadows(),this.info.autoReset===!0&&this.info.reset(),Q.render(d,x),m.setupLights(u.physicallyCorrectLights),N.isArrayCamera){const I=N.cameras;for(let j=0,pi=I.length;j<pi;j++){const _i=I[j];ma(d,x,_i,_i.viewport)}}else ma(d,x,N);y!==null&&(vi.updateMultisampleRenderTarget(y),vi.updateRenderTargetMipmap(y)),x.isScene===!0&&x.onAfterRender(u,x,N),H.resetDefaultState(),S=-1,_=null,h.pop(),h.length>0?m=h[h.length-1]:m=null,g.pop(),g.length>0?d=g[g.length-1]:d=null};function na(x,N,K,I){if(x.visible===!1)return;if(x.layers.test(N.layers)){if(x.isGroup)K=x.renderOrder;else if(x.isLOD)x.autoUpdate===!0&&x.update(N);else if(x.isLight)m.pushLight(x),x.castShadow&&m.pushShadow(x);else if(x.isSprite){if(!x.frustumCulled||q.intersectsSprite(x)){I&&Z.setFromMatrixPosition(x.matrixWorld).applyMatrix4(ci);const _i=Yi.update(x),wi=x.material;wi.visible&&d.push(x,_i,wi,K,Z.z,null)}}else if((x.isMesh||x.isLine||x.isPoints)&&(x.isSkinnedMesh&&x.skeleton.frame!==Bi.render.frame&&(x.skeleton.update(),x.skeleton.frame=Bi.render.frame),!x.frustumCulled||q.intersectsObject(x))){I&&Z.setFromMatrixPosition(x.matrixWorld).applyMatrix4(ci);const _i=Yi.update(x),wi=x.material;if(Array.isArray(wi)){const xi=_i.groups;for(let zi=0,Ri=xi.length;zi<Ri;zi++){const Ti=xi[zi],qi=wi[Ti.materialIndex];qi&&qi.visible&&d.push(x,_i,qi,K,Z.z,Ti)}}else wi.visible&&d.push(x,_i,wi,K,Z.z,null)}}const pi=x.children;for(let _i=0,wi=pi.length;_i<wi;_i++)na(pi[_i],N,K,I)}function ma(x,N,K,I){const j=x.opaque,pi=x.transmissive,_i=x.transparent;m.setupLightsView(K),O===!0&&M.setGlobalState(u.clippingPlanes,K),pi.length>0&&Ze(j,N,K),I&&ri.viewport(R.copy(I)),j.length>0&&Oi(j,N,K),pi.length>0&&Oi(pi,N,K),_i.length>0&&Oi(_i,N,K),ri.buffers.depth.setTest(!0),ri.buffers.depth.setMask(!0),ri.buffers.color.setMask(!0),ri.setPolygonOffset(!1)}function Ze(x,N,K){const I=ui.isWebGL2;X===null&&(X=new yo(1,1,{generateMipmaps:!0,type:mi.has("EXT_color_buffer_half_float")?xn:bo,minFilter:wn,samples:I&&n===!0?4:0})),u.getDrawingBufferSize(L),I?X.setSize(L.x,L.y):X.setSize(Es(L.x),Es(L.y));const j=u.getRenderTarget();u.setRenderTarget(X),u.clear();const pi=u.toneMapping;u.toneMapping=Te,Oi(x,N,K),u.toneMapping=pi,vi.updateMultisampleRenderTarget(X),vi.updateRenderTargetMipmap(X),u.setRenderTarget(j)}function Oi(x,N,K){const I=N.isScene===!0?N.overrideMaterial:null;for(let j=0,pi=x.length;j<pi;j++){const _i=x[j],wi=_i.object,xi=_i.geometry,zi=I===null?_i.material:I,Ri=_i.group;wi.layers.test(K.layers)&&be(wi,N,K,xi,zi,Ri)}}function be(x,N,K,I,j,pi){x.onBeforeRender(u,N,K,I,j,pi),x.modelViewMatrix.multiplyMatrices(K.matrixWorldInverse,x.matrixWorld),x.normalMatrix.getNormalMatrix(x.modelViewMatrix),j.onBeforeRender(u,N,K,I,x,pi),j.transparent===!0&&j.side===Be&&j.forceSinglePass===!1?(j.side=Ma,j.needsUpdate=!0,u.renderBufferDirect(K,N,I,j,x,pi),j.side=Ve,j.needsUpdate=!0,u.renderBufferDirect(K,N,I,j,x,pi),j.side=Be):u.renderBufferDirect(K,N,I,j,x,pi),x.onAfterRender(u,N,K,I,j,pi)}function ja(x,N,K){N.isScene!==!0&&(N=ii);const I=Si.get(x),j=m.state.lights,pi=m.state.shadowsArray,_i=j.state.version,wi=Ii.getParameters(x,j.state,pi,N,K),xi=Ii.getProgramCacheKey(wi);let zi=I.programs;I.environment=x.isMeshStandardMaterial?N.environment:null,I.fog=N.fog,I.envMap=(x.isMeshStandardMaterial?Ka:ba).get(x.envMap||I.environment),zi===void 0&&(x.addEventListener("dispose",Ui),zi=new Map,I.programs=zi);let Ri=zi.get(xi);if(Ri!==void 0){if(I.currentProgram===Ri&&I.lightsStateVersion===_i)return yr(x,wi),Ri}else wi.uniforms=Ii.getUniforms(x),x.onBuild(K,wi,u),x.onBeforeCompile(wi,u),Ri=Ii.acquireProgram(wi,xi),zi.set(xi,Ri),I.uniforms=wi.uniforms;const Ti=I.uniforms;(!x.isShaderMaterial&&!x.isRawShaderMaterial||x.clipping===!0)&&(Ti.clippingPlanes=M.uniform),yr(x,wi),I.needsLights=Ef(x),I.lightsStateVersion=_i,I.needsLights&&(Ti.ambientLightColor.value=j.state.ambient,Ti.lightProbe.value=j.state.probe,Ti.directionalLights.value=j.state.directional,Ti.directionalLightShadows.value=j.state.directionalShadow,Ti.spotLights.value=j.state.spot,Ti.spotLightShadows.value=j.state.spotShadow,Ti.rectAreaLights.value=j.state.rectArea,Ti.ltc_1.value=j.state.rectAreaLTC1,Ti.ltc_2.value=j.state.rectAreaLTC2,Ti.pointLights.value=j.state.point,Ti.pointLightShadows.value=j.state.pointShadow,Ti.hemisphereLights.value=j.state.hemi,Ti.directionalShadowMap.value=j.state.directionalShadowMap,Ti.directionalShadowMatrix.value=j.state.directionalShadowMatrix,Ti.spotShadowMap.value=j.state.spotShadowMap,Ti.spotLightMatrix.value=j.state.spotLightMatrix,Ti.spotLightMap.value=j.state.spotLightMap,Ti.pointShadowMap.value=j.state.pointShadowMap,Ti.pointShadowMatrix.value=j.state.pointShadowMatrix);const qi=Ri.getUniforms(),Ca=ct.seqWithValue(qi.seq,Ti);return I.currentProgram=Ri,I.uniformsList=Ca,Ri}function yr(x,N){const K=Si.get(x);K.outputEncoding=N.outputEncoding,K.instancing=N.instancing,K.skinning=N.skinning,K.morphTargets=N.morphTargets,K.morphNormals=N.morphNormals,K.morphColors=N.morphColors,K.morphTargetsCount=N.morphTargetsCount,K.numClippingPlanes=N.numClippingPlanes,K.numIntersection=N.numClipIntersection,K.vertexAlphas=N.vertexAlphas,K.vertexTangents=N.vertexTangents,K.toneMapping=N.toneMapping}function Tf(x,N,K,I,j){N.isScene!==!0&&(N=ii),vi.resetTextureUnits();const pi=N.fog,_i=I.isMeshStandardMaterial?N.environment:null,wi=y===null?u.outputEncoding:y.isXRRenderTarget===!0?y.texture.encoding:vo,xi=(I.isMeshStandardMaterial?Ka:ba).get(I.envMap||_i),zi=I.vertexColors===!0&&!!K.attributes.color&&K.attributes.color.itemSize===4,Ri=!!I.normalMap&&!!K.attributes.tangent,Ti=!!K.morphAttributes.position,qi=!!K.morphAttributes.normal,Ca=!!K.morphAttributes.color,ve=I.toneMapped?u.toneMapping:Te,Je=K.morphAttributes.position||K.morphAttributes.normal||K.morphAttributes.color,Zi=Je!==void 0?Je.length:0,Ci=Si.get(I),zt=m.state.lights;if(O===!0&&(Y===!0||x!==_)){const Ea=x===_&&I.id===S;M.setState(I,x,Ea)}let ta=!1;I.version===Ci.__version?(Ci.needsLights&&Ci.lightsStateVersion!==zt.state.version||Ci.outputEncoding!==wi||j.isInstancedMesh&&Ci.instancing===!1||!j.isInstancedMesh&&Ci.instancing===!0||j.isSkinnedMesh&&Ci.skinning===!1||!j.isSkinnedMesh&&Ci.skinning===!0||Ci.envMap!==xi||I.fog===!0&&Ci.fog!==pi||Ci.numClippingPlanes!==void 0&&(Ci.numClippingPlanes!==M.numPlanes||Ci.numIntersection!==M.numIntersection)||Ci.vertexAlphas!==zi||Ci.vertexTangents!==Ri||Ci.morphTargets!==Ti||Ci.morphNormals!==qi||Ci.morphColors!==Ca||Ci.toneMapping!==ve||ui.isWebGL2===!0&&Ci.morphTargetsCount!==Zi)&&(ta=!0):(ta=!0,Ci.__version=I.version);let Xe=Ci.currentProgram;ta===!0&&(Xe=ja(I,N,j));let _r=!1,rn=!1,Pt=!1;const va=Xe.getUniforms(),Ye=Ci.uniforms;if(ri.useProgram(Xe.program)&&(_r=!0,rn=!0,Pt=!0),I.id!==S&&(S=I.id,rn=!0),_r||_!==x){if(va.setValue(G,"projectionMatrix",x.projectionMatrix),ui.logarithmicDepthBuffer&&va.setValue(G,"logDepthBufFC",2/(Math.log(x.far+1)/Math.LN2)),_!==x&&(_=x,rn=!0,Pt=!0),I.isShaderMaterial||I.isMeshPhongMaterial||I.isMeshToonMaterial||I.isMeshStandardMaterial||I.envMap){const Ea=va.map.cameraPosition;Ea!==void 0&&Ea.setValue(G,Z.setFromMatrixPosition(x.matrixWorld))}(I.isMeshPhongMaterial||I.isMeshToonMaterial||I.isMeshLambertMaterial||I.isMeshBasicMaterial||I.isMeshStandardMaterial||I.isShaderMaterial)&&va.setValue(G,"isOrthographic",x.isOrthographicCamera===!0),(I.isMeshPhongMaterial||I.isMeshToonMaterial||I.isMeshLambertMaterial||I.isMeshBasicMaterial||I.isMeshStandardMaterial||I.isShaderMaterial||I.isShadowMaterial||j.isSkinnedMesh)&&va.setValue(G,"viewMatrix",x.matrixWorldInverse)}if(j.isSkinnedMesh){va.setOptional(G,j,"bindMatrix"),va.setOptional(G,j,"bindMatrixInverse");const Ea=j.skeleton;Ea&&(ui.floatVertexTextures?(Ea.boneTexture===null&&Ea.computeBoneTexture(),va.setValue(G,"boneTexture",Ea.boneTexture,vi),va.setValue(G,"boneTextureSize",Ea.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const It=K.morphAttributes;if((It.position!==void 0||It.normal!==void 0||It.color!==void 0&&ui.isWebGL2===!0)&&ei.update(j,K,I,Xe),(rn||Ci.receiveShadow!==j.receiveShadow)&&(Ci.receiveShadow=j.receiveShadow,va.setValue(G,"receiveShadow",j.receiveShadow)),I.isMeshGouraudMaterial&&I.envMap!==null&&(Ye.envMap.value=xi,Ye.flipEnvMap.value=xi.isCubeTexture&&xi.isRenderTargetTexture===!1?-1:1),rn&&(va.setValue(G,"toneMappingExposure",u.toneMappingExposure),Ci.needsLights&&Cf(Ye,Pt),pi&&I.fog===!0&&he.refreshFogUniforms(Ye,pi),he.refreshMaterialUniforms(Ye,I,U,E,X),ct.upload(G,Ci.uniformsList,Ye,vi)),I.isShaderMaterial&&I.uniformsNeedUpdate===!0&&(ct.upload(G,Ci.uniformsList,Ye,vi),I.uniformsNeedUpdate=!1),I.isSpriteMaterial&&va.setValue(G,"center",j.center),va.setValue(G,"modelViewMatrix",j.modelViewMatrix),va.setValue(G,"normalMatrix",j.normalMatrix),va.setValue(G,"modelMatrix",j.matrixWorld),I.isShaderMaterial||I.isRawShaderMaterial){const Ea=I.uniformsGroups;for(let Nt=0,zf=Ea.length;Nt<zf;Nt++)if(ui.isWebGL2){const kr=Ea[Nt];gi.update(kr,Xe),gi.bind(kr,Xe)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Xe}function Cf(x,N){x.ambientLightColor.needsUpdate=N,x.lightProbe.needsUpdate=N,x.directionalLights.needsUpdate=N,x.directionalLightShadows.needsUpdate=N,x.pointLights.needsUpdate=N,x.pointLightShadows.needsUpdate=N,x.spotLights.needsUpdate=N,x.spotLightShadows.needsUpdate=N,x.rectAreaLights.needsUpdate=N,x.hemisphereLights.needsUpdate=N}function Ef(x){return x.isMeshLambertMaterial||x.isMeshToonMaterial||x.isMeshPhongMaterial||x.isMeshStandardMaterial||x.isShadowMaterial||x.isShaderMaterial&&x.lights===!0}this.getActiveCubeFace=function(){return b},this.getActiveMipmapLevel=function(){return k},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(x,N,K){Si.get(x.texture).__webglTexture=N,Si.get(x.depthTexture).__webglTexture=K;const I=Si.get(x);I.__hasExternalTextures=!0,I.__hasExternalTextures&&(I.__autoAllocateDepthBuffer=K===void 0,I.__autoAllocateDepthBuffer||mi.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),I.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(x,N){const K=Si.get(x);K.__webglFramebuffer=N,K.__useDefaultFramebuffer=N===void 0},this.setRenderTarget=function(x,N=0,K=0){y=x,b=N,k=K;let I=!0,j=null,pi=!1,_i=!1;if(x){const xi=Si.get(x);xi.__useDefaultFramebuffer!==void 0?(ri.bindFramebuffer(36160,null),I=!1):xi.__webglFramebuffer===void 0?vi.setupRenderTarget(x):xi.__hasExternalTextures&&vi.rebindTextures(x,Si.get(x.texture).__webglTexture,Si.get(x.depthTexture).__webglTexture);const zi=x.texture;(zi.isData3DTexture||zi.isDataArrayTexture||zi.isCompressedArrayTexture)&&(_i=!0);const Ri=Si.get(x).__webglFramebuffer;x.isWebGLCubeRenderTarget?(j=Ri[N],pi=!0):ui.isWebGL2&&x.samples>0&&vi.useMultisampledRTT(x)===!1?j=Si.get(x).__webglMultisampledFramebuffer:j=Ri,R.copy(x.viewport),T.copy(x.scissor),v=x.scissorTest}else R.copy(z).multiplyScalar(U).floor(),T.copy(D).multiplyScalar(U).floor(),v=J;if(ri.bindFramebuffer(36160,j)&&ui.drawBuffers&&I&&ri.drawBuffers(x,j),ri.viewport(R),ri.scissor(T),ri.setScissorTest(v),pi){const xi=Si.get(x.texture);G.framebufferTexture2D(36160,36064,34069+N,xi.__webglTexture,K)}else if(_i){const xi=Si.get(x.texture),zi=N||0;G.framebufferTextureLayer(36160,36064,xi.__webglTexture,K||0,zi)}S=-1},this.readRenderTargetPixels=function(x,N,K,I,j,pi,_i){if(!(x&&x.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let wi=Si.get(x).__webglFramebuffer;if(x.isWebGLCubeRenderTarget&&_i!==void 0&&(wi=wi[_i]),wi){ri.bindFramebuffer(36160,wi);try{const xi=x.texture,zi=xi.format,Ri=xi.type;if(zi!==ne&&ti.convert(zi)!==G.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Ti=Ri===xn&&(mi.has("EXT_color_buffer_half_float")||ui.isWebGL2&&mi.has("EXT_color_buffer_float"));if(Ri!==bo&&ti.convert(Ri)!==G.getParameter(35738)&&!(Ri===co&&(ui.isWebGL2||mi.has("OES_texture_float")||mi.has("WEBGL_color_buffer_float")))&&!Ti){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}N>=0&&N<=x.width-I&&K>=0&&K<=x.height-j&&G.readPixels(N,K,I,j,ti.convert(zi),ti.convert(Ri),pi)}finally{const xi=y!==null?Si.get(y).__webglFramebuffer:null;ri.bindFramebuffer(36160,xi)}}},this.copyFramebufferToTexture=function(x,N,K=0){const I=Math.pow(2,-K),j=Math.floor(N.image.width*I),pi=Math.floor(N.image.height*I);vi.setTexture2D(N,0),G.copyTexSubImage2D(3553,K,0,0,x.x,x.y,j,pi),ri.unbindTexture()},this.copyTextureToTexture=function(x,N,K,I=0){const j=N.image.width,pi=N.image.height,_i=ti.convert(K.format),wi=ti.convert(K.type);vi.setTexture2D(K,0),G.pixelStorei(37440,K.flipY),G.pixelStorei(37441,K.premultiplyAlpha),G.pixelStorei(3317,K.unpackAlignment),N.isDataTexture?G.texSubImage2D(3553,I,x.x,x.y,j,pi,_i,wi,N.image.data):N.isCompressedTexture?G.compressedTexSubImage2D(3553,I,x.x,x.y,N.mipmaps[0].width,N.mipmaps[0].height,_i,N.mipmaps[0].data):G.texSubImage2D(3553,I,x.x,x.y,_i,wi,N.image),I===0&&K.generateMipmaps&&G.generateMipmap(3553),ri.unbindTexture()},this.copyTextureToTexture3D=function(x,N,K,I,j=0){if(u.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const pi=x.max.x-x.min.x+1,_i=x.max.y-x.min.y+1,wi=x.max.z-x.min.z+1,xi=ti.convert(I.format),zi=ti.convert(I.type);let Ri;if(I.isData3DTexture)vi.setTexture3D(I,0),Ri=32879;else if(I.isDataArrayTexture)vi.setTexture2DArray(I,0),Ri=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}G.pixelStorei(37440,I.flipY),G.pixelStorei(37441,I.premultiplyAlpha),G.pixelStorei(3317,I.unpackAlignment);const Ti=G.getParameter(3314),qi=G.getParameter(32878),Ca=G.getParameter(3316),ve=G.getParameter(3315),Je=G.getParameter(32877),Zi=K.isCompressedTexture?K.mipmaps[0]:K.image;G.pixelStorei(3314,Zi.width),G.pixelStorei(32878,Zi.height),G.pixelStorei(3316,x.min.x),G.pixelStorei(3315,x.min.y),G.pixelStorei(32877,x.min.z),K.isDataTexture||K.isData3DTexture?G.texSubImage3D(Ri,j,N.x,N.y,N.z,pi,_i,wi,xi,zi,Zi.data):K.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),G.compressedTexSubImage3D(Ri,j,N.x,N.y,N.z,pi,_i,wi,xi,Zi.data)):G.texSubImage3D(Ri,j,N.x,N.y,N.z,pi,_i,wi,xi,zi,Zi),G.pixelStorei(3314,Ti),G.pixelStorei(32878,qi),G.pixelStorei(3316,Ca),G.pixelStorei(3315,ve),G.pixelStorei(32877,Je),j===0&&I.generateMipmaps&&G.generateMipmap(Ri),ri.unbindTexture()},this.initTexture=function(x){x.isCubeTexture?vi.setTextureCube(x,0):x.isData3DTexture?vi.setTexture3D(x,0):x.isDataArrayTexture||x.isCompressedArrayTexture?vi.setTexture2DArray(x,0):vi.setTexture2D(x,0),ri.unbindTexture()},this.resetState=function(){b=0,k=0,y=null,ri.reset(),H.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class Th extends Sl{}Th.prototype.isWebGL1Renderer=!0;class Ch extends xa{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(i,a){return super.copy(i,a),i.background!==null&&(this.background=i.background.clone()),i.environment!==null&&(this.environment=i.environment.clone()),i.fog!==null&&(this.fog=i.fog.clone()),this.backgroundBlurriness=i.backgroundBlurriness,this.backgroundIntensity=i.backgroundIntensity,i.overrideMaterial!==null&&(this.overrideMaterial=i.overrideMaterial.clone()),this.matrixAutoUpdate=i.matrixAutoUpdate,this}toJSON(i){const a=super.toJSON(i);return this.fog!==null&&(a.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(a.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(a.object.backgroundIntensity=this.backgroundIntensity),a}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(i){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=i}}class Ml extends Dn{constructor(i){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ki(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(i)}copy(i){return super.copy(i),this.color.copy(i.color),this.map=i.map,this.alphaMap=i.alphaMap,this.size=i.size,this.sizeAttenuation=i.sizeAttenuation,this.fog=i.fog,this}}const Ic=new ia,Ps=new Ys,nt=new St,tt=new B;class Eh extends xa{constructor(i=new ge,a=new Ml){super(),this.isPoints=!0,this.type="Points",this.geometry=i,this.material=a,this.updateMorphTargets()}copy(i,a){return super.copy(i,a),this.material=i.material,this.geometry=i.geometry,this}raycast(i,a){const e=this.geometry,o=this.matrixWorld,n=i.params.Points.threshold,s=e.drawRange;if(e.boundingSphere===null&&e.computeBoundingSphere(),nt.copy(e.boundingSphere),nt.applyMatrix4(o),nt.radius+=n,i.ray.intersectsSphere(nt)===!1)return;Ic.copy(o).invert(),Ps.copy(i.ray).applyMatrix4(Ic);const t=n/((this.scale.x+this.scale.y+this.scale.z)/3),c=t*t,l=e.index,d=e.attributes.position;if(l!==null){const m=Math.max(0,s.start),g=Math.min(l.count,s.start+s.count);for(let h=m,u=g;h<u;h++){const p=l.getX(h);tt.fromBufferAttribute(d,p),Nc(tt,p,c,o,i,a,this)}}else{const m=Math.max(0,s.start),g=Math.min(d.count,s.start+s.count);for(let h=m,u=g;h<u;h++)tt.fromBufferAttribute(d,h),Nc(tt,h,c,o,i,a,this)}}updateMorphTargets(){const a=this.geometry.morphAttributes,e=Object.keys(a);if(e.length>0){const o=a[e[0]];if(o!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,s=o.length;n<s;n++){const t=o[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=n}}}}}function Nc(r,i,a,e,o,n,s){const t=Ps.distanceSqToPoint(r);if(t<a){const c=new B;Ps.closestPointToPoint(r,c),c.applyMatrix4(e);const l=o.ray.origin.distanceTo(c);if(l<o.near||l>o.far)return;n.push({distance:l,distanceToRay:Math.sqrt(t),point:c,index:i,face:null,object:s})}}class xt extends ge{constructor(i=1,a=32,e=16,o=0,n=Math.PI*2,s=0,t=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:i,widthSegments:a,heightSegments:e,phiStart:o,phiLength:n,thetaStart:s,thetaLength:t},a=Math.max(3,Math.floor(a)),e=Math.max(2,Math.floor(e));const c=Math.min(s+t,Math.PI);let l=0;const f=[],d=new B,m=new B,g=[],h=[],u=[],p=[];for(let b=0;b<=e;b++){const k=[],y=b/e;let S=0;b==0&&s==0?S=.5/a:b==e&&c==Math.PI&&(S=-.5/a);for(let _=0;_<=a;_++){const R=_/a;d.x=-i*Math.cos(o+R*n)*Math.sin(s+y*t),d.y=i*Math.cos(s+y*t),d.z=i*Math.sin(o+R*n)*Math.sin(s+y*t),h.push(d.x,d.y,d.z),m.copy(d).normalize(),u.push(m.x,m.y,m.z),p.push(R+S,1-y),k.push(l++)}f.push(k)}for(let b=0;b<e;b++)for(let k=0;k<a;k++){const y=f[b][k+1],S=f[b][k],_=f[b+1][k],R=f[b+1][k+1];(b!==0||s>0)&&g.push(y,S,R),(b!==e-1||c<Math.PI)&&g.push(S,_,R)}this.setIndex(g),this.setAttribute("position",new se(h,3)),this.setAttribute("normal",new se(u,3)),this.setAttribute("uv",new se(p,2))}static fromJSON(i){return new xt(i.radius,i.widthSegments,i.heightSegments,i.phiStart,i.phiLength,i.thetaStart,i.thetaLength)}}const Lc={enabled:!1,files:{},add:function(r,i){this.enabled!==!1&&(this.files[r]=i)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class zh{constructor(i,a,e){const o=this;let n=!1,s=0,t=0,c;const l=[];this.onStart=void 0,this.onLoad=i,this.onProgress=a,this.onError=e,this.itemStart=function(f){t++,n===!1&&o.onStart!==void 0&&o.onStart(f,s,t),n=!0},this.itemEnd=function(f){s++,o.onProgress!==void 0&&o.onProgress(f,s,t),s===t&&(n=!1,o.onLoad!==void 0&&o.onLoad())},this.itemError=function(f){o.onError!==void 0&&o.onError(f)},this.resolveURL=function(f){return c?c(f):f},this.setURLModifier=function(f){return c=f,this},this.addHandler=function(f,d){return l.push(f,d),this},this.removeHandler=function(f){const d=l.indexOf(f);return d!==-1&&l.splice(d,2),this},this.getHandler=function(f){for(let d=0,m=l.length;d<m;d+=2){const g=l[d],h=l[d+1];if(g.global&&(g.lastIndex=0),g.test(f))return h}return null}}}const Ph=new zh;class wl{constructor(i){this.manager=i!==void 0?i:Ph,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(i,a){const e=this;return new Promise(function(o,n){e.load(i,o,a,n)})}parse(){}setCrossOrigin(i){return this.crossOrigin=i,this}setWithCredentials(i){return this.withCredentials=i,this}setPath(i){return this.path=i,this}setResourcePath(i){return this.resourcePath=i,this}setRequestHeader(i){return this.requestHeader=i,this}}class Ih extends wl{constructor(i){super(i)}load(i,a,e,o){this.path!==void 0&&(i=this.path+i),i=this.manager.resolveURL(i);const n=this,s=Lc.get(i);if(s!==void 0)return n.manager.itemStart(i),setTimeout(function(){a&&a(s),n.manager.itemEnd(i)},0),s;const t=Rn("img");function c(){f(),Lc.add(i,this),a&&a(this),n.manager.itemEnd(i)}function l(d){f(),o&&o(d),n.manager.itemError(i),n.manager.itemEnd(i)}function f(){t.removeEventListener("load",c,!1),t.removeEventListener("error",l,!1)}return t.addEventListener("load",c,!1),t.addEventListener("error",l,!1),i.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(t.crossOrigin=this.crossOrigin),n.manager.itemStart(i),t.src=i,t}}class Nh extends wl{constructor(i){super(i)}load(i,a,e,o){const n=new wa,s=new Ih(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(i,function(t){n.image=t,n.needsUpdate=!0,a!==void 0&&a(n)},e,o),n}}class Lh{constructor(i,a,e=0,o=1/0){this.ray=new Ys(i,a),this.near=e,this.far=o,this.camera=null,this.layers=new $s,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(i,a){this.ray.set(i,a)}setFromCamera(i,a){a.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(a.matrixWorld),this.ray.direction.set(i.x,i.y,.5).unproject(a).sub(this.ray.origin).normalize(),this.camera=a):a.isOrthographicCamera?(this.ray.origin.set(i.x,i.y,(a.near+a.far)/(a.near-a.far)).unproject(a),this.ray.direction.set(0,0,-1).transformDirection(a.matrixWorld),this.camera=a):console.error("THREE.Raycaster: Unsupported camera type: "+a.type)}intersectObject(i,a=!0,e=[]){return Is(i,this,e,a),e.sort(Bc),e}intersectObjects(i,a=!0,e=[]){for(let o=0,n=i.length;o<n;o++)Is(i[o],this,e,a);return e.sort(Bc),e}}function Bc(r,i){return r.distance-i.distance}function Is(r,i,a,e){if(r.layers.test(i.layers)&&r.raycast(i,a),e===!0){const o=r.children;for(let n=0,s=o.length;n<s;n++)Is(o[n],i,a,!0)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Xs}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Xs);function we(r){if(r===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}function xl(r,i){r.prototype=Object.create(i.prototype),r.prototype.constructor=r,r.__proto__=i}/*!
 * GSAP 3.11.4
 * https://greensock.com
 *
 * @license Copyright 2008-2022, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/var Ua={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},Xo={duration:.5,overwrite:!1,delay:0},er,ga,Xi,Ja=1e8,Li=1/Ja,Ns=Math.PI*2,Bh=Ns/4,Dh=0,Al=Math.sqrt,Gh=Math.cos,Uh=Math.sin,ra=function(i){return typeof i=="string"},Hi=function(i){return typeof i=="function"},Ee=function(i){return typeof i=="number"},or=function(i){return typeof i>"u"},pe=function(i){return typeof i=="object"},Aa=function(i){return i!==!1},Rl=function(){return typeof window<"u"},st=function(i){return Hi(i)||ra(i)},Tl=typeof ArrayBuffer=="function"&&ArrayBuffer.isView||function(){},ha=Array.isArray,Ls=/(?:-?\.?\d|\.)+/gi,Cl=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,Uo=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,ps=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,El=/[+-]=-?[.\d]+/,zl=/[^,'"\[\]\s]+/gi,Oh=/^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,Vi,qa,Bs,nr,Oa={},ut={},Pl,Il=function(i){return(ut=_o(i,Oa))&&Fa},tr=function(i,a){return console.warn("Invalid property",i,"set to",a,"Missing plugin? gsap.registerPlugin()")},dt=function(i,a){return!a&&console.warn(i)},Nl=function(i,a){return i&&(Oa[i]=a)&&ut&&(ut[i]=a)||Oa},Tn=function(){return 0},Fh={suppressEvents:!0,isStart:!0,kill:!1},lt={suppressEvents:!0,kill:!1},Kh={suppressEvents:!0},sr={},Fe=[],Ds={},Ll,Na={},gs={},Dc=30,ft=[],rr="",cr=function(i){var a=i[0],e,o;if(pe(a)||Hi(a)||(i=[i]),!(e=(a._gsap||{}).harness)){for(o=ft.length;o--&&!ft[o].targetTest(a););e=ft[o]}for(o=i.length;o--;)i[o]&&(i[o]._gsap||(i[o]._gsap=new nf(i[o],e)))||i.splice(o,1);return i},uo=function(i){return i._gsap||cr(Xa(i))[0]._gsap},Bl=function(i,a,e){return(e=i[a])&&Hi(e)?i[a]():or(e)&&i.getAttribute&&i.getAttribute(a)||e},Ra=function(i,a){return(i=i.split(",")).forEach(a)||i},Wi=function(i){return Math.round(i*1e5)/1e5||0},ca=function(i){return Math.round(i*1e7)/1e7||0},Vo=function(i,a){var e=a.charAt(0),o=parseFloat(a.substr(2));return i=parseFloat(i),e==="+"?i+o:e==="-"?i-o:e==="*"?i*o:i/o},Vh=function(i,a){for(var e=a.length,o=0;i.indexOf(a[o])<0&&++o<e;);return o<e},pt=function(){var i=Fe.length,a=Fe.slice(0),e,o;for(Ds={},Fe.length=0,e=0;e<i;e++)o=a[e],o&&o._lazy&&(o.render(o._lazy[0],o._lazy[1],!0)._lazy=0)},Dl=function(i,a,e,o){Fe.length&&!ga&&pt(),i.render(a,e,o||ga&&a<0&&(i._initted||i._startAt)),Fe.length&&!ga&&pt()},Gl=function(i){var a=parseFloat(i);return(a||a===0)&&(i+"").match(zl).length<2?a:ra(i)?i.trim():i},Ul=function(i){return i},$a=function(i,a){for(var e in a)e in i||(i[e]=a[e]);return i},jh=function(i){return function(a,e){for(var o in e)o in a||o==="duration"&&i||o==="ease"||(a[o]=e[o])}},_o=function(i,a){for(var e in a)i[e]=a[e];return i},Gc=function r(i,a){for(var e in a)e!=="__proto__"&&e!=="constructor"&&e!=="prototype"&&(i[e]=pe(a[e])?r(i[e]||(i[e]={}),a[e]):a[e]);return i},gt=function(i,a){var e={},o;for(o in i)o in a||(e[o]=i[o]);return e},kn=function(i){var a=i.parent||Vi,e=i.keyframes?jh(ha(i.keyframes)):$a;if(Aa(i.inherit))for(;a;)e(i,a.vars.defaults),a=a.parent||a._dp;return i},Hh=function(i,a){for(var e=i.length,o=e===a.length;o&&e--&&i[e]===a[e];);return e<0},Ol=function(i,a,e,o,n){e===void 0&&(e="_first"),o===void 0&&(o="_last");var s=i[o],t;if(n)for(t=a[n];s&&s[n]>t;)s=s._prev;return s?(a._next=s._next,s._next=a):(a._next=i[e],i[e]=a),a._next?a._next._prev=a:i[o]=a,a._prev=s,a.parent=a._dp=i,a},At=function(i,a,e,o){e===void 0&&(e="_first"),o===void 0&&(o="_last");var n=a._prev,s=a._next;n?n._next=s:i[e]===a&&(i[e]=s),s?s._prev=n:i[o]===a&&(i[o]=n),a._next=a._prev=a.parent=null},je=function(i,a){i.parent&&(!a||i.parent.autoRemoveChildren)&&i.parent.remove(i),i._act=0},po=function(i,a){if(i&&(!a||a._end>i._dur||a._start<0))for(var e=i;e;)e._dirty=1,e=e.parent;return i},Wh=function(i){for(var a=i.parent;a&&a.parent;)a._dirty=1,a.totalDuration(),a=a.parent;return i},Gs=function(i,a,e,o){return i._startAt&&(ga?i._startAt.revert(lt):i.vars.immediateRender&&!i.vars.autoRevert||i._startAt.render(a,!0,o))},qh=function r(i){return!i||i._ts&&r(i.parent)},Uc=function(i){return i._repeat?Yo(i._tTime,i=i.duration()+i._rDelay)*i:0},Yo=function(i,a){var e=Math.floor(i/=a);return i&&e===i?e-1:e},ht=function(i,a){return(i-a._start)*a._ts+(a._ts>=0?0:a._dirty?a.totalDuration():a._tDur)},Rt=function(i){return i._end=ca(i._start+(i._tDur/Math.abs(i._ts||i._rts||Li)||0))},Tt=function(i,a){var e=i._dp;return e&&e.smoothChildTiming&&i._ts&&(i._start=ca(e._time-(i._ts>0?a/i._ts:((i._dirty?i.totalDuration():i._tDur)-a)/-i._ts)),Rt(i),e._dirty||po(e,i)),i},Fl=function(i,a){var e;if((a._time||a._initted&&!a._dur)&&(e=ht(i.rawTime(),a),(!a._dur||Gn(0,a.totalDuration(),e)-a._tTime>Li)&&a.render(e,!0)),po(i,a)._dp&&i._initted&&i._time>=i._dur&&i._ts){if(i._dur<i.duration())for(e=i;e._dp;)e.rawTime()>=0&&e.totalTime(e._tTime),e=e._dp;i._zTime=-Li}},fe=function(i,a,e,o){return a.parent&&je(a),a._start=ca((Ee(e)?e:e||i!==Vi?Wa(i,e,a):i._time)+a._delay),a._end=ca(a._start+(a.totalDuration()/Math.abs(a.timeScale())||0)),Ol(i,a,"_first","_last",i._sort?"_start":0),Us(a)||(i._recent=a),o||Fl(i,a),i._ts<0&&Tt(i,i._tTime),i},Kl=function(i,a){return(Oa.ScrollTrigger||tr("scrollTrigger",a))&&Oa.ScrollTrigger.create(a,i)},Vl=function(i,a,e,o,n){if(fr(i,a,n),!i._initted)return 1;if(!e&&i._pt&&!ga&&(i._dur&&i.vars.lazy!==!1||!i._dur&&i.vars.lazy)&&Ll!==Da.frame)return Fe.push(i),i._lazy=[n,o],1},Zh=function r(i){var a=i.parent;return a&&a._ts&&a._initted&&!a._lock&&(a.rawTime()<0||r(a))},Us=function(i){var a=i.data;return a==="isFromStart"||a==="isStart"},Jh=function(i,a,e,o){var n=i.ratio,s=a<0||!a&&(!i._start&&Zh(i)&&!(!i._initted&&Us(i))||(i._ts<0||i._dp._ts<0)&&!Us(i))?0:1,t=i._rDelay,c=0,l,f,d;if(t&&i._repeat&&(c=Gn(0,i._tDur,a),f=Yo(c,t),i._yoyo&&f&1&&(s=1-s),f!==Yo(i._tTime,t)&&(n=1-s,i.vars.repeatRefresh&&i._initted&&i.invalidate())),s!==n||ga||o||i._zTime===Li||!a&&i._zTime){if(!i._initted&&Vl(i,a,o,e,c))return;for(d=i._zTime,i._zTime=a||(e?Li:0),e||(e=a&&!d),i.ratio=s,i._from&&(s=1-s),i._time=0,i._tTime=c,l=i._pt;l;)l.r(s,l.d),l=l._next;a<0&&Gs(i,a,e,!0),i._onUpdate&&!e&&Ya(i,"onUpdate"),c&&i._repeat&&!e&&i.parent&&Ya(i,"onRepeat"),(a>=i._tDur||a<0)&&i.ratio===s&&(s&&je(i,1),!e&&!ga&&(Ya(i,s?"onComplete":"onReverseComplete",!0),i._prom&&i._prom()))}else i._zTime||(i._zTime=a)},Xh=function(i,a,e){var o;if(e>a)for(o=i._first;o&&o._start<=e;){if(o.data==="isPause"&&o._start>a)return o;o=o._next}else for(o=i._last;o&&o._start>=e;){if(o.data==="isPause"&&o._start<a)return o;o=o._prev}},$o=function(i,a,e,o){var n=i._repeat,s=ca(a)||0,t=i._tTime/i._tDur;return t&&!o&&(i._time*=s/i._dur),i._dur=s,i._tDur=n?n<0?1e10:ca(s*(n+1)+i._rDelay*n):s,t>0&&!o&&Tt(i,i._tTime=i._tDur*t),i.parent&&Rt(i),e||po(i.parent,i),i},Oc=function(i){return i instanceof Sa?po(i):$o(i,i._dur)},Yh={_start:0,endTime:Tn,totalDuration:Tn},Wa=function r(i,a,e){var o=i.labels,n=i._recent||Yh,s=i.duration()>=Ja?n.endTime(!1):i._dur,t,c,l;return ra(a)&&(isNaN(a)||a in o)?(c=a.charAt(0),l=a.substr(-1)==="%",t=a.indexOf("="),c==="<"||c===">"?(t>=0&&(a=a.replace(/=/,"")),(c==="<"?n._start:n.endTime(n._repeat>=0))+(parseFloat(a.substr(1))||0)*(l?(t<0?n:e).totalDuration()/100:1)):t<0?(a in o||(o[a]=s),o[a]):(c=parseFloat(a.charAt(t-1)+a.substr(t+1)),l&&e&&(c=c/100*(ha(e)?e[0]:e).totalDuration()),t>1?r(i,a.substr(0,t-1),e)+c:s+c)):a==null?s:+a},Sn=function(i,a,e){var o=Ee(a[1]),n=(o?2:1)+(i<2?0:1),s=a[n],t,c;if(o&&(s.duration=a[1]),s.parent=e,i){for(t=s,c=e;c&&!("immediateRender"in t);)t=c.vars.defaults||{},c=Aa(c.vars.inherit)&&c.parent;s.immediateRender=Aa(t.immediateRender),i<2?s.runBackwards=1:s.startAt=a[n-1]}return new Qi(a[0],s,a[n+1])},qe=function(i,a){return i||i===0?a(i):a},Gn=function(i,a,e){return e<i?i:e>a?a:e},da=function(i,a){return!ra(i)||!(a=Oh.exec(i))?"":a[1]},$h=function(i,a,e){return qe(e,function(o){return Gn(i,a,o)})},Os=[].slice,jl=function(i,a){return i&&pe(i)&&"length"in i&&(!a&&!i.length||i.length-1 in i&&pe(i[0]))&&!i.nodeType&&i!==qa},Qh=function(i,a,e){return e===void 0&&(e=[]),i.forEach(function(o){var n;return ra(o)&&!a||jl(o,1)?(n=e).push.apply(n,Xa(o)):e.push(o)})||e},Xa=function(i,a,e){return Xi&&!a&&Xi.selector?Xi.selector(i):ra(i)&&!e&&(Bs||!Qo())?Os.call((a||nr).querySelectorAll(i),0):ha(i)?Qh(i,e):jl(i)?Os.call(i,0):i?[i]:[]},Fs=function(i){return i=Xa(i)[0]||dt("Invalid scope")||{},function(a){var e=i.current||i.nativeElement||i;return Xa(a,e.querySelectorAll?e:e===i?dt("Invalid scope")||nr.createElement("div"):i)}},Hl=function(i){return i.sort(function(){return .5-Math.random()})},Wl=function(i){if(Hi(i))return i;var a=pe(i)?i:{each:i},e=go(a.ease),o=a.from||0,n=parseFloat(a.base)||0,s={},t=o>0&&o<1,c=isNaN(o)||t,l=a.axis,f=o,d=o;return ra(o)?f=d={center:.5,edges:.5,end:1}[o]||0:!t&&c&&(f=o[0],d=o[1]),function(m,g,h){var u=(h||a).length,p=s[u],b,k,y,S,_,R,T,v,w;if(!p){if(w=a.grid==="auto"?0:(a.grid||[1,Ja])[1],!w){for(T=-Ja;T<(T=h[w++].getBoundingClientRect().left)&&w<u;);w--}for(p=s[u]=[],b=c?Math.min(w,u)*f-.5:o%w,k=w===Ja?0:c?u*d/w-.5:o/w|0,T=0,v=Ja,R=0;R<u;R++)y=R%w-b,S=k-(R/w|0),p[R]=_=l?Math.abs(l==="y"?S:y):Al(y*y+S*S),_>T&&(T=_),_<v&&(v=_);o==="random"&&Hl(p),p.max=T-v,p.min=v,p.v=u=(parseFloat(a.amount)||parseFloat(a.each)*(w>u?u-1:l?l==="y"?u/w:w:Math.max(w,u/w))||0)*(o==="edges"?-1:1),p.b=u<0?n-u:n,p.u=da(a.amount||a.each)||0,e=e&&u<0?af(e):e}return u=(p[m]-p.min)/p.max||0,ca(p.b+(e?e(u):u)*p.v)+p.u}},Ks=function(i){var a=Math.pow(10,((i+"").split(".")[1]||"").length);return function(e){var o=ca(Math.round(parseFloat(e)/i)*i*a);return(o-o%1)/a+(Ee(e)?0:da(e))}},ql=function(i,a){var e=ha(i),o,n;return!e&&pe(i)&&(o=e=i.radius||Ja,i.values?(i=Xa(i.values),(n=!Ee(i[0]))&&(o*=o)):i=Ks(i.increment)),qe(a,e?Hi(i)?function(s){return n=i(s),Math.abs(n-s)<=o?n:s}:function(s){for(var t=parseFloat(n?s.x:s),c=parseFloat(n?s.y:0),l=Ja,f=0,d=i.length,m,g;d--;)n?(m=i[d].x-t,g=i[d].y-c,m=m*m+g*g):m=Math.abs(i[d]-t),m<l&&(l=m,f=d);return f=!o||l<=o?i[f]:s,n||f===s||Ee(s)?f:f+da(s)}:Ks(i))},Zl=function(i,a,e,o){return qe(ha(i)?!a:e===!0?!!(e=0):!o,function(){return ha(i)?i[~~(Math.random()*i.length)]:(e=e||1e-5)&&(o=e<1?Math.pow(10,(e+"").length-2):1)&&Math.floor(Math.round((i-e/2+Math.random()*(a-i+e*.99))/e)*e*o)/o})},ib=function(){for(var i=arguments.length,a=new Array(i),e=0;e<i;e++)a[e]=arguments[e];return function(o){return a.reduce(function(n,s){return s(n)},o)}},ab=function(i,a){return function(e){return i(parseFloat(e))+(a||da(e))}},eb=function(i,a,e){return Xl(i,a,0,1,e)},Jl=function(i,a,e){return qe(e,function(o){return i[~~a(o)]})},ob=function r(i,a,e){var o=a-i;return ha(i)?Jl(i,r(0,i.length),a):qe(e,function(n){return(o+(n-i)%o)%o+i})},nb=function r(i,a,e){var o=a-i,n=o*2;return ha(i)?Jl(i,r(0,i.length-1),a):qe(e,function(s){return s=(n+(s-i)%n)%n||0,i+(s>o?n-s:s)})},Cn=function(i){for(var a=0,e="",o,n,s,t;~(o=i.indexOf("random(",a));)s=i.indexOf(")",o),t=i.charAt(o+7)==="[",n=i.substr(o+7,s-o-7).match(t?zl:Ls),e+=i.substr(a,o-a)+Zl(t?n:+n[0],t?0:+n[1],+n[2]||1e-5),a=s+1;return e+i.substr(a,i.length-a)},Xl=function(i,a,e,o,n){var s=a-i,t=o-e;return qe(n,function(c){return e+((c-i)/s*t||0)})},tb=function r(i,a,e,o){var n=isNaN(i+a)?0:function(g){return(1-g)*i+g*a};if(!n){var s=ra(i),t={},c,l,f,d,m;if(e===!0&&(o=1)&&(e=null),s)i={p:i},a={p:a};else if(ha(i)&&!ha(a)){for(f=[],d=i.length,m=d-2,l=1;l<d;l++)f.push(r(i[l-1],i[l]));d--,n=function(h){h*=d;var u=Math.min(m,~~h);return f[u](h-u)},e=a}else o||(i=_o(ha(i)?[]:{},i));if(!f){for(c in a)lr.call(t,i,c,"get",a[c]);n=function(h){return dr(h,t)||(s?i.p:i)}}}return qe(e,n)},Fc=function(i,a,e){var o=i.labels,n=Ja,s,t,c;for(s in o)t=o[s]-a,t<0==!!e&&t&&n>(t=Math.abs(t))&&(c=s,n=t);return c},Ya=function(i,a,e){var o=i.vars,n=o[a],s=Xi,t=i._ctx,c,l,f;if(n)return c=o[a+"Params"],l=o.callbackScope||i,e&&Fe.length&&pt(),t&&(Xi=t),f=c?n.apply(l,c):n.call(l),Xi=s,f},yn=function(i){return je(i),i.scrollTrigger&&i.scrollTrigger.kill(!!ga),i.progress()<1&&Ya(i,"onInterrupt"),i},Oo,sb=function(i){i=!i.name&&i.default||i;var a=i.name,e=Hi(i),o=a&&!e&&i.init?function(){this._props=[]}:i,n={init:Tn,render:dr,add:lr,kill:Sb,modifier:kb,rawVars:0},s={targetTest:0,get:0,getSetter:ur,aliases:{},register:0};if(Qo(),i!==o){if(Na[a])return;$a(o,$a(gt(i,n),s)),_o(o.prototype,_o(n,gt(i,s))),Na[o.prop=a]=o,i.targetTest&&(ft.push(o),sr[a]=1),a=(a==="css"?"CSS":a.charAt(0).toUpperCase()+a.substr(1))+"Plugin"}Nl(a,o),i.register&&i.register(Fa,o,Ta)},Ni=255,_n={aqua:[0,Ni,Ni],lime:[0,Ni,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,Ni],navy:[0,0,128],white:[Ni,Ni,Ni],olive:[128,128,0],yellow:[Ni,Ni,0],orange:[Ni,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[Ni,0,0],pink:[Ni,192,203],cyan:[0,Ni,Ni],transparent:[Ni,Ni,Ni,0]},hs=function(i,a,e){return i+=i<0?1:i>1?-1:0,(i*6<1?a+(e-a)*i*6:i<.5?e:i*3<2?a+(e-a)*(2/3-i)*6:a)*Ni+.5|0},Yl=function(i,a,e){var o=i?Ee(i)?[i>>16,i>>8&Ni,i&Ni]:0:_n.black,n,s,t,c,l,f,d,m,g,h;if(!o){if(i.substr(-1)===","&&(i=i.substr(0,i.length-1)),_n[i])o=_n[i];else if(i.charAt(0)==="#"){if(i.length<6&&(n=i.charAt(1),s=i.charAt(2),t=i.charAt(3),i="#"+n+n+s+s+t+t+(i.length===5?i.charAt(4)+i.charAt(4):"")),i.length===9)return o=parseInt(i.substr(1,6),16),[o>>16,o>>8&Ni,o&Ni,parseInt(i.substr(7),16)/255];i=parseInt(i.substr(1),16),o=[i>>16,i>>8&Ni,i&Ni]}else if(i.substr(0,3)==="hsl"){if(o=h=i.match(Ls),!a)c=+o[0]%360/360,l=+o[1]/100,f=+o[2]/100,s=f<=.5?f*(l+1):f+l-f*l,n=f*2-s,o.length>3&&(o[3]*=1),o[0]=hs(c+1/3,n,s),o[1]=hs(c,n,s),o[2]=hs(c-1/3,n,s);else if(~i.indexOf("="))return o=i.match(Cl),e&&o.length<4&&(o[3]=1),o}else o=i.match(Ls)||_n.transparent;o=o.map(Number)}return a&&!h&&(n=o[0]/Ni,s=o[1]/Ni,t=o[2]/Ni,d=Math.max(n,s,t),m=Math.min(n,s,t),f=(d+m)/2,d===m?c=l=0:(g=d-m,l=f>.5?g/(2-d-m):g/(d+m),c=d===n?(s-t)/g+(s<t?6:0):d===s?(t-n)/g+2:(n-s)/g+4,c*=60),o[0]=~~(c+.5),o[1]=~~(l*100+.5),o[2]=~~(f*100+.5)),e&&o.length<4&&(o[3]=1),o},$l=function(i){var a=[],e=[],o=-1;return i.split(Ke).forEach(function(n){var s=n.match(Uo)||[];a.push.apply(a,s),e.push(o+=s.length+1)}),a.c=e,a},Kc=function(i,a,e){var o="",n=(i+o).match(Ke),s=a?"hsla(":"rgba(",t=0,c,l,f,d;if(!n)return i;if(n=n.map(function(m){return(m=Yl(m,a,1))&&s+(a?m[0]+","+m[1]+"%,"+m[2]+"%,"+m[3]:m.join(","))+")"}),e&&(f=$l(i),c=e.c,c.join(o)!==f.c.join(o)))for(l=i.replace(Ke,"1").split(Uo),d=l.length-1;t<d;t++)o+=l[t]+(~c.indexOf(t)?n.shift()||s+"0,0,0,0)":(f.length?f:n.length?n:e).shift());if(!l)for(l=i.split(Ke),d=l.length-1;t<d;t++)o+=l[t]+n[t];return o+l[d]},Ke=function(){var r="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",i;for(i in _n)r+="|"+i+"\\b";return new RegExp(r+")","gi")}(),rb=/hsl[a]?\(/,Ql=function(i){var a=i.join(" "),e;if(Ke.lastIndex=0,Ke.test(a))return e=rb.test(a),i[1]=Kc(i[1],e),i[0]=Kc(i[0],e,$l(i[1])),!0},En,Da=function(){var r=Date.now,i=500,a=33,e=r(),o=e,n=1e3/240,s=n,t=[],c,l,f,d,m,g,h=function u(p){var b=r()-o,k=p===!0,y,S,_,R;if(b>i&&(e+=b-a),o+=b,_=o-e,y=_-s,(y>0||k)&&(R=++d.frame,m=_-d.time*1e3,d.time=_=_/1e3,s+=y+(y>=n?4:n-y),S=1),k||(c=l(u)),S)for(g=0;g<t.length;g++)t[g](_,m,R,p)};return d={time:0,frame:0,tick:function(){h(!0)},deltaRatio:function(p){return m/(1e3/(p||60))},wake:function(){Pl&&(!Bs&&Rl()&&(qa=Bs=window,nr=qa.document||{},Oa.gsap=Fa,(qa.gsapVersions||(qa.gsapVersions=[])).push(Fa.version),Il(ut||qa.GreenSockGlobals||!qa.gsap&&qa||{}),f=qa.requestAnimationFrame),c&&d.sleep(),l=f||function(p){return setTimeout(p,s-d.time*1e3+1|0)},En=1,h(2))},sleep:function(){(f?qa.cancelAnimationFrame:clearTimeout)(c),En=0,l=Tn},lagSmoothing:function(p,b){i=p||1/0,a=Math.min(b||33,i)},fps:function(p){n=1e3/(p||240),s=d.time*1e3+n},add:function(p,b,k){var y=b?function(S,_,R,T){p(S,_,R,T),d.remove(y)}:p;return d.remove(p),t[k?"unshift":"push"](y),Qo(),y},remove:function(p,b){~(b=t.indexOf(p))&&t.splice(b,1)&&g>=b&&g--},_listeners:t},d}(),Qo=function(){return!En&&Da.wake()},Ai={},cb=/^[\d.\-M][\d.\-,\s]/,lb=/["']/g,fb=function(i){for(var a={},e=i.substr(1,i.length-3).split(":"),o=e[0],n=1,s=e.length,t,c,l;n<s;n++)c=e[n],t=n!==s-1?c.lastIndexOf(","):c.length,l=c.substr(0,t),a[o]=isNaN(l)?l.replace(lb,"").trim():+l,o=c.substr(t+1).trim();return a},mb=function(i){var a=i.indexOf("(")+1,e=i.indexOf(")"),o=i.indexOf("(",a);return i.substring(a,~o&&o<e?i.indexOf(")",e+1):e)},ub=function(i){var a=(i+"").split("("),e=Ai[a[0]];return e&&a.length>1&&e.config?e.config.apply(null,~i.indexOf("{")?[fb(a[1])]:mb(i).split(",").map(Gl)):Ai._CE&&cb.test(i)?Ai._CE("",i):e},af=function(i){return function(a){return 1-i(1-a)}},ef=function r(i,a){for(var e=i._first,o;e;)e instanceof Sa?r(e,a):e.vars.yoyoEase&&(!e._yoyo||!e._repeat)&&e._yoyo!==a&&(e.timeline?r(e.timeline,a):(o=e._ease,e._ease=e._yEase,e._yEase=o,e._yoyo=a)),e=e._next},go=function(i,a){return i&&(Hi(i)?i:Ai[i]||ub(i))||a},ko=function(i,a,e,o){e===void 0&&(e=function(c){return 1-a(1-c)}),o===void 0&&(o=function(c){return c<.5?a(c*2)/2:1-a((1-c)*2)/2});var n={easeIn:a,easeOut:e,easeInOut:o},s;return Ra(i,function(t){Ai[t]=Oa[t]=n,Ai[s=t.toLowerCase()]=e;for(var c in n)Ai[s+(c==="easeIn"?".in":c==="easeOut"?".out":".inOut")]=Ai[t+"."+c]=n[c]}),n},of=function(i){return function(a){return a<.5?(1-i(1-a*2))/2:.5+i((a-.5)*2)/2}},bs=function r(i,a,e){var o=a>=1?a:1,n=(e||(i?.3:.45))/(a<1?a:1),s=n/Ns*(Math.asin(1/o)||0),t=function(f){return f===1?1:o*Math.pow(2,-10*f)*Uh((f-s)*n)+1},c=i==="out"?t:i==="in"?function(l){return 1-t(1-l)}:of(t);return n=Ns/n,c.config=function(l,f){return r(i,l,f)},c},vs=function r(i,a){a===void 0&&(a=1.70158);var e=function(s){return s?--s*s*((a+1)*s+a)+1:0},o=i==="out"?e:i==="in"?function(n){return 1-e(1-n)}:of(e);return o.config=function(n){return r(i,n)},o};Ra("Linear,Quad,Cubic,Quart,Quint,Strong",function(r,i){var a=i<5?i+1:i;ko(r+",Power"+(a-1),i?function(e){return Math.pow(e,a)}:function(e){return e},function(e){return 1-Math.pow(1-e,a)},function(e){return e<.5?Math.pow(e*2,a)/2:1-Math.pow((1-e)*2,a)/2})});Ai.Linear.easeNone=Ai.none=Ai.Linear.easeIn;ko("Elastic",bs("in"),bs("out"),bs());(function(r,i){var a=1/i,e=2*a,o=2.5*a,n=function(t){return t<a?r*t*t:t<e?r*Math.pow(t-1.5/i,2)+.75:t<o?r*(t-=2.25/i)*t+.9375:r*Math.pow(t-2.625/i,2)+.984375};ko("Bounce",function(s){return 1-n(1-s)},n)})(7.5625,2.75);ko("Expo",function(r){return r?Math.pow(2,10*(r-1)):0});ko("Circ",function(r){return-(Al(1-r*r)-1)});ko("Sine",function(r){return r===1?1:-Gh(r*Bh)+1});ko("Back",vs("in"),vs("out"),vs());Ai.SteppedEase=Ai.steps=Oa.SteppedEase={config:function(i,a){i===void 0&&(i=1);var e=1/i,o=i+(a?0:1),n=a?1:0,s=1-Li;return function(t){return((o*Gn(0,s,t)|0)+n)*e}}};Xo.ease=Ai["quad.out"];Ra("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",function(r){return rr+=r+","+r+"Params,"});var nf=function(i,a){this.id=Dh++,i._gsap=this,this.target=i,this.harness=a,this.get=a?a.get:Bl,this.set=a?a.getSetter:ur},an=function(){function r(a){this.vars=a,this._delay=+a.delay||0,(this._repeat=a.repeat===1/0?-2:a.repeat||0)&&(this._rDelay=a.repeatDelay||0,this._yoyo=!!a.yoyo||!!a.yoyoEase),this._ts=1,$o(this,+a.duration,1,1),this.data=a.data,Xi&&(this._ctx=Xi,Xi.data.push(this)),En||Da.wake()}var i=r.prototype;return i.delay=function(e){return e||e===0?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+e-this._delay),this._delay=e,this):this._delay},i.duration=function(e){return arguments.length?this.totalDuration(this._repeat>0?e+(e+this._rDelay)*this._repeat:e):this.totalDuration()&&this._dur},i.totalDuration=function(e){return arguments.length?(this._dirty=0,$o(this,this._repeat<0?e:(e-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},i.totalTime=function(e,o){if(Qo(),!arguments.length)return this._tTime;var n=this._dp;if(n&&n.smoothChildTiming&&this._ts){for(Tt(this,e),!n._dp||n.parent||Fl(n,this);n&&n.parent;)n.parent._time!==n._start+(n._ts>=0?n._tTime/n._ts:(n.totalDuration()-n._tTime)/-n._ts)&&n.totalTime(n._tTime,!0),n=n.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&e<this._tDur||this._ts<0&&e>0||!this._tDur&&!e)&&fe(this._dp,this,this._start-this._delay)}return(this._tTime!==e||!this._dur&&!o||this._initted&&Math.abs(this._zTime)===Li||!e&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=e),Dl(this,e,o)),this},i.time=function(e,o){return arguments.length?this.totalTime(Math.min(this.totalDuration(),e+Uc(this))%(this._dur+this._rDelay)||(e?this._dur:0),o):this._time},i.totalProgress=function(e,o){return arguments.length?this.totalTime(this.totalDuration()*e,o):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.ratio},i.progress=function(e,o){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&!(this.iteration()&1)?1-e:e)+Uc(this),o):this.duration()?Math.min(1,this._time/this._dur):this.ratio},i.iteration=function(e,o){var n=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(e-1)*n,o):this._repeat?Yo(this._tTime,n)+1:1},i.timeScale=function(e){if(!arguments.length)return this._rts===-Li?0:this._rts;if(this._rts===e)return this;var o=this.parent&&this._ts?ht(this.parent._time,this):this._tTime;return this._rts=+e||0,this._ts=this._ps||e===-Li?0:this._rts,this.totalTime(Gn(-this._delay,this._tDur,o),!0),Rt(this),Wh(this)},i.paused=function(e){return arguments.length?(this._ps!==e&&(this._ps=e,e?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(Qo(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,this.progress()===1&&Math.abs(this._zTime)!==Li&&(this._tTime-=Li)))),this):this._ps},i.startTime=function(e){if(arguments.length){this._start=e;var o=this.parent||this._dp;return o&&(o._sort||!this.parent)&&fe(o,this,e-this._delay),this}return this._start},i.endTime=function(e){return this._start+(Aa(e)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},i.rawTime=function(e){var o=this.parent||this._dp;return o?e&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?ht(o.rawTime(e),this):this._tTime:this._tTime},i.revert=function(e){e===void 0&&(e=Kh);var o=ga;return ga=e,(this._initted||this._startAt)&&(this.timeline&&this.timeline.revert(e),this.totalTime(-.01,e.suppressEvents)),this.data!=="nested"&&e.kill!==!1&&this.kill(),ga=o,this},i.globalTime=function(e){for(var o=this,n=arguments.length?e:o.rawTime();o;)n=o._start+n/(o._ts||1),o=o._dp;return!this.parent&&this._sat?this._sat.vars.immediateRender?-1:this._sat.globalTime(e):n},i.repeat=function(e){return arguments.length?(this._repeat=e===1/0?-2:e,Oc(this)):this._repeat===-2?1/0:this._repeat},i.repeatDelay=function(e){if(arguments.length){var o=this._time;return this._rDelay=e,Oc(this),o?this.time(o):this}return this._rDelay},i.yoyo=function(e){return arguments.length?(this._yoyo=e,this):this._yoyo},i.seek=function(e,o){return this.totalTime(Wa(this,e),Aa(o))},i.restart=function(e,o){return this.play().totalTime(e?-this._delay:0,Aa(o))},i.play=function(e,o){return e!=null&&this.seek(e,o),this.reversed(!1).paused(!1)},i.reverse=function(e,o){return e!=null&&this.seek(e||this.totalDuration(),o),this.reversed(!0).paused(!1)},i.pause=function(e,o){return e!=null&&this.seek(e,o),this.paused(!0)},i.resume=function(){return this.paused(!1)},i.reversed=function(e){return arguments.length?(!!e!==this.reversed()&&this.timeScale(-this._rts||(e?-Li:0)),this):this._rts<0},i.invalidate=function(){return this._initted=this._act=0,this._zTime=-Li,this},i.isActive=function(){var e=this.parent||this._dp,o=this._start,n;return!!(!e||this._ts&&this._initted&&e.isActive()&&(n=e.rawTime(!0))>=o&&n<this.endTime(!0)-Li)},i.eventCallback=function(e,o,n){var s=this.vars;return arguments.length>1?(o?(s[e]=o,n&&(s[e+"Params"]=n),e==="onUpdate"&&(this._onUpdate=o)):delete s[e],this):s[e]},i.then=function(e){var o=this;return new Promise(function(n){var s=Hi(e)?e:Ul,t=function(){var l=o.then;o.then=null,Hi(s)&&(s=s(o))&&(s.then||s===o)&&(o.then=l),n(s),o.then=l};o._initted&&o.totalProgress()===1&&o._ts>=0||!o._tTime&&o._ts<0?t():o._prom=t})},i.kill=function(){yn(this)},r}();$a(an.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-Li,_prom:0,_ps:!1,_rts:1});var Sa=function(r){xl(i,r);function i(e,o){var n;return e===void 0&&(e={}),n=r.call(this,e)||this,n.labels={},n.smoothChildTiming=!!e.smoothChildTiming,n.autoRemoveChildren=!!e.autoRemoveChildren,n._sort=Aa(e.sortChildren),Vi&&fe(e.parent||Vi,we(n),o),e.reversed&&n.reverse(),e.paused&&n.paused(!0),e.scrollTrigger&&Kl(we(n),e.scrollTrigger),n}var a=i.prototype;return a.to=function(o,n,s){return Sn(0,arguments,this),this},a.from=function(o,n,s){return Sn(1,arguments,this),this},a.fromTo=function(o,n,s,t){return Sn(2,arguments,this),this},a.set=function(o,n,s){return n.duration=0,n.parent=this,kn(n).repeatDelay||(n.repeat=0),n.immediateRender=!!n.immediateRender,new Qi(o,n,Wa(this,s),1),this},a.call=function(o,n,s){return fe(this,Qi.delayedCall(0,o,n),s)},a.staggerTo=function(o,n,s,t,c,l,f){return s.duration=n,s.stagger=s.stagger||t,s.onComplete=l,s.onCompleteParams=f,s.parent=this,new Qi(o,s,Wa(this,c)),this},a.staggerFrom=function(o,n,s,t,c,l,f){return s.runBackwards=1,kn(s).immediateRender=Aa(s.immediateRender),this.staggerTo(o,n,s,t,c,l,f)},a.staggerFromTo=function(o,n,s,t,c,l,f,d){return t.startAt=s,kn(t).immediateRender=Aa(t.immediateRender),this.staggerTo(o,n,t,c,l,f,d)},a.render=function(o,n,s){var t=this._time,c=this._dirty?this.totalDuration():this._tDur,l=this._dur,f=o<=0?0:ca(o),d=this._zTime<0!=o<0&&(this._initted||!l),m,g,h,u,p,b,k,y,S,_,R,T;if(this!==Vi&&f>c&&o>=0&&(f=c),f!==this._tTime||s||d){if(t!==this._time&&l&&(f+=this._time-t,o+=this._time-t),m=f,S=this._start,y=this._ts,b=!y,d&&(l||(t=this._zTime),(o||!n)&&(this._zTime=o)),this._repeat){if(R=this._yoyo,p=l+this._rDelay,this._repeat<-1&&o<0)return this.totalTime(p*100+o,n,s);if(m=ca(f%p),f===c?(u=this._repeat,m=l):(u=~~(f/p),u&&u===f/p&&(m=l,u--),m>l&&(m=l)),_=Yo(this._tTime,p),!t&&this._tTime&&_!==u&&(_=u),R&&u&1&&(m=l-m,T=1),u!==_&&!this._lock){var v=R&&_&1,w=v===(R&&u&1);if(u<_&&(v=!v),t=v?0:l,this._lock=1,this.render(t||(T?0:ca(u*p)),n,!l)._lock=0,this._tTime=f,!n&&this.parent&&Ya(this,"onRepeat"),this.vars.repeatRefresh&&!T&&(this.invalidate()._lock=1),t&&t!==this._time||b!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(l=this._dur,c=this._tDur,w&&(this._lock=2,t=v?l:-1e-4,this.render(t,!0),this.vars.repeatRefresh&&!T&&this.invalidate()),this._lock=0,!this._ts&&!b)return this;ef(this,T)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(k=Xh(this,ca(t),ca(m)),k&&(f-=m-(m=k._start))),this._tTime=f,this._time=m,this._act=!y,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=o,t=0),!t&&m&&!n&&(Ya(this,"onStart"),this._tTime!==f))return this;if(m>=t&&o>=0)for(g=this._first;g;){if(h=g._next,(g._act||m>=g._start)&&g._ts&&k!==g){if(g.parent!==this)return this.render(o,n,s);if(g.render(g._ts>0?(m-g._start)*g._ts:(g._dirty?g.totalDuration():g._tDur)+(m-g._start)*g._ts,n,s),m!==this._time||!this._ts&&!b){k=0,h&&(f+=this._zTime=-Li);break}}g=h}else{g=this._last;for(var E=o<0?o:m;g;){if(h=g._prev,(g._act||E<=g._end)&&g._ts&&k!==g){if(g.parent!==this)return this.render(o,n,s);if(g.render(g._ts>0?(E-g._start)*g._ts:(g._dirty?g.totalDuration():g._tDur)+(E-g._start)*g._ts,n,s||ga&&(g._initted||g._startAt)),m!==this._time||!this._ts&&!b){k=0,h&&(f+=this._zTime=E?-Li:Li);break}}g=h}}if(k&&!n&&(this.pause(),k.render(m>=t?0:-Li)._zTime=m>=t?1:-1,this._ts))return this._start=S,Rt(this),this.render(o,n,s);this._onUpdate&&!n&&Ya(this,"onUpdate",!0),(f===c&&this._tTime>=this.totalDuration()||!f&&t)&&(S===this._start||Math.abs(y)!==Math.abs(this._ts))&&(this._lock||((o||!l)&&(f===c&&this._ts>0||!f&&this._ts<0)&&je(this,1),!n&&!(o<0&&!t)&&(f||t||!c)&&(Ya(this,f===c&&o>=0?"onComplete":"onReverseComplete",!0),this._prom&&!(f<c&&this.timeScale()>0)&&this._prom())))}return this},a.add=function(o,n){var s=this;if(Ee(n)||(n=Wa(this,n,o)),!(o instanceof an)){if(ha(o))return o.forEach(function(t){return s.add(t,n)}),this;if(ra(o))return this.addLabel(o,n);if(Hi(o))o=Qi.delayedCall(0,o);else return this}return this!==o?fe(this,o,n):this},a.getChildren=function(o,n,s,t){o===void 0&&(o=!0),n===void 0&&(n=!0),s===void 0&&(s=!0),t===void 0&&(t=-Ja);for(var c=[],l=this._first;l;)l._start>=t&&(l instanceof Qi?n&&c.push(l):(s&&c.push(l),o&&c.push.apply(c,l.getChildren(!0,n,s)))),l=l._next;return c},a.getById=function(o){for(var n=this.getChildren(1,1,1),s=n.length;s--;)if(n[s].vars.id===o)return n[s]},a.remove=function(o){return ra(o)?this.removeLabel(o):Hi(o)?this.killTweensOf(o):(At(this,o),o===this._recent&&(this._recent=this._last),po(this))},a.totalTime=function(o,n){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=ca(Da.time-(this._ts>0?o/this._ts:(this.totalDuration()-o)/-this._ts))),r.prototype.totalTime.call(this,o,n),this._forcing=0,this):this._tTime},a.addLabel=function(o,n){return this.labels[o]=Wa(this,n),this},a.removeLabel=function(o){return delete this.labels[o],this},a.addPause=function(o,n,s){var t=Qi.delayedCall(0,n||Tn,s);return t.data="isPause",this._hasPause=1,fe(this,t,Wa(this,o))},a.removePause=function(o){var n=this._first;for(o=Wa(this,o);n;)n._start===o&&n.data==="isPause"&&je(n),n=n._next},a.killTweensOf=function(o,n,s){for(var t=this.getTweensOf(o,s),c=t.length;c--;)De!==t[c]&&t[c].kill(o,n);return this},a.getTweensOf=function(o,n){for(var s=[],t=Xa(o),c=this._first,l=Ee(n),f;c;)c instanceof Qi?Vh(c._targets,t)&&(l?(!De||c._initted&&c._ts)&&c.globalTime(0)<=n&&c.globalTime(c.totalDuration())>n:!n||c.isActive())&&s.push(c):(f=c.getTweensOf(t,n)).length&&s.push.apply(s,f),c=c._next;return s},a.tweenTo=function(o,n){n=n||{};var s=this,t=Wa(s,o),c=n,l=c.startAt,f=c.onStart,d=c.onStartParams,m=c.immediateRender,g,h=Qi.to(s,$a({ease:n.ease||"none",lazy:!1,immediateRender:!1,time:t,overwrite:"auto",duration:n.duration||Math.abs((t-(l&&"time"in l?l.time:s._time))/s.timeScale())||Li,onStart:function(){if(s.pause(),!g){var p=n.duration||Math.abs((t-(l&&"time"in l?l.time:s._time))/s.timeScale());h._dur!==p&&$o(h,p,0,1).render(h._time,!0,!0),g=1}f&&f.apply(h,d||[])}},n));return m?h.render(0):h},a.tweenFromTo=function(o,n,s){return this.tweenTo(n,$a({startAt:{time:Wa(this,o)}},s))},a.recent=function(){return this._recent},a.nextLabel=function(o){return o===void 0&&(o=this._time),Fc(this,Wa(this,o))},a.previousLabel=function(o){return o===void 0&&(o=this._time),Fc(this,Wa(this,o),1)},a.currentLabel=function(o){return arguments.length?this.seek(o,!0):this.previousLabel(this._time+Li)},a.shiftChildren=function(o,n,s){s===void 0&&(s=0);for(var t=this._first,c=this.labels,l;t;)t._start>=s&&(t._start+=o,t._end+=o),t=t._next;if(n)for(l in c)c[l]>=s&&(c[l]+=o);return po(this)},a.invalidate=function(o){var n=this._first;for(this._lock=0;n;)n.invalidate(o),n=n._next;return r.prototype.invalidate.call(this,o)},a.clear=function(o){o===void 0&&(o=!0);for(var n=this._first,s;n;)s=n._next,this.remove(n),n=s;return this._dp&&(this._time=this._tTime=this._pTime=0),o&&(this.labels={}),po(this)},a.totalDuration=function(o){var n=0,s=this,t=s._last,c=Ja,l,f,d;if(arguments.length)return s.timeScale((s._repeat<0?s.duration():s.totalDuration())/(s.reversed()?-o:o));if(s._dirty){for(d=s.parent;t;)l=t._prev,t._dirty&&t.totalDuration(),f=t._start,f>c&&s._sort&&t._ts&&!s._lock?(s._lock=1,fe(s,t,f-t._delay,1)._lock=0):c=f,f<0&&t._ts&&(n-=f,(!d&&!s._dp||d&&d.smoothChildTiming)&&(s._start+=f/s._ts,s._time-=f,s._tTime-=f),s.shiftChildren(-f,!1,-1/0),c=0),t._end>n&&t._ts&&(n=t._end),t=l;$o(s,s===Vi&&s._time>n?s._time:n,1,1),s._dirty=0}return s._tDur},i.updateRoot=function(o){if(Vi._ts&&(Dl(Vi,ht(o,Vi)),Ll=Da.frame),Da.frame>=Dc){Dc+=Ua.autoSleep||120;var n=Vi._first;if((!n||!n._ts)&&Ua.autoSleep&&Da._listeners.length<2){for(;n&&!n._ts;)n=n._next;n||Da.sleep()}}},i}(an);$a(Sa.prototype,{_lock:0,_hasPause:0,_forcing:0});var db=function(i,a,e,o,n,s,t){var c=new Ta(this._pt,i,a,0,1,ff,null,n),l=0,f=0,d,m,g,h,u,p,b,k;for(c.b=e,c.e=o,e+="",o+="",(b=~o.indexOf("random("))&&(o=Cn(o)),s&&(k=[e,o],s(k,i,a),e=k[0],o=k[1]),m=e.match(ps)||[];d=ps.exec(o);)h=d[0],u=o.substring(l,d.index),g?g=(g+1)%5:u.substr(-5)==="rgba("&&(g=1),h!==m[f++]&&(p=parseFloat(m[f-1])||0,c._pt={_next:c._pt,p:u||f===1?u:",",s:p,c:h.charAt(1)==="="?Vo(p,h)-p:parseFloat(h)-p,m:g&&g<4?Math.round:0},l=ps.lastIndex);return c.c=l<o.length?o.substring(l,o.length):"",c.fp=t,(El.test(o)||b)&&(c.e=0),this._pt=c,c},lr=function(i,a,e,o,n,s,t,c,l,f){Hi(o)&&(o=o(n||0,i,s));var d=i[a],m=e!=="get"?e:Hi(d)?l?i[a.indexOf("set")||!Hi(i["get"+a.substr(3)])?a:"get"+a.substr(3)](l):i[a]():d,g=Hi(d)?l?vb:cf:mr,h;if(ra(o)&&(~o.indexOf("random(")&&(o=Cn(o)),o.charAt(1)==="="&&(h=Vo(m,o)+(da(m)||0),(h||h===0)&&(o=h))),!f||m!==o||Vs)return!isNaN(m*o)&&o!==""?(h=new Ta(this._pt,i,a,+m||0,o-(m||0),typeof d=="boolean"?_b:lf,0,g),l&&(h.fp=l),t&&h.modifier(t,this,i),this._pt=h):(!d&&!(a in i)&&tr(a,o),db.call(this,i,a,m,o,g,c||Ua.stringFilter,l))},pb=function(i,a,e,o,n){if(Hi(i)&&(i=Mn(i,n,a,e,o)),!pe(i)||i.style&&i.nodeType||ha(i)||Tl(i))return ra(i)?Mn(i,n,a,e,o):i;var s={},t;for(t in i)s[t]=Mn(i[t],n,a,e,o);return s},tf=function(i,a,e,o,n,s){var t,c,l,f;if(Na[i]&&(t=new Na[i]).init(n,t.rawVars?a[i]:pb(a[i],o,n,s,e),e,o,s)!==!1&&(e._pt=c=new Ta(e._pt,n,i,0,1,t.render,t,0,t.priority),e!==Oo))for(l=e._ptLookup[e._targets.indexOf(n)],f=t._props.length;f--;)l[t._props[f]]=c;return t},De,Vs,fr=function r(i,a,e){var o=i.vars,n=o.ease,s=o.startAt,t=o.immediateRender,c=o.lazy,l=o.onUpdate,f=o.onUpdateParams,d=o.callbackScope,m=o.runBackwards,g=o.yoyoEase,h=o.keyframes,u=o.autoRevert,p=i._dur,b=i._startAt,k=i._targets,y=i.parent,S=y&&y.data==="nested"?y.vars.targets:k,_=i._overwrite==="auto"&&!er,R=i.timeline,T,v,w,E,U,W,P,z,D,J,q,O,Y;if(R&&(!h||!n)&&(n="none"),i._ease=go(n,Xo.ease),i._yEase=g?af(go(g===!0?n:g,Xo.ease)):0,g&&i._yoyo&&!i._repeat&&(g=i._yEase,i._yEase=i._ease,i._ease=g),i._from=!R&&!!o.runBackwards,!R||h&&!o.stagger){if(z=k[0]?uo(k[0]).harness:0,O=z&&o[z.prop],T=gt(o,sr),b&&(b._zTime<0&&b.progress(1),a<0&&m&&t&&!u?b.render(-1,!0):b.revert(m&&p?lt:Fh),b._lazy=0),s){if(je(i._startAt=Qi.set(k,$a({data:"isStart",overwrite:!1,parent:y,immediateRender:!0,lazy:!b&&Aa(c),startAt:null,delay:0,onUpdate:l,onUpdateParams:f,callbackScope:d,stagger:0},s))),i._startAt._dp=0,i._startAt._sat=i,a<0&&(ga||!t&&!u)&&i._startAt.revert(lt),t&&p&&a<=0&&e<=0){a&&(i._zTime=a);return}}else if(m&&p&&!b){if(a&&(t=!1),w=$a({overwrite:!1,data:"isFromStart",lazy:t&&!b&&Aa(c),immediateRender:t,stagger:0,parent:y},T),O&&(w[z.prop]=O),je(i._startAt=Qi.set(k,w)),i._startAt._dp=0,i._startAt._sat=i,a<0&&(ga?i._startAt.revert(lt):i._startAt.render(-1,!0)),i._zTime=a,!t)r(i._startAt,Li,Li);else if(!a)return}for(i._pt=i._ptCache=0,c=p&&Aa(c)||c&&!p,v=0;v<k.length;v++){if(U=k[v],P=U._gsap||cr(k)[v]._gsap,i._ptLookup[v]=J={},Ds[P.id]&&Fe.length&&pt(),q=S===k?v:S.indexOf(U),z&&(D=new z).init(U,O||T,i,q,S)!==!1&&(i._pt=E=new Ta(i._pt,U,D.name,0,1,D.render,D,0,D.priority),D._props.forEach(function(X){J[X]=E}),D.priority&&(W=1)),!z||O)for(w in T)Na[w]&&(D=tf(w,T,i,q,U,S))?D.priority&&(W=1):J[w]=E=lr.call(i,U,w,"get",T[w],q,S,0,o.stringFilter);i._op&&i._op[v]&&i.kill(U,i._op[v]),_&&i._pt&&(De=i,Vi.killTweensOf(U,J,i.globalTime(a)),Y=!i.parent,De=0),i._pt&&c&&(Ds[P.id]=1)}W&&mf(i),i._onInit&&i._onInit(i)}i._onUpdate=l,i._initted=(!i._op||i._pt)&&!Y,h&&a<=0&&R.render(Ja,!0,!0)},gb=function(i,a,e,o,n,s,t){var c=(i._pt&&i._ptCache||(i._ptCache={}))[a],l,f,d,m;if(!c)for(c=i._ptCache[a]=[],d=i._ptLookup,m=i._targets.length;m--;){if(l=d[m][a],l&&l.d&&l.d._pt)for(l=l.d._pt;l&&l.p!==a&&l.fp!==a;)l=l._next;if(!l)return Vs=1,i.vars[a]="+=0",fr(i,t),Vs=0,1;c.push(l)}for(m=c.length;m--;)f=c[m],l=f._pt||f,l.s=(o||o===0)&&!n?o:l.s+(o||0)+s*l.c,l.c=e-l.s,f.e&&(f.e=Wi(e)+da(f.e)),f.b&&(f.b=l.s+da(f.b))},hb=function(i,a){var e=i[0]?uo(i[0]).harness:0,o=e&&e.aliases,n,s,t,c;if(!o)return a;n=_o({},a);for(s in o)if(s in n)for(c=o[s].split(","),t=c.length;t--;)n[c[t]]=n[s];return n},bb=function(i,a,e,o){var n=a.ease||o||"power1.inOut",s,t;if(ha(a))t=e[i]||(e[i]=[]),a.forEach(function(c,l){return t.push({t:l/(a.length-1)*100,v:c,e:n})});else for(s in a)t=e[s]||(e[s]=[]),s==="ease"||t.push({t:parseFloat(i),v:a[s],e:n})},Mn=function(i,a,e,o,n){return Hi(i)?i.call(a,e,o,n):ra(i)&&~i.indexOf("random(")?Cn(i):i},sf=rr+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",rf={};Ra(sf+",id,stagger,delay,duration,paused,scrollTrigger",function(r){return rf[r]=1});var Qi=function(r){xl(i,r);function i(e,o,n,s){var t;typeof o=="number"&&(n.duration=o,o=n,n=null),t=r.call(this,s?o:kn(o))||this;var c=t.vars,l=c.duration,f=c.delay,d=c.immediateRender,m=c.stagger,g=c.overwrite,h=c.keyframes,u=c.defaults,p=c.scrollTrigger,b=c.yoyoEase,k=o.parent||Vi,y=(ha(e)||Tl(e)?Ee(e[0]):"length"in o)?[e]:Xa(e),S,_,R,T,v,w,E,U;if(t._targets=y.length?cr(y):dt("GSAP target "+e+" not found. https://greensock.com",!Ua.nullTargetWarn)||[],t._ptLookup=[],t._overwrite=g,h||m||st(l)||st(f)){if(o=t.vars,S=t.timeline=new Sa({data:"nested",defaults:u||{},targets:k&&k.data==="nested"?k.vars.targets:y}),S.kill(),S.parent=S._dp=we(t),S._start=0,m||st(l)||st(f)){if(T=y.length,E=m&&Wl(m),pe(m))for(v in m)~sf.indexOf(v)&&(U||(U={}),U[v]=m[v]);for(_=0;_<T;_++)R=gt(o,rf),R.stagger=0,b&&(R.yoyoEase=b),U&&_o(R,U),w=y[_],R.duration=+Mn(l,we(t),_,w,y),R.delay=(+Mn(f,we(t),_,w,y)||0)-t._delay,!m&&T===1&&R.delay&&(t._delay=f=R.delay,t._start+=f,R.delay=0),S.to(w,R,E?E(_,w,y):0),S._ease=Ai.none;S.duration()?l=f=0:t.timeline=0}else if(h){kn($a(S.vars.defaults,{ease:"none"})),S._ease=go(h.ease||o.ease||"none");var W=0,P,z,D;if(ha(h))h.forEach(function(J){return S.to(y,J,">")}),S.duration();else{R={};for(v in h)v==="ease"||v==="easeEach"||bb(v,h[v],R,h.easeEach);for(v in R)for(P=R[v].sort(function(J,q){return J.t-q.t}),W=0,_=0;_<P.length;_++)z=P[_],D={ease:z.e,duration:(z.t-(_?P[_-1].t:0))/100*l},D[v]=z.v,S.to(y,D,W),W+=D.duration;S.duration()<l&&S.to({},{duration:l-S.duration()})}}l||t.duration(l=S.duration())}else t.timeline=0;return g===!0&&!er&&(De=we(t),Vi.killTweensOf(y),De=0),fe(k,we(t),n),o.reversed&&t.reverse(),o.paused&&t.paused(!0),(d||!l&&!h&&t._start===ca(k._time)&&Aa(d)&&qh(we(t))&&k.data!=="nested")&&(t._tTime=-Li,t.render(Math.max(0,-f)||0)),p&&Kl(we(t),p),t}var a=i.prototype;return a.render=function(o,n,s){var t=this._time,c=this._tDur,l=this._dur,f=o<0,d=o>c-Li&&!f?c:o<Li?0:o,m,g,h,u,p,b,k,y,S;if(!l)Jh(this,o,n,s);else if(d!==this._tTime||!o||s||!this._initted&&this._tTime||this._startAt&&this._zTime<0!==f){if(m=d,y=this.timeline,this._repeat){if(u=l+this._rDelay,this._repeat<-1&&f)return this.totalTime(u*100+o,n,s);if(m=ca(d%u),d===c?(h=this._repeat,m=l):(h=~~(d/u),h&&h===d/u&&(m=l,h--),m>l&&(m=l)),b=this._yoyo&&h&1,b&&(S=this._yEase,m=l-m),p=Yo(this._tTime,u),m===t&&!s&&this._initted)return this._tTime=d,this;h!==p&&(y&&this._yEase&&ef(y,b),this.vars.repeatRefresh&&!b&&!this._lock&&(this._lock=s=1,this.render(ca(u*h),!0).invalidate()._lock=0))}if(!this._initted){if(Vl(this,f?o:m,s,n,d))return this._tTime=0,this;if(t!==this._time)return this;if(l!==this._dur)return this.render(o,n,s)}if(this._tTime=d,this._time=m,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=k=(S||this._ease)(m/l),this._from&&(this.ratio=k=1-k),m&&!t&&!n&&(Ya(this,"onStart"),this._tTime!==d))return this;for(g=this._pt;g;)g.r(k,g.d),g=g._next;y&&y.render(o<0?o:!m&&b?-Li:y._dur*y._ease(m/this._dur),n,s)||this._startAt&&(this._zTime=o),this._onUpdate&&!n&&(f&&Gs(this,o,n,s),Ya(this,"onUpdate")),this._repeat&&h!==p&&this.vars.onRepeat&&!n&&this.parent&&Ya(this,"onRepeat"),(d===this._tDur||!d)&&this._tTime===d&&(f&&!this._onUpdate&&Gs(this,o,!0,!0),(o||!l)&&(d===this._tDur&&this._ts>0||!d&&this._ts<0)&&je(this,1),!n&&!(f&&!t)&&(d||t||b)&&(Ya(this,d===c?"onComplete":"onReverseComplete",!0),this._prom&&!(d<c&&this.timeScale()>0)&&this._prom()))}return this},a.targets=function(){return this._targets},a.invalidate=function(o){return(!o||!this.vars.runBackwards)&&(this._startAt=0),this._pt=this._op=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(o),r.prototype.invalidate.call(this,o)},a.resetTo=function(o,n,s,t){En||Da.wake(),this._ts||this.play();var c=Math.min(this._dur,(this._dp._time-this._start)*this._ts),l;return this._initted||fr(this,c),l=this._ease(c/this._dur),gb(this,o,n,s,t,l,c)?this.resetTo(o,n,s,t):(Tt(this,0),this.parent||Ol(this._dp,this,"_first","_last",this._dp._sort?"_start":0),this.render(0))},a.kill=function(o,n){if(n===void 0&&(n="all"),!o&&(!n||n==="all"))return this._lazy=this._pt=0,this.parent?yn(this):this;if(this.timeline){var s=this.timeline.totalDuration();return this.timeline.killTweensOf(o,n,De&&De.vars.overwrite!==!0)._first||yn(this),this.parent&&s!==this.timeline.totalDuration()&&$o(this,this._dur*this.timeline._tDur/s,0,1),this}var t=this._targets,c=o?Xa(o):t,l=this._ptLookup,f=this._pt,d,m,g,h,u,p,b;if((!n||n==="all")&&Hh(t,c))return n==="all"&&(this._pt=0),yn(this);for(d=this._op=this._op||[],n!=="all"&&(ra(n)&&(u={},Ra(n,function(k){return u[k]=1}),n=u),n=hb(t,n)),b=t.length;b--;)if(~c.indexOf(t[b])){m=l[b],n==="all"?(d[b]=n,h=m,g={}):(g=d[b]=d[b]||{},h=n);for(u in h)p=m&&m[u],p&&((!("kill"in p.d)||p.d.kill(u)===!0)&&At(this,p,"_pt"),delete m[u]),g!=="all"&&(g[u]=1)}return this._initted&&!this._pt&&f&&yn(this),this},i.to=function(o,n){return new i(o,n,arguments[2])},i.from=function(o,n){return Sn(1,arguments)},i.delayedCall=function(o,n,s,t){return new i(n,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:o,onComplete:n,onReverseComplete:n,onCompleteParams:s,onReverseCompleteParams:s,callbackScope:t})},i.fromTo=function(o,n,s){return Sn(2,arguments)},i.set=function(o,n){return n.duration=0,n.repeatDelay||(n.repeat=0),new i(o,n)},i.killTweensOf=function(o,n,s){return Vi.killTweensOf(o,n,s)},i}(an);$a(Qi.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0});Ra("staggerTo,staggerFrom,staggerFromTo",function(r){Qi[r]=function(){var i=new Sa,a=Os.call(arguments,0);return a.splice(r==="staggerFromTo"?5:4,0,0),i[r].apply(i,a)}});var mr=function(i,a,e){return i[a]=e},cf=function(i,a,e){return i[a](e)},vb=function(i,a,e,o){return i[a](o.fp,e)},yb=function(i,a,e){return i.setAttribute(a,e)},ur=function(i,a){return Hi(i[a])?cf:or(i[a])&&i.setAttribute?yb:mr},lf=function(i,a){return a.set(a.t,a.p,Math.round((a.s+a.c*i)*1e6)/1e6,a)},_b=function(i,a){return a.set(a.t,a.p,!!(a.s+a.c*i),a)},ff=function(i,a){var e=a._pt,o="";if(!i&&a.b)o=a.b;else if(i===1&&a.e)o=a.e;else{for(;e;)o=e.p+(e.m?e.m(e.s+e.c*i):Math.round((e.s+e.c*i)*1e4)/1e4)+o,e=e._next;o+=a.c}a.set(a.t,a.p,o,a)},dr=function(i,a){for(var e=a._pt;e;)e.r(i,e.d),e=e._next},kb=function(i,a,e,o){for(var n=this._pt,s;n;)s=n._next,n.p===o&&n.modifier(i,a,e),n=s},Sb=function(i){for(var a=this._pt,e,o;a;)o=a._next,a.p===i&&!a.op||a.op===i?At(this,a,"_pt"):a.dep||(e=1),a=o;return!e},Mb=function(i,a,e,o){o.mSet(i,a,o.m.call(o.tween,e,o.mt),o)},mf=function(i){for(var a=i._pt,e,o,n,s;a;){for(e=a._next,o=n;o&&o.pr>a.pr;)o=o._next;(a._prev=o?o._prev:s)?a._prev._next=a:n=a,(a._next=o)?o._prev=a:s=a,a=e}i._pt=n},Ta=function(){function r(a,e,o,n,s,t,c,l,f){this.t=e,this.s=n,this.c=s,this.p=o,this.r=t||lf,this.d=c||this,this.set=l||mr,this.pr=f||0,this._next=a,a&&(a._prev=this)}var i=r.prototype;return i.modifier=function(e,o,n){this.mSet=this.mSet||this.set,this.set=Mb,this.m=e,this.mt=n,this.tween=o},r}();Ra(rr+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",function(r){return sr[r]=1});Oa.TweenMax=Oa.TweenLite=Qi;Oa.TimelineLite=Oa.TimelineMax=Sa;Vi=new Sa({sortChildren:!1,defaults:Xo,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0});Ua.stringFilter=Ql;var en=[],mt={},wb=[],Vc=0,ys=function(i){return(mt[i]||wb).map(function(a){return a()})},js=function(){var i=Date.now(),a=[];i-Vc>2&&(ys("matchMediaInit"),en.forEach(function(e){var o=e.queries,n=e.conditions,s,t,c,l;for(t in o)s=qa.matchMedia(o[t]).matches,s&&(c=1),s!==n[t]&&(n[t]=s,l=1);l&&(e.revert(),c&&a.push(e))}),ys("matchMediaRevert"),a.forEach(function(e){return e.onMatch(e)}),Vc=i,ys("matchMedia"))},uf=function(){function r(a,e){this.selector=e&&Fs(e),this.data=[],this._r=[],this.isReverted=!1,a&&this.add(a)}var i=r.prototype;return i.add=function(e,o,n){Hi(e)&&(n=o,o=e,e=Hi);var s=this,t=function(){var l=Xi,f=s.selector,d;return l&&l!==s&&l.data.push(s),n&&(s.selector=Fs(n)),Xi=s,d=o.apply(s,arguments),Hi(d)&&s._r.push(d),Xi=l,s.selector=f,s.isReverted=!1,d};return s.last=t,e===Hi?t(s):e?s[e]=t:t},i.ignore=function(e){var o=Xi;Xi=null,e(this),Xi=o},i.getTweens=function(){var e=[];return this.data.forEach(function(o){return o instanceof r?e.push.apply(e,o.getTweens()):o instanceof Qi&&!(o.parent&&o.parent.data==="nested")&&e.push(o)}),e},i.clear=function(){this._r.length=this.data.length=0},i.kill=function(e,o){var n=this;if(e){var s=this.getTweens();this.data.forEach(function(c){c.data==="isFlip"&&(c.revert(),c.getChildren(!0,!0,!1).forEach(function(l){return s.splice(s.indexOf(l),1)}))}),s.map(function(c){return{g:c.globalTime(0),t:c}}).sort(function(c,l){return l.g-c.g||-1}).forEach(function(c){return c.t.revert(e)}),this.data.forEach(function(c){return!(c instanceof an)&&c.revert&&c.revert(e)}),this._r.forEach(function(c){return c(e,n)}),this.isReverted=!0}else this.data.forEach(function(c){return c.kill&&c.kill()});if(this.clear(),o){var t=en.indexOf(this);~t&&en.splice(t,1)}},i.revert=function(e){this.kill(e||{})},r}(),xb=function(){function r(a){this.contexts=[],this.scope=a}var i=r.prototype;return i.add=function(e,o,n){pe(e)||(e={matches:e});var s=new uf(0,n||this.scope),t=s.conditions={},c,l,f;this.contexts.push(s),o=s.add("onMatch",o),s.queries=e;for(l in e)l==="all"?f=1:(c=qa.matchMedia(e[l]),c&&(en.indexOf(s)<0&&en.push(s),(t[l]=c.matches)&&(f=1),c.addListener?c.addListener(js):c.addEventListener("change",js)));return f&&o(s),this},i.revert=function(e){this.kill(e||{})},i.kill=function(e){this.contexts.forEach(function(o){return o.kill(e,!0)})},r}(),bt={registerPlugin:function(){for(var i=arguments.length,a=new Array(i),e=0;e<i;e++)a[e]=arguments[e];a.forEach(function(o){return sb(o)})},timeline:function(i){return new Sa(i)},getTweensOf:function(i,a){return Vi.getTweensOf(i,a)},getProperty:function(i,a,e,o){ra(i)&&(i=Xa(i)[0]);var n=uo(i||{}).get,s=e?Ul:Gl;return e==="native"&&(e=""),i&&(a?s((Na[a]&&Na[a].get||n)(i,a,e,o)):function(t,c,l){return s((Na[t]&&Na[t].get||n)(i,t,c,l))})},quickSetter:function(i,a,e){if(i=Xa(i),i.length>1){var o=i.map(function(f){return Fa.quickSetter(f,a,e)}),n=o.length;return function(f){for(var d=n;d--;)o[d](f)}}i=i[0]||{};var s=Na[a],t=uo(i),c=t.harness&&(t.harness.aliases||{})[a]||a,l=s?function(f){var d=new s;Oo._pt=0,d.init(i,e?f+e:f,Oo,0,[i]),d.render(1,d),Oo._pt&&dr(1,Oo)}:t.set(i,c);return s?l:function(f){return l(i,c,e?f+e:f,t,1)}},quickTo:function(i,a,e){var o,n=Fa.to(i,_o((o={},o[a]="+=0.1",o.paused=!0,o),e||{})),s=function(c,l,f){return n.resetTo(a,c,l,f)};return s.tween=n,s},isTweening:function(i){return Vi.getTweensOf(i,!0).length>0},defaults:function(i){return i&&i.ease&&(i.ease=go(i.ease,Xo.ease)),Gc(Xo,i||{})},config:function(i){return Gc(Ua,i||{})},registerEffect:function(i){var a=i.name,e=i.effect,o=i.plugins,n=i.defaults,s=i.extendTimeline;(o||"").split(",").forEach(function(t){return t&&!Na[t]&&!Oa[t]&&dt(a+" effect requires "+t+" plugin.")}),gs[a]=function(t,c,l){return e(Xa(t),$a(c||{},n),l)},s&&(Sa.prototype[a]=function(t,c,l){return this.add(gs[a](t,pe(c)?c:(l=c)&&{},this),l)})},registerEase:function(i,a){Ai[i]=go(a)},parseEase:function(i,a){return arguments.length?go(i,a):Ai},getById:function(i){return Vi.getById(i)},exportRoot:function(i,a){i===void 0&&(i={});var e=new Sa(i),o,n;for(e.smoothChildTiming=Aa(i.smoothChildTiming),Vi.remove(e),e._dp=0,e._time=e._tTime=Vi._time,o=Vi._first;o;)n=o._next,(a||!(!o._dur&&o instanceof Qi&&o.vars.onComplete===o._targets[0]))&&fe(e,o,o._start-o._delay),o=n;return fe(Vi,e,0),e},context:function(i,a){return i?new uf(i,a):Xi},matchMedia:function(i){return new xb(i)},matchMediaRefresh:function(){return en.forEach(function(i){var a=i.conditions,e,o;for(o in a)a[o]&&(a[o]=!1,e=1);e&&i.revert()})||js()},addEventListener:function(i,a){var e=mt[i]||(mt[i]=[]);~e.indexOf(a)||e.push(a)},removeEventListener:function(i,a){var e=mt[i],o=e&&e.indexOf(a);o>=0&&e.splice(o,1)},utils:{wrap:ob,wrapYoyo:nb,distribute:Wl,random:Zl,snap:ql,normalize:eb,getUnit:da,clamp:$h,splitColor:Yl,toArray:Xa,selector:Fs,mapRange:Xl,pipe:ib,unitize:ab,interpolate:tb,shuffle:Hl},install:Il,effects:gs,ticker:Da,updateRoot:Sa.updateRoot,plugins:Na,globalTimeline:Vi,core:{PropTween:Ta,globals:Nl,Tween:Qi,Timeline:Sa,Animation:an,getCache:uo,_removeLinkedListItem:At,reverting:function(){return ga},context:function(i){return i&&Xi&&(Xi.data.push(i),i._ctx=Xi),Xi},suppressOverwrites:function(i){return er=i}}};Ra("to,from,fromTo,delayedCall,set,killTweensOf",function(r){return bt[r]=Qi[r]});Da.add(Sa.updateRoot);Oo=bt.to({},{duration:0});var Ab=function(i,a){for(var e=i._pt;e&&e.p!==a&&e.op!==a&&e.fp!==a;)e=e._next;return e},Rb=function(i,a){var e=i._targets,o,n,s;for(o in a)for(n=e.length;n--;)s=i._ptLookup[n][o],s&&(s=s.d)&&(s._pt&&(s=Ab(s,o)),s&&s.modifier&&s.modifier(a[o],i,e[n],o))},_s=function(i,a){return{name:i,rawVars:1,init:function(o,n,s){s._onInit=function(t){var c,l;if(ra(n)&&(c={},Ra(n,function(f){return c[f]=1}),n=c),a){c={};for(l in n)c[l]=a(n[l]);n=c}Rb(t,n)}}}},Fa=bt.registerPlugin({name:"attr",init:function(i,a,e,o,n){var s,t,c;this.tween=e;for(s in a)c=i.getAttribute(s)||"",t=this.add(i,"setAttribute",(c||0)+"",a[s],o,n,0,0,s),t.op=s,t.b=c,this._props.push(s)},render:function(i,a){for(var e=a._pt;e;)ga?e.set(e.t,e.p,e.b,e):e.r(i,e.d),e=e._next}},{name:"endArray",init:function(i,a){for(var e=a.length;e--;)this.add(i,e,i[e]||0,a[e],0,0,0,0,0,1)}},_s("roundProps",Ks),_s("modifiers"),_s("snap",ql))||bt;Qi.version=Sa.version=Fa.version="3.11.4";Pl=1;Rl()&&Qo();Ai.Power0;Ai.Power1;Ai.Power2;Ai.Power3;Ai.Power4;Ai.Linear;Ai.Quad;Ai.Cubic;Ai.Quart;Ai.Quint;Ai.Strong;Ai.Elastic;Ai.Back;Ai.SteppedEase;Ai.Bounce;Ai.Sine;Ai.Expo;Ai.Circ;/*!
 * CSSPlugin 3.11.4
 * https://greensock.com
 *
 * Copyright 2008-2022, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/var jc,Ge,jo,pr,lo,Hc,gr,Tb=function(){return typeof window<"u"},ze={},to=180/Math.PI,Ho=Math.PI/180,Bo=Math.atan2,Wc=1e8,hr=/([A-Z])/g,Cb=/(left|right|width|margin|padding|x)/i,Eb=/[\s,\(]\S/,Re={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},Hs=function(i,a){return a.set(a.t,a.p,Math.round((a.s+a.c*i)*1e4)/1e4+a.u,a)},zb=function(i,a){return a.set(a.t,a.p,i===1?a.e:Math.round((a.s+a.c*i)*1e4)/1e4+a.u,a)},Pb=function(i,a){return a.set(a.t,a.p,i?Math.round((a.s+a.c*i)*1e4)/1e4+a.u:a.b,a)},Ib=function(i,a){var e=a.s+a.c*i;a.set(a.t,a.p,~~(e+(e<0?-.5:.5))+a.u,a)},df=function(i,a){return a.set(a.t,a.p,i?a.e:a.b,a)},pf=function(i,a){return a.set(a.t,a.p,i!==1?a.b:a.e,a)},Nb=function(i,a,e){return i.style[a]=e},Lb=function(i,a,e){return i.style.setProperty(a,e)},Bb=function(i,a,e){return i._gsap[a]=e},Db=function(i,a,e){return i._gsap.scaleX=i._gsap.scaleY=e},Gb=function(i,a,e,o,n){var s=i._gsap;s.scaleX=s.scaleY=e,s.renderTransform(n,s)},Ub=function(i,a,e,o,n){var s=i._gsap;s[a]=e,s.renderTransform(n,s)},ji="transform",re=ji+"Origin",Ob=function(i,a){var e=this,o=this.target,n=o.style;if(i in ze){if(this.tfm=this.tfm||{},i!=="transform"&&(i=Re[i]||i,~i.indexOf(",")?i.split(",").forEach(function(s){return e.tfm[s]=xe(o,s)}):this.tfm[i]=o._gsap.x?o._gsap[i]:xe(o,i)),this.props.indexOf(ji)>=0)return;o._gsap.svg&&(this.svgo=o.getAttribute("data-svg-origin"),this.props.push(re,a,"")),i=ji}(n||a)&&this.props.push(i,a,n[i])},gf=function(i){i.translate&&(i.removeProperty("translate"),i.removeProperty("scale"),i.removeProperty("rotate"))},Fb=function(){var i=this.props,a=this.target,e=a.style,o=a._gsap,n,s;for(n=0;n<i.length;n+=3)i[n+1]?a[i[n]]=i[n+2]:i[n+2]?e[i[n]]=i[n+2]:e.removeProperty(i[n].replace(hr,"-$1").toLowerCase());if(this.tfm){for(s in this.tfm)o[s]=this.tfm[s];o.svg&&(o.renderTransform(),a.setAttribute("data-svg-origin",this.svgo||"")),n=gr(),n&&!n.isStart&&!e[ji]&&(gf(e),o.uncache=1)}},hf=function(i,a){var e={target:i,props:[],revert:Fb,save:Ob};return a&&a.split(",").forEach(function(o){return e.save(o)}),e},bf,Ws=function(i,a){var e=Ge.createElementNS?Ge.createElementNS((a||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),i):Ge.createElement(i);return e.style?e:Ge.createElement(i)},de=function r(i,a,e){var o=getComputedStyle(i);return o[a]||o.getPropertyValue(a.replace(hr,"-$1").toLowerCase())||o.getPropertyValue(a)||!e&&r(i,on(a)||a,1)||""},qc="O,Moz,ms,Ms,Webkit".split(","),on=function(i,a,e){var o=a||lo,n=o.style,s=5;if(i in n&&!e)return i;for(i=i.charAt(0).toUpperCase()+i.substr(1);s--&&!(qc[s]+i in n););return s<0?null:(s===3?"ms":s>=0?qc[s]:"")+i},qs=function(){Tb()&&window.document&&(jc=window,Ge=jc.document,jo=Ge.documentElement,lo=Ws("div")||{style:{}},Ws("div"),ji=on(ji),re=ji+"Origin",lo.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",bf=!!on("perspective"),gr=Fa.core.reverting,pr=1)},ks=function r(i){var a=Ws("svg",this.ownerSVGElement&&this.ownerSVGElement.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),e=this.parentNode,o=this.nextSibling,n=this.style.cssText,s;if(jo.appendChild(a),a.appendChild(this),this.style.display="block",i)try{s=this.getBBox(),this._gsapBBox=this.getBBox,this.getBBox=r}catch{}else this._gsapBBox&&(s=this._gsapBBox());return e&&(o?e.insertBefore(this,o):e.appendChild(this)),jo.removeChild(a),this.style.cssText=n,s},Zc=function(i,a){for(var e=a.length;e--;)if(i.hasAttribute(a[e]))return i.getAttribute(a[e])},vf=function(i){var a;try{a=i.getBBox()}catch{a=ks.call(i,!0)}return a&&(a.width||a.height)||i.getBBox===ks||(a=ks.call(i,!0)),a&&!a.width&&!a.x&&!a.y?{x:+Zc(i,["x","cx","x1"])||0,y:+Zc(i,["y","cy","y1"])||0,width:0,height:0}:a},yf=function(i){return!!(i.getCTM&&(!i.parentNode||i.ownerSVGElement)&&vf(i))},zn=function(i,a){if(a){var e=i.style;a in ze&&a!==re&&(a=ji),e.removeProperty?((a.substr(0,2)==="ms"||a.substr(0,6)==="webkit")&&(a="-"+a),e.removeProperty(a.replace(hr,"-$1").toLowerCase())):e.removeAttribute(a)}},Ue=function(i,a,e,o,n,s){var t=new Ta(i._pt,a,e,0,1,s?pf:df);return i._pt=t,t.b=o,t.e=n,i._props.push(e),t},Jc={deg:1,rad:1,turn:1},Kb={grid:1,flex:1},He=function r(i,a,e,o){var n=parseFloat(e)||0,s=(e+"").trim().substr((n+"").length)||"px",t=lo.style,c=Cb.test(a),l=i.tagName.toLowerCase()==="svg",f=(l?"client":"offset")+(c?"Width":"Height"),d=100,m=o==="px",g=o==="%",h,u,p,b;return o===s||!n||Jc[o]||Jc[s]?n:(s!=="px"&&!m&&(n=r(i,a,e,"px")),b=i.getCTM&&yf(i),(g||s==="%")&&(ze[a]||~a.indexOf("adius"))?(h=b?i.getBBox()[c?"width":"height"]:i[f],Wi(g?n/h*d:n/100*h)):(t[c?"width":"height"]=d+(m?s:o),u=~a.indexOf("adius")||o==="em"&&i.appendChild&&!l?i:i.parentNode,b&&(u=(i.ownerSVGElement||{}).parentNode),(!u||u===Ge||!u.appendChild)&&(u=Ge.body),p=u._gsap,p&&g&&p.width&&c&&p.time===Da.time&&!p.uncache?Wi(n/p.width*d):((g||s==="%")&&!Kb[de(u,"display")]&&(t.position=de(i,"position")),u===i&&(t.position="static"),u.appendChild(lo),h=lo[f],u.removeChild(lo),t.position="absolute",c&&g&&(p=uo(u),p.time=Da.time,p.width=u[f]),Wi(m?h*n/d:h&&n?d/h*n:0))))},xe=function(i,a,e,o){var n;return pr||qs(),a in Re&&a!=="transform"&&(a=Re[a],~a.indexOf(",")&&(a=a.split(",")[0])),ze[a]&&a!=="transform"?(n=In(i,o),n=a!=="transformOrigin"?n[a]:n.svg?n.origin:yt(de(i,re))+" "+n.zOrigin+"px"):(n=i.style[a],(!n||n==="auto"||o||~(n+"").indexOf("calc("))&&(n=vt[a]&&vt[a](i,a,e)||de(i,a)||Bl(i,a)||(a==="opacity"?1:0))),e&&!~(n+"").trim().indexOf(" ")?He(i,a,n,e)+e:n},Vb=function(i,a,e,o){if(!e||e==="none"){var n=on(a,i,1),s=n&&de(i,n,1);s&&s!==e?(a=n,e=s):a==="borderColor"&&(e=de(i,"borderTopColor"))}var t=new Ta(this._pt,i.style,a,0,1,ff),c=0,l=0,f,d,m,g,h,u,p,b,k,y,S,_;if(t.b=e,t.e=o,e+="",o+="",o==="auto"&&(i.style[a]=o,o=de(i,a)||o,i.style[a]=e),f=[e,o],Ql(f),e=f[0],o=f[1],m=e.match(Uo)||[],_=o.match(Uo)||[],_.length){for(;d=Uo.exec(o);)p=d[0],k=o.substring(c,d.index),h?h=(h+1)%5:(k.substr(-5)==="rgba("||k.substr(-5)==="hsla(")&&(h=1),p!==(u=m[l++]||"")&&(g=parseFloat(u)||0,S=u.substr((g+"").length),p.charAt(1)==="="&&(p=Vo(g,p)+S),b=parseFloat(p),y=p.substr((b+"").length),c=Uo.lastIndex-y.length,y||(y=y||Ua.units[a]||S,c===o.length&&(o+=y,t.e+=y)),S!==y&&(g=He(i,a,u,y)||0),t._pt={_next:t._pt,p:k||l===1?k:",",s:g,c:b-g,m:h&&h<4||a==="zIndex"?Math.round:0});t.c=c<o.length?o.substring(c,o.length):""}else t.r=a==="display"&&o==="none"?pf:df;return El.test(o)&&(t.e=0),this._pt=t,t},Xc={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},jb=function(i){var a=i.split(" "),e=a[0],o=a[1]||"50%";return(e==="top"||e==="bottom"||o==="left"||o==="right")&&(i=e,e=o,o=i),a[0]=Xc[e]||e,a[1]=Xc[o]||o,a.join(" ")},Hb=function(i,a){if(a.tween&&a.tween._time===a.tween._dur){var e=a.t,o=e.style,n=a.u,s=e._gsap,t,c,l;if(n==="all"||n===!0)o.cssText="",c=1;else for(n=n.split(","),l=n.length;--l>-1;)t=n[l],ze[t]&&(c=1,t=t==="transformOrigin"?re:ji),zn(e,t);c&&(zn(e,ji),s&&(s.svg&&e.removeAttribute("transform"),In(e,1),s.uncache=1,gf(o)))}},vt={clearProps:function(i,a,e,o,n){if(n.data!=="isFromStart"){var s=i._pt=new Ta(i._pt,a,e,0,0,Hb);return s.u=o,s.pr=-10,s.tween=n,i._props.push(e),1}}},Pn=[1,0,0,1,0,0],_f={},kf=function(i){return i==="matrix(1, 0, 0, 1, 0, 0)"||i==="none"||!i},Yc=function(i){var a=de(i,ji);return kf(a)?Pn:a.substr(7).match(Cl).map(Wi)},br=function(i,a){var e=i._gsap||uo(i),o=i.style,n=Yc(i),s,t,c,l;return e.svg&&i.getAttribute("transform")?(c=i.transform.baseVal.consolidate().matrix,n=[c.a,c.b,c.c,c.d,c.e,c.f],n.join(",")==="1,0,0,1,0,0"?Pn:n):(n===Pn&&!i.offsetParent&&i!==jo&&!e.svg&&(c=o.display,o.display="block",s=i.parentNode,(!s||!i.offsetParent)&&(l=1,t=i.nextElementSibling,jo.appendChild(i)),n=Yc(i),c?o.display=c:zn(i,"display"),l&&(t?s.insertBefore(i,t):s?s.appendChild(i):jo.removeChild(i))),a&&n.length>6?[n[0],n[1],n[4],n[5],n[12],n[13]]:n)},Zs=function(i,a,e,o,n,s){var t=i._gsap,c=n||br(i,!0),l=t.xOrigin||0,f=t.yOrigin||0,d=t.xOffset||0,m=t.yOffset||0,g=c[0],h=c[1],u=c[2],p=c[3],b=c[4],k=c[5],y=a.split(" "),S=parseFloat(y[0])||0,_=parseFloat(y[1])||0,R,T,v,w;e?c!==Pn&&(T=g*p-h*u)&&(v=S*(p/T)+_*(-u/T)+(u*k-p*b)/T,w=S*(-h/T)+_*(g/T)-(g*k-h*b)/T,S=v,_=w):(R=vf(i),S=R.x+(~y[0].indexOf("%")?S/100*R.width:S),_=R.y+(~(y[1]||y[0]).indexOf("%")?_/100*R.height:_)),o||o!==!1&&t.smooth?(b=S-l,k=_-f,t.xOffset=d+(b*g+k*u)-b,t.yOffset=m+(b*h+k*p)-k):t.xOffset=t.yOffset=0,t.xOrigin=S,t.yOrigin=_,t.smooth=!!o,t.origin=a,t.originIsAbsolute=!!e,i.style[re]="0px 0px",s&&(Ue(s,t,"xOrigin",l,S),Ue(s,t,"yOrigin",f,_),Ue(s,t,"xOffset",d,t.xOffset),Ue(s,t,"yOffset",m,t.yOffset)),i.setAttribute("data-svg-origin",S+" "+_)},In=function(i,a){var e=i._gsap||new nf(i);if("x"in e&&!a&&!e.uncache)return e;var o=i.style,n=e.scaleX<0,s="px",t="deg",c=getComputedStyle(i),l=de(i,re)||"0",f,d,m,g,h,u,p,b,k,y,S,_,R,T,v,w,E,U,W,P,z,D,J,q,O,Y,X,ci,L,Z,ii,ai;return f=d=m=u=p=b=k=y=S=0,g=h=1,e.svg=!!(i.getCTM&&yf(i)),c.translate&&((c.translate!=="none"||c.scale!=="none"||c.rotate!=="none")&&(o[ji]=(c.translate!=="none"?"translate3d("+(c.translate+" 0 0").split(" ").slice(0,3).join(", ")+") ":"")+(c.rotate!=="none"?"rotate("+c.rotate+") ":"")+(c.scale!=="none"?"scale("+c.scale.split(" ").join(",")+") ":"")+(c[ji]!=="none"?c[ji]:"")),o.scale=o.rotate=o.translate="none"),T=br(i,e.svg),e.svg&&(e.uncache?(O=i.getBBox(),l=e.xOrigin-O.x+"px "+(e.yOrigin-O.y)+"px",q=""):q=!a&&i.getAttribute("data-svg-origin"),Zs(i,q||l,!!q||e.originIsAbsolute,e.smooth!==!1,T)),_=e.xOrigin||0,R=e.yOrigin||0,T!==Pn&&(U=T[0],W=T[1],P=T[2],z=T[3],f=D=T[4],d=J=T[5],T.length===6?(g=Math.sqrt(U*U+W*W),h=Math.sqrt(z*z+P*P),u=U||W?Bo(W,U)*to:0,k=P||z?Bo(P,z)*to+u:0,k&&(h*=Math.abs(Math.cos(k*Ho))),e.svg&&(f-=_-(_*U+R*P),d-=R-(_*W+R*z))):(ai=T[6],Z=T[7],X=T[8],ci=T[9],L=T[10],ii=T[11],f=T[12],d=T[13],m=T[14],v=Bo(ai,L),p=v*to,v&&(w=Math.cos(-v),E=Math.sin(-v),q=D*w+X*E,O=J*w+ci*E,Y=ai*w+L*E,X=D*-E+X*w,ci=J*-E+ci*w,L=ai*-E+L*w,ii=Z*-E+ii*w,D=q,J=O,ai=Y),v=Bo(-P,L),b=v*to,v&&(w=Math.cos(-v),E=Math.sin(-v),q=U*w-X*E,O=W*w-ci*E,Y=P*w-L*E,ii=z*E+ii*w,U=q,W=O,P=Y),v=Bo(W,U),u=v*to,v&&(w=Math.cos(v),E=Math.sin(v),q=U*w+W*E,O=D*w+J*E,W=W*w-U*E,J=J*w-D*E,U=q,D=O),p&&Math.abs(p)+Math.abs(u)>359.9&&(p=u=0,b=180-b),g=Wi(Math.sqrt(U*U+W*W+P*P)),h=Wi(Math.sqrt(J*J+ai*ai)),v=Bo(D,J),k=Math.abs(v)>2e-4?v*to:0,S=ii?1/(ii<0?-ii:ii):0),e.svg&&(q=i.getAttribute("transform"),e.forceCSS=i.setAttribute("transform","")||!kf(de(i,ji)),q&&i.setAttribute("transform",q))),Math.abs(k)>90&&Math.abs(k)<270&&(n?(g*=-1,k+=u<=0?180:-180,u+=u<=0?180:-180):(h*=-1,k+=k<=0?180:-180)),a=a||e.uncache,e.x=f-((e.xPercent=f&&(!a&&e.xPercent||(Math.round(i.offsetWidth/2)===Math.round(-f)?-50:0)))?i.offsetWidth*e.xPercent/100:0)+s,e.y=d-((e.yPercent=d&&(!a&&e.yPercent||(Math.round(i.offsetHeight/2)===Math.round(-d)?-50:0)))?i.offsetHeight*e.yPercent/100:0)+s,e.z=m+s,e.scaleX=Wi(g),e.scaleY=Wi(h),e.rotation=Wi(u)+t,e.rotationX=Wi(p)+t,e.rotationY=Wi(b)+t,e.skewX=k+t,e.skewY=y+t,e.transformPerspective=S+s,(e.zOrigin=parseFloat(l.split(" ")[2])||0)&&(o[re]=yt(l)),e.xOffset=e.yOffset=0,e.force3D=Ua.force3D,e.renderTransform=e.svg?qb:bf?Sf:Wb,e.uncache=0,e},yt=function(i){return(i=i.split(" "))[0]+" "+i[1]},Ss=function(i,a,e){var o=da(a);return Wi(parseFloat(a)+parseFloat(He(i,"x",e+"px",o)))+o},Wb=function(i,a){a.z="0px",a.rotationY=a.rotationX="0deg",a.force3D=0,Sf(i,a)},ao="0deg",gn="0px",eo=") ",Sf=function(i,a){var e=a||this,o=e.xPercent,n=e.yPercent,s=e.x,t=e.y,c=e.z,l=e.rotation,f=e.rotationY,d=e.rotationX,m=e.skewX,g=e.skewY,h=e.scaleX,u=e.scaleY,p=e.transformPerspective,b=e.force3D,k=e.target,y=e.zOrigin,S="",_=b==="auto"&&i&&i!==1||b===!0;if(y&&(d!==ao||f!==ao)){var R=parseFloat(f)*Ho,T=Math.sin(R),v=Math.cos(R),w;R=parseFloat(d)*Ho,w=Math.cos(R),s=Ss(k,s,T*w*-y),t=Ss(k,t,-Math.sin(R)*-y),c=Ss(k,c,v*w*-y+y)}p!==gn&&(S+="perspective("+p+eo),(o||n)&&(S+="translate("+o+"%, "+n+"%) "),(_||s!==gn||t!==gn||c!==gn)&&(S+=c!==gn||_?"translate3d("+s+", "+t+", "+c+") ":"translate("+s+", "+t+eo),l!==ao&&(S+="rotate("+l+eo),f!==ao&&(S+="rotateY("+f+eo),d!==ao&&(S+="rotateX("+d+eo),(m!==ao||g!==ao)&&(S+="skew("+m+", "+g+eo),(h!==1||u!==1)&&(S+="scale("+h+", "+u+eo),k.style[ji]=S||"translate(0, 0)"},qb=function(i,a){var e=a||this,o=e.xPercent,n=e.yPercent,s=e.x,t=e.y,c=e.rotation,l=e.skewX,f=e.skewY,d=e.scaleX,m=e.scaleY,g=e.target,h=e.xOrigin,u=e.yOrigin,p=e.xOffset,b=e.yOffset,k=e.forceCSS,y=parseFloat(s),S=parseFloat(t),_,R,T,v,w;c=parseFloat(c),l=parseFloat(l),f=parseFloat(f),f&&(f=parseFloat(f),l+=f,c+=f),c||l?(c*=Ho,l*=Ho,_=Math.cos(c)*d,R=Math.sin(c)*d,T=Math.sin(c-l)*-m,v=Math.cos(c-l)*m,l&&(f*=Ho,w=Math.tan(l-f),w=Math.sqrt(1+w*w),T*=w,v*=w,f&&(w=Math.tan(f),w=Math.sqrt(1+w*w),_*=w,R*=w)),_=Wi(_),R=Wi(R),T=Wi(T),v=Wi(v)):(_=d,v=m,R=T=0),(y&&!~(s+"").indexOf("px")||S&&!~(t+"").indexOf("px"))&&(y=He(g,"x",s,"px"),S=He(g,"y",t,"px")),(h||u||p||b)&&(y=Wi(y+h-(h*_+u*T)+p),S=Wi(S+u-(h*R+u*v)+b)),(o||n)&&(w=g.getBBox(),y=Wi(y+o/100*w.width),S=Wi(S+n/100*w.height)),w="matrix("+_+","+R+","+T+","+v+","+y+","+S+")",g.setAttribute("transform",w),k&&(g.style[ji]=w)},Zb=function(i,a,e,o,n){var s=360,t=ra(n),c=parseFloat(n)*(t&&~n.indexOf("rad")?to:1),l=c-o,f=o+l+"deg",d,m;return t&&(d=n.split("_")[1],d==="short"&&(l%=s,l!==l%(s/2)&&(l+=l<0?s:-s)),d==="cw"&&l<0?l=(l+s*Wc)%s-~~(l/s)*s:d==="ccw"&&l>0&&(l=(l-s*Wc)%s-~~(l/s)*s)),i._pt=m=new Ta(i._pt,a,e,o,l,zb),m.e=f,m.u="deg",i._props.push(e),m},$c=function(i,a){for(var e in a)i[e]=a[e];return i},Jb=function(i,a,e){var o=$c({},e._gsap),n="perspective,force3D,transformOrigin,svgOrigin",s=e.style,t,c,l,f,d,m,g,h;o.svg?(l=e.getAttribute("transform"),e.setAttribute("transform",""),s[ji]=a,t=In(e,1),zn(e,ji),e.setAttribute("transform",l)):(l=getComputedStyle(e)[ji],s[ji]=a,t=In(e,1),s[ji]=l);for(c in ze)l=o[c],f=t[c],l!==f&&n.indexOf(c)<0&&(g=da(l),h=da(f),d=g!==h?He(e,c,l,h):parseFloat(l),m=parseFloat(f),i._pt=new Ta(i._pt,t,c,d,m-d,Hs),i._pt.u=h||0,i._props.push(c));$c(t,o)};Ra("padding,margin,Width,Radius",function(r,i){var a="Top",e="Right",o="Bottom",n="Left",s=(i<3?[a,e,o,n]:[a+n,a+e,o+e,o+n]).map(function(t){return i<2?r+t:"border"+t+r});vt[i>1?"border"+r:r]=function(t,c,l,f,d){var m,g;if(arguments.length<4)return m=s.map(function(h){return xe(t,h,l)}),g=m.join(" "),g.split(m[0]).length===5?m[0]:g;m=(f+"").split(" "),g={},s.forEach(function(h,u){return g[h]=m[u]=m[u]||m[(u-1)/2|0]}),t.init(c,g,d)}});var Mf={name:"css",register:qs,targetTest:function(i){return i.style&&i.nodeType},init:function(i,a,e,o,n){var s=this._props,t=i.style,c=e.vars.startAt,l,f,d,m,g,h,u,p,b,k,y,S,_,R,T,v;pr||qs(),this.styles=this.styles||hf(i),v=this.styles.props,this.tween=e;for(u in a)if(u!=="autoRound"&&(f=a[u],!(Na[u]&&tf(u,a,e,o,i,n)))){if(g=typeof f,h=vt[u],g==="function"&&(f=f.call(e,o,i,n),g=typeof f),g==="string"&&~f.indexOf("random(")&&(f=Cn(f)),h)h(this,i,u,f,e)&&(T=1);else if(u.substr(0,2)==="--")l=(getComputedStyle(i).getPropertyValue(u)+"").trim(),f+="",Ke.lastIndex=0,Ke.test(l)||(p=da(l),b=da(f)),b?p!==b&&(l=He(i,u,l,b)+b):p&&(f+=p),this.add(t,"setProperty",l,f,o,n,0,0,u),s.push(u),v.push(u,0,t[u]);else if(g!=="undefined"){if(c&&u in c?(l=typeof c[u]=="function"?c[u].call(e,o,i,n):c[u],ra(l)&&~l.indexOf("random(")&&(l=Cn(l)),da(l+"")||(l+=Ua.units[u]||da(xe(i,u))||""),(l+"").charAt(1)==="="&&(l=xe(i,u))):l=xe(i,u),m=parseFloat(l),k=g==="string"&&f.charAt(1)==="="&&f.substr(0,2),k&&(f=f.substr(2)),d=parseFloat(f),u in Re&&(u==="autoAlpha"&&(m===1&&xe(i,"visibility")==="hidden"&&d&&(m=0),v.push("visibility",0,t.visibility),Ue(this,t,"visibility",m?"inherit":"hidden",d?"inherit":"hidden",!d)),u!=="scale"&&u!=="transform"&&(u=Re[u],~u.indexOf(",")&&(u=u.split(",")[0]))),y=u in ze,y){if(this.styles.save(u),S||(_=i._gsap,_.renderTransform&&!a.parseTransform||In(i,a.parseTransform),R=a.smoothOrigin!==!1&&_.smooth,S=this._pt=new Ta(this._pt,t,ji,0,1,_.renderTransform,_,0,-1),S.dep=1),u==="scale")this._pt=new Ta(this._pt,_,"scaleY",_.scaleY,(k?Vo(_.scaleY,k+d):d)-_.scaleY||0,Hs),this._pt.u=0,s.push("scaleY",u),u+="X";else if(u==="transformOrigin"){v.push(re,0,t[re]),f=jb(f),_.svg?Zs(i,f,0,R,0,this):(b=parseFloat(f.split(" ")[2])||0,b!==_.zOrigin&&Ue(this,_,"zOrigin",_.zOrigin,b),Ue(this,t,u,yt(l),yt(f)));continue}else if(u==="svgOrigin"){Zs(i,f,1,R,0,this);continue}else if(u in _f){Zb(this,_,u,m,k?Vo(m,k+f):f);continue}else if(u==="smoothOrigin"){Ue(this,_,"smooth",_.smooth,f);continue}else if(u==="force3D"){_[u]=f;continue}else if(u==="transform"){Jb(this,f,i);continue}}else u in t||(u=on(u)||u);if(y||(d||d===0)&&(m||m===0)&&!Eb.test(f)&&u in t)p=(l+"").substr((m+"").length),d||(d=0),b=da(f)||(u in Ua.units?Ua.units[u]:p),p!==b&&(m=He(i,u,l,b)),this._pt=new Ta(this._pt,y?_:t,u,m,(k?Vo(m,k+d):d)-m,!y&&(b==="px"||u==="zIndex")&&a.autoRound!==!1?Ib:Hs),this._pt.u=b||0,p!==b&&b!=="%"&&(this._pt.b=l,this._pt.r=Pb);else if(u in t)Vb.call(this,i,u,l,k?k+f:f);else if(u in i)this.add(i,u,l||i[u],k?k+f:f,o,n);else if(u!=="parseTransform"){tr(u,f);continue}y||(u in t?v.push(u,0,t[u]):v.push(u,1,l||i[u])),s.push(u)}}T&&mf(this)},render:function(i,a){if(a.tween._time||!gr())for(var e=a._pt;e;)e.r(i,e.d),e=e._next;else a.styles.revert()},get:xe,aliases:Re,getSetter:function(i,a,e){var o=Re[a];return o&&o.indexOf(",")<0&&(a=o),a in ze&&a!==re&&(i._gsap.x||xe(i,"x"))?e&&Hc===e?a==="scale"?Db:Bb:(Hc=e||{})&&(a==="scale"?Gb:Ub):i.style&&!or(i.style[a])?Nb:~a.indexOf("-")?Lb:ur(i,a)},core:{_removeProperty:zn,_getMatrix:br}};Fa.utils.checkPrefix=on;Fa.core.getStyleSaver=hf;(function(r,i,a,e){var o=Ra(r+","+i+","+a,function(n){ze[n]=1});Ra(i,function(n){Ua.units[n]="deg",_f[n]=1}),Re[o[13]]=r+","+i,Ra(e,function(n){var s=n.split(":");Re[s[1]]=o[s[0]]})})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent","rotation,rotationX,rotationY,skewX,skewY","transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective","0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");Ra("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",function(r){Ua.units[r]="px"});Fa.registerPlugin(Mf);var We=Fa.registerPlugin(Mf)||Fa;We.core.Tween;const Xb="varying vec2 vertexUV;varying vec3 vertexNormal;void main(){vertexUV=uv;vertexNormal=normalize(normalMatrix*normal);gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}",Yb="uniform sampler2D globeTexture;varying vec2 vertexUV;varying vec3 vertexNormal;void main(){float intensity=1.05-dot(vertexNormal,vec3(0.0,0.0,1.0));vec3 atmosphere=vec3(0.3,0.6,1.0)*pow(intensity,1.5);gl_FragColor=vec4(atmosphere+texture2D(globeTexture,vertexUV).xyz,1.0);}",$b="varying vec3 vertexNormal;void main(){vertexNormal=normalize(normalMatrix*normal);gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1);}",Qb="varying vec3 vertexNormal;void main(){float intensity=pow(0.8-dot(vertexNormal,vec3(0.0,0.0,1.0)),2.0);gl_FragColor=vec4(0.3,0.6,1.0,1.0)*intensity;}",iv=[{name:{common:"Liechtenstein",official:"Principality of Liechtenstein",nativeName:{deu:{official:"Fürstentum Liechtenstein",common:"Liechtenstein"}}},tld:[".li"],cca2:"LI",ccn3:"438",cca3:"LIE",cioc:"LIE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CHF:{name:"Swiss franc",symbol:"Fr"}},idd:{root:"+4",suffixes:["23"]},capital:["Vaduz"],altSpellings:["LI","Principality of Liechtenstein","Fürstentum Liechtenstein"],region:"Europe",subregion:"Western Europe",languages:{deu:"German"},translations:{ara:{official:"إمارة ليختنشتاين",common:"ليختنشتاين"},bre:{official:"Priñselezh Liechtenstein",common:"Liechtenstein"},ces:{official:"Knížectví Lichtenštejnské",common:"Lichtenštejnsko"},cym:{official:"Principality of Liechtenstein",common:"Liechtenstein"},deu:{official:"Fürstentum Liechtenstein",common:"Liechtenstein"},est:{official:"Liechtensteini Vürstiriik",common:"Liechtenstein"},fin:{official:"Liechensteinin ruhtinaskunta",common:"Liechenstein"},fra:{official:"Principauté du Liechtenstein",common:"Liechtenstein"},hrv:{official:"Kneževina Lihtenštajn",common:"Lihtenštajn"},hun:{official:"Liechtensteini Hercegség",common:"Liechtenstein"},ita:{official:"Principato del Liechtenstein",common:"Liechtenstein"},jpn:{official:"リヒテンシュタイン公国",common:"リヒテンシュタイン"},kor:{official:"리히텐슈타인 공국",common:"리히텐슈타인"},nld:{official:"Vorstendom Liechtenstein",common:"Liechtenstein"},per:{official:"شاهزاده‌نشین لیختن‌اشتاین",common:"لیختن‌اشتاین"},pol:{official:"Księstwo Liechtensteinu",common:"Liechtenstein"},por:{official:"Principado de Liechtenstein",common:"Liechtenstein"},rus:{official:"Княжество Лихтенштейн",common:"Лихтенштейн"},slk:{official:"Lichtenštajnské kniežatstvo",common:"Lichtenštajnsko"},spa:{official:"Principado de Liechtenstein",common:"Liechtenstein"},srp:{official:"Кнежевина Лихтенштајн",common:"Лихтенштајн"},swe:{official:"Furstendömet Liechtenstein",common:"Liechtenstein"},tur:{official:"Lihtenştayn Prensliği",common:"Lihtenştayn"},urd:{official:"امارات لیختینستائن",common:"لیختینستائن"},zho:{official:"列支敦士登公国",common:"列支敦士登"}},latlng:[47.26666666,9.53333333],landlocked:!0,borders:["AUT","CHE"],area:160,demonyms:{eng:{f:"Liechtensteiner",m:"Liechtensteiner"},fra:{f:"Liechtensteinoise",m:"Liechtensteinois"}},flag:"🇱🇮",maps:{googleMaps:"https://goo.gl/maps/KNuHeiJzAPodwM7y6",openStreetMaps:"https://www.openstreetmap.org/relation/1155955"},population:38137,fifa:"LIE",car:{signs:["FL"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/li.png",svg:"https://flagcdn.com/li.svg",alt:"The flag of Liechtenstein is composed of two equal horizontal bands of blue and red, with a golden-yellow crown on the hoist side of the blue band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/li.png",svg:"https://mainfacts.com/media/images/coats_of_arms/li.svg"},startOfWeek:"monday",capitalInfo:{latlng:[47.13,9.52]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Macau",official:"Macao Special Administrative Region of the People's Republic of China",nativeName:{por:{official:"Região Administrativa Especial de Macau da República Popular da China",common:"Macau"},zho:{official:"中华人民共和国澳门特别行政区",common:"澳门"}}},tld:[".mo"],cca2:"MO",ccn3:"446",cca3:"MAC",independent:!1,status:"officially-assigned",unMember:!1,currencies:{MOP:{name:"Macanese pataca",symbol:"P"}},idd:{root:"+8",suffixes:["53"]},altSpellings:["MO","澳门","Macao","Macao Special Administrative Region of the People's Republic of China","中華人民共和國澳門特別行政區","Região Administrativa Especial de Macau da República Popular da China"],region:"Asia",subregion:"Eastern Asia",languages:{por:"Portuguese",zho:"Chinese"},translations:{ara:{official:"منطقة ماكاو الإدارية التابعة لجمهورية الصين الشعبية",common:"ماكاو"},bre:{official:"Rannvro velestradurel arbennik Makao eus Republik pobl Sina",common:"Makao"},ces:{official:"Zvláštní správní oblast Čínské lidové republiky Macao",common:"Macao"},cym:{official:"Macao Special Administrative Region of the People's Republic of China",common:"Macau"},deu:{official:"Sonderverwaltungsregion Macau der Volksrepublik China",common:"Macao"},est:{official:"Macau erihalduspiirkond",common:"Macau"},fin:{official:"Macaon Kiinan kansantasavallan erityishallintoalue",common:"Macao"},fra:{official:"Région administrative spéciale de Macao de la République populaire de Chine",common:"Macao"},hrv:{official:"Makao Posebnog upravnog područjaNarodne Republike Kine",common:"Makao"},hun:{official:"Makaó",common:"Makaó"},ita:{official:"Macao Regione amministrativa speciale della Repubblica Popolare Cinese",common:"Macao"},jpn:{official:"中華人民共和国マカオ特別行政区",common:"マカオ"},kor:{official:"중화인민공화국 마카오 특별행정구",common:"마카오"},nld:{official:"Speciale Administratieve Regio Macau van de Volksrepubliek China",common:"Macao"},per:{official:"ماکائو",common:"ماکائو"},pol:{official:"Specjalny Region Administracyjny Chińskiej Republiki Ludowej Makau",common:"Makau"},por:{official:"Macau Região Administrativa Especial da República Popular da China",common:"Macau"},rus:{official:"Специальный административный район Макао Китайской Народной Республики Китай",common:"Макао"},slk:{official:"Macao, Špeciàlna administratívna oblasŦ",common:"Macao"},spa:{official:"Macao, Región Administrativa Especial de la República Popular China",common:"Macao"},srp:{official:"Макао специјална административна област Народне Републике Кине",common:"Макао"},swe:{official:"Macao",common:"Macao"},tur:{official:"Çin Halk Cumhuriyeti Makao Özel İdari Bölgesi",common:"Makao"},urd:{official:"مکاؤ عوامی جمہوریہ چین کا خصوصی انتظامی علاقہ",common:"مکاؤ"}},latlng:[22.16666666,113.55],landlocked:!1,borders:["CHN"],area:30,demonyms:{eng:{f:"Macanese",m:"Macanese"},fra:{f:"Macanaise",m:"Macanais"}},flag:"🇲🇴",maps:{googleMaps:"https://goo.gl/maps/whymRdk3dZFfAAs4A",openStreetMaps:"https://www.openstreetmap.org/relation/1867188"},population:649342,fifa:"MAC",car:{signs:["MO"],side:"left"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/mo.png",svg:"https://flagcdn.com/mo.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mo.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mo.svg"},startOfWeek:"monday",capitalInfo:{}},{name:{common:"American Samoa",official:"American Samoa",nativeName:{eng:{official:"American Samoa",common:"American Samoa"},smo:{official:"Sāmoa Amelika",common:"Sāmoa Amelika"}}},tld:[".as"],cca2:"AS",ccn3:"016",cca3:"ASM",cioc:"ASA",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["684"]},capital:["Pago Pago"],altSpellings:["AS","Amerika Sāmoa","Amelika Sāmoa","Sāmoa Amelika"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English",smo:"Samoan"},translations:{ara:{official:"ساموا الأمريكية",common:"ساموا الأمريكية"},bre:{official:"Samoa Amerikan",common:"Samoa Amerikan"},ces:{official:"Americká Samoa",common:"Americká Samoa"},cym:{official:"American Samoa",common:"American Samoa"},deu:{official:"Amerikanisch-Samoa",common:"Amerikanisch-Samoa"},est:{official:"Ameerika Samoa",common:"Ameerika Samoa"},fin:{official:"Amerikan Samoa",common:"Amerikan Samoa"},fra:{official:"Samoa américaines",common:"Samoa américaines"},hrv:{official:"američka Samoa",common:"Američka Samoa"},hun:{official:"Szamoa",common:"Szamoa"},ita:{official:"Samoa americane",common:"Samoa Americane"},jpn:{official:"米サモア",common:"アメリカ領サモア"},kor:{official:"아메리칸사모아",common:"아메리칸사모아"},nld:{official:"Amerikaans Samoa",common:"Amerikaans Samoa"},per:{official:"ساموآی آمریکا",common:"ساموآی آمریکا"},pol:{official:"Samoa Amerykańskie",common:"Samoa Amerykańskie"},por:{official:"Samoa americana",common:"Samoa Americana"},rus:{official:"американское Самоа",common:"Американское Самоа"},slk:{official:"Americká Samoa",common:"Americká Samoa"},spa:{official:"Samoa Americana",common:"Samoa Americana"},srp:{official:"Америчка Самоа",common:"Америчка Самоа"},swe:{official:"Amerikanska Samoa",common:"Amerikanska Samoa"},tur:{official:"Amerikan Samoası",common:"Amerikan Samoası"},urd:{official:"امریکی سمووا",common:"امریکی سمووا"},zho:{official:"美属萨摩亚",common:"美属萨摩亚"}},latlng:[-14.33333333,-170],landlocked:!1,area:199,demonyms:{eng:{f:"American Samoan",m:"American Samoan"},fra:{f:"Samoane",m:"Samoan"}},flag:"🇦🇸",maps:{googleMaps:"https://goo.gl/maps/Re9ePMjwP1sFCBFA6",openStreetMaps:"https://www.openstreetmap.org/relation/2177187"},population:55197,fifa:"ASA",car:{signs:["USA"],side:"right"},timezones:["UTC-11:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/as.png",svg:"https://flagcdn.com/as.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-14.27,-170.7]}},{name:{common:"Australia",official:"Commonwealth of Australia",nativeName:{eng:{official:"Commonwealth of Australia",common:"Australia"}}},tld:[".au"],cca2:"AU",ccn3:"036",cca3:"AUS",cioc:"AUS",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AUD:{name:"Australian dollar",symbol:"$"}},idd:{root:"+6",suffixes:["1"]},capital:["Canberra"],altSpellings:["AU"],region:"Oceania",subregion:"Australia and New Zealand",languages:{eng:"English"},translations:{ara:{official:"كومونولث أستراليا",common:"أستراليا"},bre:{official:"Kenglad Aostralia",common:"Aostralia"},ces:{official:"Australské společenství",common:"Austrálie"},cym:{official:"Cymanwlad Awstralia",common:"Awstralia"},deu:{official:"Commonwealth Australien",common:"Australien"},est:{official:"Austraalia Ühendus",common:"Austraalia"},fin:{official:"Australian liittovaltio",common:"Australia"},fra:{official:"Australie",common:"Australie"},hrv:{official:"Commonwealth of Australia",common:"Australija"},hun:{official:"Ausztrál Államszövetség",common:"Ausztrália"},ita:{official:"Commonwealth dell'Australia",common:"Australia"},jpn:{official:"オーストラリア連邦",common:"オーストラリア"},kor:{official:"오스트레일리아 연방",common:"호주"},nld:{official:"Gemenebest van Australië",common:"Australië"},per:{official:"قلمرو همسود استرالیا",common:"استرالیا"},pol:{official:"Związek Australijski",common:"Australia"},por:{official:"Comunidade da Austrália",common:"Austrália"},rus:{official:"Содружество Австралии",common:"Австралия"},slk:{official:"Austrálsky zväz",common:"Austrália"},spa:{official:"Mancomunidad de Australia",common:"Australia"},srp:{official:"Комонвелт Аустралија",common:"Аустралија"},swe:{official:"Australiska statsförbundet",common:"Australien"},tur:{official:"Avustralya Federal Devleti",common:"Avustralya"},urd:{official:"دولتِ مشترکہ آسٹریلیا",common:"آسٹریلیا"},zho:{official:"澳大利亚联邦",common:"澳大利亚"}},latlng:[-27,133],landlocked:!1,area:7692024,demonyms:{eng:{f:"Australian",m:"Australian"},fra:{f:"Australienne",m:"Australien"}},flag:"🇦🇺",maps:{googleMaps:"https://goo.gl/maps/DcjaDa7UbhnZTndH6",openStreetMaps:"https://www.openstreetmap.org/relation/80500"},population:25687041,gini:{2014:34.4},fifa:"AUS",car:{signs:["AUS"],side:"left"},timezones:["UTC+05:00","UTC+06:30","UTC+07:00","UTC+08:00","UTC+09:30","UTC+10:00","UTC+10:30","UTC+11:30"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/au.png",svg:"https://flagcdn.com/au.svg",alt:"The flag of Australia has a dark blue field. It features the flag of the United Kingdom — the Union Jack — in the canton, beneath which is a large white seven-pointed star. A representation of the Southern Cross constellation, made up of one small five-pointed and four larger seven-pointed white stars, is situated on the fly side of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/au.png",svg:"https://mainfacts.com/media/images/coats_of_arms/au.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-35.27,149.13]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"North Korea",official:"Democratic People's Republic of Korea",nativeName:{kor:{official:"조선민주주의인민공화국",common:"조선"}}},tld:[".kp"],cca2:"KP",ccn3:"408",cca3:"PRK",cioc:"PRK",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KPW:{name:"North Korean won",symbol:"₩"}},idd:{root:"+8",suffixes:["50"]},capital:["Pyongyang"],altSpellings:["KP","Democratic People's Republic of Korea","DPRK","조선민주주의인민공화국","Chosŏn Minjujuŭi Inmin Konghwaguk","Korea, Democratic People's Republic of","북한","북조선"],region:"Asia",subregion:"Eastern Asia",languages:{kor:"Korean"},translations:{ara:{official:"جمهورية كوريا الديمقراطية الشعبية",common:"كوريا الشمالية"},bre:{official:"Republik Poblel ha Demokratel Korea",common:"Korea an Norzh"},ces:{official:"Korejská lidově demokratická republika",common:"Severní Korea"},cym:{official:"Democratic People's Republic of Korea",common:"North Korea"},deu:{official:"Demokratische Volksrepublik Korea",common:"Nordkorea"},est:{official:"Korea Rahvademokraatlik Vabariik",common:"Põhja-Korea"},fin:{official:"Korean demokraattinen kansantasavalta",common:"Pohjois-Korea"},fra:{official:"République populaire démocratique de Corée",common:"Corée du Nord"},hrv:{official:"Demokratska Narodna Republika Koreja",common:"Sjeverna Koreja"},hun:{official:"Koreai Népi Demokratikus Köztársaság",common:"Észak-Korea"},ita:{official:"Repubblica democratica popolare di Corea",common:"Corea del Nord"},jpn:{official:"朝鮮民主主義人民共和国",common:"朝鮮民主主義人民共和国"},kor:{official:"조선민주주의인민공화국",common:"조선"},nld:{official:"Democratische Volksrepubliek Korea",common:"Noord-Korea"},per:{official:"جمهوری دموکراتیک خلق کره",common:"کُره شمالی"},pol:{official:"Koreańska Republika Ludowo-Demokratyczna",common:"Korea Północna"},por:{official:"República Popular Democrática da Coreia",common:"Coreia do Norte"},rus:{official:"Корейская Народно-Демократическая Республика Корея",common:"Северная Корея"},slk:{official:"Kórejská ľudovodemokratická republika",common:"Severná Kórea"},spa:{official:"República Popular Democrática de Corea",common:"Corea del Norte"},srp:{official:"Демократска Народна Република Кореја",common:"Северна Кореја"},swe:{official:"Demokratiska Folkrepubliken Korea",common:"Nordkorea"},tur:{official:"Kore Demokratik Halk Cumhuriyeti",common:"Kuzey Kore"},urd:{official:"جمہوری عوامی جمہوریہ کوریا",common:"شمالی کوریا"},zho:{official:"朝鲜人民民主共和国",common:"朝鲜"}},latlng:[40,127],landlocked:!1,borders:["CHN","KOR","RUS"],area:120538,demonyms:{eng:{f:"North Korean",m:"North Korean"},fra:{f:"Nord-coréenne",m:"Nord-coréen"}},flag:"🇰🇵",maps:{googleMaps:"https://goo.gl/maps/9q5T2DMeH5JL7Tky6",openStreetMaps:"https://www.openstreetmap.org/relation/192734"},population:25778815,fifa:"PRK",car:{signs:[""],side:"right"},timezones:["UTC+09:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/kp.png",svg:"https://flagcdn.com/kp.svg",alt:"The flag of North Korea is composed of three horizontal bands — a large central white-edged red band, and a blue band above and beneath the red band. On the hoist side of the red band is a red five-pointed star within a white circle."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/kp.png",svg:"https://mainfacts.com/media/images/coats_of_arms/kp.svg"},startOfWeek:"monday",capitalInfo:{latlng:[39.02,125.75]},postalCode:{format:"###-###",regex:"^(\\d{6})$"}},{name:{common:"Tonga",official:"Kingdom of Tonga",nativeName:{eng:{official:"Kingdom of Tonga",common:"Tonga"},ton:{official:"Kingdom of Tonga",common:"Tonga"}}},tld:[".to"],cca2:"TO",ccn3:"776",cca3:"TON",cioc:"TGA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{TOP:{name:"Tongan paʻanga",symbol:"T$"}},idd:{root:"+6",suffixes:["76"]},capital:["Nuku'alofa"],altSpellings:["TO"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English",ton:"Tongan"},translations:{ara:{official:"مملكة تونغا",common:"تونغا"},bre:{official:"Rouantelezh Tonga",common:"Tonga"},ces:{official:"Království Tonga",common:"Tonga"},cym:{official:"Kingdom of Tonga",common:"Tonga"},deu:{official:"Königreich Tonga",common:"Tonga"},est:{official:"Tonga Kuningriik",common:"Tonga"},fin:{official:"Tongan kuningaskunta",common:"Tonga"},fra:{official:"Royaume des Tonga",common:"Tonga"},hrv:{official:"Kraljevina Tonga",common:"Tonga"},hun:{official:"Tongai Királyság",common:"Tonga"},ita:{official:"Regno di Tonga",common:"Tonga"},jpn:{official:"トンガ王国",common:"トンガ"},kor:{official:"통가 왕국",common:"통가"},nld:{official:"Koninkrijk Tonga",common:"Tonga"},per:{official:"پادشاهی تونگا",common:"تونگا"},pol:{official:"Królestwo Tonga",common:"Tonga"},por:{official:"Reino de Tonga",common:"Tonga"},rus:{official:"Королевство Тонга",common:"Тонга"},slk:{official:"Tongské kráľovstvo",common:"Tonga"},spa:{official:"Reino de Tonga",common:"Tonga"},srp:{official:"Краљевина Тонга",common:"Тонга"},swe:{official:"Konungariket Tonga",common:"Tonga"},tur:{official:"Tonga Krallığı",common:"Tonga"},urd:{official:"مملکتِ ٹونگا",common:"ٹونگا"},zho:{official:"汤加王国",common:"汤加"}},latlng:[-20,-175],landlocked:!1,area:747,demonyms:{eng:{f:"Tongan",m:"Tongan"},fra:{f:"Tonguienne",m:"Tonguien"}},flag:"🇹🇴",maps:{googleMaps:"https://goo.gl/maps/p5YALBY2QdEzswRo7",openStreetMaps:"https://www.openstreetmap.org/relation/2186665"},population:105697,gini:{2015:37.6},fifa:"TGA",car:{signs:["TO"],side:"left"},timezones:["UTC+13:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/to.png",svg:"https://flagcdn.com/to.svg",alt:"The flag of Tonga has a red field. A white rectangle bearing a red Greek cross is superimposed in the canton."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/to.png",svg:"https://mainfacts.com/media/images/coats_of_arms/to.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-21.13,-175.2]}},{name:{common:"Latvia",official:"Republic of Latvia",nativeName:{lav:{official:"Latvijas Republikas",common:"Latvija"}}},tld:[".lv"],cca2:"LV",ccn3:"428",cca3:"LVA",cioc:"LAT",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["71"]},capital:["Riga"],altSpellings:["LV","Republic of Latvia","Latvijas Republika"],region:"Europe",subregion:"Northern Europe",languages:{lav:"Latvian"},translations:{ara:{official:"جمهورية لاتفيا",common:"لاتفيا"},bre:{official:"Republik Latvia",common:"Latvia"},ces:{official:"Lotyšská republika",common:"Lotyšsko"},cym:{official:"Republic of Latvia",common:"Latvia"},deu:{official:"Republik Lettland",common:"Lettland"},est:{official:"Läti Vabariik",common:"Läti"},fin:{official:"Latvian tasavalta",common:"Latvia"},fra:{official:"République de Lettonie",common:"Lettonie"},hrv:{official:"Republika Latvija",common:"Latvija"},hun:{official:"Lett Köztársaság",common:"Lettország"},ita:{official:"Repubblica di Lettonia",common:"Lettonia"},jpn:{official:"ラトビア共和国",common:"ラトビア"},kor:{official:"라트비아 공화국",common:"라트비아"},nld:{official:"Republiek Letland",common:"Letland"},per:{official:"جمهوری لتونی",common:"لتونی"},pol:{official:"Republika Łotewska",common:"Łotwa"},por:{official:"República da Letónia",common:"Letónia"},rus:{official:"Латвийская Республика",common:"Латвия"},slk:{official:"Lotyšská republika",common:"Lotyšsko"},spa:{official:"República de Letonia",common:"Letonia"},srp:{official:"Летонска Република",common:"Летонија"},swe:{official:"Republiken Lettland",common:"Lettland"},tur:{official:"Letonya Cumhuriyeti",common:"Letonya"},urd:{official:"جمہوریہ لٹویا",common:"لٹویا"},zho:{official:"拉脱维亚共和国",common:"拉脱维亚"}},latlng:[57,25],landlocked:!1,borders:["BLR","EST","LTU","RUS"],area:64559,demonyms:{eng:{f:"Latvian",m:"Latvian"},fra:{f:"Lettone",m:"Letton"}},flag:"🇱🇻",maps:{googleMaps:"https://goo.gl/maps/iQpUkH7ghq31ZtXe9",openStreetMaps:"https://www.openstreetmap.org/relation/72594"},population:1901548,gini:{2018:35.1},fifa:"LVA",car:{signs:["LV"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/lv.png",svg:"https://flagcdn.com/lv.svg",alt:"The flag of Latvia has a carmine-red field with a thin white horizontal band across the middle of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/lv.png",svg:"https://mainfacts.com/media/images/coats_of_arms/lv.svg"},startOfWeek:"monday",capitalInfo:{latlng:[56.95,24.1]},postalCode:{format:"LV-####",regex:"^(?:LV)*(\\d{4})$"}},{name:{common:"Costa Rica",official:"Republic of Costa Rica",nativeName:{spa:{official:"República de Costa Rica",common:"Costa Rica"}}},tld:[".cr"],cca2:"CR",ccn3:"188",cca3:"CRI",cioc:"CRC",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CRC:{name:"Costa Rican colón",symbol:"₡"}},idd:{root:"+5",suffixes:["06"]},capital:["San José"],altSpellings:["CR","Republic of Costa Rica","República de Costa Rica"],region:"Americas",subregion:"Central America",languages:{spa:"Spanish"},translations:{ara:{official:"جمهورية كوستاريكا",common:"كوستاريكا"},bre:{official:"Republik Costa Rica",common:"Costa Rica"},ces:{official:"Kostarická republika",common:"Kostarika"},cym:{official:"Gweriniaeth Costa Rica",common:"Costa Rica"},deu:{official:"Republik Costa Rica",common:"Costa Rica"},est:{official:"Costa Rica Vabariik",common:"Costa Rica"},fin:{official:"Costa Rican tasavalta",common:"Costa Rica"},fra:{official:"République du Costa Rica",common:"Costa Rica"},hrv:{official:"Republika Kostarika",common:"Kostarika"},hun:{official:"Costa Rica-i Köztársaság",common:"Costa Rica"},ita:{official:"Repubblica di Costa Rica",common:"Costa Rica"},jpn:{official:"コスタリカ共和国",common:"コスタリカ"},kor:{official:"코스타리카 공화국",common:"코스타리카"},nld:{official:"Republiek Costa Rica",common:"Costa Rica"},per:{official:"جمهوری کاستاریکا",common:"کاستاریکا"},pol:{official:"Republika Kostaryki",common:"Kostaryka"},por:{official:"República da Costa Rica",common:"Costa Rica"},rus:{official:"Республика Коста-Рика",common:"Коста-Рика"},slk:{official:"Kostarická republika",common:"Kostarika"},spa:{official:"República de Costa Rica",common:"Costa Rica"},srp:{official:"Република Костарика",common:"Костарика"},swe:{official:"Republiken Costa Rica",common:"Costa Rica"},tur:{official:"Kosta Rika Cumhuriyeti",common:"Kosta Rika"},urd:{official:"جمہوریہ کوسٹاریکا",common:"کوسٹاریکا"},zho:{official:"哥斯达黎加共和国",common:"哥斯达黎加"}},latlng:[10,-84],landlocked:!1,borders:["NIC","PAN"],area:51100,demonyms:{eng:{f:"Costa Rican",m:"Costa Rican"},fra:{f:"Costaricaine",m:"Costaricain"}},flag:"🇨🇷",maps:{googleMaps:"https://goo.gl/maps/RFiwytjvNrpfKN7k6",openStreetMaps:"https://www.openstreetmap.org/relation/287667"},population:5094114,gini:{2019:48.2},fifa:"CRC",car:{signs:["CR"],side:"right"},timezones:["UTC-06:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/cr.png",svg:"https://flagcdn.com/cr.svg",alt:"The flag of Costa Rica is composed of five horizontal bands of blue, white, red, white and blue. The central red band is twice the height of the other four bands."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[9.93,-84.09]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Guadeloupe",official:"Guadeloupe",nativeName:{fra:{official:"Guadeloupe",common:"Guadeloupe"}}},tld:[".gp"],cca2:"GP",ccn3:"312",cca3:"GLP",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+5",suffixes:["90"]},capital:["Basse-Terre"],altSpellings:["GP","Gwadloup"],region:"Americas",subregion:"Caribbean",languages:{fra:"French"},translations:{ara:{official:"غوادلوب",common:"غوادلوب"},bre:{official:"Gwadeloup",common:"Gwadeloup"},ces:{official:"Guadeloupe",common:"Guadeloupe"},cym:{official:"Guadeloupe",common:"Guadeloupe"},deu:{official:"Guadeloupe",common:"Guadeloupe"},est:{official:"Guadeloupe’i ja sõltkondade departemang",common:"Guadeloupe"},fin:{official:"Guadeloupen departmentti",common:"Guadeloupe"},fra:{official:"Guadeloupe",common:"Guadeloupe"},hrv:{official:"Gvadalupa",common:"Gvadalupa"},hun:{official:"Guadeloupe",common:"Guadeloupe"},ita:{official:"Guadeloupe",common:"Guadeloupa"},jpn:{official:"グアドループ島",common:"グアドループ"},kor:{official:"과들루프",common:"과들루프"},nld:{official:"Guadeloupe",common:"Guadeloupe"},per:{official:"گوادلوپ",common:"گوادلوپ"},pol:{official:"Gwadelupa",common:"Gwadelupa"},por:{official:"Guadalupe",common:"Guadalupe"},rus:{official:"Гваделупа",common:"Гваделупа"},slk:{official:"Guadeloupe",common:"Guadeloupe"},spa:{official:"Guadalupe",common:"Guadalupe"},srp:{official:"Гваделуп",common:"Гваделуп"},swe:{official:"Guadeloupe",common:"Guadeloupe"},tur:{official:"Guadeloupe",common:"Guadeloupe"},urd:{official:"گواڈیلوپ",common:"گواڈیلوپ"},zho:{official:"瓜德罗普岛",common:"瓜德罗普岛"}},latlng:[16.25,-61.583333],landlocked:!1,area:1628,demonyms:{eng:{f:"Guadeloupian",m:"Guadeloupian"},fra:{f:"Guadeloupéenne",m:"Guadeloupéen"}},flag:"🇬🇵",maps:{googleMaps:"https://goo.gl/maps/Dy9R2EufJtoWm8UN9",openStreetMaps:"https://www.openstreetmap.org/relation/7109289"},population:400132,car:{signs:["F"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/gp.png",svg:"https://flagcdn.com/gp.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gp.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gp.svg"},startOfWeek:"monday",capitalInfo:{latlng:[16.03,-61.73]},postalCode:{format:"#####",regex:"^((97|98)\\d{3})$"}},{name:{common:"Saudi Arabia",official:"Kingdom of Saudi Arabia",nativeName:{ara:{official:"المملكة العربية السعودية",common:"العربية السعودية"}}},tld:[".sa",".السعودية"],cca2:"SA",ccn3:"682",cca3:"SAU",cioc:"KSA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SAR:{name:"Saudi riyal",symbol:"ر.س"}},idd:{root:"+9",suffixes:["66"]},capital:["Riyadh"],altSpellings:["Saudi","SA","Kingdom of Saudi Arabia","Al-Mamlakah al-‘Arabiyyah as-Su‘ūdiyyah"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"المملكة العربية السعودية",common:"السعودية"},bre:{official:"Rouantelezh Arabia Saoudat",common:"Arabia Saoudat"},ces:{official:"Saúdskoarabské království",common:"Saúdská Arábie"},cym:{official:"Kingdom of Saudi Arabia",common:"Saudi Arabia"},deu:{official:"Königreich Saudi-Arabien",common:"Saudi-Arabien"},est:{official:"Saudi Araabia Kuningriik",common:"Saudi Araabia"},fin:{official:"Saudi-Arabian kuningaskunta",common:"Saudi-Arabia"},fra:{official:"Royaume d'Arabie Saoudite",common:"Arabie Saoudite"},hrv:{official:"Kraljevina Saudijska Arabija",common:"Saudijska Arabija"},hun:{official:"Szaúd-Arábia",common:"Szaúd-Arábia"},ita:{official:"Arabia Saudita",common:"Arabia Saudita"},jpn:{official:"サウジアラビア王国",common:"サウジアラビア"},kor:{official:"사우디아라비아 왕국",common:"사우디아라비아"},nld:{official:"Koninkrijk van Saoedi-Arabië",common:"Saoedi-Arabië"},per:{official:"پادشاهی عربی سَعودی",common:"عربستان سعودی"},pol:{official:"Królestwo Arabii Saudyjskiej",common:"Arabia Saudyjska"},por:{official:"Reino da Arábia Saudita",common:"Arábia Saudita"},rus:{official:"Королевство Саудовская Аравия",common:"Саудовская Аравия"},slk:{official:"Saudskoarabské kráľovstvo",common:"Saudská Arábia"},spa:{official:"Reino de Arabia Saudita",common:"Arabia Saudí"},srp:{official:"Краљевина Саудијска Арабија",common:"Саудијска Арабија"},swe:{official:"Kungadömet Saudiarabien",common:"Saudiarabien"},tur:{official:"Suudi Arabistan Krallığı",common:"Suudi Arabistan"},urd:{official:"مملکتِ سعودی عرب",common:"سعودی عرب"},zho:{official:"沙特阿拉伯王国",common:"沙特阿拉伯"}},latlng:[25,45],landlocked:!1,borders:["IRQ","JOR","KWT","OMN","QAT","ARE","YEM"],area:2149690,demonyms:{eng:{f:"Saudi Arabian",m:"Saudi Arabian"},fra:{f:"Saoudienne",m:"Saoudien"}},flag:"🇸🇦",maps:{googleMaps:"https://goo.gl/maps/5PSjvdJ1AyaLFRrG9",openStreetMaps:"https://www.openstreetmap.org/relation/307584"},population:34813867,fifa:"KSA",car:{signs:["SA"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/sa.png",svg:"https://flagcdn.com/sa.svg",alt:"The flag of Saudi Arabia has a green field, at the center of which is an Arabic inscription — the Shahada — in white above a white horizontal sabre with its tip pointed to the hoist side of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sa.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sa.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[24.65,46.7]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Dominican Republic",official:"Dominican Republic",nativeName:{spa:{official:"República Dominicana",common:"República Dominicana"}}},tld:[".do"],cca2:"DO",ccn3:"214",cca3:"DOM",cioc:"DOM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{DOP:{name:"Dominican peso",symbol:"$"}},idd:{root:"+1",suffixes:["809","829","849"]},capital:["Santo Domingo"],altSpellings:["DO"],region:"Americas",subregion:"Caribbean",languages:{spa:"Spanish"},translations:{ara:{official:"جمهورية الدومينيكان",common:"جمهورية الدومينيكان"},bre:{official:"Republik Dominikan",common:"Republik Dominikan"},ces:{official:"Dominikánská republika",common:"Dominikánská republika"},cym:{official:"Gweriniaeth Dominica",common:"Gweriniaeth Dominica"},deu:{official:"Dominikanische Republik",common:"Dominikanische Republik"},est:{official:"Dominikaani Vabariik",common:"Dominikaani Vabariik"},fin:{official:"Dominikaaninen tasavalta",common:"Dominikaaninen tasavalta"},fra:{official:"République Dominicaine",common:"République dominicaine"},hrv:{official:"Dominikanska Republika",common:"Dominikanska Republika"},hun:{official:"Dominikai Köztársaság",common:"Dominikai Köztársaság"},ita:{official:"Repubblica Dominicana",common:"Repubblica Dominicana"},jpn:{official:"ドミニカ共和国",common:"ドミニカ共和国"},kor:{official:"도미니카 공화국",common:"도미니카 공화국"},nld:{official:"Dominicaanse Republiek",common:"Dominicaanse Republiek"},per:{official:"جمهوری دومینیکن",common:"جمهوری دومینیکن"},pol:{official:"Republika Dominikańska",common:"Dominikana"},por:{official:"República Dominicana",common:"República Dominicana"},rus:{official:"Доминиканская Республика",common:"Доминиканская Республика"},slk:{official:"Dominikánska republika",common:"Dominikánska republika"},spa:{official:"República Dominicana",common:"República Dominicana"},srp:{official:"Доминиканска Република",common:"Доминикана"},swe:{official:"Dominikanska republiken",common:"Dominikanska republiken"},tur:{official:"Dominik Cumhuriyeti",common:"Dominik Cumhuriyeti"},urd:{official:"جمہوریہ ڈومینیکن",common:"ڈومینیکن"},zho:{official:"多明尼加共和国",common:"多明尼加"}},latlng:[19,-70.66666666],landlocked:!1,borders:["HTI"],area:48671,demonyms:{eng:{f:"Dominican",m:"Dominican"},fra:{f:"Dominicaine",m:"Dominicain"}},flag:"🇩🇴",maps:{googleMaps:"https://goo.gl/maps/soxooTHxEeiAbn3UA",openStreetMaps:"https://www.openstreetmap.org/relation/307828"},population:10847904,gini:{2019:41.9},fifa:"DOM",car:{signs:["DOM"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/do.png",svg:"https://flagcdn.com/do.svg",alt:"The flag of the Dominican Republic is divided into four rectangles by a centered white cross that extends to the edges of the field and bears the national coat of arms in its center. The upper hoist-side and lower fly-side rectangles are blue and the lower hoist-side and upper fly-side rectangles are red."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/do.png",svg:"https://mainfacts.com/media/images/coats_of_arms/do.svg"},startOfWeek:"monday",capitalInfo:{latlng:[18.47,-69.9]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Antigua and Barbuda",official:"Antigua and Barbuda",nativeName:{eng:{official:"Antigua and Barbuda",common:"Antigua and Barbuda"}}},tld:[".ag"],cca2:"AG",ccn3:"028",cca3:"ATG",cioc:"ANT",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["268"]},capital:["Saint John's"],altSpellings:["AG"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"أنتيغوا وباربودا",common:"أنتيغوا وباربودا"},bre:{official:"Antigua ha Barbuda",common:"Antigua ha Barbuda"},ces:{official:"Antigua a Barbuda",common:"Antigua a Barbuda"},cym:{official:"Antigwa a Barbiwda",common:"Antigwa a Barbiwda"},deu:{official:"Antigua und Barbuda",common:"Antigua und Barbuda"},est:{official:"Antigua ja Barbuda",common:"Antigua ja Barbuda"},fin:{official:"Antigua ja Barbuda",common:"Antigua ja Barbuda"},fra:{official:"Antigua -et-Barbuda",common:"Antigua-et-Barbuda"},hrv:{official:"Antigva i Barbuda",common:"Antigva i Barbuda"},hun:{official:"Antigua és Barbuda",common:"Antigua és Barbuda"},ita:{official:"Antigua e Barbuda",common:"Antigua e Barbuda"},jpn:{official:"アンチグアバーブーダ",common:"アンティグア・バーブーダ"},kor:{official:"앤티가 바부다",common:"앤티가 바부다"},nld:{official:"Antigua en Barbuda",common:"Antigua en Barbuda"},per:{official:"آنتیگوا و باربودا",common:"آنتیگوا و باربودا"},pol:{official:"Antigua i Barbuda",common:"Antigua i Barbuda"},por:{official:"Antigua e Barbuda",common:"Antígua e Barbuda"},rus:{official:"Антигуа и Барбуда",common:"Антигуа и Барбуда"},slk:{official:"Antigua a Barbuda",common:"Antigua a Barbuda"},spa:{official:"Antigua y Barbuda",common:"Antigua y Barbuda"},srp:{official:"Антигва и Барбуда",common:"Антигва и Барбуда"},swe:{official:"Antigua och Barbuda",common:"Antigua och Barbuda"},tur:{official:"Antigua ve Barbuda",common:"Antigua ve Barbuda"},urd:{official:"اینٹیگوا و باربوڈا",common:"اینٹیگوا و باربوڈا"},zho:{official:"安提瓜和巴布达",common:"安提瓜和巴布达"}},latlng:[17.05,-61.8],landlocked:!1,area:442,demonyms:{eng:{f:"Antiguan, Barbudan",m:"Antiguan, Barbudan"},fra:{f:"Antiguaise et barbudienne",m:"Antiguaise et barbudien"}},flag:"🇦🇬",maps:{googleMaps:"https://goo.gl/maps/fnye4wGJ1RzC9jpX9",openStreetMaps:"https://www.openstreetmap.org/relation/536900"},population:97928,fifa:"ATG",car:{signs:["AG"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/ag.png",svg:"https://flagcdn.com/ag.svg",alt:"The flag of Antigua and Barbuda has a red field with an inverted isosceles triangle based on the top edge and spanning the height of the field. This triangle has three horizontal bands of black, light blue and white, with the light blue band half the height of the two other bands. The top half of a golden-yellow sun is situated in the lower two-third of the black band to depict a rising sun."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ag.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ag.svg"},startOfWeek:"monday",capitalInfo:{latlng:[17.12,-61.85]}},{name:{common:"Hong Kong",official:"Hong Kong Special Administrative Region of the People's Republic of China",nativeName:{eng:{official:"Hong Kong Special Administrative Region of the People's Republic of China",common:"Hong Kong"},zho:{official:"中华人民共和国香港特别行政区",common:"香港"}}},tld:[".hk",".香港"],cca2:"HK",ccn3:"344",cca3:"HKG",cioc:"HKG",independent:!1,status:"officially-assigned",unMember:!1,currencies:{HKD:{name:"Hong Kong dollar",symbol:"$"}},idd:{root:"+8",suffixes:["52"]},capital:["City of Victoria"],altSpellings:["HK"],region:"Asia",subregion:"Eastern Asia",languages:{eng:"English",zho:"Chinese"},translations:{ara:{official:"منطقة هونغ كونغ الادارية التابعة لجمهورية الصين الشعبية",common:"هونغ كونغ"},bre:{official:"Rannvro velestradurel arbennik Hong Kong eus Republik pobl Sina",common:"Hong Kong"},ces:{official:"Zvláštní administrativní oblast Čínské lidové republiky Hongkong",common:"Hongkong"},cym:{official:"Hong Kong Special Administrative Region of the People's Republic of China",common:"Hong Kong"},deu:{official:"Sonderverwaltungszone Hongkong der Volksrepublik China",common:"Hongkong"},est:{official:"Hongkongi erihalduspiirkond",common:"Hongkong"},fin:{official:"Hong Kongin erityishallintoalue",common:"Hongkong"},fra:{official:"Région administrative spéciale de Hong Kong de la République populaire de Chine",common:"Hong Kong"},hrv:{official:"Hong Kong Posebnog upravnog područjaNarodne Republike Kine",common:"Hong Kong"},hun:{official:"Hongkong",common:"Hongkong"},ita:{official:"Hong Kong Regione amministrativa speciale della Repubblica Popolare Cinese",common:"Hong Kong"},jpn:{official:"中華人民共和国香港特別行政区",common:"香港"},kor:{official:"중화인민공화국 홍콩 특별행정구",common:"홍콩"},nld:{official:"Hong Kong Speciale Administratieve Regio van de Volksrepubliek China",common:"Hongkong"},per:{official:"هُنگ کُنگ",common:"هُنگ کُنگ"},pol:{official:"Specjalny Region Administracyjny Chińskiej Republiki Ludowej Hongkong",common:"Hongkong"},por:{official:"Hong Kong Região Administrativa Especial da República Popular da China",common:"Hong Kong"},rus:{official:"Hong Kong Специальный административный район Китайской Народной Республики Китая",common:"Гонконг"},slk:{official:"Špeciálna administratívna oblasťČínskej ľudovej republiky Hongkong",common:"Hongkong"},spa:{official:"Hong Kong Región Administrativa Especial de la República Popular China",common:"Hong Kong"},srp:{official:"Хонгконг специјална административна област Народне Републике Кине",common:"Хонгконг"},swe:{official:"Hongkong",common:"Hongkong"},tur:{official:"Çin Halk Cumhuriyeti Hong Kong Özel İdari Bölgesi",common:"Hong Kong"},urd:{official:"ہانگ کانگ عوامی جمہوریہ چین کا خصوصی انتظامی علاقہ",common:"ہانگ کانگ"}},latlng:[22.267,114.188],landlocked:!1,borders:["CHN"],area:1104,demonyms:{eng:{f:"Hong Konger",m:"Hong Konger"},fra:{f:"Hongkongaise",m:"Hongkongais"}},flag:"🇭🇰",maps:{googleMaps:"https://goo.gl/maps/1sEnNmT47ffrC8MU8",openStreetMaps:"https://www.openstreetmap.org/relation/913110"},population:7500700,fifa:"HKG",car:{signs:["HK"],side:"left"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/hk.png",svg:"https://flagcdn.com/hk.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/hk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/hk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[22.267,114.188]}},{name:{common:"Mauritania",official:"Islamic Republic of Mauritania",nativeName:{ara:{official:"الجمهورية الإسلامية الموريتانية",common:"موريتانيا"}}},tld:[".mr"],cca2:"MR",ccn3:"478",cca3:"MRT",cioc:"MTN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MRU:{name:"Mauritanian ouguiya",symbol:"UM"}},idd:{root:"+2",suffixes:["22"]},capital:["Nouakchott"],altSpellings:["MR","Islamic Republic of Mauritania","al-Jumhūriyyah al-ʾIslāmiyyah al-Mūrītāniyyah"],region:"Africa",subregion:"Western Africa",languages:{ara:"Arabic"},translations:{ara:{official:"الجمهورية الإسلامية الموريتانية",common:"موريتانيا"},bre:{official:"Republik islamek Maouritania",common:"Maouritania"},ces:{official:"Mauritánská islámská republika",common:"Mauritánie"},cym:{official:"Islamic Republic of Mauritania",common:"Mauritania"},deu:{official:"Islamische Republik Mauretanien",common:"Mauretanien"},est:{official:"Mauritaania Islamivabariik",common:"Mauritaania"},fin:{official:"Mauritanian islamilainen tasavalta",common:"Mauritania"},fra:{official:"République islamique de Mauritanie",common:"Mauritanie"},hrv:{official:"Islamska Republika Mauritanija",common:"Mauritanija"},hun:{official:"Mauritániai Iszlám Köztársaság",common:"Mauritánia"},ita:{official:"Repubblica islamica di Mauritania",common:"Mauritania"},jpn:{official:"モーリタニア·イスラム共和国",common:"モーリタニア"},kor:{official:"모리타니 이슬람 공화국",common:"모리타니"},nld:{official:"Islamitische Republiek Mauritanië",common:"Mauritanië"},per:{official:"جمهوری اسلامی موریتانی",common:"موریتانی"},pol:{official:"Islamska Republika Mauretańska",common:"Mauretania"},por:{official:"República Islâmica da Mauritânia",common:"Mauritânia"},rus:{official:"Исламская Республика Мавритания",common:"Мавритания"},slk:{official:"Mauritánska islamská republika",common:"Mauritánia"},spa:{official:"República Islámica de Mauritania",common:"Mauritania"},srp:{official:"Исламска Република Мауританија",common:"Мауританија"},swe:{official:"Islamiska republiken Mauretanien",common:"Mauretanien"},tur:{official:"Moritanya İslam Cumhuriyeti",common:"Moritanya"},urd:{official:"اسلامی جمہوریہ موریتانیہ",common:"موریتانیہ"},zho:{official:"毛里塔尼亚伊斯兰共和国",common:"毛里塔尼亚"}},latlng:[20,-12],landlocked:!1,borders:["DZA","MLI","SEN","ESH"],area:1030700,demonyms:{eng:{f:"Mauritanian",m:"Mauritanian"},fra:{f:"Mauritanienne",m:"Mauritanien"}},flag:"🇲🇷",maps:{googleMaps:"https://goo.gl/maps/im2MmQ5jFjzxWBks5",openStreetMaps:"https://www.openstreetmap.org/relation/192763"},population:4649660,gini:{2014:32.6},fifa:"MTN",car:{signs:["RIM"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/mr.png",svg:"https://flagcdn.com/mr.svg",alt:"The flag of Mauritania has a green field with a thin red horizontal band at the top and bottom of the field. At the center of the field is a five-pointed yellow star above an upward facing yellow crescent."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[18.07,-15.97]}},{name:{common:"Antarctica",official:"Antarctica"},tld:[".aq"],cca2:"AQ",ccn3:"010",cca3:"ATA",independent:!1,status:"officially-assigned",unMember:!1,idd:{},altSpellings:["AQ"],region:"Antarctic",translations:{ara:{official:"أنتارتيكا",common:"أنتارتيكا"},bre:{official:"Antarktika",common:"Antarktika"},ces:{official:"Antarktida",common:"Antarktida"},cym:{official:"Yr Antarctig",common:"Yr Antarctig"},deu:{official:"Antarktika",common:"Antarktis"},est:{official:"Antarktika",common:"Antarktika"},fin:{official:"Etelämanner",common:"Etelämanner"},fra:{official:"Antarctique",common:"Antarctique"},hrv:{official:"Antarktika",common:"Antarktika"},hun:{official:"Antarktisz",common:"Antarktisz"},ita:{official:"Antartide",common:"Antartide"},jpn:{official:"南極大陸",common:"南極"},kor:{official:"남극",common:"남극"},nld:{official:"Antarctica",common:"Antarctica"},per:{official:"جنوبگان",common:"جنوبگان"},pol:{official:"Antarktyka",common:"Antarktyka"},por:{official:"Antártica",common:"Antártida"},rus:{official:"Антарктида",common:"Антарктида"},slk:{official:"Antarktída",common:"Antarktída"},spa:{official:"Antártida",common:"Antártida"},srp:{official:"Антарктик",common:"Антарктик"},swe:{official:"Antarktis",common:"Antarktis"},tur:{official:"Antarktika",common:"Antarktika"},urd:{official:"انٹارکٹکا",common:"انٹارکٹکا"},zho:{official:"南极洲",common:"南极洲"}},latlng:[-90,0],landlocked:!1,area:14e6,demonyms:{eng:{f:"Antarctican",m:"Antarctican"},fra:{f:"Antarcticaine",m:"Antarcticain"}},flag:"🇦🇶",maps:{googleMaps:"https://goo.gl/maps/kyBuJriu4itiXank7",openStreetMaps:"https://www.openstreetmap.org/node/36966060"},population:1e3,car:{signs:[""],side:"right"},timezones:["UTC-03:00","UTC+03:00","UTC+05:00","UTC+06:00","UTC+07:00","UTC+08:00","UTC+10:00","UTC+12:00"],continents:["Antarctica"],flags:{png:"https://flagcdn.com/w320/aq.png",svg:"https://flagcdn.com/aq.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/aq.png",svg:"https://mainfacts.com/media/images/coats_of_arms/aq.svg"},startOfWeek:"monday",capitalInfo:{}},{name:{common:"Malta",official:"Republic of Malta",nativeName:{eng:{official:"Republic of Malta",common:"Malta"},mlt:{official:"Repubblika ta ' Malta",common:"Malta"}}},tld:[".mt"],cca2:"MT",ccn3:"470",cca3:"MLT",cioc:"MLT",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["56"]},capital:["Valletta"],altSpellings:["MT","Republic of Malta","Repubblika ta' Malta"],region:"Europe",subregion:"Southern Europe",languages:{eng:"English",mlt:"Maltese"},translations:{ara:{official:"جمهورية مالطا",common:"مالطا"},bre:{official:"Republik Malta",common:"Malta"},ces:{official:"Maltská republika",common:"Malta"},cym:{official:"Republic of Malta",common:"Malta"},deu:{official:"Republik Malta",common:"Malta"},est:{official:"Malta Vabariik",common:"Malta"},fin:{official:"Maltan tasavalta",common:"Malta"},fra:{official:"République de Malte",common:"Malte"},hrv:{official:"Republika Malta",common:"Malta"},hun:{official:"Máltai Köztársaság",common:"Málta"},ita:{official:"Repubblica di Malta",common:"Malta"},jpn:{official:"マルタ共和国",common:"マルタ"},kor:{official:"몰타 공화국",common:"몰타"},nld:{official:"Republiek Malta",common:"Malta"},per:{official:"جمهوری مالت",common:"مالت"},pol:{official:"Republika Malty",common:"Malta"},por:{official:"República de Malta",common:"Malta"},rus:{official:"Республика Мальта",common:"Мальта"},slk:{official:"Maltská republika",common:"Malta"},spa:{official:"República de Malta",common:"Malta"},srp:{official:" Република Малта",common:"Малта"},swe:{official:"Republiken Malta",common:"Malta"},tur:{official:"Malta Cumhuriyeti",common:"Malta"},urd:{official:"جمہوریہ مالٹا",common:"مالٹا"},zho:{official:"马耳他共和国",common:"马耳他"}},latlng:[35.9375,14.3754],landlocked:!1,area:316,demonyms:{eng:{f:"Maltese",m:"Maltese"},fra:{f:"Maltaise",m:"Maltais"}},flag:"🇲🇹",maps:{googleMaps:"https://goo.gl/maps/skXCqguxDxxEKVk47",openStreetMaps:"https://www.openstreetmap.org/relation/365307"},population:525285,gini:{2018:28.7},fifa:"MLT",car:{signs:["M"],side:"left"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/mt.png",svg:"https://flagcdn.com/mt.svg",alt:"The flag of Malta is composed of two equal vertical bands of white and red. A representation of the George cross edged in red is situated on the upper hoist-side corner of the white band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mt.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mt.svg"},startOfWeek:"monday",capitalInfo:{latlng:[35.88,14.5]},postalCode:{format:"@@@ ###|@@@ ##",regex:"^([A-Z]{3}\\d{2}\\d?)$"}},{name:{common:"Vatican City",official:"Vatican City State",nativeName:{ita:{official:"Stato della Città del Vaticano",common:"Vaticano"},lat:{official:"Status Civitatis Vaticanæ",common:"Vaticanæ"}}},tld:[".va"],cca2:"VA",ccn3:"336",cca3:"VAT",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["906698","79"]},capital:["Vatican City"],altSpellings:["VA","Holy See (Vatican City State)","Vatican City State","Stato della Città del Vaticano"],region:"Europe",subregion:"Southern Europe",languages:{ita:"Italian",lat:"Latin"},translations:{ara:{official:"دولة مدينة الفاتيكان",common:"مدينة الفاتيكان"},bre:{official:"Riez Keoded ar Vatikan",common:"Vatikan"},ces:{official:"Městský stát Vatikán",common:"Vatikán"},cym:{official:"Vatican City State",common:"Vatican City"},deu:{official:"Staat Vatikanstadt",common:"Vatikanstadt"},est:{official:"Vatikani Linnriik",common:"Vatikan"},fin:{official:"Vatikaanin kaupunkivaltio",common:"Vatikaani"},fra:{official:"Cité du Vatican",common:"Cité du Vatican"},hrv:{official:"Vatikan",common:"Vatikan"},hun:{official:"Vatikán Állam",common:"Vatikán"},ita:{official:"Città del Vaticano",common:"Città del Vaticano"},jpn:{official:"バチカン市国の状態",common:"バチカン市国"},kor:{official:"바티칸 시국",common:"바티칸"},nld:{official:"Vaticaanstad",common:"Vaticaanstad"},per:{official:"دولت‌شهر واتیکان",common:"واتیکان"},pol:{official:"Państwo Watykańskie",common:"Watykan"},por:{official:"Cidade do Vaticano",common:"Cidade do Vaticano"},rus:{official:"Город-государство Ватикан",common:"Ватикан"},slk:{official:"Svätá stolica (Vatikánsky mestský štát",common:"Vatikán"},spa:{official:"Ciudad del Vaticano",common:"Ciudad del Vaticano"},srp:{official:"Град Ватикан",common:"Ватикан"},swe:{official:"Vatikanstaten",common:"Vatikanstaten"},tur:{official:"Vatikan Şehir Devleti",common:"Vatikan"},urd:{official:"ویٹیکن سٹی",common:"ویٹیکن سٹی"},zho:{official:"梵蒂冈城国",common:"梵蒂冈"}},latlng:[41.9,12.45],landlocked:!0,borders:["ITA"],area:.44,demonyms:{eng:{f:"Vatican",m:"Vatican"},fra:{f:"Vaticane",m:"Vatican"}},flag:"🇻🇦",maps:{googleMaps:"https://goo.gl/maps/DTKvw5Bd1QZaDZmE8",openStreetMaps:"https://www.openstreetmap.org/relation/36989"},population:451,car:{signs:["V"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/va.png",svg:"https://flagcdn.com/va.svg",alt:"The flag of Vatican City is square shaped. It is composed of two equal vertical bands of yellow and white, with national coat of arms centered in the white band. The national coat of arms comprises the Papal Tiara superimposed on two crossed keys."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/va.png",svg:"https://mainfacts.com/media/images/coats_of_arms/va.svg"},startOfWeek:"monday",capitalInfo:{latlng:[41.9,12.45]}},{name:{common:"Romania",official:"Romania",nativeName:{ron:{official:"România",common:"România"}}},tld:[".ro"],cca2:"RO",ccn3:"642",cca3:"ROU",cioc:"ROU",independent:!0,status:"officially-assigned",unMember:!0,currencies:{RON:{name:"Romanian leu",symbol:"lei"}},idd:{root:"+4",suffixes:["0"]},capital:["Bucharest"],altSpellings:["RO","Rumania","Roumania","România"],region:"Europe",subregion:"Southeast Europe",languages:{ron:"Romanian"},translations:{ara:{official:"رومانيا",common:"رومانيا"},bre:{official:"Roumania",common:"Roumania"},ces:{official:"Rumunsko",common:"Rumunsko"},cym:{official:"Romania",common:"Romania"},deu:{official:"Rumänien",common:"Rumänien"},est:{official:"Rumeenia",common:"Rumeenia"},fin:{official:"Romania",common:"Romania"},fra:{official:"Roumanie",common:"Roumanie"},hrv:{official:"Rumunija",common:"Rumunjska"},hun:{official:"Románia",common:"Románia"},ita:{official:"Romania",common:"Romania"},jpn:{official:"ルーマニア",common:"ルーマニア"},kor:{official:"루마니아",common:"루마니아"},nld:{official:"Roemenië",common:"Roemenië"},per:{official:"رومانی",common:"رومانی"},pol:{official:"Rumunia",common:"Rumunia"},por:{official:"Romênia",common:"Roménia"},rus:{official:"Румыния",common:"Румыния"},slk:{official:"Rumunsko",common:"Rumunsko"},spa:{official:"Rumania",common:"Rumania"},srp:{official:"Румунија",common:"Румунија"},swe:{official:"Rumänien",common:"Rumänien"},tur:{official:"Romanya",common:"Romanya"},urd:{official:"رومانیہ",common:"رومانیہ"},zho:{official:"罗马尼亚",common:"罗马尼亚"}},latlng:[46,25],landlocked:!1,borders:["BGR","HUN","MDA","SRB","UKR"],area:238391,demonyms:{eng:{f:"Romanian",m:"Romanian"},fra:{f:"Roumaine",m:"Roumain"}},flag:"🇷🇴",maps:{googleMaps:"https://goo.gl/maps/845hAgCf1mDkN3vr7",openStreetMaps:"https://www.openstreetmap.org/relation/90689"},population:19286123,gini:{2018:35.8},fifa:"ROU",car:{signs:["RO"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ro.png",svg:"https://flagcdn.com/ro.svg",alt:"The flag of Romania is composed of three equal vertical bands of navy blue, yellow and red."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ro.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ro.svg"},startOfWeek:"monday",capitalInfo:{latlng:[44.43,26.1]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Svalbard and Jan Mayen",official:"Svalbard og Jan Mayen",nativeName:{nor:{official:"Svalbard og Jan Mayen",common:"Svalbard og Jan Mayen"}}},tld:[".sj"],cca2:"SJ",ccn3:"744",cca3:"SJM",independent:!1,status:"officially-assigned",unMember:!1,currencies:{NOK:{name:"krone",symbol:"kr"}},idd:{root:"+4",suffixes:["779"]},capital:["Longyearbyen"],altSpellings:["SJ","Svalbard and Jan Mayen Islands"],region:"Europe",subregion:"Northern Europe",languages:{nor:"Norwegian"},translations:{ara:{official:"سفالبارد ويان ماين",common:"سفالبارد ويان ماين"},bre:{official:"Svalbard ha Jan Mayen",common:"Svalbard ha Jan Mayen"},ces:{official:"Špicberky a Jan Mayen",common:"Špicberky a Jan Mayen"},cym:{official:"Svalbard og Jan Mayen",common:"Svalbard and Jan Mayen"},deu:{official:"Spitzbergen und Jan Mayen",common:"Spitzbergen und Jan Mayen"},est:{official:"Svalbard",common:"Svalbard"},fin:{official:"Huippuvuoret",common:"Huippuvuoret"},fra:{official:"Jan Mayen Svalbard",common:"Svalbard et Jan Mayen"},hrv:{official:"Svalbard og Jan Mayen",common:"Svalbard i Jan Mayen"},hun:{official:"Svalbard és Jan Mayen",common:"Svalbard és Jan Mayen"},ita:{official:"Svalbard og Jan Mayen",common:"Svalbard e Jan Mayen"},jpn:{official:"スバールバル諸島OGヤンマイエン",common:"スヴァールバル諸島およびヤンマイエン島"},kor:{official:"스발바르 얀마옌 제도",common:"스발바르 얀마옌 제도"},nld:{official:"Svalbard og Jan Mayen",common:"Svalbard en Jan Mayen"},per:{official:"سوالبارد و یان ماین",common:"سوالبارد و یان ماین"},pol:{official:"Svalbard i Jan Mayen",common:"Svalbard i Jan Mayen"},por:{official:"Svalbard og Jan Mayen",common:"Ilhas Svalbard e Jan Mayen"},rus:{official:"Свальбарда ог Ян-Майен",common:"Шпицберген и Ян-Майен"},slk:{official:"Svalbard a Jan Mayen",common:"Svalbard a Jan Mayen"},spa:{official:"Svalbard og Jan Mayen",common:"Islas Svalbard y Jan Mayen"},srp:{official:"Свалбард и Јан Мајен",common:"Свалбард и Јан Мајен"},swe:{official:"Svalbard och Jan Mayen",common:"Svalbard och Jan Mayen"},tur:{official:"Svalbard ve Jan Mayen",common:"Svalbard ve Jan Mayen"},urd:{official:"سوالبارڈ اور جان میئن",common:"سوالبارڈ اور جان میئن"},zho:{official:"斯瓦尔巴特",common:"斯瓦尔巴特"}},latlng:[78,20],landlocked:!1,area:-1,demonyms:{eng:{f:"Norwegian",m:"Norwegian"}},flag:"🇸🇯",maps:{googleMaps:"https://goo.gl/maps/L2wyyn3cQ16PzQ5J8",openStreetMaps:"https://www.openstreetmap.org/relation/1337397"},population:2562,car:{signs:["N"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/sj.png",svg:"https://flagcdn.com/sj.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[78.22,15.63]}},{name:{common:"Uzbekistan",official:"Republic of Uzbekistan",nativeName:{rus:{official:"Республика Узбекистан",common:"Узбекистан"},uzb:{official:"O'zbekiston Respublikasi",common:"O‘zbekiston"}}},tld:[".uz"],cca2:"UZ",ccn3:"860",cca3:"UZB",cioc:"UZB",independent:!0,status:"officially-assigned",unMember:!0,currencies:{UZS:{name:"Uzbekistani soʻm",symbol:"so'm"}},idd:{root:"+9",suffixes:["98"]},capital:["Tashkent"],altSpellings:["UZ","Republic of Uzbekistan","O‘zbekiston Respublikasi","Ўзбекистон Республикаси"],region:"Asia",subregion:"Central Asia",languages:{rus:"Russian",uzb:"Uzbek"},translations:{ara:{official:"جمهورية أوزباكستان",common:"أوزباكستان"},bre:{official:"Republik Ouzbekistan",common:"Ouzbekistan"},ces:{official:"Republika Uzbekistán",common:"Uzbekistán"},cym:{official:"Republic of Uzbekistan",common:"Uzbekistan"},deu:{official:"Republik Usbekistan",common:"Usbekistan"},est:{official:"Usbekistani Vabariik",common:"Usbekistan"},fin:{official:"Uzbekistanin tasavalta",common:"Uzbekistan"},fra:{official:"République d'Ouzbékistan",common:"Ouzbékistan"},hrv:{official:"Republika Uzbekistan",common:"Uzbekistan"},hun:{official:"Üzbég Köztársaság",common:"Üzbegisztán"},ita:{official:"Repubblica di Uzbekistan",common:"Uzbekistan"},jpn:{official:"ウズベキスタン共和国",common:"ウズベキスタン"},kor:{official:"우즈베키스탄 공화국",common:"우즈베키스탄"},nld:{official:"Republiek Oezbekistan",common:"Oezbekistan"},per:{official:"جمهوری ازبکستان",common:"ازبکستان"},pol:{official:"Republika Uzbekistanu",common:"Uzbekistan"},por:{official:"República do Usbequistão",common:"Uzbequistão"},rus:{official:"Республика Узбекистан",common:"Узбекистан"},slk:{official:"Uzbecká republika",common:"Uzbekistan"},spa:{official:"República de Uzbekistán",common:"Uzbekistán"},srp:{official:"Република Узбекистан",common:"Узбекистан"},swe:{official:"Republiken Uzbekistan",common:"Uzbekistan"},tur:{official:"Özbekistan Cumhuriyeti",common:"Özbekistan"},urd:{official:"جمہوریہ ازبکستان",common:"ازبکستان"},zho:{official:"乌兹别克斯坦共和国",common:"乌兹别克斯坦"}},latlng:[41,64],landlocked:!0,borders:["AFG","KAZ","KGZ","TJK","TKM"],area:447400,demonyms:{eng:{f:"Uzbekistani",m:"Uzbekistani"},fra:{f:"Ouzbèke",m:"Ouzbèke"}},flag:"🇺🇿",maps:{googleMaps:"https://goo.gl/maps/AJpo6MjMx23qSWCz8",openStreetMaps:"https://www.openstreetmap.org/relation/196240"},population:34232050,gini:{2003:35.3},fifa:"UZB",car:{signs:["UZ"],side:"right"},timezones:["UTC+05:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/uz.png",svg:"https://flagcdn.com/uz.svg",alt:"The flag of Uzbekistan is composed of three equal horizontal bands of turquoise, white with red top and bottom edges, and green. On the hoist side of the turquoise band is a fly-side facing white crescent and twelve five-pointed white stars arranged just outside the crescent opening in three rows comprising three, four and five stars."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/uz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/uz.svg"},startOfWeek:"monday",capitalInfo:{latlng:[41.32,69.25]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Rwanda",official:"Republic of Rwanda",nativeName:{eng:{official:"Republic of Rwanda",common:"Rwanda"},fra:{official:"République rwandaise",common:"Rwanda"},kin:{official:"Repubulika y'u Rwanda",common:"Rwanda"}}},tld:[".rw"],cca2:"RW",ccn3:"646",cca3:"RWA",cioc:"RWA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{RWF:{name:"Rwandan franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["50"]},capital:["Kigali"],altSpellings:["RW","Republic of Rwanda","Repubulika y'u Rwanda","République du Rwanda"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English",fra:"French",kin:"Kinyarwanda"},translations:{ara:{official:"جمهورية رواندا",common:"رواندا"},bre:{official:"Republik Rwanda",common:"Rwanda"},ces:{official:"Rwandská republika",common:"Rwanda"},cym:{official:"Republic of Rwanda",common:"Rwanda"},deu:{official:"Republik Ruanda",common:"Ruanda"},est:{official:"Rwanda Vabariik",common:"Rwanda"},fin:{official:"Ruandan tasavalta",common:"Ruanda"},fra:{official:"République rwandaise",common:"Rwanda"},hrv:{official:"Republika Ruandi",common:"Ruanda"},hun:{official:"Ruandai Köztársaság",common:"Ruanda"},ita:{official:"Repubblica del Ruanda",common:"Ruanda"},jpn:{official:"ルワンダ共和国",common:"ルワンダ"},kor:{official:"르완다 공화국",common:"르완다"},nld:{official:"Republiek Rwanda",common:"Rwanda"},per:{official:"جمهوری رواندا",common:"رواندا"},pol:{official:"Republika Rwandy",common:"Rwanda"},por:{official:"República do Ruanda",common:"Ruanda"},rus:{official:"Республика Руанда",common:"Руанда"},slk:{official:"Rwandská republika",common:"Rwanda"},spa:{official:"República de Rwanda",common:"Ruanda"},srp:{official:"Република Руанда",common:"Руанда"},swe:{official:"Republiken Rwanda",common:"Rwanda"},tur:{official:"Ruanda Cumhuriyeti",common:"Ruanda"},urd:{official:"جمہوریہ روانڈا",common:"روانڈا"},zho:{official:"卢旺达共和国",common:"卢旺达"}},latlng:[-2,30],landlocked:!0,borders:["BDI","COD","TZA","UGA"],area:26338,demonyms:{eng:{f:"Rwandan",m:"Rwandan"},fra:{f:"Rwandaise",m:"Rwandais"}},flag:"🇷🇼",maps:{googleMaps:"https://goo.gl/maps/j5xb5r7CLqjYbyP86",openStreetMaps:"https://www.openstreetmap.org/relation/171496"},population:12952209,gini:{2016:43.7},fifa:"RWA",car:{signs:["RWA"],side:"right"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/rw.png",svg:"https://flagcdn.com/rw.svg",alt:"The flag of Rwanda is composed of three horizontal bands of light blue, yellow and green. The light blue band is twice the height of the other two bands and bears a yellow sun with twenty-four rays on its fly side."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/rw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/rw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-1.95,30.05]}},{name:{common:"Guam",official:"Guam",nativeName:{cha:{official:"Guåhån",common:"Guåhån"},eng:{official:"Guam",common:"Guam"},spa:{official:"Guam",common:"Guam"}}},tld:[".gu"],cca2:"GU",ccn3:"316",cca3:"GUM",cioc:"GUM",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["671"]},capital:["Hagåtña"],altSpellings:["GU","Guåhån"],region:"Oceania",subregion:"Micronesia",languages:{cha:"Chamorro",eng:"English",spa:"Spanish"},translations:{ara:{official:"غوام",common:"غوام"},bre:{official:"Guam",common:"Guam"},ces:{official:"Guam",common:"Guam"},cym:{official:"Guam",common:"Guam"},deu:{official:"Guam",common:"Guam"},est:{official:"Guami ala",common:"Guam"},fin:{official:"Guam",common:"Guam"},fra:{official:"Guam",common:"Guam"},hrv:{official:"Guam",common:"Guam"},hun:{official:"Guam",common:"Guam"},ita:{official:"Guam",common:"Guam"},jpn:{official:"グアム",common:"グアム"},kor:{official:"괌",common:"괌"},nld:{official:"Guam",common:"Guam"},per:{official:"گوآم",common:"گوآم"},pol:{official:"Terytorium Guamu",common:"Guam"},por:{official:"Guam",common:"Guam"},rus:{official:"Гуам",common:"Гуам"},slk:{official:"Guam",common:"Guam"},spa:{official:"Guam",common:"Guam"},srp:{official:"Гуам",common:"Гуам"},swe:{official:"Guam",common:"Guam"},tur:{official:"Guam Toprağı",common:"Guam"},urd:{official:"گوام",common:"گوام"},zho:{official:"关岛",common:"关岛"}},latlng:[13.46666666,144.78333333],landlocked:!1,area:549,demonyms:{eng:{f:"Guamanian",m:"Guamanian"}},flag:"🇬🇺",maps:{googleMaps:"https://goo.gl/maps/Xfnq2i279b18cH3C9",openStreetMaps:"https://www.openstreetmap.org/relation/306001"},population:168783,fifa:"GUM",car:{signs:["USA"],side:"right"},timezones:["UTC+10:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/gu.png",svg:"https://flagcdn.com/gu.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gu.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gu.svg"},startOfWeek:"monday",capitalInfo:{latlng:[13.48,144.75]},postalCode:{format:"969##",regex:"^(969\\d{2})$"}},{name:{common:"Cambodia",official:"Kingdom of Cambodia",nativeName:{khm:{official:"ព្រះរាជាណាចក្រកម្ពុជា",common:"Kâmpŭchéa"}}},tld:[".kh"],cca2:"KH",ccn3:"116",cca3:"KHM",cioc:"CAM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KHR:{name:"Cambodian riel",symbol:"៛"},USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+8",suffixes:["55"]},capital:["Phnom Penh"],altSpellings:["KH","Kingdom of Cambodia"],region:"Asia",subregion:"South-Eastern Asia",languages:{khm:"Khmer"},translations:{ara:{official:"مملكة كمبوديا",common:"كمبوديا"},bre:{official:"Rouantelezh Kambodja",common:"Kambodja"},ces:{official:"Kambodžské království",common:"Kambodža"},cym:{official:"Teyrnas Cambodia",common:"Cambodia"},deu:{official:"Königreich Kambodscha",common:"Kambodscha"},est:{official:"Kambodža Kuningriik",common:"Kambodža"},fin:{official:"Kambodžan kuningaskunta",common:"Kambodža"},fra:{official:"Royaume du Cambodge",common:"Cambodge"},hrv:{official:"Kraljevina Kambodža",common:"Kambodža"},hun:{official:"Kambodzsai Királyság",common:"Kambodzsa"},ita:{official:"Regno di Cambogia",common:"Cambogia"},jpn:{official:"カンボジア王国",common:"カンボジア"},kor:{official:"캄보디아 왕국",common:"캄보디아"},nld:{official:"Koninkrijk Cambodja",common:"Cambodja"},per:{official:"پادشاهی کامبوج",common:"کامبوج"},pol:{official:"Królestwo Kambodży",common:"Kambodża"},por:{official:"Reino do Camboja",common:"Camboja"},rus:{official:"Королевство Камбоджа",common:"Камбоджа"},slk:{official:"Kamboǆské kráľovstvo",common:"Kamboǆa"},spa:{official:"Reino de Camboya",common:"Camboya"},srp:{official:"Краљевина Камбоџа",common:"Камбоџа"},swe:{official:"Konungariket Kambodja",common:"Kambodja"},tur:{official:"Kamboçya Krallığı",common:"Kamboçya"},urd:{official:"مملکتِ کمبوڈیا",common:"کمبوڈیا"},zho:{official:"柬埔寨王国",common:"柬埔寨"}},latlng:[13,105],landlocked:!1,borders:["LAO","THA","VNM"],area:181035,demonyms:{eng:{f:"Cambodian",m:"Cambodian"},fra:{f:"Cambodgienne",m:"Cambodgien"}},flag:"🇰🇭",maps:{googleMaps:"https://goo.gl/maps/nztQtFSrUXZymJaW8",openStreetMaps:"https://www.openstreetmap.org/relation/49898"},population:16718971,fifa:"CAM",car:{signs:["K"],side:"right"},timezones:["UTC+07:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/kh.png",svg:"https://flagcdn.com/kh.svg",alt:"The flag of Cambodia features three horizontal bands of blue, red and blue, with a white depiction of the temple complex, Angkor Wat centered in the red band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/kh.png",svg:"https://mainfacts.com/media/images/coats_of_arms/kh.svg"},startOfWeek:"monday",capitalInfo:{latlng:[11.55,104.92]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Andorra",official:"Principality of Andorra",nativeName:{cat:{official:"Principat d'Andorra",common:"Andorra"}}},tld:[".ad"],cca2:"AD",ccn3:"020",cca3:"AND",cioc:"AND",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["76"]},capital:["Andorra la Vella"],altSpellings:["AD","Principality of Andorra","Principat d'Andorra"],region:"Europe",subregion:"Southern Europe",languages:{cat:"Catalan"},translations:{ara:{official:"إمارة أندورا",common:"أندورا"},bre:{official:"Priñselezh Andorra",common:"Andorra"},ces:{official:"Andorrské knížectví",common:"Andorra"},cym:{official:"Tywysogaeth Andorra",common:"Andorra"},deu:{official:"Fürstentum Andorra",common:"Andorra"},est:{official:"Andorra Vürstiriik",common:"Andorra"},fin:{official:"Andorran ruhtinaskunta",common:"Andorra"},fra:{official:"Principauté d'Andorre",common:"Andorre"},hrv:{official:"Kneževina Andora",common:"Andora"},hun:{official:"Andorra",common:"Andorra"},ita:{official:"Principato di Andorra",common:"Andorra"},jpn:{official:"アンドラ公国",common:"アンドラ"},kor:{official:"안도라 공국",common:"안도라"},nld:{official:"Prinsdom Andorra",common:"Andorra"},per:{official:"شاهزاده‌نشین آندورا",common:"آندورا"},pol:{official:"Księstwo Andory",common:"Andora"},por:{official:"Principado de Andorra",common:"Andorra"},rus:{official:"Княжество Андорра",common:"Андорра"},slk:{official:"Andorrské kniežatstvo",common:"Andorra"},spa:{official:"Principado de Andorra",common:"Andorra"},srp:{official:"Кнежевина Андора",common:"Андора"},swe:{official:"Furstendömet Andorra",common:"Andorra"},tur:{official:"Andorra Prensliği",common:"Andorra"},urd:{official:"اماراتِ انڈورا",common:"انڈورا"},zho:{official:"安道尔公国",common:"安道尔"}},latlng:[42.5,1.5],landlocked:!0,borders:["FRA","ESP"],area:468,demonyms:{eng:{f:"Andorran",m:"Andorran"},fra:{f:"Andorrane",m:"Andorran"}},flag:"🇦🇩",maps:{googleMaps:"https://goo.gl/maps/JqAnacWE2qEznKgw7",openStreetMaps:"https://www.openstreetmap.org/relation/9407"},population:77265,fifa:"AND",car:{signs:["AND"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ad.png",svg:"https://flagcdn.com/ad.svg",alt:"The flag of Andorra features three equal vertical bands of blue, yellow and red, with the coat of arms of Andorra centered in the yellow band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ad.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ad.svg"},startOfWeek:"monday",capitalInfo:{latlng:[42.5,1.52]},postalCode:{format:"AD###",regex:"^(?:AD)*(\\d{3})$"}},{name:{common:"Canada",official:"Canada",nativeName:{eng:{official:"Canada",common:"Canada"},fra:{official:"Canada",common:"Canada"}}},tld:[".ca"],cca2:"CA",ccn3:"124",cca3:"CAN",cioc:"CAN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CAD:{name:"Canadian dollar",symbol:"$"}},idd:{root:"+1",suffixes:[""]},capital:["Ottawa"],altSpellings:["CA"],region:"Americas",subregion:"North America",languages:{eng:"English",fra:"French"},translations:{ara:{official:"كندا",common:"كندا"},bre:{official:"Kanada",common:"Kanada"},ces:{official:"Kanada",common:"Kanada"},cym:{official:"Canada",common:"Canada"},deu:{official:"Kanada",common:"Kanada"},est:{official:"Kanada",common:"Kanada"},fin:{official:"Kanada",common:"Kanada"},fra:{official:"Canada",common:"Canada"},hrv:{official:"Kanada",common:"Kanada"},hun:{official:"Kanada",common:"Kanada"},ita:{official:"Canada",common:"Canada"},jpn:{official:"カナダ",common:"カナダ"},kor:{official:"캐나다",common:"캐나다"},nld:{official:"Canada",common:"Canada"},per:{official:"کانادا",common:"کانادا"},pol:{official:"Kanada",common:"Kanada"},por:{official:"Canadá",common:"Canadá"},rus:{official:"Канада",common:"Канада"},slk:{official:"Kanada",common:"Kanada"},spa:{official:"Canadá",common:"Canadá"},srp:{official:"Канада",common:"Канада"},swe:{official:"Kanada",common:"Kanada"},tur:{official:"Kanada",common:"Kanada"},urd:{official:"کینیڈا",common:"کینیڈا"},zho:{official:"加拿大",common:"加拿大"}},latlng:[60,-95],landlocked:!1,borders:["USA"],area:9984670,demonyms:{eng:{f:"Canadian",m:"Canadian"},fra:{f:"Canadienne",m:"Canadien"}},flag:"🇨🇦",maps:{googleMaps:"https://goo.gl/maps/jmEVLugreeqiZXxbA",openStreetMaps:"https://www.openstreetmap.org/relation/1428125"},population:38005238,gini:{2017:33.3},fifa:"CAN",car:{signs:["CDN"],side:"right"},timezones:["UTC-08:00","UTC-07:00","UTC-06:00","UTC-05:00","UTC-04:00","UTC-03:30"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/ca.png",svg:"https://flagcdn.com/ca.svg",alt:"The flag of Canada is composed of a red vertical band on the hoist and fly sides and a central white square that is twice the width of the vertical bands. A large eleven-pointed red maple leaf is centered in the white square."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ca.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ca.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[45.42,-75.7]},postalCode:{format:"@#@ #@#",regex:"^([ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJKLMNPRSTVWXYZ]) ?(\\d[ABCEGHJKLMNPRSTVWXYZ]\\d)$ "}},{name:{common:"Sierra Leone",official:"Republic of Sierra Leone",nativeName:{eng:{official:"Republic of Sierra Leone",common:"Sierra Leone"}}},tld:[".sl"],cca2:"SL",ccn3:"694",cca3:"SLE",cioc:"SLE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SLL:{name:"Sierra Leonean leone",symbol:"Le"}},idd:{root:"+2",suffixes:["32"]},capital:["Freetown"],altSpellings:["SL","Republic of Sierra Leone"],region:"Africa",subregion:"Western Africa",languages:{eng:"English"},translations:{ara:{official:"جمهورية سيراليون",common:"سيراليون"},bre:{official:"Republik Sierra Leone",common:"Sierra Leone"},ces:{official:"Republika Sierra Leone",common:"Sierra Leone"},cym:{official:"Republic of Sierra Leone",common:"Sierra Leone"},deu:{official:"Republik Sierra Leone",common:"Sierra Leone"},est:{official:"Sierra Leone Vabariik",common:"Sierra Leone"},fin:{official:"Sierra Leonen tasavalta",common:"Sierra Leone"},fra:{official:"République de Sierra Leone",common:"Sierra Leone"},hrv:{official:"Republika Sijera Leone",common:"Sijera Leone"},hun:{official:"Sierra Leone Köztársaság",common:"Sierra Leone"},ita:{official:"Repubblica della Sierra Leone",common:"Sierra Leone"},jpn:{official:"シエラレオネ共和国",common:"シエラレオネ"},kor:{official:"시에라리온 공화국",common:"시에라리온"},nld:{official:"Republiek Sierra Leone",common:"Sierra Leone"},per:{official:"جمهوری سیرالئون",common:"سیرالئون"},pol:{official:"Sierra Leone",common:"Sierra Leone"},por:{official:"República da Serra Leoa",common:"Serra Leoa"},rus:{official:"Республика Сьерра-Леоне",common:"Сьерра-Леоне"},slk:{official:"Sierraleonská republika",common:"Sierra Leone"},spa:{official:"República de Sierra Leona",common:"Sierra Leone"},srp:{official:"Република Сијера Леоне",common:"Сијера Леоне"},swe:{official:"Republiken Sierra Leone",common:"Sierra Leone"},tur:{official:"Sierra Leone Cumhuriyeti",common:"Sierra Leone"},urd:{official:"جمہوریہ سیرالیون",common:"سیرالیون"},zho:{official:"塞拉利昂共和国",common:"塞拉利昂"}},latlng:[8.5,-11.5],landlocked:!1,borders:["GIN","LBR"],area:71740,demonyms:{eng:{f:"Sierra Leonean",m:"Sierra Leonean"},fra:{f:"Sierra-leonaise",m:"Sierra-leonais"}},flag:"🇸🇱",maps:{googleMaps:"https://goo.gl/maps/jhacar85oq9QaeKB7",openStreetMaps:"https://www.openstreetmap.org/relation/192777"},population:7976985,gini:{2018:35.7},fifa:"SLE",car:{signs:["WAL"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/sl.png",svg:"https://flagcdn.com/sl.svg",alt:"The flag of Sierra Leone is composed of three equal horizontal bands of green, white and blue."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sl.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sl.svg"},startOfWeek:"monday",capitalInfo:{latlng:[8.48,-13.23]}},{name:{common:"Malaysia",official:"Malaysia",nativeName:{eng:{official:"Malaysia",common:"Malaysia"},msa:{official:"مليسيا",common:"مليسيا"}}},tld:[".my"],cca2:"MY",ccn3:"458",cca3:"MYS",cioc:"MAS",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MYR:{name:"Malaysian ringgit",symbol:"RM"}},idd:{root:"+6",suffixes:["0"]},capital:["Kuala Lumpur"],altSpellings:["MY"],region:"Asia",subregion:"South-Eastern Asia",languages:{eng:"English",msa:"Malay"},translations:{ara:{official:"ماليزيا",common:"ماليزيا"},bre:{official:"Malaysia",common:"Malaysia"},ces:{official:"Malajsie",common:"Malajsie"},cym:{official:"Malaysia",common:"Malaysia"},deu:{official:"Malaysia",common:"Malaysia"},est:{official:"Malaisia",common:"Malaisia"},fin:{official:"Malesia",common:"Malesia"},fra:{official:"Fédération de Malaisie",common:"Malaisie"},hrv:{official:"Malezija",common:"Malezija"},hun:{official:"Malajzia",common:"Malajzia"},ita:{official:"Malaysia",common:"Malesia"},jpn:{official:"マレーシア",common:"マレーシア"},kor:{official:"말레이시아",common:"말레이시아"},nld:{official:"Maleisië",common:"Maleisië"},per:{official:"فدراسیون مالزی",common:"مالزی"},pol:{official:"Malezja",common:"Malezja"},por:{official:"Malásia",common:"Malásia"},rus:{official:"Малайзия",common:"Малайзия"},slk:{official:"Malajzia",common:"Malajzia"},spa:{official:"Malasia",common:"Malasia"},srp:{official:"Малезија",common:"Малезија"},swe:{official:"Malaysia",common:"Malaysia"},tur:{official:"Malezya",common:"Malezya"},urd:{official:"ملائیشیا",common:"ملائیشیا"},zho:{official:"马来西亚",common:"马来西亚"}},latlng:[2.5,112.5],landlocked:!1,borders:["BRN","IDN","THA"],area:330803,demonyms:{eng:{f:"Malaysian",m:"Malaysian"},fra:{f:"Malaisienne",m:"Malaisien"}},flag:"🇲🇾",maps:{googleMaps:"https://goo.gl/maps/qrY1PNeUXGyXDcPy6",openStreetMaps:"https://www.openstreetmap.org/relation/2108121"},population:32365998,gini:{2015:41.1},fifa:"MAS",car:{signs:["MAL"],side:"left"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/my.png",svg:"https://flagcdn.com/my.svg",alt:"The flag of Malaysia is composed of fourteen equal horizontal bands of red alternating with white. A blue rectangle, bearing a fly-side facing yellow crescent and a fourteen-pointed yellow star placed just outside the crescent opening, is superimposed in the canton."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/my.png",svg:"https://mainfacts.com/media/images/coats_of_arms/my.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[3.17,101.7]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Thailand",official:"Kingdom of Thailand",nativeName:{tha:{official:"ราชอาณาจักรไทย",common:"ประเทศไทย"}}},tld:[".th",".ไทย"],cca2:"TH",ccn3:"764",cca3:"THA",cioc:"THA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{THB:{name:"Thai baht",symbol:"฿"}},idd:{root:"+6",suffixes:["6"]},capital:["Bangkok"],altSpellings:["TH","Prathet","Thai","Kingdom of Thailand","ราชอาณาจักรไทย","Ratcha Anachak Thai"],region:"Asia",subregion:"South-Eastern Asia",languages:{tha:"Thai"},translations:{ara:{official:"مملكة تايلند",common:"تايلند"},bre:{official:"Rouantelezh Thailand",common:"Thailand"},ces:{official:"Thajské království",common:"Thajsko"},cym:{official:"Kingdom of Thailand",common:"Thailand"},deu:{official:"Königreich Thailand",common:"Thailand"},est:{official:"Tai Kuningriik",common:"Tai"},fin:{official:"Thaimaan kuningaskunta",common:"Thaimaa"},fra:{official:"Royaume de Thaïlande",common:"Thaïlande"},hrv:{official:"Kraljevina Tajland",common:"Tajland"},hun:{official:"Thaiföldi Királyság",common:"Thaiföld"},ita:{official:"Regno di Thailandia",common:"Tailandia"},jpn:{official:"タイ王国",common:"タイ"},kor:{official:"타이 왕국",common:"태국"},nld:{official:"Koninkrijk Thailand",common:"Thailand"},per:{official:"پادشاهی تایلند",common:"تایلند"},pol:{official:"Królestwo Tajlandii",common:"Tajlandia"},por:{official:"Reino da Tailândia",common:"Tailândia"},rus:{official:"Королевство Таиланд",common:"Таиланд"},slk:{official:"Thajské kráľovstvo",common:"Thajsko"},spa:{official:"Reino de Tailandia",common:"Tailandia"},srp:{official:"Краљевина Тајланд",common:"Тајланд"},swe:{official:"Konungariket Thailand",common:"Thailand"},tur:{official:"Tayland Krallığı",common:"Tayland"},urd:{official:"مملکتِ تھائی لینڈ",common:"تھائی لینڈ"},zho:{official:"泰王国",common:"泰国"}},latlng:[15,100],landlocked:!1,borders:["MMR","KHM","LAO","MYS"],area:513120,demonyms:{eng:{f:"Thai",m:"Thai"},fra:{f:"Thaïlandaise",m:"Thaïlandais"}},flag:"🇹🇭",maps:{googleMaps:"https://goo.gl/maps/qeU6uqsfW4nCCwzw9",openStreetMaps:"https://www.openstreetmap.org/relation/2067731"},population:69799978,gini:{2019:34.9},fifa:"THA",car:{signs:["T"],side:"left"},timezones:["UTC+07:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/th.png",svg:"https://flagcdn.com/th.svg",alt:"The flag of Thailand is composed of five horizontal bands of red, white, blue, white and red, with the central blue band twice the height of the other four bands."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/th.png",svg:"https://mainfacts.com/media/images/coats_of_arms/th.svg"},startOfWeek:"monday",capitalInfo:{latlng:[13.75,100.52]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Nauru",official:"Republic of Nauru",nativeName:{eng:{official:"Republic of Nauru",common:"Nauru"},nau:{official:"Republic of Nauru",common:"Nauru"}}},tld:[".nr"],cca2:"NR",ccn3:"520",cca3:"NRU",cioc:"NRU",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AUD:{name:"Australian dollar",symbol:"$"}},idd:{root:"+6",suffixes:["74"]},capital:["Yaren"],altSpellings:["NR","Naoero","Pleasant Island","Republic of Nauru","Ripublik Naoero"],region:"Oceania",subregion:"Micronesia",languages:{eng:"English",nau:"Nauru"},translations:{ara:{official:"جمهورية ناورو",common:"ناورو"},bre:{official:"Republik Nauru",common:"Nauru"},ces:{official:"Republika Nauru",common:"Nauru"},cym:{official:"Republic of Nauru",common:"Nauru"},deu:{official:"Republik Nauru",common:"Nauru"},est:{official:"Nauru Vabariik",common:"Nauru"},fin:{official:"Naurun tasavalta",common:"Nauru"},fra:{official:"République de Nauru",common:"Nauru"},hrv:{official:"Republika Nauru",common:"Nauru"},hun:{official:"Naurui Köztársaság",common:"Nauru"},ita:{official:"Repubblica di Nauru",common:"Nauru"},jpn:{official:"ナウル共和国",common:"ナウル"},kor:{official:"나우루 공화국",common:"나우루"},nld:{official:"Republiek Nauru",common:"Nauru"},per:{official:"جمهوری نائورو",common:"نائورو"},pol:{official:"Republika Nauru",common:"Nauru"},por:{official:"República de Nauru",common:"Nauru"},rus:{official:"Республика Науру",common:"Науру"},slk:{official:"Naurská republika",common:"Nauru"},spa:{official:"República de Nauru",common:"Nauru"},srp:{official:"Република Науру",common:"Науру"},swe:{official:"Republiken Nauru",common:"Nauru"},tur:{official:"Nauru Cumhuriyeti",common:"Nauru"},urd:{official:"جمہوریہ ناورو",common:"ناورو"},zho:{official:"瑙鲁共和国",common:"瑙鲁"}},latlng:[-.53333333,166.91666666],landlocked:!1,area:21,demonyms:{eng:{f:"Nauruan",m:"Nauruan"},fra:{f:"Nauruane",m:"Nauruan"}},flag:"🇳🇷",maps:{googleMaps:"https://goo.gl/maps/kyAGw6XEJgjSMsTK7",openStreetMaps:"https://www.openstreetmap.org/relation/571804"},population:10834,gini:{2012:34.8},car:{signs:["NAU"],side:"left"},timezones:["UTC+12:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/nr.png",svg:"https://flagcdn.com/nr.svg",alt:"The flag of Nauru has a dark blue field with a thin yellow horizontal band across the center and a large white twelve-pointed star beneath the horizontal band on the hoist side of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/nr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/nr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-.55,166.92]}},{name:{common:"Greenland",official:"Greenland",nativeName:{kal:{official:"Kalaallit Nunaat",common:"Kalaallit Nunaat"}}},tld:[".gl"],cca2:"GL",ccn3:"304",cca3:"GRL",independent:!1,status:"officially-assigned",unMember:!1,currencies:{DKK:{name:"krone",symbol:"kr."}},idd:{root:"+2",suffixes:["99"]},capital:["Nuuk"],altSpellings:["GL","Grønland"],region:"Americas",subregion:"North America",languages:{kal:"Greenlandic"},translations:{ara:{official:"جرينلاند",common:"جرينلاند"},bre:{official:"Greunland",common:"Greunland"},ces:{official:"Grónsko",common:"Grónsko"},cym:{official:"Greenland",common:"Greenland"},deu:{official:"Grönland",common:"Grönland"},est:{official:"Gröönimaa",common:"Gröönimaa"},fin:{official:"Groönlanti",common:"Groönlanti"},fra:{official:"Groenland",common:"Groenland"},hrv:{official:"Grenland",common:"Grenland"},hun:{official:"Grönland",common:"Grönland"},ita:{official:"Groenlandia",common:"Groenlandia"},jpn:{official:"グリーンランド",common:"グリーンランド"},kor:{official:"그린란드",common:"그린란드"},nld:{official:"Groenland",common:"Groenland"},per:{official:"گروئنلند",common:"گرینلند"},pol:{official:"Grenlandia",common:"Grenlandia"},por:{official:"Groenlândia",common:"Gronelândia"},rus:{official:"Гренландия",common:"Гренландия"},slk:{official:"Grónsko",common:"Grónsko"},spa:{official:"Groenlandia",common:"Groenlandia"},srp:{official:"Гренланд",common:"Гренланд"},swe:{official:"Grönland",common:"Grönland"},tur:{official:"Grönland",common:"Grönland"},urd:{official:"گرین لینڈ",common:"گرین لینڈ"},zho:{official:"格陵兰",common:"格陵兰"}},latlng:[72,-40],landlocked:!1,area:2166086,demonyms:{eng:{f:"Greenlandic",m:"Greenlandic"},fra:{f:"Groenlandaise",m:"Groenlandais"}},flag:"🇬🇱",maps:{googleMaps:"https://goo.gl/maps/j3289UPEQXt1ceSy8",openStreetMaps:"https://www.openstreetmap.org/relation/2184073"},population:56367,car:{signs:["DK"],side:"right"},timezones:["UTC-04:00","UTC-03:00","UTC-01:00","UTC+00:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/gl.png",svg:"https://flagcdn.com/gl.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gl.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gl.svg"},startOfWeek:"monday",capitalInfo:{latlng:[64.18,-51.75]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Italy",official:"Italian Republic",nativeName:{ita:{official:"Repubblica italiana",common:"Italia"}}},tld:[".it"],cca2:"IT",ccn3:"380",cca3:"ITA",cioc:"ITA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["9"]},capital:["Rome"],altSpellings:["IT","Italian Republic","Repubblica italiana"],region:"Europe",subregion:"Southern Europe",languages:{ita:"Italian"},translations:{ara:{official:"الجمهورية الإيطالية",common:"إيطاليا"},bre:{official:"Republik Italia",common:"Italia"},ces:{official:"Italská republika",common:"Itálie"},cym:{official:"Italian Republic",common:"Italy"},deu:{official:"Italienische Republik",common:"Italien"},est:{official:"Itaalia Vabariik",common:"Itaalia"},fin:{official:"Italian tasavalta",common:"Italia"},fra:{official:"République italienne",common:"Italie"},hrv:{official:"talijanska Republika",common:"Italija"},hun:{official:"Olasz Köztársaság",common:"Olaszország"},ita:{official:"Repubblica italiana",common:"Italia"},jpn:{official:"イタリア共和国",common:"イタリア"},kor:{official:"이탈리아 공화국",common:"이탈리아"},nld:{official:"Italiaanse Republiek",common:"Italië"},per:{official:"جمهوری ایتالیا",common:"ایتالیا"},pol:{official:"Republika Włoska",common:"Włochy"},por:{official:"República Italiana",common:"Itália"},rus:{official:"итальянская Республика",common:"Италия"},slk:{official:"Talianska republika",common:"Taliansko"},spa:{official:"República Italiana",common:"Italia"},srp:{official:"Италијанска Република",common:"Италија"},swe:{official:"Republiken Italien",common:"Italien"},tur:{official:"İtalyan Cumhuriyeti",common:"İtalya"},urd:{official:"جمہوریہ اطالیہ",common:"اطالیہ"},zho:{official:"意大利共和国",common:"意大利"}},latlng:[42.83333333,12.83333333],landlocked:!1,borders:["AUT","FRA","SMR","SVN","CHE","VAT"],area:301336,demonyms:{eng:{f:"Italian",m:"Italian"},fra:{f:"Italienne",m:"Italien"}},flag:"🇮🇹",maps:{googleMaps:"https://goo.gl/maps/8M1K27TDj7StTRTq8",openStreetMaps:"https://www.openstreetmap.org/relation/365331"},population:59554023,gini:{2017:35.9},fifa:"ITA",car:{signs:["I"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/it.png",svg:"https://flagcdn.com/it.svg",alt:"The flag of Italy is composed of three equal vertical bands of green, white and red."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/it.png",svg:"https://mainfacts.com/media/images/coats_of_arms/it.svg"},startOfWeek:"monday",capitalInfo:{latlng:[41.9,12.48]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Chad",official:"Republic of Chad",nativeName:{ara:{official:"جمهورية تشاد",common:"تشاد‎"},fra:{official:"République du Tchad",common:"Tchad"}}},tld:[".td"],cca2:"TD",ccn3:"148",cca3:"TCD",cioc:"CHA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XAF:{name:"Central African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["35"]},capital:["N'Djamena"],altSpellings:["TD","Tchad","Republic of Chad","République du Tchad"],region:"Africa",subregion:"Middle Africa",languages:{ara:"Arabic",fra:"French"},translations:{ara:{official:"جمهورية تشاد",common:"تشاد"},bre:{official:"Republik Tchad",common:"Tchad"},ces:{official:"Čadská republika",common:"Čad"},cym:{official:"Gweriniaeth Tsiad",common:"Tsiad"},deu:{official:"Republik Tschad",common:"Tschad"},est:{official:"Tšaadi Vabariik",common:"Tšaad"},fin:{official:"Tšadin tasavalta",common:"Tšad"},fra:{official:"République du Tchad",common:"Tchad"},hrv:{official:"Čadu",common:"Čad"},hun:{official:"Csád Köztársaság",common:"Csád"},ita:{official:"Repubblica del Ciad",common:"Ciad"},jpn:{official:"チャド共和国",common:"チャド"},kor:{official:"차드 공화국",common:"차드"},nld:{official:"Republiek Tsjaad",common:"Tsjaad"},per:{official:"جمهوری چاد",common:"چاد"},pol:{official:"Republika Czadu",common:"Czad"},por:{official:"República do Chade",common:"Chade"},rus:{official:"Республика Чад",common:"Чад"},slk:{official:"Čadská republika",common:"Čad"},spa:{official:"República de Chad",common:"Chad"},srp:{official:"Република Чад",common:"Чад"},swe:{official:"Republiken Tchad",common:"Tchad"},tur:{official:"Çad Cumhuriyeti",common:"Çad"},urd:{official:"جمہوریہ چاڈ",common:"چاڈ"},zho:{official:"乍得共和国",common:"乍得"}},latlng:[15,19],landlocked:!0,borders:["CMR","CAF","LBY","NER","NGA","SDN"],area:1284e3,demonyms:{eng:{f:"Chadian",m:"Chadian"},fra:{f:"Tchadienne",m:"Tchadien"}},flag:"🇹🇩",maps:{googleMaps:"https://goo.gl/maps/ziUdAZ8skuNfx5Hx7",openStreetMaps:"https://www.openstreetmap.org/relation/2361304"},population:16425859,gini:{2011:43.3},fifa:"CHA",car:{signs:["TCH","TD"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/td.png",svg:"https://flagcdn.com/td.svg",alt:"The flag of Chad is composed of three equal vertical bands of blue, gold and red."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/td.png",svg:"https://mainfacts.com/media/images/coats_of_arms/td.svg"},startOfWeek:"monday",capitalInfo:{latlng:[12.1,15.03]}},{name:{common:"Netherlands",official:"Kingdom of the Netherlands",nativeName:{nld:{official:"Koninkrijk der Nederlanden",common:"Nederland"}}},tld:[".nl"],cca2:"NL",ccn3:"528",cca3:"NLD",cioc:"NED",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["1"]},capital:["Amsterdam"],altSpellings:["NL","Holland","Nederland","The Netherlands"],region:"Europe",subregion:"Western Europe",languages:{nld:"Dutch"},translations:{ara:{official:"مملكة هولندا",common:"هولندا"},bre:{official:"Rouantelezh an Izelvroioù",common:"Izelvroioù"},ces:{official:"Nizozemské království",common:"Nizozemsko"},cym:{official:"Kingdom of the Netherlands",common:"Netherlands"},deu:{official:"Niederlande",common:"Niederlande"},est:{official:"Madalmaade Kuningriik",common:"Holland"},fin:{official:"Alankomaat",common:"Alankomaat"},fra:{official:"Pays-Bas",common:"Pays-Bas"},hrv:{official:"Holandija",common:"Nizozemska"},hun:{official:"Holland Királyság",common:"Hollandia"},ita:{official:"Paesi Bassi",common:"Paesi Bassi"},jpn:{official:"オランダ",common:"オランダ"},kor:{official:"네덜란드 왕국",common:"네덜란드"},nld:{official:"Nederland",common:"Nederland"},per:{official:"هلند",common:"هلند"},pol:{official:"Królestwo Niderlandów",common:"Holandia"},por:{official:"Holanda",common:"Holanda"},rus:{official:"Нидерланды",common:"Нидерланды"},slk:{official:"Holandské kráľovstvo",common:"Holansko"},spa:{official:"Países Bajos",common:"Países Bajos"},srp:{official:"Краљевина Холандија",common:"Холандија"},swe:{official:"Nederländerna",common:"Nederländerna"},tur:{official:"Hollanda",common:"Hollanda"},urd:{official:"مملکتِ نیدرلینڈز",common:"نیدرلینڈز"},zho:{official:"荷兰",common:"荷兰"}},latlng:[52.5,5.75],landlocked:!1,borders:["BEL","DEU"],area:41850,demonyms:{eng:{f:"Dutch",m:"Dutch"},fra:{f:"Néerlandaise",m:"Néerlandais"}},flag:"🇳🇱",maps:{googleMaps:"https://goo.gl/maps/Hv6zQswGhFxoVVBm6",openStreetMaps:"https://www.openstreetmap.org/relation/47796"},population:16655799,gini:{2018:28.1},fifa:"NED",car:{signs:["NL"],side:"right"},timezones:["UTC-04:00","UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/nl.png",svg:"https://flagcdn.com/nl.svg",alt:"The flag of the Netherlands is composed of three equal horizontal bands of red, white and blue."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/nl.png",svg:"https://mainfacts.com/media/images/coats_of_arms/nl.svg"},startOfWeek:"monday",capitalInfo:{latlng:[52.35,4.92]},postalCode:{format:"#### @@",regex:"^(\\d{4}[A-Z]{2})$"}},{name:{common:"Saint Martin",official:"Saint Martin",nativeName:{fra:{official:"Saint-Martin",common:"Saint-Martin"}}},tld:[".fr",".gp"],cca2:"MF",ccn3:"663",cca3:"MAF",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+5",suffixes:["90"]},capital:["Marigot"],altSpellings:["MF","Collectivity of Saint Martin","Collectivité de Saint-Martin","Saint Martin (French part)"],region:"Americas",subregion:"Caribbean",languages:{fra:"French"},translations:{ara:{official:"سانت مارتن",common:"سانت مارتن"},bre:{official:"Saint-Martin",common:"Saint-Martin"},ces:{official:"Svatý Martin",common:"Svatý Martin (Francie)"},cym:{official:"Saint Martin",common:"Saint Martin"},deu:{official:"Saint-Martin",common:"Saint-Martin"},est:{official:"Saint-Martini ühendus",common:"Saint-Martin"},fin:{official:"Saint-Martin",common:"Saint-Martin"},fra:{official:"Saint-Martin",common:"Saint-Martin"},hrv:{official:"Saint Martin",common:"Sveti Martin"},hun:{official:"Saint-Martin Közösség",common:"Saint-Martin"},ita:{official:"saint Martin",common:"Saint Martin"},jpn:{official:"サンマルタン島",common:"サン・マルタン（フランス領）"},kor:{official:"생마르탱",common:"생마르탱"},nld:{official:"Saint Martin",common:"Saint-Martin"},per:{official:"سن مارتن",common:"سن مارتن"},pol:{official:"Wspólnota Saint-Martin",common:"Saint-Martin"},por:{official:"saint Martin",common:"São Martinho"},rus:{official:"Сен-Мартен",common:"Сен-Мартен"},slk:{official:"Saint-Martin",common:"Saint-Martin"},spa:{official:"Saint Martin",common:"Saint Martin"},srp:{official:"Свети Мартин",common:"Свети Мартин"},swe:{official:"Förvaltningsområdet Saint-Martin",common:"Saint-Martin"},tur:{official:"Saint Martin",common:"Saint Martin"},urd:{official:"سینٹ مارٹن",common:"سینٹ مارٹن"},zho:{official:"圣马丁",common:"圣马丁"}},latlng:[18.0708,63.0501],landlocked:!1,borders:["SXM"],area:53,demonyms:{eng:{f:"Saint Martin Islander",m:"Saint Martin Islander"},fra:{f:"Saint-Martinoise",m:"Saint-Martinois"}},flag:"🇲🇫",maps:{googleMaps:"https://goo.gl/maps/P9ho9QuJ9EAR28JEA",openStreetMaps:"https://www.openstreetmap.org/relation/63064"},population:38659,car:{signs:["F"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/mf.png",svg:"https://flagcdn.com/mf.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[18.07,-63.08]},postalCode:{format:"### ###"}},{name:{common:"Grenada",official:"Grenada",nativeName:{eng:{official:"Grenada",common:"Grenada"}}},tld:[".gd"],cca2:"GD",ccn3:"308",cca3:"GRD",cioc:"GRN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["473"]},capital:["St. George's"],altSpellings:["GD"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"غرينادا",common:"غرينادا"},bre:{official:"Grenada",common:"Grenada"},ces:{official:"Grenada",common:"Grenada"},cym:{official:"Grenada",common:"Grenada"},deu:{official:"Grenada",common:"Grenada"},est:{official:"Grenada",common:"Grenada"},fin:{official:"Grenada",common:"Grenada"},fra:{official:"Grenade",common:"Grenade"},hrv:{official:"Grenada",common:"Grenada"},hun:{official:"Grenada",common:"Grenada"},ita:{official:"Grenada",common:"Grenada"},jpn:{official:"グレナダ",common:"グレナダ"},kor:{official:"그레나다",common:"그레나다"},nld:{official:"Grenada",common:"Grenada"},per:{official:"گرنادا",common:"گرنادا"},pol:{official:"Grenada",common:"Grenada"},por:{official:"Grenada",common:"Granada"},rus:{official:"Гренада",common:"Гренада"},slk:{official:"Grenada",common:"Grenada"},spa:{official:"Granada",common:"Grenada"},srp:{official:"Гренада",common:"Гренада"},swe:{official:"Grenada",common:"Grenada"},tur:{official:"Grenada",common:"Grenada"},urd:{official:"گریناڈا",common:"گریناڈا"},zho:{official:"格林纳达",common:"格林纳达"}},latlng:[12.11666666,-61.66666666],landlocked:!1,area:344,demonyms:{eng:{f:"Grenadian",m:"Grenadian"},fra:{f:"Grenadienne",m:"Grenadien"}},flag:"🇬🇩",maps:{googleMaps:"https://goo.gl/maps/rqWyfUAt4xhvk1Zy9",openStreetMaps:"https://www.openstreetmap.org/relation/550727"},population:112519,fifa:"GRN",car:{signs:["WG"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/gd.png",svg:"https://flagcdn.com/gd.svg",alt:"The flag of Grenada features a large central rectangular area surrounded by a red border, with three five-pointed yellow stars centered on the top and bottom borders. The central rectangle is divided diagonally into four alternating triangular areas of yellow at the top and bottom and green on the hoist and fly sides, and a five-pointed yellow star on a red circle is superimposed at its center. A symbolic nutmeg pod is situated on the green hoist-side triangle."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gd.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gd.svg"},startOfWeek:"monday",capitalInfo:{latlng:[32.38,-64.68]}},{name:{common:"Namibia",official:"Republic of Namibia",nativeName:{afr:{official:"Republiek van Namibië",common:"Namibië"},deu:{official:"Republik Namibia",common:"Namibia"},eng:{official:"Republic of Namibia",common:"Namibia"},her:{official:"Republic of Namibia",common:"Namibia"},hgm:{official:"Republic of Namibia",common:"Namibia"},kwn:{official:"Republic of Namibia",common:"Namibia"},loz:{official:"Republic of Namibia",common:"Namibia"},ndo:{official:"Republic of Namibia",common:"Namibia"},tsn:{official:"Lefatshe la Namibia",common:"Namibia"}}},tld:[".na"],cca2:"NA",ccn3:"516",cca3:"NAM",cioc:"NAM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{NAD:{name:"Namibian dollar",symbol:"$"},ZAR:{name:"South African rand",symbol:"R"}},idd:{root:"+2",suffixes:["64"]},capital:["Windhoek"],altSpellings:["NA","Namibië","Republic of Namibia"],region:"Africa",subregion:"Southern Africa",languages:{afr:"Afrikaans",deu:"German",eng:"English",her:"Herero",hgm:"Khoekhoe",kwn:"Kwangali",loz:"Lozi",ndo:"Ndonga",tsn:"Tswana"},translations:{ara:{official:"جمهورية ناميبيا",common:"ناميبيا"},bre:{official:"Republik Namibia",common:"Namibia"},ces:{official:"Namibijská republika",common:"Namibie"},cym:{official:"Republic of Namibia",common:"Namibia"},deu:{official:"Republik Namibia",common:"Namibia"},est:{official:"Namiibia Vabariik",common:"Namiibia"},fin:{official:"Namibian tasavalta",common:"Namibia"},fra:{official:"République de Namibie",common:"Namibie"},hrv:{official:"Republika Namibija",common:"Namibija"},hun:{official:"Namíbiai Köztársaság",common:"Namíbia"},ita:{official:"Repubblica di Namibia",common:"Namibia"},jpn:{official:"ナミビア共和国",common:"ナミビア"},kor:{official:"나미비아 공화국",common:"나미비아"},nld:{official:"Republiek Namibië",common:"Namibië"},per:{official:"جمهوری نامیبیا",common:"نامیبیا"},pol:{official:"Republika Namibii",common:"Namibia"},por:{official:"República da Namíbia",common:"Namíbia"},rus:{official:"Республика Намибия",common:"Намибия"},slk:{official:"Namíbijská republika",common:"Namíbia"},spa:{official:"República de Namibia",common:"Namibia"},srp:{official:"Република Намибија",common:"Намибија"},swe:{official:"Republiken Namibia",common:"Namibia"},tur:{official:"Namibya Cumhuriyeti",common:"Namibya"},urd:{official:"جمہوریہ نمیبیا",common:"نمیبیا"},zho:{official:"纳米比亚共和国",common:"纳米比亚"}},latlng:[-22,17],landlocked:!1,borders:["AGO","BWA","ZAF","ZMB"],area:825615,demonyms:{eng:{f:"Namibian",m:"Namibian"},fra:{f:"Namibienne",m:"Namibien"}},flag:"🇳🇦",maps:{googleMaps:"https://goo.gl/maps/oR1i8BFEYX3EY83WA",openStreetMaps:"https://www.openstreetmap.org/relation/195266"},population:2540916,gini:{2015:59.1},fifa:"NAM",car:{signs:["NAM"],side:"left"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/na.png",svg:"https://flagcdn.com/na.svg",alt:"The flag of Namibia features a white-edged red diagonal band that extends from the lower hoist-side corner to the upper fly-side corner of the field. Above and beneath this band are a blue and green triangle respectively. A gold sun with twelve triangular rays is situated on the hoist side of the upper triangle."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/na.png",svg:"https://mainfacts.com/media/images/coats_of_arms/na.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-22.57,17.08]}},{name:{common:"United States",official:"United States of America",nativeName:{eng:{official:"United States of America",common:"United States"}}},tld:[".us"],cca2:"US",ccn3:"840",cca3:"USA",cioc:"USA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["201","202","203","205","206","207","208","209","210","212","213","214","215","216","217","218","219","220","224","225","227","228","229","231","234","239","240","248","251","252","253","254","256","260","262","267","269","270","272","274","276","281","283","301","302","303","304","305","307","308","309","310","312","313","314","315","316","317","318","319","320","321","323","325","327","330","331","334","336","337","339","346","347","351","352","360","361","364","380","385","386","401","402","404","405","406","407","408","409","410","412","413","414","415","417","419","423","424","425","430","432","434","435","440","442","443","447","458","463","464","469","470","475","478","479","480","484","501","502","503","504","505","507","508","509","510","512","513","515","516","517","518","520","530","531","534","539","540","541","551","559","561","562","563","564","567","570","571","573","574","575","580","585","586","601","602","603","605","606","607","608","609","610","612","614","615","616","617","618","619","620","623","626","628","629","630","631","636","641","646","650","651","657","660","661","662","667","669","678","681","682","701","702","703","704","706","707","708","712","713","714","715","716","717","718","719","720","724","725","727","730","731","732","734","737","740","743","747","754","757","760","762","763","765","769","770","772","773","774","775","779","781","785","786","801","802","803","804","805","806","808","810","812","813","814","815","816","817","818","828","830","831","832","843","845","847","848","850","854","856","857","858","859","860","862","863","864","865","870","872","878","901","903","904","906","907","908","909","910","912","913","914","915","916","917","918","919","920","925","928","929","930","931","934","936","937","938","940","941","947","949","951","952","954","956","959","970","971","972","973","975","978","979","980","984","985","989"]},capital:["Washington, D.C."],altSpellings:["US","USA","United States of America"],region:"Americas",subregion:"North America",languages:{eng:"English"},translations:{ara:{official:"الولايات المتحدة الامريكية",common:"الولايات المتحدة"},bre:{official:"Stadoù-Unanet Amerika",common:"Stadoù-Unanet"},ces:{official:"Spojené státy americké",common:"Spojené státy"},cym:{official:"United States of America",common:"United States"},deu:{official:"Vereinigte Staaten von Amerika",common:"Vereinigte Staaten"},est:{official:"Ameerika Ühendriigid",common:"Ameerika Ühendriigid"},fin:{official:"Amerikan yhdysvallat",common:"Yhdysvallat"},fra:{official:"Les états-unis d'Amérique",common:"États-Unis"},hrv:{official:"Sjedinjene Države Amerike",common:"Sjedinjene Američke Države"},hun:{official:"Amerikai Egyesült Államok",common:"Amerikai Egyesült Államok"},ita:{official:"Stati Uniti d'America",common:"Stati Uniti d'America"},jpn:{official:"アメリカ合衆国",common:"アメリカ合衆国"},kor:{official:"아메리카 합중국",common:"미국"},nld:{official:"Verenigde Staten van Amerika",common:"Verenigde Staten"},per:{official:"ایالات متحده آمریکا",common:"ایالات متحده آمریکا"},pol:{official:"Stany Zjednoczone Ameryki",common:"Stany Zjednoczone"},por:{official:"Estados Unidos da América",common:"Estados Unidos"},rus:{official:"Соединенные Штаты Америки",common:"Соединённые Штаты Америки"},slk:{official:"Spojené štáty Americké",common:"Spojené štáty americké"},spa:{official:"Estados Unidos de América",common:"Estados Unidos"},srp:{official:"Сједињене Америчке Државе",common:"Сједињене Америчке Државе"},swe:{official:"Amerikas förenta stater",common:"USA"},tur:{official:"Amerika Birleşik Devletleri",common:"Amerika Birleşik Devletleri"},urd:{official:"ریاستہائے متحدہ امریکا",common:"ریاستہائے متحدہ"},zho:{official:"美利坚合众国",common:"美国"}},latlng:[38,-97],landlocked:!1,borders:["CAN","MEX"],area:9372610,demonyms:{eng:{f:"American",m:"American"},fra:{f:"Américaine",m:"Américain"}},flag:"🇺🇸",maps:{googleMaps:"https://goo.gl/maps/e8M246zY4BSjkjAv6",openStreetMaps:"https://www.openstreetmap.org/relation/148838#map=2/20.6/-85.8"},population:329484123,gini:{2018:41.4},fifa:"USA",car:{signs:["USA"],side:"right"},timezones:["UTC-12:00","UTC-11:00","UTC-10:00","UTC-09:00","UTC-08:00","UTC-07:00","UTC-06:00","UTC-05:00","UTC-04:00","UTC+10:00","UTC+12:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/us.png",svg:"https://flagcdn.com/us.svg",alt:"The flag of the United States of America is composed of thirteen equal horizontal bands of red alternating with white. A blue rectangle, bearing fifty small five-pointed white stars arranged in nine rows where rows of six stars alternate with rows of five stars, is superimposed in the canton."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/us.png",svg:"https://mainfacts.com/media/images/coats_of_arms/us.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[38.89,-77.05]},postalCode:{format:"#####-####",regex:"^\\d{5}(-\\d{4})?$"}},{name:{common:"Azerbaijan",official:"Republic of Azerbaijan",nativeName:{aze:{official:"Azərbaycan Respublikası",common:"Azərbaycan"},rus:{official:"Азербайджанская Республика",common:"Азербайджан"}}},tld:[".az"],cca2:"AZ",ccn3:"031",cca3:"AZE",cioc:"AZE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AZN:{name:"Azerbaijani manat",symbol:"₼"}},idd:{root:"+9",suffixes:["94"]},capital:["Baku"],altSpellings:["AZ","Republic of Azerbaijan","Azərbaycan Respublikası"],region:"Asia",subregion:"Western Asia",languages:{aze:"Azerbaijani",rus:"Russian"},translations:{ara:{official:"جمهورية أذربيجان",common:"أذربيجان"},bre:{official:"Republik Azerbaidjan",common:"Azerbaidjan"},ces:{official:"Ázerbájdžánská republika",common:"Ázerbájdžán"},cym:{official:"Gweriniaeth Aserbaijan",common:"Aserbaijan"},deu:{official:"Republik Aserbaidschan",common:"Aserbaidschan"},est:{official:"Aserbaidžaani Vabariik",common:"Aserbaidžaan"},fin:{official:"Azerbaidzanin tasavalta",common:"Azerbaidzan"},fra:{official:"République d'Azerbaïdjan",common:"Azerbaïdjan"},hrv:{official:"Republika Azerbajdžan",common:"Azerbajdžan"},hun:{official:"Azerbajdzsán",common:"Azerbajdzsán"},ita:{official:"Repubblica dell'Azerbaigian",common:"Azerbaijan"},jpn:{official:"アゼルバイジャン共和国",common:"アゼルバイジャン"},kor:{official:"아제르바이잔 공화국",common:"아제르바이잔"},nld:{official:"Republiek Azerbeidzjan",common:"Azerbeidzjan"},per:{official:"جمهوری آذربایجان",common:"جمهوری آذربایجان"},pol:{official:"Republika Azerbejdżanu",common:"Azerbejdżan"},por:{official:"República do Azerbaijão",common:"Azerbeijão"},rus:{official:"Азербайджанская Республика",common:"Азербайджан"},slk:{official:"Azerbajǆanská republika",common:"AzerbajǇan"},spa:{official:"República de Azerbaiyán",common:"Azerbaiyán"},srp:{official:"Азербејџанска Република",common:"Азербејџан"},swe:{official:"Republiken Azerbajdzjan",common:"Azerbajdzjan"},tur:{official:"Azerbaycan Cumhuriyeti",common:"Azerbaycan"},urd:{official:"جمہوریہ آذربائیجان",common:"آذربائیجان"},zho:{official:"阿塞拜疆共和国",common:"阿塞拜疆"}},latlng:[40.5,47.5],landlocked:!0,borders:["ARM","GEO","IRN","RUS","TUR"],area:86600,demonyms:{eng:{f:"Azerbaijani",m:"Azerbaijani"},fra:{f:"Azerbaïdjanaise",m:"Azerbaïdjanais"}},flag:"🇦🇿",maps:{googleMaps:"https://goo.gl/maps/az3Zz7ar2aoB9AUc6",openStreetMaps:"https://www.openstreetmap.org/relation/364110"},population:10110116,gini:{2005:26.6},fifa:"AZE",car:{signs:["AZ"],side:"right"},timezones:["UTC+04:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/az.png",svg:"https://flagcdn.com/az.svg",alt:"The flag of Azerbaijan features three equal horizontal bands of blue, red and green, with a white fly-side facing crescent and eight-pointed star centered in the red band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/az.png",svg:"https://mainfacts.com/media/images/coats_of_arms/az.svg"},startOfWeek:"monday",capitalInfo:{latlng:[40.38,49.87]},postalCode:{format:"AZ ####",regex:"^(?:AZ)*(\\d{4})$"}},{name:{common:"Algeria",official:"People's Democratic Republic of Algeria",nativeName:{ara:{official:"الجمهورية الديمقراطية الشعبية الجزائرية",common:"الجزائر"}}},tld:[".dz","الجزائر."],cca2:"DZ",ccn3:"012",cca3:"DZA",cioc:"ALG",independent:!0,status:"officially-assigned",unMember:!0,currencies:{DZD:{name:"Algerian dinar",symbol:"د.ج"}},idd:{root:"+2",suffixes:["13"]},capital:["Algiers"],altSpellings:["DZ","Dzayer","Algérie"],region:"Africa",subregion:"Northern Africa",languages:{ara:"Arabic"},translations:{ara:{official:"الجمهورية الديمقراطية الشعبية الجزائرية",common:"الجزائر"},bre:{official:"Republik Aljerian Demokratel ha Poblel",common:"Aljeria"},ces:{official:"Alžírská demokratická a lidová republika",common:"Alžírsko"},cym:{official:"Gweriniaeth Ddemocrataidd Pobl Algeria",common:"Algeria"},deu:{official:"Demokratische Volksrepublik Algerien",common:"Algerien"},est:{official:"Alžeeria Demokraatlik Rahvavabariik",common:"Alžeeria"},fin:{official:"Algerian demokraattinen kansantasavalta",common:"Algeria"},fra:{official:"République démocratique et populaire d'Algérie",common:"Algérie"},hrv:{official:"Narodna Demokratska Republika Alžir",common:"Alžir"},hun:{official:"Algériai Népi Demokratikus Köztársaság",common:"Algéria"},ita:{official:"Repubblica popolare democratica di Algeria",common:"Algeria"},jpn:{official:"アルジェリア人民民主共和国",common:"アルジェリア"},kor:{official:"알제리 인민 민주 공화국",common:"알제리"},nld:{official:"Democratische Volksrepubliek Algerije",common:"Algerije"},per:{official:"جمهوری دموکراتیک خلق الجزایر",common:"الجزایر"},pol:{official:"Algierska Republika Ludowo-Demokratyczna",common:"Algieria"},por:{official:"República Argelina Democrática e Popular",common:"Argélia"},rus:{official:"Народно-Демократическая Республика Алжир",common:"Алжир"},slk:{official:"Alžírska demokratická ľudová republika",common:"Alžírsko"},spa:{official:"República Argelina Democrática y Popular",common:"Argelia"},srp:{official:"Народна Демократска Република Алжир",common:"Алжир"},swe:{official:"Demokratiska folkrepubliken Algeriet",common:"Algeriet"},tur:{official:"Cezayir Demokratik Halk Cumhuriyeti",common:"Cezayir"},urd:{official:"عوامی جمہوری جمہوریہ الجزائر",common:"الجزائر"},zho:{official:"阿尔及利亚人民民主共和国",common:"阿尔及利亚"}},latlng:[28,3],landlocked:!1,borders:["TUN","LBY","NER","ESH","MRT","MLI","MAR"],area:2381741,demonyms:{eng:{f:"Algerian",m:"Algerian"},fra:{f:"Algérienne",m:"Algérien"}},flag:"🇩🇿",maps:{googleMaps:"https://goo.gl/maps/RsAyAfyaiNVb8DpW8",openStreetMaps:"https://www.openstreetmap.org/relation/192756"},population:447e5,gini:{2011:27.6},fifa:"ALG",car:{signs:["DZ"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/dz.png",svg:"https://flagcdn.com/dz.svg",alt:"The flag of Algeria features two equal vertical bands of green and white. A five-pointed red star within a fly-side facing red crescent is centered over the two-color boundary."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/dz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/dz.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[36.75,3.05]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Papua New Guinea",official:"Independent State of Papua New Guinea",nativeName:{eng:{official:"Independent State of Papua New Guinea",common:"Papua New Guinea"},hmo:{official:"Independen Stet bilong Papua Niugini",common:"Papua Niu Gini"},tpi:{official:"Independen Stet bilong Papua Niugini",common:"Papua Niugini"}}},tld:[".pg"],cca2:"PG",ccn3:"598",cca3:"PNG",cioc:"PNG",independent:!0,status:"officially-assigned",unMember:!0,currencies:{PGK:{name:"Papua New Guinean kina",symbol:"K"}},idd:{root:"+6",suffixes:["75"]},capital:["Port Moresby"],altSpellings:["PG","Independent State of Papua New Guinea","Independen Stet bilong Papua Niugini"],region:"Oceania",subregion:"Melanesia",languages:{eng:"English",hmo:"Hiri Motu",tpi:"Tok Pisin"},translations:{ara:{official:"دولة بابوا غينيا الجديدة",common:"بابوا غينيا الجديدة"},bre:{official:"Stad dizalc'h Papoua-Ginea Nevez",common:"Papoua-Ginea Nevez"},ces:{official:"Nezávislý stát Papua Nová Guinea",common:"Papua-Nová Guinea"},cym:{official:"Independent State of Papua New Guinea",common:"Papua New Guinea"},deu:{official:"Unabhängiger Staat Papua-Neuguinea",common:"Papua-Neuguinea"},est:{official:"Paapua Uus-Guinea Iseseisvusriik",common:"Paapua Uus-Guinea"},fin:{official:"Papua-Uuden-Guinean Itsenäinen valtio",common:"Papua-Uusi-Guinea"},fra:{official:"État indépendant de Papouasie-Nouvelle-Guinée",common:"Papouasie-Nouvelle-Guinée"},hrv:{official:"Nezavisna Država Papui Novoj Gvineji",common:"Papua Nova Gvineja"},hun:{official:"Pápua Új-Guinea Független Állam",common:"Pápua Új-Guinea"},ita:{official:"Stato indipendente di Papua Nuova Guinea",common:"Papua Nuova Guinea"},jpn:{official:"パプアニューギニア独立国",common:"パプアニューギニア"},kor:{official:"파푸아뉴기니 독립국",common:"파푸아뉴기니"},nld:{official:"Onafhankelijke Staat Papoea -Nieuw-Guinea",common:"Papoea-Nieuw-Guinea"},per:{official:"مملکت مستقل پاپوآ گینهٔ نو",common:"پاپوآ گینه نو"},pol:{official:"Niezależne Państwo Papui-Nowej Gwinei",common:"Papua-Nowa Gwinea"},por:{official:"Estado Independente da Papua Nova Guiné",common:"Papua Nova Guiné"},rus:{official:"Независимое Государство Папуа-Новой Гвинеи",common:"Папуа — Новая Гвинея"},slk:{official:"Nezávislý štát Papua-Nová Guinea",common:"Papua-Nová Guinea"},spa:{official:"Estado Independiente de Papúa Nueva Guinea",common:"Papúa Nueva Guinea"},srp:{official:"Независна Држава Папуа Нова Гвинеја",common:"Папуа Нова Гвинеја"},swe:{official:"Den oberoende staten Papua Nya Guinea",common:"Papua Nya Guinea"},tur:{official:"Papua Yeni Gine Bağımsız Devleti",common:"Papua Yeni Gine"},urd:{official:"آزاد ریاستِ پاپوا نیو گنی",common:"پاپوا نیو گنی"},zho:{official:"巴布亚新几内亚",common:"巴布亚新几内亚"}},latlng:[-6,147],landlocked:!1,borders:["IDN"],area:462840,demonyms:{eng:{f:"Papua New Guinean",m:"Papua New Guinean"},fra:{f:"Papouasienne",m:"Papouasien"}},flag:"🇵🇬",maps:{googleMaps:"https://goo.gl/maps/ChGmzZBjZ3vnBwR2A",openStreetMaps:"https://goo.gl/maps/ChGmzZBjZ3vnBwR2A"},population:8947027,gini:{2009:41.9},fifa:"PNG",car:{signs:["PNG"],side:"left"},timezones:["UTC+10:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/pg.png",svg:"https://flagcdn.com/pg.svg",alt:"The flag of Papua New Guinea is divided diagonally, from the upper hoist-side corner to the lower fly-side corner, into a lower black and an upper red triangle. On the hoist side of the lower black triangle is a representation of the Southern Cross constellation made up of one small and four larger five-pointed white stars. A golden Raggiana bird-of-paradise is situated on the fly side of the upper red triangle."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-9.45,147.18]},postalCode:{format:"###",regex:"^(\\d{3})$"}},{name:{common:"Argentina",official:"Argentine Republic",nativeName:{grn:{official:"Argentine Republic",common:"Argentina"},spa:{official:"República Argentina",common:"Argentina"}}},tld:[".ar"],cca2:"AR",ccn3:"032",cca3:"ARG",cioc:"ARG",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ARS:{name:"Argentine peso",symbol:"$"}},idd:{root:"+5",suffixes:["4"]},capital:["Buenos Aires"],altSpellings:["AR","Argentine Republic","República Argentina"],region:"Americas",subregion:"South America",languages:{grn:"Guaraní",spa:"Spanish"},translations:{ara:{official:"جمهورية الأرجنتين",common:"الأرجنتين"},bre:{official:"Republik Arc'hantina",common:"Arc'hantina"},ces:{official:"Argentinská republika",common:"Argentina"},cym:{official:"Gweriniaeth yr Ariannin",common:"Ariannin"},deu:{official:"Argentinische Republik",common:"Argentinien"},est:{official:"Argentina Vabariik",common:"Argentina"},fin:{official:"Argentiinan tasavalta",common:"Argentiina"},fra:{official:"République argentine",common:"Argentine"},hrv:{official:"Argentinski Republika",common:"Argentina"},hun:{official:"Argentin Köztársaság",common:"Argentína"},ita:{official:"Repubblica Argentina",common:"Argentina"},jpn:{official:"アルゼンチン共和国",common:"アルゼンチン"},kor:{official:"아르헨티나 공화국",common:"아르헨티나"},nld:{official:"Argentijnse Republiek",common:"Argentinië"},per:{official:"جمهوری آرژانتین",common:"آرژانتین"},pol:{official:"Republika Argentyńska",common:"Argentyna"},por:{official:"República Argentina",common:"Argentina"},rus:{official:"Аргентинская Республика",common:"Аргентина"},slk:{official:"Argentínska republika",common:"Argentína"},spa:{official:"República Argentina",common:"Argentina"},srp:{official:"Аргентинска Република",common:"Аргентина"},swe:{official:"Republiken Argentina",common:"Argentina"},tur:{official:"Arjantin Cumhuriyeti",common:"Arjantin"},urd:{official:"جمہوریہ ارجنٹائن",common:"ارجنٹائن"},zho:{official:"阿根廷共和国",common:"阿根廷"}},latlng:[-34,-64],landlocked:!1,borders:["BOL","BRA","CHL","PRY","URY"],area:2780400,demonyms:{eng:{f:"Argentine",m:"Argentine"},fra:{f:"Argentine",m:"Argentin"}},flag:"🇦🇷",maps:{googleMaps:"https://goo.gl/maps/Z9DXNxhf2o93kvyc6",openStreetMaps:"https://www.openstreetmap.org/relation/286393"},population:45376763,gini:{2019:42.9},fifa:"ARG",car:{signs:["RA"],side:"right"},timezones:["UTC-03:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/ar.png",svg:"https://flagcdn.com/ar.svg",alt:"The flag of Argentina features three equal horizontal bands of light blue, white and light blue. A brown-edged golden sun is centered in the white band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ar.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ar.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-34.58,-58.67]},postalCode:{format:"@####@@@",regex:"^([A-Z]\\d{4}[A-Z]{3})$"}},{name:{common:"Guatemala",official:"Republic of Guatemala",nativeName:{spa:{official:"República de Guatemala",common:"Guatemala"}}},tld:[".gt"],cca2:"GT",ccn3:"320",cca3:"GTM",cioc:"GUA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{GTQ:{name:"Guatemalan quetzal",symbol:"Q"}},idd:{root:"+5",suffixes:["02"]},capital:["Guatemala City"],altSpellings:["GT"],region:"Americas",subregion:"Central America",languages:{spa:"Spanish"},translations:{ara:{official:"جمهورية غواتيمالا",common:"غواتيمالا"},bre:{official:"Republik Guatemala",common:"Guatemala"},ces:{official:"Republika Guatemala",common:"Guatemala"},cym:{official:"Republic of Guatemala",common:"Guatemala"},deu:{official:"Republik Guatemala",common:"Guatemala"},est:{official:"Guatemala Vabariik",common:"Guatemala"},fin:{official:"Guatemalan tasavalta",common:"Guatemala"},fra:{official:"République du Guatemala",common:"Guatemala"},hrv:{official:"Republika Gvatemala",common:"Gvatemala"},hun:{official:"Guatemalai Köztársaság",common:"Guatemala"},ita:{official:"Repubblica del Guatemala",common:"Guatemala"},jpn:{official:"グアテマラ共和国",common:"グアテマラ"},kor:{official:"과테말라 공화국",common:"과테말라"},nld:{official:"Republiek Guatemala",common:"Guatemala"},per:{official:"جمهوری گواتِمالا",common:"گواتِمالا"},pol:{official:"Republika Gwatemali",common:"Gwatemala"},por:{official:"República da Guatemala",common:"Guatemala"},rus:{official:"Республика Гватемала",common:"Гватемала"},slk:{official:"Guatemalská republika",common:"Guatemala"},spa:{official:"República de Guatemala",common:"Guatemala"},srp:{official:"Република Гватемала",common:"Гватемала"},swe:{official:"Republiken Guatemala",common:"Guatemala"},tur:{official:"Guatemala Cumhuriyeti",common:"Guatemala"},urd:{official:"جمہوریہ گواتیمالا",common:"گواتیمالا"},zho:{official:"危地马拉共和国",common:"危地马拉"}},latlng:[15.5,-90.25],landlocked:!1,borders:["BLZ","SLV","HND","MEX"],area:108889,demonyms:{eng:{f:"Guatemalan",m:"Guatemalan"},fra:{f:"Guatémaltèque",m:"Guatémaltèque"}},flag:"🇬🇹",maps:{googleMaps:"https://goo.gl/maps/JoRAbem4Hxb9FYbVA",openStreetMaps:"https://www.openstreetmap.org/relation/1521463"},population:16858333,gini:{2014:48.3},fifa:"GUA",car:{signs:["GCA"],side:"right"},timezones:["UTC-06:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/gt.png",svg:"https://flagcdn.com/gt.svg",alt:"The flag of Guatemala is composed of three equal vertical bands of light blue, white and light blue, with the national coat of arms centered in the white band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gt.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gt.svg"},startOfWeek:"monday",capitalInfo:{latlng:[14.62,-90.52]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"South Sudan",official:"Republic of South Sudan",nativeName:{eng:{official:"Republic of South Sudan",common:"South Sudan"}}},tld:[".ss"],cca2:"SS",ccn3:"728",cca3:"SSD",cioc:"SSD",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SSP:{name:"South Sudanese pound",symbol:"£"}},idd:{root:"+2",suffixes:["11"]},capital:["Juba"],altSpellings:["SS"],region:"Africa",subregion:"Middle Africa",languages:{eng:"English"},translations:{ara:{official:"جمهورية جنوب السودان",common:"جنوب السودان"},bre:{official:"Republik Soudan ar Su",common:"Soudan ar Su"},ces:{official:"Jihosúdánská republika",common:"Jižní Súdán"},cym:{official:"Republic of South Sudan",common:"South Sudan"},deu:{official:"Republik Südsudan",common:"Südsudan"},est:{official:"Lõuna-Sudaani Vabariik",common:"Lõuna-Sudaan"},fin:{official:"Etelä-Sudanin tasavalta",common:"Etelä-Sudan"},fra:{official:"République du Soudan du Sud",common:"Soudan du Sud"},hrv:{official:"Republika Južni Sudan",common:"Južni Sudan"},hun:{official:"Dél-szudáni Köztársaság",common:"Dél-Szudán"},ita:{official:"Repubblica del Sudan del Sud",common:"Sudan del sud"},jpn:{official:"南スーダン共和国",common:"南スーダン"},kor:{official:"남수단 공화국",common:"남수단"},nld:{official:"Republiek Zuid-Soedan",common:"Zuid-Soedan"},per:{official:"جمهوری سودان جنوبی",common:"سودان جنوبی"},pol:{official:"Republika Sudanu",common:"Sudan"},por:{official:"República do Sudão do Sul",common:"Sudão do Sul"},rus:{official:"Республика Южный Судан",common:"Южный Судан"},slk:{official:"Juhosudánska republika",common:"Južný Sudán"},spa:{official:"República de Sudán del Sur",common:"Sudán del Sur"},srp:{official:"Република Јужни Судан",common:"Јужни Судан"},swe:{official:"Republiken Sydsudan",common:"Sydsudan"},tur:{official:"Güney Sudan Cumhuriyeti",common:"Güney Sudan"},urd:{official:"جمہوریہ جنوبی سوڈان",common:"جنوبی سوڈان"},zho:{official:"南苏丹共和国",common:"南苏丹"}},latlng:[7,30],landlocked:!0,borders:["CAF","COD","ETH","KEN","SDN","UGA"],area:619745,demonyms:{eng:{f:"South Sudanese",m:"South Sudanese"},fra:{f:"Sud-Soudanaise",m:"Sud-Soudanais"}},flag:"🇸🇸",maps:{googleMaps:"https://goo.gl/maps/Zm1AYCXb9HSNF1P27",openStreetMaps:"https://www.openstreetmap.org/relation/1656678"},population:11193729,gini:{2016:44.1},fifa:"SSD",car:{signs:[""],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ss.png",svg:"https://flagcdn.com/ss.svg",alt:"The flag of South Sudan is composed of three equal horizontal bands of black, red with white top and bottom edges, and green. A blue equilateral triangle which spans about two-fifth the width of the field is superimposed on the hoist side with its base on the hoist end of the field. At the center of this triangle is a five-pointed yellow star."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ss.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ss.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[4.85,31.62]}},{name:{common:"United Kingdom",official:"United Kingdom of Great Britain and Northern Ireland",nativeName:{eng:{official:"United Kingdom of Great Britain and Northern Ireland",common:"United Kingdom"}}},tld:[".uk"],cca2:"GB",ccn3:"826",cca3:"GBR",cioc:"GBR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{GBP:{name:"British pound",symbol:"£"}},idd:{root:"+4",suffixes:["4"]},capital:["London"],altSpellings:["GB","UK","Great Britain"],region:"Europe",subregion:"Northern Europe",languages:{eng:"English"},translations:{ara:{official:"المملكة المتحدة لبريطانيا العظمى وايرلندا الشمالية",common:"المملكة المتحدة"},bre:{official:"Rouantelezh-Unanet Breizh-Veur ha Norzhiwerzhon",common:"Rouantelezh-Unanet"},ces:{official:"Spojené království Velké Británie a Severního Irska",common:"Spojené království"},cym:{official:"United Kingdom of Great Britain and Northern Ireland",common:"United Kingdom"},deu:{official:"Vereinigtes Königreich Großbritannien und Nordirland",common:"Vereinigtes Königreich"},est:{official:"Suurbritannia ja Põhja-Iiri Ühendkuningriik",common:"Suurbritannia"},fin:{official:"Ison-Britannian ja Pohjois-Irlannin yhdistynyt kuningaskunta",common:"Yhdistynyt kuningaskunta"},fra:{official:"Royaume-Uni de Grande-Bretagne et d'Irlande du Nord",common:"Royaume-Uni"},hrv:{official:"Ujedinjeno Kraljevstvo Velike Britanije i Sjeverne Irske",common:"Ujedinjeno Kraljevstvo"},hun:{official:"Nagy-Britannia és Észak-Írország Egyesült Királysága",common:"Egyesült Királyság"},ita:{official:"Regno Unito di Gran Bretagna e Irlanda del Nord",common:"Regno Unito"},jpn:{official:"グレート·ブリテンおよび北アイルランド連合王国",common:"イギリス"},kor:{official:"그레이트브리튼 북아일랜드 연합 왕국",common:"영국"},nld:{official:"Verenigd Koninkrijk van Groot-Brittannië en Noord-Ierland",common:"Verenigd Koninkrijk"},per:{official:"پادشاهی متحد بریتانیای کبیر و ایرلند شمالی",common:"انگلیس"},pol:{official:"Zjednoczone Królestwo Wielkiej Brytanii i Irlandii Północnej",common:"Zjednoczone Królestwo"},por:{official:"Reino Unido da Grã-Bretanha e Irlanda do Norte",common:"Reino Unido"},rus:{official:"Соединенное Королевство Великобритании и Северной Ирландии",common:"Великобритания"},slk:{official:"Spojené kráľovstvo Veľkej Británie a SevernéhoÌrska",common:"Veľká Británia (Spojené kráľovstvo)"},spa:{official:"Reino Unido de Gran Bretaña e Irlanda del Norte",common:"Reino Unido"},srp:{official:"Уједињено Краљевство Велике Британије и Северне Ирске",common:"Уједињено Краљевство"},swe:{official:"Förenade konungariket Storbritannien och Nordirland",common:"Storbritannien"},tur:{official:"Büyük Britanya ve Kuzey İrlanda Birleşik Krallığı",common:"Birleşik Krallık"},urd:{official:"مملکتِ متحدہ برطانیہ عظمی و شمالی آئرلینڈ",common:"مملکتِ متحدہ"},zho:{official:"大不列颠及北爱尔兰联合王国",common:"英国"}},latlng:[54,-2],landlocked:!1,borders:["IRL"],area:242900,demonyms:{eng:{f:"British",m:"British"},fra:{f:"Britannique",m:"Britannique"}},flag:"🇬🇧",maps:{googleMaps:"https://goo.gl/maps/FoDtc3UKMkFsXAjHA",openStreetMaps:"https://www.openstreetmap.org/relation/62149"},population:67215293,gini:{2017:35.1},car:{signs:["GB"],side:"left"},timezones:["UTC-08:00","UTC-05:00","UTC-04:00","UTC-03:00","UTC-02:00","UTC","UTC+01:00","UTC+02:00","UTC+06:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/gb.png",svg:"https://flagcdn.com/gb.svg",alt:"The flag of the United Kingdom — the Union Jack — has a blue field. It features the white-edged red cross of Saint George superimposed on the diagonal red cross of Saint Patrick which is superimposed on the diagonal white cross of Saint Andrew."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gb.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gb.svg"},startOfWeek:"monday",capitalInfo:{latlng:[51.5,-.08]},postalCode:{format:"@# #@@|@## #@@|@@# #@@|@@## #@@|@#@ #@@|@@#@ #@@|GIR0AA",regex:"^(([A-Z]\\d{2}[A-Z]{2})|([A-Z]\\d{3}[A-Z]{2})|([A-Z]{2}\\d{2}[A-Z]{2})|([A-Z]{2}\\d{3}[A-Z]{2})|([A-Z]\\d[A-Z]\\d[A-Z]{2})|([A-Z]{2}\\d[A-Z]\\d[A-Z]{2})|(GIR0AA))$"}},{name:{common:"Libya",official:"State of Libya",nativeName:{ara:{official:"الدولة ليبيا",common:"‏ليبيا"}}},tld:[".ly"],cca2:"LY",ccn3:"434",cca3:"LBY",cioc:"LBA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{LYD:{name:"Libyan dinar",symbol:"ل.د"}},idd:{root:"+2",suffixes:["18"]},capital:["Tripoli"],altSpellings:["LY","State of Libya","Dawlat Libya"],region:"Africa",subregion:"Northern Africa",languages:{ara:"Arabic"},translations:{ara:{official:"دولة ليبيا",common:"‏ليبيا"},bre:{official:"Stad Libia",common:"Libia"},ces:{official:"Stát Libye",common:"Libye"},cym:{official:"State of Libya",common:"Libya"},deu:{official:"Staat Libyen",common:"Libyen"},est:{official:"Liibüa",common:"Liibüa"},fin:{official:"Libyan valtio",common:"Libya"},fra:{official:"Grande République arabe libyenne populaire et socialiste",common:"Libye"},hrv:{official:"Država Libiji",common:"Libija"},hun:{official:"Líbia Állam",common:"Líbia"},ita:{official:"Stato della Libia",common:"Libia"},jpn:{official:"リビアの国家",common:"リビア"},kor:{official:"리비아",common:"리비아"},nld:{official:"Staat van Libië",common:"Libië"},per:{official:"دولت لیبی",common:"لیبی"},pol:{official:"Państwo Libia",common:"Libia"},por:{official:"Estado da Líbia",common:"Líbia"},rus:{official:"Государство Ливии",common:"Ливия"},slk:{official:"Líbya",common:"Líbya"},spa:{official:"Estado de Libia",common:"Libia"},srp:{official:"Држава Либија",common:"Либија"},swe:{official:"Staten Libyen",common:"Libyen"},tur:{official:"Libya Devleti",common:"Libya"},urd:{official:"ریاستِ لیبیا",common:"لیبیا"},zho:{official:"利比亚国",common:"利比亚"}},latlng:[25,17],landlocked:!1,borders:["DZA","TCD","EGY","NER","SDN","TUN"],area:1759540,demonyms:{eng:{f:"Libyan",m:"Libyan"},fra:{f:"Libyenne",m:"Libyen"}},flag:"🇱🇾",maps:{googleMaps:"https://goo.gl/maps/eLgGnaQWcJEdYRMy5",openStreetMaps:"openstreetmap.org/relation/192758"},population:6871287,fifa:"LBY",car:{signs:["LAR"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ly.png",svg:"https://flagcdn.com/ly.svg",alt:"The flag of Libya is composed of three horizontal bands of red, black and green, with the black band twice the height of the other two bands. At the center of the black band is a fly-side facing white crescent and a five-pointed white star placed just outside the crescent opening."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ly.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ly.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[32.88,13.17]}},{name:{common:"Anguilla",official:"Anguilla",nativeName:{eng:{official:"Anguilla",common:"Anguilla"}}},tld:[".ai"],cca2:"AI",ccn3:"660",cca3:"AIA",independent:!1,status:"officially-assigned",unMember:!1,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["264"]},capital:["The Valley"],altSpellings:["AI"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"أنغويلا",common:"أنغويلا"},bre:{official:"Anguilla",common:"Anguilla"},ces:{official:"Anguilla",common:"Anguilla"},cym:{official:"Anguilla",common:"Anguilla"},deu:{official:"Anguilla",common:"Anguilla"},est:{official:"Anguilla",common:"Anguilla"},fin:{official:"Anguilla",common:"Anguilla"},fra:{official:"Anguilla",common:"Anguilla"},hrv:{official:"Anguilla",common:"Angvila"},hun:{official:"Anguilla",common:"Anguilla"},ita:{official:"Anguilla",common:"Anguilla"},jpn:{official:"アングィラ",common:"アンギラ"},kor:{official:"앵귈라",common:"앵귈라"},nld:{official:"Anguilla",common:"Anguilla"},per:{official:"آنگویلا",common:"آنگویلا"},pol:{official:"Anguilla",common:"Anguilla"},por:{official:"Anguilla",common:"Anguilla"},rus:{official:"Ангилья",common:"Ангилья"},slk:{official:"Anguilla",common:"Anguilla"},spa:{official:"Anguila",common:"Anguilla"},srp:{official:"Ангвила",common:"Ангвила"},swe:{official:"Anguilla",common:"Anguilla"},tur:{official:"Anguilla",common:"Anguilla"},urd:{official:"اینگویلا",common:"اینگویلا"},zho:{official:"安圭拉",common:"安圭拉"}},latlng:[18.25,-63.16666666],landlocked:!1,area:91,demonyms:{eng:{f:"Anguillian",m:"Anguillian"},fra:{f:"Anguillane",m:"Anguillan"}},flag:"🇦🇮",maps:{googleMaps:"https://goo.gl/maps/3KgLnEyN7amdno2p9",openStreetMaps:"https://www.openstreetmap.org/relation/2177161"},population:13452,fifa:"AIA",car:{signs:["GB"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/ai.png",svg:"https://flagcdn.com/ai.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ai.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ai.svg"},startOfWeek:"monday",capitalInfo:{latlng:[18.22,-63.05]}},{name:{common:"Iraq",official:"Republic of Iraq",nativeName:{ara:{official:"جمهورية العراق",common:"العراق"},arc:{official:"ܩܘܼܛܢܵܐ ܐܝܼܪܲܩ",common:"ܩܘܼܛܢܵܐ"},ckb:{official:"کۆماری عێراق",common:"کۆماری"}}},tld:[".iq"],cca2:"IQ",ccn3:"368",cca3:"IRQ",cioc:"IRQ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{IQD:{name:"Iraqi dinar",symbol:"ع.د"}},idd:{root:"+9",suffixes:["64"]},capital:["Baghdad"],altSpellings:["IQ","Republic of Iraq","Jumhūriyyat al-‘Irāq"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic",arc:"Aramaic",ckb:"Sorani"},translations:{ara:{official:"جمهورية العراق",common:"العراق"},bre:{official:"Republik Irak",common:"Irak"},ces:{official:"Irácká republika",common:"Irák"},cym:{official:"Republic of Iraq",common:"Iraq"},deu:{official:"Republik Irak",common:"Irak"},est:{official:"Iraagi Vabariik",common:"Iraak"},fin:{official:"Irakin tasavalta",common:"Irak"},fra:{official:"République d'Irak",common:"Irak"},hrv:{official:"Republika Irak",common:"Irak"},hun:{official:"Iraki Köztársaság",common:"Irak"},ita:{official:"Repubblica dell'Iraq",common:"Iraq"},jpn:{official:"イラク共和国",common:"イラク"},kor:{official:"이라크 공화국",common:"이라크"},nld:{official:"Republiek Irak",common:"Irak"},per:{official:"جمهوری عراق",common:"عراق"},pol:{official:"Republika Iraku",common:"Irak"},por:{official:"República do Iraque",common:"Iraque"},rus:{official:"Республика Ирак",common:"Ирак"},slk:{official:"Iracká republika",common:"Irak"},spa:{official:"República de Irak",common:"Irak"},srp:{official:"Република Ирак",common:"Ирак"},swe:{official:"Republiken Irak",common:"Irak"},tur:{official:"Irak Cumhuriyeti",common:"Irak"},urd:{official:"جمہوریہ عراق",common:"عراق"},zho:{official:"伊拉克共和国",common:"伊拉克"}},latlng:[33,44],landlocked:!1,borders:["IRN","JOR","KWT","SAU","SYR","TUR"],area:438317,demonyms:{eng:{f:"Iraqi",m:"Iraqi"},fra:{f:"Irakienne",m:"Irakien"}},flag:"🇮🇶",maps:{googleMaps:"https://goo.gl/maps/iL8Bmy1sUCW9fUk18",openStreetMaps:"https://www.openstreetmap.org/relation/304934"},population:40222503,gini:{2012:29.5},fifa:"IRQ",car:{signs:["IRQ"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/iq.png",svg:"https://flagcdn.com/iq.svg",alt:"The flag of Iraq is composed of three equal horizontal bands of red, white and black. In the central white band are Arabic inscriptions in green."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/iq.png",svg:"https://mainfacts.com/media/images/coats_of_arms/iq.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[33.33,44.4]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Isle of Man",official:"Isle of Man",nativeName:{eng:{official:"Isle of Man",common:"Isle of Man"},glv:{official:"Ellan Vannin or Mannin",common:"Mannin"}}},tld:[".im"],cca2:"IM",ccn3:"833",cca3:"IMN",independent:!1,status:"officially-assigned",unMember:!1,currencies:{GBP:{name:"British pound",symbol:"£"},IMP:{name:"Manx pound",symbol:"£"}},idd:{root:"+4",suffixes:["4"]},capital:["Douglas"],altSpellings:["IM","Ellan Vannin","Mann","Mannin"],region:"Europe",subregion:"Northern Europe",languages:{eng:"English",glv:"Manx"},translations:{ara:{official:"جزيرة مان",common:"جزيرة مان"},bre:{official:"Enez Vanav",common:"Enez Vanav"},ces:{official:"Ostrov Man",common:"Ostrov Man"},cym:{official:"Isle of Man",common:"Isle of Man"},deu:{official:"Isle of Man",common:"Insel Man"},est:{official:"Mani saar",common:"Mani saar"},fin:{official:"Mansaari",common:"Mansaari"},fra:{official:"Isle of Man",common:"Île de Man"},hrv:{official:"Mana ostrvo",common:"Otok Man"},hun:{official:"Man",common:"Man"},ita:{official:"Isola di Man",common:"Isola di Man"},jpn:{official:"マン島",common:"マン島"},kor:{official:"맨섬",common:"맨섬"},nld:{official:"Isle of Man",common:"Isle of Man"},per:{official:"جزیرهٔ مَن",common:"جزیرهٔ مَن"},pol:{official:"Wyspa Man",common:"Wyspa Man"},por:{official:"Isle of Man",common:"Ilha de Man"},rus:{official:"Остров Мэн",common:"Остров Мэн"},slk:{official:"Ostrov Man",common:"Man"},spa:{official:"Isla de Man",common:"Isla de Man"},srp:{official:"Острво Мен",common:"Острво Мен"},swe:{official:"Isle of Man",common:"Isle of Man"},tur:{official:"Man Adası",common:"Man Adası"},urd:{official:"آئل آف مین",common:"آئل آف مین"},zho:{official:"马恩岛",common:"马恩岛"}},latlng:[54.25,-4.5],landlocked:!1,area:572,demonyms:{eng:{f:"Manx",m:"Manx"}},flag:"🇮🇲",maps:{googleMaps:"https://goo.gl/maps/4DqVHDgVaFgnh8ZV8",openStreetMaps:"https://www.openstreetmap.org/relation/62269"},population:85032,car:{signs:["GBM"],side:"left"},timezones:["UTC+00:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/im.png",svg:"https://flagcdn.com/im.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/im.png",svg:"https://mainfacts.com/media/images/coats_of_arms/im.svg"},startOfWeek:"monday",capitalInfo:{latlng:[54.15,-4.48]},postalCode:{format:"@# #@@|@## #@@|@@# #@@|@@## #@@|@#@ #@@|@@#@ #@@|GIR0AA",regex:"^(([A-Z]\\d{2}[A-Z]{2})|([A-Z]\\d{3}[A-Z]{2})|([A-Z]{2}\\d{2}[A-Z]{2})|([A-Z]{2}\\d{3}[A-Z]{2})|([A-Z]\\d[A-Z]\\d[A-Z]{2})|([A-Z]{2}\\d[A-Z]\\d[A-Z]{2})|(GIR0AA))$"}},{name:{common:"Réunion",official:"Réunion Island",nativeName:{fra:{official:"Ile de la Réunion",common:"La Réunion"}}},tld:[".re"],cca2:"RE",ccn3:"638",cca3:"REU",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+2",suffixes:["62"]},capital:["Saint-Denis"],altSpellings:["RE","Reunion"],region:"Africa",subregion:"Eastern Africa",languages:{fra:"French"},translations:{ara:{official:"جزيرة لا ريونيون",common:"لا ريونيون"},bre:{official:"Enez ar Reünion",common:"Reünion"},ces:{official:"Réunion",common:"Réunion"},cym:{official:"Réunion Island",common:"Réunion"},deu:{official:"Réunion",common:"Réunion"},est:{official:"Réunioni departemang",common:"Réunion"},fin:{official:"Réunion",common:"Réunion"},fra:{official:"Ile de la Réunion",common:"Réunion"},hrv:{official:"Réunion Island",common:"Réunion"},hun:{official:"Réunion",common:"Réunion"},ita:{official:"Réunion",common:"Riunione"},jpn:{official:"レユニオン島",common:"レユニオン"},kor:{official:"레위니옹",common:"레위니옹"},nld:{official:"Réunion",common:"Réunion"},per:{official:"رئونیون",common:"رئونیون"},pol:{official:"Reunion",common:"Reunion"},por:{official:"Ilha da Reunião",common:"Reunião"},rus:{official:"Реюньон",common:"Реюньон"},slk:{official:"Réunionský zámorský departmán",common:"Réunion"},spa:{official:"Isla de la Reunión",common:"Reunión"},srp:{official:"Реинион",common:"Реинион"},swe:{official:"Réunion",common:"Réunion"},tur:{official:"Réunion",common:"Réunion"},urd:{official:"رے یونیوں جزیرہ",common:"رے یونیوں"},zho:{official:"留尼旺岛",common:"留尼旺岛"}},latlng:[-21.15,55.5],landlocked:!1,area:2511,demonyms:{eng:{f:"Réunionese",m:"Réunionese"},fra:{f:"Réunionnaise",m:"Réunionnais"}},flag:"🇷🇪",maps:{googleMaps:"https://goo.gl/maps/wWpBrXsp8UHVbah29",openStreetMaps:"https://www.openstreetmap.org/relation/1785276"},population:840974,car:{signs:["F"],side:"right"},timezones:["UTC+04:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/re.png",svg:"https://flagcdn.com/re.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-20.88,55.45]},postalCode:{format:"#####",regex:"^((97|98)(4|7|8)\\d{2})$"}},{name:{common:"Ukraine",official:"Ukraine",nativeName:{ukr:{official:"Україна",common:"Україна"}}},tld:[".ua",".укр"],cca2:"UA",ccn3:"804",cca3:"UKR",cioc:"UKR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{UAH:{name:"Ukrainian hryvnia",symbol:"₴"}},idd:{root:"+3",suffixes:["80"]},capital:["Kyiv"],altSpellings:["UA","Ukrayina"],region:"Europe",subregion:"Eastern Europe",languages:{ukr:"Ukrainian"},translations:{ara:{official:"أوكرانيا",common:"أوكرانيا"},bre:{official:"Ukraina",common:"Ukraina"},ces:{official:"Ukrajina",common:"Ukrajina"},cym:{official:"Ukraine",common:"Ukraine"},deu:{official:"Ukraine",common:"Ukraine"},est:{official:"Ukraina",common:"Ukraina"},fin:{official:"Ukraina",common:"Ukraina"},fra:{official:"Ukraine",common:"Ukraine"},hrv:{official:"Ukrajina",common:"Ukrajina"},hun:{official:"Ukrajna",common:"Ukrajna"},ita:{official:"Ucraina",common:"Ucraina"},jpn:{official:"ウクライナ",common:"ウクライナ"},kor:{official:"우크라이나",common:"우크라이나"},nld:{official:"Oekraïne",common:"Oekraïne"},per:{official:"اوکراین",common:"اوکراین"},pol:{official:"Ukraina",common:"Ukraina"},por:{official:"Ucrânia",common:"Ucrânia"},rus:{official:"Украина",common:"Украина"},slk:{official:"Ukrajina",common:"Ukrajina"},spa:{official:"Ucrania",common:"Ucrania"},srp:{official:"Украјина",common:"Украјина"},swe:{official:"Ukraina",common:"Ukraina"},tur:{official:"Ukrayna",common:"Ukrayna"},urd:{official:"یوکرین",common:"یوکرین"},zho:{official:"乌克兰",common:"乌克兰"}},latlng:[49,32],landlocked:!1,borders:["BLR","HUN","MDA","POL","ROU","RUS","SVK"],area:603500,demonyms:{eng:{f:"Ukrainian",m:"Ukrainian"},fra:{f:"Ukrainienne",m:"Ukrainien"}},flag:"🇺🇦",maps:{googleMaps:"https://goo.gl/maps/DvgJMiPJ7aozKFZv7",openStreetMaps:"https://www.openstreetmap.org/relation/60199"},population:44134693,gini:{2019:26.6},fifa:"UKR",car:{signs:["UA"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ua.png",svg:"https://flagcdn.com/ua.svg",alt:"The flag of Ukraine is composed of two equal horizontal bands of blue and yellow."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ua.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ua.svg"},startOfWeek:"monday",capitalInfo:{latlng:[50.43,30.52]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Austria",official:"Republic of Austria",nativeName:{bar:{official:"Republik Österreich",common:"Österreich"}}},tld:[".at"],cca2:"AT",ccn3:"040",cca3:"AUT",cioc:"AUT",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+4",suffixes:["3"]},capital:["Vienna"],altSpellings:["AT","Osterreich","Oesterreich"],region:"Europe",subregion:"Central Europe",languages:{bar:"Austro-Bavarian German"},translations:{ara:{official:"جمهورية النمسا",common:"النمسا"},bre:{official:"Republik Aostria",common:"Aostria"},ces:{official:"Rakouská republika",common:"Rakousko"},cym:{official:"Gweriniaeth Awstria",common:"Awstria"},deu:{official:"Republik Österreich",common:"Österreich"},est:{official:"Austria Vabariik",common:"Austria"},fin:{official:"Itävallan tasavalta",common:"Itävalta"},fra:{official:"République d'Autriche",common:"Autriche"},hrv:{official:"Republika Austrija",common:"Austrija"},hun:{official:"Ausztria",common:"Ausztria"},ita:{official:"Repubblica d'Austria",common:"Austria"},jpn:{official:"オーストリア共和国",common:"オーストリア"},kor:{official:"오스트리아 공화국",common:"오스트리아"},nld:{official:"Republiek Oostenrijk",common:"Oostenrijk"},per:{official:"جمهوری اتریش",common:"اتریش"},pol:{official:"Republika Austrii",common:"Austria"},por:{official:"República da Áustria",common:"Áustria"},rus:{official:"Австрийская Республика",common:"Австрия"},slk:{official:"Rakúska republika",common:"Rakúsko"},spa:{official:"República de Austria",common:"Austria"},srp:{official:"Република Аустрија",common:"Аустрија"},swe:{official:"Republiken Österrike",common:"Österrike"},tur:{official:"Avusturya Cumhuriyeti",common:"Avusturya"},urd:{official:"جمہوریہ آسٹریا",common:"آسٹریا"},zho:{official:"奥地利共和国",common:"奥地利"}},latlng:[47.33333333,13.33333333],landlocked:!0,borders:["CZE","DEU","HUN","ITA","LIE","SVK","SVN","CHE"],area:83871,demonyms:{eng:{f:"Austrian",m:"Austrian"},fra:{f:"Autrichienne",m:"Autrichien"}},flag:"🇦🇹",maps:{googleMaps:"https://goo.gl/maps/pCWpWQhznHyRzQcu9",openStreetMaps:"https://www.openstreetmap.org/relation/16239"},population:8917205,gini:{2018:30.8},fifa:"AUT",car:{signs:["A"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/at.png",svg:"https://flagcdn.com/at.svg",alt:"The flag of Austria is composed of three equal horizontal bands of red, white and red."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/at.png",svg:"https://mainfacts.com/media/images/coats_of_arms/at.svg"},startOfWeek:"monday",capitalInfo:{latlng:[48.2,16.37]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Kazakhstan",official:"Republic of Kazakhstan",nativeName:{kaz:{official:"Қазақстан Республикасы",common:"Қазақстан"},rus:{official:"Республика Казахстан",common:"Казахстан"}}},tld:[".kz",".қаз"],cca2:"KZ",ccn3:"398",cca3:"KAZ",cioc:"KAZ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KZT:{name:"Kazakhstani tenge",symbol:"₸"}},idd:{root:"+7",suffixes:["6","7"]},capital:["Nur-Sultan"],altSpellings:["KZ","Qazaqstan","Казахстан","Republic of Kazakhstan","Қазақстан Республикасы","Qazaqstan Respublïkası","Республика Казахстан","Respublika Kazakhstan"],region:"Asia",subregion:"Central Asia",languages:{kaz:"Kazakh",rus:"Russian"},translations:{ara:{official:"جمهورية كازاخستان",common:"كازاخستان"},bre:{official:"Republik Kazakstan",common:"Kazakstan"},ces:{official:"Republika Kazachstán",common:"Kazachstán"},cym:{official:"Republic of Kazakhstan",common:"Kazakhstan"},deu:{official:"Republik Kasachstan",common:"Kasachstan"},est:{official:"Kasahstani Vabariik",common:"Kasahstan"},fin:{official:"Kazakstanin tasavalta",common:"Kazakstan"},fra:{official:"République du Kazakhstan",common:"Kazakhstan"},hrv:{official:"Republika Kazahstan",common:"Kazahstan"},hun:{official:"Kazah Köztársaság",common:"Kazahsztán"},ita:{official:"Repubblica del Kazakhstan",common:"Kazakistan"},jpn:{official:"カザフスタン共和国",common:"カザフスタン"},kor:{official:"카자흐스탄 공화국",common:"카자흐스탄"},nld:{official:"Republiek Kazachstan",common:"Kazachstan"},per:{official:"جمهوری قزاقستان",common:"قزاقستان"},pol:{official:"Republika Kazachstanu",common:"Kazachstan"},por:{official:"República do Cazaquistão",common:"Cazaquistão"},rus:{official:"Республика Казахстан",common:"Казахстан"},slk:{official:"Kazašská republika",common:"Kazachstan"},spa:{official:"República de Kazajstán",common:"Kazajistán"},srp:{official:"Република Казахстан",common:"Казахстан"},swe:{official:"Republiken Kazakstan",common:"Kazakstan"},tur:{official:"Kazakistan Cumhuriyeti",common:"Kazakistan"},urd:{official:"جمہوریہ قازقستان",common:"قازقستان"},zho:{official:"哈萨克斯坦共和国",common:"哈萨克斯坦"}},latlng:[48.0196,66.9237],landlocked:!0,borders:["CHN","KGZ","RUS","TKM","UZB"],area:2724900,demonyms:{eng:{f:"Kazakhstani",m:"Kazakhstani"},fra:{f:"Kazakhstanaise",m:"Kazakhstanais"}},flag:"🇰🇿",maps:{googleMaps:"https://goo.gl/maps/8VohJGu7ShuzZYyeA",openStreetMaps:"https://www.openstreetmap.org/relation/214665"},population:18754440,gini:{2018:27.8},fifa:"KAZ",car:{signs:["KZ"],side:"right"},timezones:["UTC+05:00","UTC+06:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/kz.png",svg:"https://flagcdn.com/kz.svg",alt:"The flag of Kazakhstan has a turquoise field, at the center of which is a gold sun with thirty-two rays above a soaring golden steppe eagle. A thin vertical band displays a national ornamental pattern — koshkar-muiz — in gold near the hoist end."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/kz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/kz.svg"},startOfWeek:"monday",capitalInfo:{latlng:[51.16,71.45]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Christmas Island",official:"Territory of Christmas Island",nativeName:{eng:{official:"Territory of Christmas Island",common:"Christmas Island"}}},tld:[".cx"],cca2:"CX",ccn3:"162",cca3:"CXR",independent:!1,status:"officially-assigned",unMember:!1,currencies:{AUD:{name:"Australian dollar",symbol:"$"}},idd:{root:"+6",suffixes:["1"]},capital:["Flying Fish Cove"],altSpellings:["CX","Territory of Christmas Island"],region:"Oceania",subregion:"Australia and New Zealand",languages:{eng:"English"},translations:{ara:{official:"جزيرة كريسماس",common:"جزيرة كريسماس"},bre:{official:"Tiriad Enez Christmas",common:"Enez Christmas"},ces:{official:"Teritorium Vánočního ostrova",common:"Vánoční ostrov"},cym:{official:"Tiriogaeth yr Ynys y Nadolig",common:"Ynys y Nadolig"},deu:{official:"Gebiet der Weihnachtsinsel",common:"Weihnachtsinsel"},est:{official:"Jõulusaare ala",common:"Jõulusaar"},fin:{official:"Joulusaaren alue",common:"Joulusaari"},fra:{official:"Territoire de l'île Christmas",common:"Île Christmas"},hrv:{official:"Teritorij Božićni otok",common:"Božićni otok"},hun:{official:"Karácsony-sziget",common:"Karácsony-sziget"},ita:{official:"Territorio di Christmas Island",common:"Isola di Natale"},jpn:{official:"クリスマス島の領土",common:"クリスマス島"},kor:{official:"크리스마스 섬",common:"크리스마스 섬"},nld:{official:"Grondgebied van Christmas Island",common:"Christmaseiland"},per:{official:"جزیرهٔ کریسمس",common:"جزیرهٔ کریسمس"},pol:{official:"Wyspa Bożego Narodzenia",common:"Wyspa Bożego Narodzenia"},por:{official:"Território da Ilha Christmas",common:"Ilha do Natal"},rus:{official:"Территория острова Рождества",common:"Остров Рождества"},slk:{official:"Teritórium Vianočného ostrova",common:"Vianočnú ostrov"},spa:{official:"Territorio de la Isla de Navidad",common:"Isla de Navidad"},srp:{official:"Божићно Острво",common:"Божићно Острво"},swe:{official:"Julön",common:"Julön"},tur:{official:"Christmas Adası",common:"Christmas Adası"},urd:{official:"ریاستِ جزیرہ کرسمس",common:"جزیرہ کرسمس"},zho:{official:"圣诞岛",common:"圣诞岛"}},latlng:[-10.5,105.66666666],landlocked:!1,area:135,demonyms:{eng:{f:"Christmas Islander",m:"Christmas Islander"}},flag:"🇨🇽",maps:{googleMaps:"https://goo.gl/maps/ZC17hHsQZpShN5wk9",openStreetMaps:"https://www.openstreetmap.org/relation/6365444"},population:2072,car:{signs:["AUS"],side:"left"},timezones:["UTC+07:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/cx.png",svg:"https://flagcdn.com/cx.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cx.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cx.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-10.42,105.68]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Syria",official:"Syrian Arab Republic",nativeName:{ara:{official:"الجمهورية العربية السورية",common:"سوريا"}}},tld:[".sy","سوريا."],cca2:"SY",ccn3:"760",cca3:"SYR",cioc:"SYR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SYP:{name:"Syrian pound",symbol:"£"}},idd:{root:"+9",suffixes:["63"]},capital:["Damascus"],altSpellings:["SY","Syrian Arab Republic","Al-Jumhūrīyah Al-ʻArabīyah As-Sūrīyah"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"الجمهورية العربية السورية",common:"سوريا"},bre:{official:"Republik Arab Siriat",common:"Siria"},ces:{official:"Syrská arabská republika",common:"Sýrie"},cym:{official:"Syrian Arab Republic",common:"Syria"},deu:{official:"Arabische Republik Syrien",common:"Syrien"},est:{official:"Süüria Araabia Vabariik",common:"Süüria"},fin:{official:"Syyrian arabitasavalta",common:"Syyria"},fra:{official:"République arabe syrienne",common:"Syrie"},hrv:{official:"Sirijska Arapska Republika",common:"Sirija"},hun:{official:"Szíriai Arab Köztársaság",common:"Szíria"},ita:{official:"Repubblica araba siriana",common:"Siria"},jpn:{official:"シリアアラブ共和国",common:"シリア・アラブ共和国"},kor:{official:"시리아 아랍 공화국",common:"시리아"},nld:{official:"Syrische Arabische Republiek",common:"Syrië"},per:{official:"جمهوری عربی سوریه",common:"سوریه"},pol:{official:"Syryjska Republika Arabska",common:"Syria"},por:{official:"República Árabe Síria",common:"Síria"},rus:{official:"Сирийская Арабская Республика",common:"Сирия"},slk:{official:"Sýrska arabská republika",common:"Sýria"},spa:{official:"República Árabe Siria",common:"Siria"},srp:{official:"Сиријска Арапска Република",common:"Сирија"},swe:{official:"Syriska arabiska republiken",common:"Syrien"},tur:{official:"Suriye Arap Cumhuriyeti",common:"Suriye"},urd:{official:"عرب جمہوریہ سوریہ",common:"سوریہ"},zho:{official:"叙利亚阿拉伯共和国",common:"叙利亚"}},latlng:[35,38],landlocked:!1,borders:["IRQ","ISR","JOR","LBN","TUR"],area:185180,demonyms:{eng:{f:"Syrian",m:"Syrian"},fra:{f:"Syrienne",m:"Syrien"}},flag:"🇸🇾",maps:{googleMaps:"https://goo.gl/maps/Xe3VnFbwdb4nv2SM9",openStreetMaps:"https://www.openstreetmap.org/relation/184840"},population:17500657,gini:{2003:37.5},fifa:"SYR",car:{signs:["SYR"],side:"right"},timezones:["UTC+02:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/sy.png",svg:"https://flagcdn.com/sy.svg",alt:"The flag of Syria is composed of three equal horizontal bands of red, white and black. At the center of the white band are two small five-pointed green stars arranged in a horizontal line."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sy.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sy.svg"},startOfWeek:"monday",capitalInfo:{latlng:[33.5,36.3]}},{name:{common:"Barbados",official:"Barbados",nativeName:{eng:{official:"Barbados",common:"Barbados"}}},tld:[".bb"],cca2:"BB",ccn3:"052",cca3:"BRB",cioc:"BAR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BBD:{name:"Barbadian dollar",symbol:"$"}},idd:{root:"+1",suffixes:["246"]},capital:["Bridgetown"],altSpellings:["BB"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"باربادوس",common:"باربادوس"},bre:{official:"Barbados",common:"Barbados"},ces:{official:"Barbados",common:"Barbados"},cym:{official:"Barbados",common:"Barbados"},deu:{official:"Barbados",common:"Barbados"},est:{official:"Barbados",common:"Barbados"},fin:{official:"Barbados",common:"Barbados"},fra:{official:"Barbade",common:"Barbade"},hrv:{official:"Barbados",common:"Barbados"},hun:{official:"Barbados",common:"Barbados"},ita:{official:"Barbados",common:"Barbados"},jpn:{official:"バルバドス",common:"バルバドス"},kor:{official:"바베이도스",common:"바베이도스"},nld:{official:"Barbados",common:"Barbados"},per:{official:"باربادوس",common:"باربادوس"},pol:{official:"Barbados",common:"Barbados"},por:{official:"Barbados",common:"Barbados"},rus:{official:"Барбадос",common:"Барбадос"},slk:{official:"Barbados",common:"Barbados"},spa:{official:"Barbados",common:"Barbados"},srp:{official:"Барбадос",common:"Барбадос"},swe:{official:"Barbados",common:"Barbados"},tur:{official:"Barbados",common:"Barbados"},urd:{official:"بارباڈوس",common:"بارباڈوس"},zho:{official:"巴巴多斯",common:"巴巴多斯"}},latlng:[13.16666666,-59.53333333],landlocked:!1,area:430,demonyms:{eng:{f:"Barbadian",m:"Barbadian"},fra:{f:"Barbadienne",m:"Barbadien"}},flag:"🇧🇧",maps:{googleMaps:"https://goo.gl/maps/2m36v8STvbGAWd9c7",openStreetMaps:"https://www.openstreetmap.org/relation/547511"},population:287371,fifa:"BRB",car:{signs:["BDS"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/bb.png",svg:"https://flagcdn.com/bb.svg",alt:"The flag of Barbados is composed of three equal vertical bands of ultramarine, gold and ultramarine. The head of a black trident is centered in the gold band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bb.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bb.svg"},startOfWeek:"monday",capitalInfo:{latlng:[13.1,-59.62]},postalCode:{format:"BB#####",regex:"^(?:BB)*(\\d{5})$"}},{name:{common:"United States Minor Outlying Islands",official:"United States Minor Outlying Islands",nativeName:{eng:{official:"United States Minor Outlying Islands",common:"United States Minor Outlying Islands"}}},tld:[".us"],cca2:"UM",ccn3:"581",cca3:"UMI",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+2",suffixes:["68"]},capital:["Washington DC"],altSpellings:["UM"],region:"Americas",subregion:"North America",languages:{eng:"English"},translations:{ara:{official:"جزر الولايات المتحدة الصغيرة النائية",common:"جزر الولايات المتحدة الصغيرة النائية"},bre:{official:"Inizi Minor A-bell Stadoù-Unanet",common:"Inizi Minor A-bell Stadoù-Unanet"},ces:{official:"Menší odlehlé ostrovy Spojených států amerických",common:"Menší odlehlé ostrovy USA"},cym:{official:"United States Minor Outlying Islands",common:"United States Minor Outlying Islands"},deu:{official:"USA, kleinere ausgelagerte Inseln",common:"Kleinere Inselbesitzungen der Vereinigten Staaten"},est:{official:"Ühendriikide väikesed hajasaared",common:"Ühendriikide hajasaared"},fin:{official:"Yhdysvaltain asumattomat saaret",common:"Yhdysvaltain asumattomat saaret"},fra:{official:"Îles mineures éloignées des États-Unis",common:"Îles mineures éloignées des États-Unis"},hrv:{official:"Mali udaljeni otoci SAD-a",common:"Mali udaljeni otoci SAD-a"},hun:{official:"Az Amerikai Egyesült Államok lakatlan külbirtokai",common:"Az Amerikai Egyesült Államok lakatlan külbirtokai"},ita:{official:"Stati Uniti Isole Minori",common:"Isole minori esterne degli Stati Uniti d'America"},jpn:{official:"アメリカ合衆国外諸島",common:"合衆国領有小離島"},kor:{official:"미국령 군소 제도",common:"미국령 군소 제도"},nld:{official:"Kleine afgelegen eilanden van de Verenigde Staten",common:"Kleine afgelegen eilanden van de Verenigde Staten"},per:{official:"جزایر کوچک حاشیه‌ای ایالات متحده آمریکا",common:"جزایر کوچک حاشیه‌ای ایالات متحده آمریکا"},pol:{official:"Dalekie Wyspy Mniejsze Stanów Zjednoczonych",common:"Dalekie Wyspy Mniejsze Stanów Zjednoczonych"},por:{official:"Estados Unidos Ilhas Menores Distantes",common:"Ilhas Menores Distantes dos Estados Unidos"},rus:{official:"Внешние малые острова США",common:"Внешние малые острова США"},slk:{official:"Menšie odľahlé ostrovy Spjoených štátov",common:"Menšie odľahlé ostrovy USA"},spa:{official:"Estados Unidos Islas menores alejadas de",common:"Islas Ultramarinas Menores de Estados Unidos"},srp:{official:"Мала спољна острва Сједињених Америчких Држава",common:"Мала спољна острва Сједињених Америчких Држава"},swe:{official:"Förenta staternas mindre öar i Oceanien och Västindien",common:"Förenta staternas mindre öar i Oceanien och Västindien"},tur:{official:"Amerika Birleşik Devletleri Küçük Dış Adaları",common:"Amerika Birleşik Devletleri Küçük Dış Adaları"},urd:{official:"امریکی چھوٹے بیرونی جزائر",common:"امریکی چھوٹے بیرونی جزائر"},zho:{official:"美国本土外小岛屿",common:"美国本土外小岛屿"}},latlng:[19.3,166.633333],landlocked:!1,area:34.2,demonyms:{eng:{f:"American Islander",m:"American Islander"}},flag:"🇺🇲",maps:{googleMaps:"https://goo.gl/maps/hZKnrzgeK69dDyPF8",openStreetMaps:"https://www.openstreetmap.org/relation/6430384"},population:300,car:{signs:[""],side:"right"},timezones:["UTC-11:00","UTC-10:00","UTC+12:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/um.png",svg:"https://flagcdn.com/um.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{}},{name:{common:"São Tomé and Príncipe",official:"Democratic Republic of São Tomé and Príncipe",nativeName:{por:{official:"República Democrática do São Tomé e Príncipe",common:"São Tomé e Príncipe"}}},tld:[".st"],cca2:"ST",ccn3:"678",cca3:"STP",cioc:"STP",independent:!0,status:"officially-assigned",unMember:!0,currencies:{STN:{name:"São Tomé and Príncipe dobra",symbol:"Db"}},idd:{root:"+2",suffixes:["39"]},capital:["São Tomé"],altSpellings:["ST","Democratic Republic of São Tomé and Príncipe","Sao Tome and Principe","República Democrática de São Tomé e Príncipe"],region:"Africa",subregion:"Middle Africa",languages:{por:"Portuguese"},translations:{ara:{official:"جمهورية ساو تومي وبرينسيب الديمقراطية",common:"ساو تومي وبرينسيب"},bre:{official:"Republik Demokratel São Tomé ha Príncipe",common:"São Tomé ha Príncipe"},ces:{official:"Demokratická republika Svatý Tomáš a Princův ostrov",common:"Svatý Tomáš a Princův ostrov"},cym:{official:"Democratic Republic of São Tomé and Príncipe",common:"São Tomé and Príncipe"},deu:{official:"Demokratische Republik São Tomé und Príncipe",common:"São Tomé und Príncipe"},est:{official:"São Tomé ja Príncipe Demokraatlik Vabariik",common:"São Tomé ja Príncipe"},fin:{official:"São Tomé ja Príncipen demokraattinen tasavalta",common:"São Téme ja Príncipe"},fra:{official:"République démocratique de São Tomé et Príncipe",common:"São Tomé et Príncipe"},hrv:{official:"Demokratska Republika São Tome i Principe",common:"Sveti Toma i Princip"},hun:{official:"São Tomé és Príncipe Demokratikus Köztársaság",common:"São Tomé és Príncipe"},ita:{official:"Repubblica democratica di São Tomé e Príncipe",common:"São Tomé e Príncipe"},jpn:{official:"サントメ·プリンシペ民主共和国",common:"サントメ・プリンシペ"},kor:{official:"상투메 프린시페 민주 공화국",common:"상투메 프린시페"},nld:{official:"Democratische Republiek Sao Tomé en Principe",common:"Sao Tomé en Principe"},per:{official:"جمهوری دموکراتیک سائوتومه و پرنسیپ",common:"سائوتومه و پرنسیپ"},pol:{official:"Demokratyczna Republika Wysp Świętego Tomasza i Książęcej",common:"Wyspy Świętego Tomasza i Książęca"},por:{official:"República Democrática de São Tomé e Príncipe",common:"São Tomé e Príncipe"},rus:{official:"Демократическая Республика Сан-Томе и Принсипи",common:"Сан-Томе и Принсипи"},slk:{official:"Demokratická republika Svätého Tomáša A princovho ostrova",common:"Svätý Tomáš a Princov ostrov"},spa:{official:"República Democrática de Santo Tomé y Príncipe",common:"Santo Tomé y Príncipe"},srp:{official:"Демократска Република Сао Томе и Принсипе",common:"Сао Томе и Принсипе"},swe:{official:"Demokratiska republiken São Tomé och Príncipe",common:"São Tomé och Príncipe"},tur:{official:"São Tomé ve Príncipe Demokratik Cumhuriyeti",common:"São Tomé ve Príncipe"},urd:{official:"جمہوریہ ساؤ ٹومے و پرنسپے",common:"ساؤ ٹومے و پرنسپے"},zho:{official:"圣多美和普林西比民主共和国",common:"圣多美和普林西比"}},latlng:[1,7],landlocked:!1,area:964,demonyms:{eng:{f:"Sao Tomean",m:"Sao Tomean"},fra:{f:"Santoméenne",m:"Santoméen"}},flag:"🇸🇹",maps:{googleMaps:"https://goo.gl/maps/9EUppm13RtPX9oF46",openStreetMaps:"https://www.openstreetmap.org/relation/535880"},population:219161,gini:{2017:56.3},fifa:"STP",car:{signs:["STP"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/st.png",svg:"https://flagcdn.com/st.svg",alt:"The flag of South Sudan is composed of three equal horizontal bands of black, red with white top and bottom edges, and green. A blue equilateral triangle which spans about two-fifth the width of the field is superimposed on the hoist side with its base on the hoist end of the field. At the center of this triangle is a five-pointed yellow star."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/st.png",svg:"https://mainfacts.com/media/images/coats_of_arms/st.svg"},startOfWeek:"monday",capitalInfo:{latlng:[.34,6.73]}},{name:{common:"Tuvalu",official:"Tuvalu",nativeName:{eng:{official:"Tuvalu",common:"Tuvalu"},tvl:{official:"Tuvalu",common:"Tuvalu"}}},tld:[".tv"],cca2:"TV",ccn3:"798",cca3:"TUV",cioc:"TUV",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AUD:{name:"Australian dollar",symbol:"$"},TVD:{name:"Tuvaluan dollar",symbol:"$"}},idd:{root:"+6",suffixes:["88"]},capital:["Funafuti"],altSpellings:["TV"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English",tvl:"Tuvaluan"},translations:{ara:{official:"توفالو",common:"توفالو"},bre:{official:"Tuvalu",common:"Tuvalu"},ces:{official:"Tuvalu",common:"Tuvalu"},cym:{official:"Tuvalu",common:"Tuvalu"},deu:{official:"Tuvalu",common:"Tuvalu"},est:{official:"Tuvalu",common:"Tuvalu"},fin:{official:"Tuvalu",common:"Tuvalu"},fra:{official:"Tuvalu",common:"Tuvalu"},hrv:{official:"Tuvalu",common:"Tuvalu"},hun:{official:"Tuvalu",common:"Tuvalu"},ita:{official:"Tuvalu",common:"Tuvalu"},jpn:{official:"ツバル",common:"ツバル"},kor:{official:"투발루",common:"투발루"},nld:{official:"Tuvalu",common:"Tuvalu"},per:{official:"تووالو",common:"تووالو"},pol:{official:"Tuvalu",common:"Tuvalu"},por:{official:"Tuvalu",common:"Tuvalu"},rus:{official:"Тувалу",common:"Тувалу"},slk:{official:"Tuvalu",common:"Tuvalu"},spa:{official:"Tuvalu",common:"Tuvalu"},srp:{official:"Тувалу",common:"Тувалу"},swe:{official:"Tuvalu",common:"Tuvalu"},tur:{official:"Tuvalu",common:"Tuvalu"},urd:{official:"تووالو",common:"تووالو"},zho:{official:"图瓦卢",common:"图瓦卢"}},latlng:[-8,178],landlocked:!1,area:26,demonyms:{eng:{f:"Tuvaluan",m:"Tuvaluan"},fra:{f:"Tuvaluane",m:"Tuvaluan"}},flag:"🇹🇻",maps:{googleMaps:"https://goo.gl/maps/LbuUxtkgm1dfN1Pn6",openStreetMaps:"https://www.openstreetmap.org/relation/2177266"},population:11792,gini:{2010:39.1},car:{signs:["TUV"],side:"left"},timezones:["UTC+12:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/tv.png",svg:"https://flagcdn.com/tv.svg",alt:"The flag of Tuvalu has a light blue field with the flag of the United Kingdom — the Union Jack — in the canton. A representation of the country's nine Islands using nine five-pointed yellow stars is situated in the fly half of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tv.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tv.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-8.52,179.22]}},{name:{common:"Armenia",official:"Republic of Armenia",nativeName:{hye:{official:"Հայաստանի Հանրապետություն",common:"Հայաստան"}}},tld:[".am"],cca2:"AM",ccn3:"051",cca3:"ARM",cioc:"ARM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AMD:{name:"Armenian dram",symbol:"֏"}},idd:{root:"+3",suffixes:["74"]},capital:["Yerevan"],altSpellings:["AM","Hayastan","Republic of Armenia","Հայաստանի Հանրապետություն"],region:"Asia",subregion:"Western Asia",languages:{hye:"Armenian"},translations:{ara:{official:"جمهورية أرمينيا",common:"أرمينيا"},bre:{official:"Republik Armenia",common:"Armenia"},ces:{official:"Arménská republika",common:"Arménie"},cym:{official:"Gweriniaeth Armenia",common:"Armenia"},deu:{official:"Republik Armenien",common:"Armenien"},est:{official:"Armeenia Vabariik",common:"Armeenia"},fin:{official:"Armenian tasavalta",common:"Armenia"},fra:{official:"République d'Arménie",common:"Arménie"},hrv:{official:"Republika Armenija",common:"Armenija"},hun:{official:"Örményország",common:"Örményország"},ita:{official:"Repubblica di Armenia",common:"Armenia"},jpn:{official:"アルメニア共和国",common:"アルメニア"},kor:{official:"아르메니아 공화국",common:"아르메니아"},nld:{official:"Republiek Armenië",common:"Armenië"},per:{official:"جمهوری ارمنستان",common:"ارمنستان"},pol:{official:"Republika Armenii",common:"Armenia"},por:{official:"República da Arménia",common:"Arménia"},rus:{official:"Республика Армения",common:"Армения"},slk:{official:"Arménska republika",common:"Arménsko"},spa:{official:"República de Armenia",common:"Armenia"},srp:{official:"Република Јерменија",common:"Јерменија"},swe:{official:"Republiken Armenien",common:"Armenien"},tur:{official:"Ermenistan Cumhuriyeti",common:"Ermenistan"},urd:{official:"جمہوریہ آرمینیا",common:"آرمینیا"},zho:{official:"亚美尼亚共和国",common:"亚美尼亚"}},latlng:[40,45],landlocked:!0,borders:["AZE","GEO","IRN","TUR"],area:29743,demonyms:{eng:{f:"Armenian",m:"Armenian"},fra:{f:"Arménienne",m:"Arménien"}},flag:"🇦🇲",maps:{googleMaps:"https://goo.gl/maps/azWUtK9bUQYEyccbA",openStreetMaps:"https://www.openstreetmap.org/relation/364066"},population:2963234,gini:{2019:29.9},fifa:"ARM",car:{signs:["AM"],side:"right"},timezones:["UTC+04:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/am.png",svg:"https://flagcdn.com/am.svg",alt:"The flag of Armenia is composed of three equal horizontal bands of red, blue and orange."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/am.png",svg:"https://mainfacts.com/media/images/coats_of_arms/am.svg"},startOfWeek:"monday",capitalInfo:{latlng:[40.17,44.5]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Oman",official:"Sultanate of Oman",nativeName:{ara:{official:"سلطنة عمان",common:"عمان"}}},tld:[".om"],cca2:"OM",ccn3:"512",cca3:"OMN",cioc:"OMA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{OMR:{name:"Omani rial",symbol:"ر.ع."}},idd:{root:"+9",suffixes:["68"]},capital:["Muscat"],altSpellings:["OM","Sultanate of Oman","Salṭanat ʻUmān"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"سلطنة عمان",common:"عمان"},bre:{official:"Sultanelezh Oman",common:"Oman"},ces:{official:"Sultanát Omán",common:"Omán"},cym:{official:"Sultanate of Oman",common:"Oman"},deu:{official:"Sultanat Oman",common:"Oman"},est:{official:"Omaani Sultaniriik",common:"Omaan"},fin:{official:"Omanin sulttaanikunta",common:"Oman"},fra:{official:"Sultanat d'Oman",common:"Oman"},hrv:{official:"Sultanat Oman",common:"Oman"},hun:{official:"Ománi Szultanátus",common:"Omán"},ita:{official:"Sultanato dell'Oman",common:"oman"},jpn:{official:"オマーン·スルタン国",common:"オマーン"},kor:{official:"오만 술탄국",common:"오만"},nld:{official:"Sultanaat van Oman",common:"Oman"},per:{official:"سلطان‌نشین عُمان",common:"عمان"},pol:{official:"Sułtanat Omanu",common:"Oman"},por:{official:"Sultanato de Omã",common:"Omã"},rus:{official:"Султанат Оман",common:"Оман"},slk:{official:"Ománsky sultanát",common:"Omán"},spa:{official:"Sultanato de Omán",common:"Omán"},srp:{official:"Султанат Оман",common:"Оман"},swe:{official:"Sultanatet Oman",common:"Oman"},tur:{official:"Umman Sultanlığı",common:"Umman"},urd:{official:"سلطنت عمان",common:"عمان"},zho:{official:"阿曼苏丹国",common:"阿曼"}},latlng:[21,57],landlocked:!1,borders:["SAU","ARE","YEM"],area:309500,demonyms:{eng:{f:"Omani",m:"Omani"},fra:{f:"Omanaise",m:"Omanais"}},flag:"🇴🇲",maps:{googleMaps:"https://goo.gl/maps/L2BoXoAwDDwWecnw5",openStreetMaps:"https://www.openstreetmap.org/relation/305138"},population:5106622,fifa:"OMA",car:{signs:["OM"],side:"right"},timezones:["UTC+04:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/om.png",svg:"https://flagcdn.com/om.svg",alt:"The flag of Oman features a red vertical band on the hoist side that takes up about one-fourth the width of the field, and three equal horizontal bands of white, red and green adjoining the vertical band. At the top of the vertical band is the white emblem of Oman."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/om.png",svg:"https://mainfacts.com/media/images/coats_of_arms/om.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[23.62,58.58]},postalCode:{format:"###",regex:"^(\\d{3})$"}},{name:{common:"Bahamas",official:"Commonwealth of the Bahamas",nativeName:{eng:{official:"Commonwealth of the Bahamas",common:"Bahamas"}}},tld:[".bs"],cca2:"BS",ccn3:"044",cca3:"BHS",cioc:"BAH",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BSD:{name:"Bahamian dollar",symbol:"$"},USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["242"]},capital:["Nassau"],altSpellings:["BS","Commonwealth of the Bahamas"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"كومنولث جزر البهاما",common:"باهاماس"},bre:{official:"Kenglad ar Bahamas",common:"Bahamas"},ces:{official:"Bahamské společenství",common:"Bahamy"},cym:{official:"Cymanwlad y Bahamas",common:"Bahamas"},deu:{official:"Commonwealth der Bahamas",common:"Bahamas"},est:{official:"Bahama Ühendus",common:"Bahama"},fin:{official:"Bahaman liittovaltio",common:"Bahamasaaret"},fra:{official:"Commonwealth des Bahamas",common:"Bahamas"},hrv:{official:"Zajednica Bahama",common:"Bahami"},hun:{official:"Bahamai Közösség",common:"Bahama-szigetek"},ita:{official:"Commonwealth delle Bahamas",common:"Bahamas"},jpn:{official:"バハマ",common:"バハマ"},kor:{official:"바하마 연방",common:"바하마"},nld:{official:"Gemenebest van de Bahama's",common:"Bahama’s"},per:{official:"قلمرو همسود باهاما",common:"باهاما"},pol:{official:"Bahamy",common:"Bahamy"},por:{official:"Comunidade das Bahamas",common:"Bahamas"},rus:{official:"Содружество Багамских Островов",common:"Багамские Острова"},slk:{official:"Bahamské spoločenstvo",common:"Bahamy"},spa:{official:"Commonwealth de las Bahamas",common:"Bahamas"},srp:{official:"Комонвелт Бахама",common:"Бахами"},swe:{official:"Samväldet Bahamas",common:"Bahamas"},tur:{official:"Bahama Milletler Topluluğu",common:"Bahamalar"},urd:{official:"دولتِ مشترکہ بہاماس",common:"بہاماس"},zho:{official:"巴哈马联邦",common:"巴哈马"}},latlng:[25.0343,77.3963],landlocked:!1,area:13943,demonyms:{eng:{f:"Bahamian",m:"Bahamian"},fra:{f:"Bahamienne",m:"Bahamien"}},flag:"🇧🇸",maps:{googleMaps:"https://goo.gl/maps/1YzRs1BZrG8p8pmVA",openStreetMaps:"https://www.openstreetmap.org/relation/547469"},population:393248,fifa:"BAH",car:{signs:["BS"],side:"left"},timezones:["UTC-05:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/bs.png",svg:"https://flagcdn.com/bs.svg",alt:"The flag of the Bahamas is composed of three equal horizontal bands of aquamarine, yellow and aquamarine, with a black equilateral triangle superimposed on the hoist side of the field. This triangle has its base on the hoist end and spans about one-third the width of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bs.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bs.svg"},startOfWeek:"monday",capitalInfo:{latlng:[25.08,-77.35]}},{name:{common:"Morocco",official:"Kingdom of Morocco",nativeName:{ara:{official:"المملكة المغربية",common:"المغرب"},ber:{official:"ⵜⴰⴳⵍⴷⵉⵜ ⵏ ⵍⵎⵖⵔⵉⴱ",common:"ⵍⵎⴰⵖⵔⵉⴱ"}}},tld:[".ma","المغرب."],cca2:"MA",ccn3:"504",cca3:"MAR",cioc:"MAR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MAD:{name:"Moroccan dirham",symbol:"د.م."}},idd:{root:"+2",suffixes:["12"]},capital:["Rabat"],altSpellings:["MA","Kingdom of Morocco","Al-Mamlakah al-Maġribiyah"],region:"Africa",subregion:"Northern Africa",languages:{ara:"Arabic",ber:"Berber"},translations:{ara:{official:"المملكة المغربية",common:"المغرب"},bre:{official:"Rouantelezh Maroko",common:"Maroko"},ces:{official:"Marocké království",common:"Maroko"},cym:{official:"Kingdom of Morocco",common:"Morocco"},deu:{official:"Königreich Marokko",common:"Marokko"},est:{official:"Maroko Kuningriik",common:"Maroko"},fin:{official:"Marokon kuningaskunta",common:"Marokko"},fra:{official:"Royaume du Maroc",common:"Maroc"},hrv:{official:"Kraljevina Maroko",common:"Maroko"},hun:{official:"Marokkói Királyság",common:"Marokkó"},ita:{official:"Regno del Marocco",common:"Marocco"},jpn:{official:"モロッコ王国",common:"モロッコ"},kor:{official:"모로코 왕국",common:"모로코"},nld:{official:"Koninkrijk Marokko",common:"Marokko"},per:{official:"پادشاهی مراکش",common:"مراکش"},pol:{official:"Królestwo Marokańskie",common:"Maroko"},por:{official:"Reino de Marrocos",common:"Marrocos"},rus:{official:"Королевство Марокко",common:"Марокко"},slk:{official:"Marocké kniežatstvo",common:"Maroko"},spa:{official:"Reino de Marruecos",common:"Marruecos"},srp:{official:"Краљевина Мароко",common:"Мароко"},swe:{official:"Konungariket Marocko",common:"Marocko"},tur:{official:"Fas Krallığı",common:"Fas"},urd:{official:"مملکتِ مراکش",common:"مراکش"},zho:{official:"摩洛哥王国",common:"摩洛哥"}},latlng:[32,-5],landlocked:!1,borders:["DZA","ESH","ESP"],area:446550,demonyms:{eng:{f:"Moroccan",m:"Moroccan"},fra:{f:"Marocaine",m:"Marocain"}},flag:"🇲🇦",maps:{googleMaps:"https://goo.gl/maps/6oMv3dyBZg3iaXQ5A",openStreetMaps:"https://www.openstreetmap.org/relation/3630439"},population:36910558,gini:{2013:39.5},fifa:"MAR",car:{signs:["MA"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ma.png",svg:"https://flagcdn.com/ma.svg",alt:"The flag of Morocco features a green pentagram — a five-pointed linear star — centered on a red field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ma.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ma.svg"},startOfWeek:"monday",capitalInfo:{latlng:[34.02,-6.82]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"El Salvador",official:"Republic of El Salvador",nativeName:{spa:{official:"República de El Salvador",common:"El Salvador"}}},tld:[".sv"],cca2:"SV",ccn3:"222",cca3:"SLV",cioc:"ESA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+5",suffixes:["03"]},capital:["San Salvador"],altSpellings:["SV","Republic of El Salvador","República de El Salvador"],region:"Americas",subregion:"Central America",languages:{spa:"Spanish"},translations:{ara:{official:"جمهورية السلفادور",common:"السلفادور"},bre:{official:"Republik El Salvador",common:"El Salvador"},ces:{official:"Salvadorská republika",common:"Salvador"},cym:{official:"Gweriniaeth El Salfador",common:"El Salfador"},deu:{official:"Republik El Salvador",common:"El Salvador"},est:{official:"El Salvadori Vabariik",common:"El Salvador"},fin:{official:"El Salvadorin tasavalta",common:"El Salvador"},fra:{official:"République du Salvador",common:"Salvador"},hrv:{official:"Republika El Salvador",common:"Salvador"},hun:{official:"Salvadori Köztársaság",common:"Salvador"},ita:{official:"Repubblica di El Salvador",common:"El Salvador"},jpn:{official:"エルサルバドル共和国",common:"エルサルバドル"},kor:{official:"엘살바도르 공화국",common:"엘살바도르"},nld:{official:"Republiek El Salvador",common:"El Salvador"},per:{official:"جمهوری السالوادور",common:"السالوادور"},pol:{official:"Republika Salwadoru",common:"Salwador"},por:{official:"República de El Salvador",common:"El Salvador"},rus:{official:"Республика Эль-Сальвадор",common:"Сальвадор"},slk:{official:"Salvádorská republika",common:"Salvádor"},spa:{official:"República de El Salvador",common:"El Salvador"},srp:{official:"Република Ел Салвадор",common:"Салвадор"},swe:{official:"Republiken El Salvador",common:"El Salvador"},tur:{official:"El Salvador Cumhuriyeti",common:"El Salvador"},urd:{official:"جمہوریہ ایل سیلواڈور",common:"ایل سیلواڈور"},zho:{official:"萨尔瓦多共和国",common:"萨尔瓦多"}},latlng:[13.83333333,-88.91666666],landlocked:!1,borders:["GTM","HND"],area:21041,demonyms:{eng:{f:"Salvadoran",m:"Salvadoran"},fra:{f:"Salvadorienne",m:"Salvadorien"}},flag:"🇸🇻",maps:{googleMaps:"https://goo.gl/maps/cZnCEi5sEMQtKKcB7",openStreetMaps:"https://www.openstreetmap.org/relation/1520612"},population:6486201,gini:{2019:38.8},fifa:"SLV",car:{signs:["ES"],side:"right"},timezones:["UTC-06:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/sv.png",svg:"https://flagcdn.com/sv.svg",alt:"The flag of El Salvador is composed of three equal horizontal bands of cobalt blue, white and cobalt blue, with the national coat of arms centered in the white band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sv.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sv.svg"},startOfWeek:"monday",capitalInfo:{latlng:[13.7,-89.2]},postalCode:{format:"CP ####",regex:"^(?:CP)*(\\d{4})$"}},{name:{common:"Saint Vincent and the Grenadines",official:"Saint Vincent and the Grenadines",nativeName:{eng:{official:"Saint Vincent and the Grenadines",common:"Saint Vincent and the Grenadines"}}},tld:[".vc"],cca2:"VC",ccn3:"670",cca3:"VCT",cioc:"VIN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["784"]},capital:["Kingstown"],altSpellings:["VC"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"سانت فينسنت والغرينادين",common:"سانت فينسنت والغرينادين"},bre:{official:"Sant-Visant hag ar Grenadinez",common:"Sant-Visant hag ar Grenadinez"},ces:{official:"Svatý Vincenc a Grenadiny",common:"Svatý Vincenc a Grenadiny"},cym:{official:"Saint Vincent and the Grenadines",common:"Saint Vincent and the Grenadines"},deu:{official:"St. Vincent und die Grenadinen",common:"St. Vincent und die Grenadinen"},est:{official:"Saint Vincent ja Grenadiinid",common:"Saint Vincent"},fin:{official:"Saint Vincent ja Grenadiinit",common:"Saint Vincent ja Grenadiinit"},fra:{official:"Saint-Vincent-et-les Grenadines",common:"Saint-Vincent-et-les-Grenadines"},hrv:{official:"Sveti Vincent i Grenadini",common:"Sveti Vincent i Grenadini"},hun:{official:"Saint Vincent és a Grenadine-szigetek",common:"Saint Vincent és a Grenadine-szigetek"},ita:{official:"Saint Vincent e Grenadine",common:"Saint Vincent e Grenadine"},jpn:{official:"セントビンセントおよびグレナディーン諸島",common:"セントビンセントおよびグレナディーン諸島"},kor:{official:"세인트빈센트 그레나딘",common:"세인트빈센트 그레나딘"},nld:{official:"Saint Vincent en de Grenadines",common:"Saint Vincent en de Grenadines"},per:{official:"سنت وینسنت و گرنادین‌ها",common:"سنت وینسنت و گرنادین‌ها"},pol:{official:"Saint Vincent i Grenadyny",common:"Saint Vincent i Grenadyny"},por:{official:"São Vicente e Granadinas",common:"São Vincente e Granadinas"},rus:{official:"Сент-Винсент и Гренадины",common:"Сент-Винсент и Гренадины"},slk:{official:"Svätý Vincent a Grenadíny",common:"Svätý Vincent a Grenadíny"},spa:{official:"San Vicente y las Granadinas",common:"San Vicente y Granadinas"},srp:{official:"Свети Винсент и Гренадини",common:"Свети Винсент и Гренадини"},swe:{official:"Saint Vincent och Grenadinerna",common:"Saint Vincent och Grenadinerna"},tur:{official:"Saint Vincent ve Grenadinler",common:"Saint Vincent ve Grenadinler"},urd:{official:"سینٹ وینسینٹ و گریناڈائنز",common:"سینٹ وینسینٹ و گریناڈائنز"},zho:{official:"圣文森特和格林纳丁斯",common:"圣文森特和格林纳丁斯"}},latlng:[13.25,-61.2],landlocked:!1,area:389,demonyms:{eng:{f:"Saint Vincentian",m:"Saint Vincentian"},fra:{f:"Vincentaise",m:"Vincentais"}},flag:"🇻🇨",maps:{googleMaps:"https://goo.gl/maps/wMbnMqjG37FMnrwf7",openStreetMaps:"https://www.openstreetmap.org/relation/550725"},population:110947,fifa:"VIN",car:{signs:["WV"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/vc.png",svg:"https://flagcdn.com/vc.svg",alt:"The flag of Saint Vincent and the Grenadines is composed of three vertical bands of blue, gold and green. The gold band is twice as wide as the other two bands and bears three green diamonds arranged to form the letter V at its center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/vc.png",svg:"https://mainfacts.com/media/images/coats_of_arms/vc.svg"},startOfWeek:"monday",capitalInfo:{latlng:[13.13,-61.22]}},{name:{common:"Zimbabwe",official:"Republic of Zimbabwe",nativeName:{bwg:{official:"Republic of Zimbabwe",common:"Zimbabwe"},eng:{official:"Republic of Zimbabwe",common:"Zimbabwe"},kck:{official:"Republic of Zimbabwe",common:"Zimbabwe"},khi:{official:"Republic of Zimbabwe",common:"Zimbabwe"},ndc:{official:"Republic of Zimbabwe",common:"Zimbabwe"},nde:{official:"Republic of Zimbabwe",common:"Zimbabwe"},nya:{official:"Republic of Zimbabwe",common:"Zimbabwe"},sna:{official:"Republic of Zimbabwe",common:"Zimbabwe"},sot:{official:"Republic of Zimbabwe",common:"Zimbabwe"},toi:{official:"Republic of Zimbabwe",common:"Zimbabwe"},tsn:{official:"Republic of Zimbabwe",common:"Zimbabwe"},tso:{official:"Republic of Zimbabwe",common:"Zimbabwe"},ven:{official:"Republic of Zimbabwe",common:"Zimbabwe"},xho:{official:"Republic of Zimbabwe",common:"Zimbabwe"},zib:{official:"Republic of Zimbabwe",common:"Zimbabwe"}}},tld:[".zw"],cca2:"ZW",ccn3:"716",cca3:"ZWE",cioc:"ZIM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ZWL:{name:"Zimbabwean dollar",symbol:"$"}},idd:{root:"+2",suffixes:["63"]},capital:["Harare"],altSpellings:["ZW","Republic of Zimbabwe"],region:"Africa",subregion:"Southern Africa",languages:{bwg:"Chibarwe",eng:"English",kck:"Kalanga",khi:"Khoisan",ndc:"Ndau",nde:"Northern Ndebele",nya:"Chewa",sna:"Shona",sot:"Sotho",toi:"Tonga",tsn:"Tswana",tso:"Tsonga",ven:"Venda",xho:"Xhosa",zib:"Zimbabwean Sign Language"},translations:{ara:{official:"جمهورية زيمبابوي",common:"زيمبابوي"},bre:{official:"Republik Zimbabwe",common:"Zimbabwe"},ces:{official:"Zimbabwská republika",common:"Zimbabwe"},cym:{official:"Republic of Zimbabwe",common:"Zimbabwe"},deu:{official:"Republik Simbabwe",common:"Simbabwe"},est:{official:"Zimbabwe Vabariik",common:"Zimbabwe"},fin:{official:"Zimbabwen tasavalta",common:"Zimbabwe"},fra:{official:"République du Zimbabwe",common:"Zimbabwe"},hrv:{official:"Republika Zimbabve",common:"Zimbabve"},hun:{official:"Zimbabwei Köztársaság",common:"Zimbabwe"},ita:{official:"Repubblica dello Zimbabwe",common:"Zimbabwe"},jpn:{official:"ジンバブエ共和国",common:"ジンバブエ"},kor:{official:"짐바브웨 공화국",common:"짐바브웨"},nld:{official:"Republiek Zimbabwe",common:"Zimbabwe"},per:{official:"جمهوری زیمبابوه",common:"زیمبابوه"},pol:{official:"Republika Zimbabwe",common:"Zimbabwe"},por:{official:"República do Zimbabwe",common:"Zimbabwe"},rus:{official:"Республика Зимбабве",common:"Зимбабве"},slk:{official:"Zimbabwianska republika",common:"Zimbabwe"},spa:{official:"República de Zimbabue",common:"Zimbabue"},srp:{official:"Република Зимбабве",common:"Зимбабве"},swe:{official:"Republiken Zimbabwe",common:"Zimbabwe"},tur:{official:"Zimbabve Cumhuriyeti",common:"Zimbabve"},urd:{official:"جمہوریہ زمبابوے",common:"زمبابوے"},zho:{official:"津巴布韦共和国",common:"津巴布韦"}},latlng:[-20,30],landlocked:!0,borders:["BWA","MOZ","ZAF","ZMB"],area:390757,demonyms:{eng:{f:"Zimbabwean",m:"Zimbabwean"},fra:{f:"Zimbabwéenne",m:"Zimbabwéen"}},flag:"🇿🇼",maps:{googleMaps:"https://goo.gl/maps/M26BqdwQctqxXS65A",openStreetMaps:"https://www.openstreetmap.org/relation/195272"},population:14862927,gini:{2019:50.3},fifa:"ZIM",car:{signs:["ZW"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/zw.png",svg:"https://flagcdn.com/zw.svg",alt:"The flag of Zimbabwe is composed of seven equal horizontal bands of green, yellow, red, black, red, yellow and green, with a white isosceles triangle superimposed on the hoist side of the field. This triangle is edged in black, spans about one-fourth the width of the field and has its base on the hoist end. A yellow Zimbabwe bird superimposed on a five-pointed red star is centered in the triangle."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/zw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/zw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-17.82,31.03]}},{name:{common:"Finland",official:"Republic of Finland",nativeName:{fin:{official:"Suomen tasavalta",common:"Suomi"},swe:{official:"Republiken Finland",common:"Finland"}}},tld:[".fi"],cca2:"FI",ccn3:"246",cca3:"FIN",cioc:"FIN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["58"]},capital:["Helsinki"],altSpellings:["FI","Suomi","Republic of Finland","Suomen tasavalta","Republiken Finland"],region:"Europe",subregion:"Northern Europe",languages:{fin:"Finnish",swe:"Swedish"},translations:{ara:{official:"جمهورية فنلندا",common:"فنلندا"},bre:{official:"Republik Finland",common:"Finland"},ces:{official:"Finská republika",common:"Finsko"},cym:{official:"Republic of Finland",common:"Finland"},deu:{official:"Republik Finnland",common:"Finnland"},est:{official:"Soome Vabariik",common:"Soome"},fin:{official:"Suomen tasavalta",common:"Suomi"},fra:{official:"République de Finlande",common:"Finlande"},hrv:{official:"Republika Finska",common:"Finska"},hun:{official:"Finn Köztársaság",common:"Finnország"},ita:{official:"Repubblica di Finlandia",common:"Finlandia"},jpn:{official:"フィンランド共和国",common:"フィンランド"},kor:{official:"핀란드 공화국",common:"핀란드"},nld:{official:"Republiek Finland",common:"Finland"},per:{official:"جمهوری فنلاند",common:"فنلاند"},pol:{official:"Republika Finlandii",common:"Finlandia"},por:{official:"República da Finlândia",common:"Finlândia"},rus:{official:"Финляндская Республика",common:"Финляндия"},slk:{official:"Fínska republika",common:"Fínsko"},spa:{official:"República de Finlandia",common:"Finlandia"},srp:{official:"Република Финска",common:"Финска"},swe:{official:"Republiken Finland",common:"Finland"},tur:{official:"Finlandiya Cumhuriyeti",common:"Finlandiya"},urd:{official:"جمہوریہ فن لینڈ",common:"فن لینڈ"},zho:{official:"芬兰共和国",common:"芬兰"}},latlng:[64,26],landlocked:!1,borders:["NOR","SWE","RUS"],area:338424,demonyms:{eng:{f:"Finnish",m:"Finnish"},fra:{f:"Finlandaise",m:"Finlandais"}},flag:"🇫🇮",maps:{googleMaps:"https://goo.gl/maps/HjgWDCNKRAYHrkMn8",openStreetMaps:"openstreetmap.org/relation/54224"},population:5530719,gini:{2018:27.3},fifa:"FIN",car:{signs:["FIN"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/fi.png",svg:"https://flagcdn.com/fi.svg",alt:"The flag of Finland has a white field with a large blue cross that extend to the edges of the field. The vertical part of this cross is offset towards the hoist side."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/fi.png",svg:"https://mainfacts.com/media/images/coats_of_arms/fi.svg"},startOfWeek:"monday",capitalInfo:{latlng:[60.17,24.93]},postalCode:{format:"#####",regex:"^(?:FI)*(\\d{5})$"}},{name:{common:"Vanuatu",official:"Republic of Vanuatu",nativeName:{bis:{official:"Ripablik blong Vanuatu",common:"Vanuatu"},eng:{official:"Republic of Vanuatu",common:"Vanuatu"},fra:{official:"République de Vanuatu",common:"Vanuatu"}}},tld:[".vu"],cca2:"VU",ccn3:"548",cca3:"VUT",cioc:"VAN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{VUV:{name:"Vanuatu vatu",symbol:"Vt"}},idd:{root:"+6",suffixes:["78"]},capital:["Port Vila"],altSpellings:["VU","Republic of Vanuatu","Ripablik blong Vanuatu","République de Vanuatu"],region:"Oceania",subregion:"Melanesia",languages:{bis:"Bislama",eng:"English",fra:"French"},translations:{ara:{official:"جمهورية فانواتو",common:"فانواتو"},bre:{official:"Republik Vanuatu",common:"Vanuatu"},ces:{official:"Republika Vanuatu",common:"Vanuatu"},cym:{official:"Republic of Vanuatu",common:"Vanuatu"},deu:{official:"Vanuatu",common:"Vanuatu"},est:{official:"Vanuatu Vabariik",common:"Vanuatu"},fin:{official:"Vanuatun tasavalta",common:"Vanuatu"},fra:{official:"République de Vanuatu",common:"Vanuatu"},hrv:{official:"Republika Vanuatu",common:"Vanuatu"},hun:{official:"Vanuatui Köztársaság",common:"Vanuatu"},ita:{official:"Repubblica di Vanuatu",common:"Vanuatu"},jpn:{official:"バヌアツ共和国",common:"バヌアツ"},kor:{official:"바누아투 공화국",common:"바누아투"},nld:{official:"Republiek Vanuatu",common:"Vanuatu"},per:{official:"جمهوری وانواتو",common:"وانواتو"},pol:{official:"Republika Vanuatu",common:"Vanuatu"},por:{official:"República de Vanuatu",common:"Vanuatu"},rus:{official:"Республика Вануату",common:"Вануату"},slk:{official:"Vanuatská republika",common:"Vanuatu"},spa:{official:"República de Vanuatu",common:"Vanuatu"},srp:{official:"Република Вануату",common:"Вануату"},swe:{official:"Republiken Vanuatu",common:"Vanuatu"},tur:{official:"Vanuatu Cumhuriyeti",common:"Vanuatu"},urd:{official:"جمہوریہ وانواتو",common:"وانواتو"},zho:{official:"瓦努阿图共和国",common:"瓦努阿图"}},latlng:[-16,167],landlocked:!1,area:12189,demonyms:{eng:{f:"Ni-Vanuatu",m:"Ni-Vanuatu"},fra:{f:"Vanuatuane",m:"Vanuatuan"}},flag:"🇻🇺",maps:{googleMaps:"https://goo.gl/maps/hwAjehcT7VfvP5zJ8",openStreetMaps:"https://www.openstreetmap.org/relation/2177246"},population:307150,gini:{2010:37.6},fifa:"VAN",car:{signs:["VU"],side:"right"},timezones:["UTC+11:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/vu.png",svg:"https://flagcdn.com/vu.svg",alt:"The flag of Vanuatu is composed of two equal horizontal bands of red and green, with a black isosceles triangle superimposed on the hoist side of the field. This triangle has its base on the hoist end, spans about two-fifth the width of the field and is enclosed on its sides by the arms of a thin black-edged yellow horizontally oriented Y-shaped band which extends along the boundary of the red and green bands to the fly end of the field. A yellow boar's tusk encircling two yellow crossed namele leaves is centered in the triangle."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/vu.png",svg:"https://mainfacts.com/media/images/coats_of_arms/vu.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-17.73,168.32]}},{name:{common:"Belgium",official:"Kingdom of Belgium",nativeName:{deu:{official:"Königreich Belgien",common:"Belgien"},fra:{official:"Royaume de Belgique",common:"Belgique"},nld:{official:"Koninkrijk België",common:"België"}}},tld:[".be"],cca2:"BE",ccn3:"056",cca3:"BEL",cioc:"BEL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["2"]},capital:["Brussels"],altSpellings:["BE","België","Belgie","Belgien","Belgique","Kingdom of Belgium","Koninkrijk België","Royaume de Belgique","Königreich Belgien"],region:"Europe",subregion:"Western Europe",languages:{deu:"German",fra:"French",nld:"Dutch"},translations:{ara:{official:"مملكة بلجيكا",common:"بلجيكا"},bre:{official:"Rouantelezh Belgia",common:"Belgia"},ces:{official:"Belgické království",common:"Belgie"},cym:{official:"Teyrnas Gwlad Belg",common:"Gwlad Belg"},deu:{official:"Königreich Belgien",common:"Belgien"},est:{official:"Belgia Kuningriik",common:"Belgia"},fin:{official:"Belgian kuningaskunta",common:"Belgia"},fra:{official:"Royaume de Belgique",common:"Belgique"},hrv:{official:"Kraljevina Belgija",common:"Belgija"},hun:{official:"Belga Királyság",common:"Belgium"},ita:{official:"Regno del Belgio",common:"Belgio"},jpn:{official:"ベルギー王国",common:"ベルギー"},kor:{official:"벨기에 왕국",common:"벨기에"},nld:{official:"Koninkrijk België",common:"België"},per:{official:"پادشاهی بلژیک",common:"بلژیک"},pol:{official:"Królestwo Belgii",common:"Belgia"},por:{official:"Reino da Bélgica",common:"Bélgica"},rus:{official:"Королевство Бельгия",common:"Бельгия"},slk:{official:"Belgické kráľovstvo",common:"Belgicko"},spa:{official:"Reino de Bélgica",common:"Bélgica"},srp:{official:"Краљевина Белгија",common:"Белгија"},swe:{official:"Konungariket Belgien",common:"Belgien"},tur:{official:"Belçika Krallığı",common:"Belğika"},urd:{official:"مملکتِ بلجئیم",common:"بلجئیم"},zho:{official:"比利时王国",common:"比利时"}},latlng:[50.83333333,4],landlocked:!1,borders:["FRA","DEU","LUX","NLD"],area:30528,demonyms:{eng:{f:"Belgian",m:"Belgian"},fra:{f:"Belge",m:"Belge"}},flag:"🇧🇪",maps:{googleMaps:"https://goo.gl/maps/UQQzat85TCtPRXAL8",openStreetMaps:"https://www.openstreetmap.org/relation/52411"},population:11555997,gini:{2018:27.2},fifa:"BEL",car:{signs:["B"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/be.png",svg:"https://flagcdn.com/be.svg",alt:"The flag of Belgium is composed of three equal vertical bands of black, yellow and red."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/be.png",svg:"https://mainfacts.com/media/images/coats_of_arms/be.svg"},startOfWeek:"monday",capitalInfo:{latlng:[50.83,4.33]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Angola",official:"Republic of Angola",nativeName:{por:{official:"República de Angola",common:"Angola"}}},tld:[".ao"],cca2:"AO",ccn3:"024",cca3:"AGO",cioc:"ANG",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AOA:{name:"Angolan kwanza",symbol:"Kz"}},idd:{root:"+2",suffixes:["44"]},capital:["Luanda"],altSpellings:["AO","República de Angola","ʁɛpublika de an'ɡɔla"],region:"Africa",subregion:"Middle Africa",languages:{por:"Portuguese"},translations:{ara:{official:"أنغولا",common:"جمهورية أنغولا"},bre:{official:"Republik Angola",common:"Angola"},ces:{official:"Angolská republika",common:"Angola"},cym:{official:"Gweriniaeth Angola",common:"Angola"},deu:{official:"Republik Angola",common:"Angola"},est:{official:"Angola Vabariik",common:"Angola"},fin:{official:"Angolan tasavalta",common:"Angola"},fra:{official:"République d'Angola",common:"Angola"},hrv:{official:"Republika Angola",common:"Angola"},hun:{official:"Angola",common:"Angola"},ita:{official:"Repubblica dell'Angola",common:"Angola"},jpn:{official:"アンゴラ共和国",common:"アンゴラ"},kor:{official:"앙골라 공화국",common:"앙골라"},nld:{official:"Republiek Angola",common:"Angola"},per:{official:"جمهوری آنگولا",common:"آنگولا"},pol:{official:"Republika Angoli",common:"Angola"},por:{official:"República de Angola",common:"Angola"},rus:{official:"Республика Ангола",common:"Ангола"},slk:{official:"Angolská republika",common:"Angola"},spa:{official:"República de Angola",common:"Angola"},srp:{official:"Република Ангола",common:"Ангола"},swe:{official:"Republiken Angola",common:"Angola"},tur:{official:"Angola Cumhuriyeti",common:"Angola"},urd:{official:"جمہوریہ انگولہ",common:"انگولہ"},zho:{official:"安哥拉共和国",common:"安哥拉"}},latlng:[-12.5,18.5],landlocked:!1,borders:["COG","COD","ZMB","NAM"],area:1246700,demonyms:{eng:{f:"Angolan",m:"Angolan"},fra:{f:"Angolaise",m:"Angolais"}},flag:"🇦🇴",maps:{googleMaps:"https://goo.gl/maps/q42Qbf1BmQL3fuZg9",openStreetMaps:"https://www.openstreetmap.org/relation/195267"},population:32866268,gini:{2018:51.3},fifa:"ANG",car:{signs:["ANG"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ao.png",svg:"https://flagcdn.com/ao.svg",alt:"The flag of Angola features two equal horizontal bands of red and black, with a yellow emblem at its centre. This emblem consists of a five-pointed star within the hoist-side facing half of a cogwheel that is crossed on its lower end by a machete."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ao.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ao.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-8.83,13.22]}},{name:{common:"New Caledonia",official:"New Caledonia",nativeName:{fra:{official:"Nouvelle-Calédonie",common:"Nouvelle-Calédonie"}}},tld:[".nc"],cca2:"NC",ccn3:"540",cca3:"NCL",independent:!1,status:"officially-assigned",unMember:!1,currencies:{XPF:{name:"CFP franc",symbol:"₣"}},idd:{root:"+6",suffixes:["87"]},capital:["Nouméa"],altSpellings:["NC"],region:"Oceania",subregion:"Melanesia",languages:{fra:"French"},translations:{ara:{official:"كاليدونيا الجديدة",common:"كاليدونيا الجديدة"},bre:{official:"Kaledonia-Nevez",common:"Kaledonia-Nevez"},ces:{official:"Nová Kaledonie",common:"Nová Kaledonie"},cym:{official:"New Caledonia",common:"New Caledonia"},deu:{official:"Neukaledonien",common:"Neukaledonien"},est:{official:"Uus-Kaledoonia",common:"Uus-Kaledoonia"},fin:{official:"Uusi-Kaledonia",common:"Uusi-Kaledonia"},fra:{official:"Nouvelle-Calédonie",common:"Nouvelle-Calédonie"},hrv:{official:"Nova Kaledonija",common:"Nova Kaledonija"},hun:{official:"Új-Kaledónia",common:"Új-Kaledónia"},ita:{official:"Nuova Caledonia",common:"Nuova Caledonia"},jpn:{official:"ニューカレドニア",common:"ニューカレドニア"},kor:{official:"누벨칼레도니",common:"누벨칼레도니"},nld:{official:"nieuw -Caledonië",common:"Nieuw-Caledonië"},per:{official:"کالدونیای جدید",common:"کالدونیای جدید"},pol:{official:"Nowa Kaledonia",common:"Nowa Kaledonia"},por:{official:"New Caledonia",common:"Nova Caledónia"},rus:{official:"Новая Каледония",common:"Новая Каледония"},slk:{official:"Nová Kaledónia",common:"Nová Kaledónia"},spa:{official:"nueva Caledonia",common:"Nueva Caledonia"},srp:{official:"Нова Каледонија",common:"Нова Каледонија"},swe:{official:"Nya Kaledonien",common:"Nya Kaledonien"},tur:{official:"Yeni Kaledonya",common:"Yeni Kaledonya"},urd:{official:"نیو کیلیڈونیا",common:"نیو کیلیڈونیا"},zho:{official:"新喀里多尼亚",common:"新喀里多尼亚"}},latlng:[-21.5,165.5],landlocked:!1,area:18575,demonyms:{eng:{f:"New Caledonian",m:"New Caledonian"},fra:{f:"Néo-Calédonienne",m:"Néo-Calédonien"}},flag:"🇳🇨",maps:{googleMaps:"https://goo.gl/maps/cBhtCeMdob4U7FRU9",openStreetMaps:"https://www.openstreetmap.org/relation/3407643"},population:271960,fifa:"NCL",car:{signs:["F"],side:"right"},timezones:["UTC+11:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/nc.png",svg:"https://flagcdn.com/nc.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/nc.png",svg:"https://mainfacts.com/media/images/coats_of_arms/nc.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-22.27,166.45]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Sweden",official:"Kingdom of Sweden",nativeName:{swe:{official:"Konungariket Sverige",common:"Sverige"}}},tld:[".se"],cca2:"SE",ccn3:"752",cca3:"SWE",cioc:"SWE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SEK:{name:"Swedish krona",symbol:"kr"}},idd:{root:"+4",suffixes:["6"]},capital:["Stockholm"],altSpellings:["SE","Kingdom of Sweden","Konungariket Sverige"],region:"Europe",subregion:"Northern Europe",languages:{swe:"Swedish"},translations:{ara:{official:"مملكة السويد",common:"السويد"},bre:{official:"Rouantelezh Sveden",common:"Sveden"},ces:{official:"Švédské království",common:"Švédsko"},cym:{official:"Kingdom of Sweden",common:"Sweden"},deu:{official:"Königreich Schweden",common:"Schweden"},est:{official:"Rootsi Kuningriik",common:"Rootsi"},fin:{official:"Ruotsin kuningaskunta",common:"Ruotsi"},fra:{official:"Royaume de Suède",common:"Suède"},hrv:{official:"Kraljevina Švedska",common:"Švedska"},hun:{official:"Svéd Királyság",common:"Svédország"},ita:{official:"Regno di Svezia",common:"Svezia"},jpn:{official:"スウェーデン王国",common:"スウェーデン"},kor:{official:"스웨덴 왕국",common:"스웨덴"},nld:{official:"Koninkrijk Zweden",common:"Zweden"},per:{official:"پادشاهی سوئد",common:"سوئد"},pol:{official:"Królestwo Szwecji",common:"Szwecja"},por:{official:"Reino da Suécia",common:"Suécia"},rus:{official:"Королевство Швеция",common:"Швеция"},slk:{official:"Švédske kráľovstvo",common:"Švédsko"},spa:{official:"Reino de Suecia",common:"Suecia"},srp:{official:"Краљевина Шведска",common:"Шведска"},swe:{official:"Konungariket Sverige",common:"Sverige"},tur:{official:"İsveç Krallığı",common:"İsveç"},urd:{official:"مملکتِ سویڈن",common:"سویڈن"},zho:{official:"瑞典王国",common:"瑞典"}},latlng:[62,15],landlocked:!1,borders:["FIN","NOR"],area:450295,demonyms:{eng:{f:"Swedish",m:"Swedish"},fra:{f:"Suédoise",m:"Suédois"}},flag:"🇸🇪",maps:{googleMaps:"https://goo.gl/maps/iqygE491ADVgnBW39",openStreetMaps:"https://www.openstreetmap.org/relation/52822"},population:10353442,gini:{2018:30},fifa:"SWE",car:{signs:["S"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/se.png",svg:"https://flagcdn.com/se.svg",alt:"The flag of Sweden has a blue field with a large golden-yellow cross that extend to the edges of the field. The vertical part of this cross is offset towards the hoist side."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/se.png",svg:"https://mainfacts.com/media/images/coats_of_arms/se.svg"},startOfWeek:"monday",capitalInfo:{latlng:[59.33,18.05]},postalCode:{format:"SE-### ##",regex:"^(?:SE)*(\\d{5})$"}},{name:{common:"Afghanistan",official:"Islamic Republic of Afghanistan",nativeName:{prs:{official:"جمهوری اسلامی افغانستان",common:"افغانستان"},pus:{official:"د افغانستان اسلامي جمهوریت",common:"افغانستان"},tuk:{official:"Owganystan Yslam Respublikasy",common:"Owganystan"}}},tld:[".af"],cca2:"AF",ccn3:"004",cca3:"AFG",cioc:"AFG",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AFN:{name:"Afghan afghani",symbol:"؋"}},idd:{root:"+9",suffixes:["3"]},capital:["Kabul"],altSpellings:["AF","Afġānistān"],region:"Asia",subregion:"Southern Asia",languages:{prs:"Dari",pus:"Pashto",tuk:"Turkmen"},translations:{ara:{official:"جمهورية أففانستان الإسلامية",common:"أفغانستان"},bre:{official:"Republik Islamek Afghanistan",common:"Afghanistan"},ces:{official:"Afghánská islámská republika",common:"Afghánistán"},cym:{official:"Gweriniaeth Islamaidd Affganistan",common:"Affganistan"},deu:{official:"Islamische Republik Afghanistan",common:"Afghanistan"},est:{official:"Afganistani Islamivabariik",common:"Afganistan"},fin:{official:"Afganistanin islamilainen tasavalta",common:"Afganistan"},fra:{official:"République islamique d'Afghanistan",common:"Afghanistan"},hrv:{official:"Islamska Republika Afganistan",common:"Afganistan"},hun:{official:"Afganisztáni Iszlám Köztársaság",common:"Afganisztán"},ita:{official:"Repubblica islamica dell'Afghanistan",common:"Afghanistan"},jpn:{official:"アフガニスタン·イスラム共和国",common:"アフガニスタン"},kor:{official:"아프가니스탄 이슬람 공화국",common:"아프가니스탄"},nld:{official:"Islamitische Republiek Afghanistan",common:"Afghanistan"},per:{official:"جمهوری اسلامی افغانستان",common:"افغانستان"},pol:{official:"Islamska Republika Afganistanu",common:"Afganistan"},por:{official:"República Islâmica do Afeganistão",common:"Afeganistão"},rus:{official:"Исламская Республика Афганистан",common:"Афганистан"},slk:{official:"Afgánsky islamský štát",common:"Afganistan"},spa:{official:"República Islámica de Afganistán",common:"Afganistán"},srp:{official:"Исламска Република Авганистан",common:"Авганистан"},swe:{official:"Islamiska republiken Afghanistan",common:"Afghanistan"},tur:{official:"Afganistan İslam Cumhuriyeti",common:"Afganistan"},urd:{official:"اسلامی جمہوریہ افغانستان",common:"افغانستان"},zho:{official:"阿富汗伊斯兰共和国",common:"阿富汗"}},latlng:[33,65],landlocked:!0,borders:["IRN","PAK","TKM","UZB","TJK","CHN"],area:652230,demonyms:{eng:{f:"Afghan",m:"Afghan"},fra:{f:"Afghane",m:"Afghan"}},flag:"🇦🇫",maps:{googleMaps:"https://goo.gl/maps/BXBGw7yUUFknCfva9",openStreetMaps:"https://www.openstreetmap.org/relation/303427"},population:40218234,fifa:"AFG",car:{signs:["AFG"],side:"right"},timezones:["UTC+04:30"],continents:["Asia"],flags:{png:"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Flag_of_the_Taliban.svg/320px-Flag_of_the_Taliban.svg.png",svg:"https://upload.wikimedia.org/wikipedia/commons/5/5c/Flag_of_the_Taliban.svg",alt:"The flag of the Islamic Emirate of Afghanistan has a white field with Arabic inscriptions — the Shahada — in black across its center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/af.png",svg:"https://mainfacts.com/media/images/coats_of_arms/af.svg"},startOfWeek:"monday",capitalInfo:{latlng:[34.52,69.18]}},{name:{common:"United Arab Emirates",official:"United Arab Emirates",nativeName:{ara:{official:"الإمارات العربية المتحدة",common:"دولة الإمارات العربية المتحدة"}}},tld:[".ae","امارات."],cca2:"AE",ccn3:"784",cca3:"ARE",cioc:"UAE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AED:{name:"United Arab Emirates dirham",symbol:"د.إ"}},idd:{root:"+9",suffixes:["71"]},capital:["Abu Dhabi"],altSpellings:["AE","UAE","Emirates"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"الإمارات العربية المتحدة",common:"دولة الإمارات العربية المتحدة"},bre:{official:"Emirelezhioù Arab Unanet",common:"Emirelezhioù Arab Unanet"},ces:{official:"Spojené arabské emiráty",common:"Arabské emiráty"},cym:{official:"United Arab Emirates",common:"United Arab Emirates"},deu:{official:"Vereinigte Arabische Emirate",common:"Vereinigte Arabische Emirate"},est:{official:"Araabia Ühendemiraadid",common:"Araabia Ühendemiraadid"},fin:{official:"Yhdistyneet arabiemiirikunnat",common:"Arabiemiraatit"},fra:{official:"Émirats arabes unis",common:"Émirats arabes unis"},hrv:{official:"Ujedinjeni Arapski Emirati",common:"Arapski Emirati"},hun:{official:"Egyesült Arab Emírségek",common:"Egyesült Arab Emírségek"},ita:{official:"Emirati Arabi Uniti",common:"Emirati Arabi Uniti"},jpn:{official:"アラブ首長国連邦",common:"アラブ首長国連邦"},kor:{official:"아랍 토후국 연방",common:"아랍에미리트"},nld:{official:"Verenigde Arabische Emiraten",common:"Verenigde Arabische Emiraten"},per:{official:"امارات متحده عربی",common:"امارات"},pol:{official:"Zjednoczone Emiraty Arabskie",common:"Emiraty Arabskie"},por:{official:"Emirados Árabes Unidos",common:"Emirados Árabes Unidos"},rus:{official:"Объединенные Арабские Эмираты",common:"Объединённые Арабские Эмираты"},slk:{official:"Spojené arabské emiráty",common:"Arabské emiráty"},spa:{official:"Emiratos Árabes Unidos",common:"Emiratos Árabes Unidos"},srp:{official:"Уједињени Арапски Емирати",common:"Уједињени Арапски Емирати"},swe:{official:"Förenade Arabemiraten",common:"Förenade Arabemiraten"},tur:{official:"Birleşik Arap Emirlikleri",common:"Birleşik Arap Emirlikleri"},urd:{official:"متحدہ عرب امارات",common:"متحدہ عرب امارات"},zho:{official:"阿拉伯联合酋长国",common:"阿拉伯联合酋长国"}},latlng:[24,54],landlocked:!1,borders:["OMN","SAU"],area:83600,demonyms:{eng:{f:"Emirati",m:"Emirati"},fra:{f:"Emirienne",m:"Emirien"}},flag:"🇦🇪",maps:{googleMaps:"https://goo.gl/maps/AZZTDA6GzVAnKMVd8",openStreetMaps:"https://www.openstreetmap.org/relation/307763"},population:9890400,gini:{2018:26},fifa:"UAE",car:{signs:["UAE"],side:"right"},timezones:["UTC+04:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/ae.png",svg:"https://flagcdn.com/ae.svg",alt:"The flag of United Arab Emirates features a red vertical band on its hoist side that takes up about one-fourth the width of the field and three equal horizontal bands of green, white and black adjoining the vertical band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ae.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ae.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[24.47,54.37]}},{name:{common:"Nicaragua",official:"Republic of Nicaragua",nativeName:{spa:{official:"República de Nicaragua",common:"Nicaragua"}}},tld:[".ni"],cca2:"NI",ccn3:"558",cca3:"NIC",cioc:"NCA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{NIO:{name:"Nicaraguan córdoba",symbol:"C$"}},idd:{root:"+5",suffixes:["05"]},capital:["Managua"],altSpellings:["NI","Republic of Nicaragua","República de Nicaragua"],region:"Americas",subregion:"Central America",languages:{spa:"Spanish"},translations:{ara:{official:"جمهورية نيكاراغوا",common:"نيكاراغوا"},bre:{official:"Republik Nicaragua",common:"Nicaragua"},ces:{official:"Republika Nikaragua",common:"Nikaragua"},cym:{official:"Republic of Nicaragua",common:"Nicaragua"},deu:{official:"Republik Nicaragua",common:"Nicaragua"},est:{official:"Nicaragua Vabariik",common:"Nicaragua"},fin:{official:"Nicaraguan tasavalta",common:"Nicaragua"},fra:{official:"République du Nicaragua",common:"Nicaragua"},hrv:{official:"Republika Nikaragva",common:"Nikaragva"},hun:{official:"Nicaraguai Köztársaság",common:"Nicaragua"},ita:{official:"Repubblica del Nicaragua",common:"Nicaragua"},jpn:{official:"ニカラグア共和国",common:"ニカラグア"},kor:{official:"니카라과 공화국",common:"니카라과"},nld:{official:"Republiek Nicaragua",common:"Nicaragua"},per:{official:"جمهوری نیکاراگوئه",common:"نیکاراگوئه"},pol:{official:"Republika Nikaragui",common:"Nikaragua"},por:{official:"República da Nicarágua",common:"Nicarágua"},rus:{official:"Республика Никарагуа",common:"Никарагуа"},slk:{official:"Nikaragujská republika",common:"Nikaragua"},spa:{official:"República de Nicaragua",common:"Nicaragua"},srp:{official:"Република Никарагва",common:"Никарагва"},swe:{official:"Republiken Nicaragua",common:"Nicaragua"},tur:{official:"Nikaragua Cumhuriyeti",common:"Nikaragua"},urd:{official:"جمہوریہ نکاراگوا",common:"نکاراگوا"},zho:{official:"尼加拉瓜共和国",common:"尼加拉瓜"}},latlng:[13,-85],landlocked:!1,borders:["CRI","HND"],area:130373,demonyms:{eng:{f:"Nicaraguan",m:"Nicaraguan"},fra:{f:"Nicaraguayenne",m:"Nicaraguayen"}},flag:"🇳🇮",maps:{googleMaps:"https://goo.gl/maps/P77LaEVkKJKXneRC6",openStreetMaps:"https://www.openstreetmap.org/relation/287666"},population:6624554,gini:{2014:46.2},fifa:"NCA",car:{signs:["NIC"],side:"right"},timezones:["UTC-06:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/ni.png",svg:"https://flagcdn.com/ni.svg",alt:"The flag of Nicaragua is composed of three equal horizontal bands of blue, white and blue, with the national coat of arms centered in the white band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ni.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ni.svg"},startOfWeek:"monday",capitalInfo:{latlng:[12.13,-86.25]},postalCode:{format:"###-###-#",regex:"^(\\d{7})$"}},{name:{common:"Kuwait",official:"State of Kuwait",nativeName:{ara:{official:"دولة الكويت",common:"الكويت"}}},tld:[".kw"],cca2:"KW",ccn3:"414",cca3:"KWT",cioc:"KUW",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KWD:{name:"Kuwaiti dinar",symbol:"د.ك"}},idd:{root:"+9",suffixes:["65"]},capital:["Kuwait City"],altSpellings:["KW","State of Kuwait","Dawlat al-Kuwait"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"دولة الكويت",common:"الكويت"},bre:{official:"Stad Koweit",common:"Koweit"},ces:{official:"Stát Kuvajt",common:"Kuvajt"},cym:{official:"State of Kuwait",common:"Kuwait"},deu:{official:"Staat Kuwait",common:"Kuwait"},est:{official:"Kuveidi Riik",common:"Kuveit"},fin:{official:"Kuwaitin valtio",common:"Kuwait"},fra:{official:"État du Koweït",common:"Koweït"},hrv:{official:"Država Kuvajt",common:"Kuvajt"},hun:{official:"Kuvaiti Állam",common:"Kuvait"},ita:{official:"Stato del Kuwait",common:"Kuwait"},jpn:{official:"クウェート国",common:"クウェート"},kor:{official:"쿠웨이트국",common:"쿠웨이트"},nld:{official:"Staat Koeweit",common:"Koeweit"},per:{official:"دولت کویت",common:"کُویت"},pol:{official:"Państwo Kuwejt",common:"Kuwejt"},por:{official:"Estado do Kuwait",common:"Kuwait"},rus:{official:"Государство Кувейт",common:"Кувейт"},slk:{official:"Kuvajtský štát",common:"Kuvajt"},spa:{official:"Estado de Kuwait",common:"Kuwait"},srp:{official:"Држава Кувајт",common:"Кувајт"},swe:{official:"Staten Kuwait",common:"Kuwait"},tur:{official:"Kuveyt Devleti",common:"Kuveyt"},urd:{official:"دولتِ کویت",common:"کویت"},zho:{official:"科威特国",common:"科威特"}},latlng:[29.5,45.75],landlocked:!1,borders:["IRQ","SAU"],area:17818,demonyms:{eng:{f:"Kuwaiti",m:"Kuwaiti"},fra:{f:"Koweïtienne",m:"Koweïtien"}},flag:"🇰🇼",maps:{googleMaps:"https://goo.gl/maps/aqr3aNQjS1BAvksJ7",openStreetMaps:"https://www.openstreetmap.org/relation/305099"},population:4270563,fifa:"KUW",car:{signs:["KWT"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/kw.png",svg:"https://flagcdn.com/kw.svg",alt:"The flag of Kuwait is composed of three equal horizontal bands of green, white and red, with a black trapezium superimposed on the hoist side of the field. This trapezium has its base on the hoist end and spans about one-fourth the width of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/kw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/kw.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[29.37,47.97]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Aruba",official:"Aruba",nativeName:{nld:{official:"Aruba",common:"Aruba"},pap:{official:"Aruba",common:"Aruba"}}},tld:[".aw"],cca2:"AW",ccn3:"533",cca3:"ABW",cioc:"ARU",independent:!1,status:"officially-assigned",unMember:!1,currencies:{AWG:{name:"Aruban florin",symbol:"ƒ"}},idd:{root:"+2",suffixes:["97"]},capital:["Oranjestad"],altSpellings:["AW"],region:"Americas",subregion:"Caribbean",languages:{nld:"Dutch",pap:"Papiamento"},translations:{ara:{official:"أروبا",common:"أروبا"},bre:{official:"Aruba",common:"Aruba"},ces:{official:"Aruba",common:"Aruba"},cym:{official:"Aruba",common:"Aruba"},deu:{official:"Aruba",common:"Aruba"},est:{official:"Aruba",common:"Aruba"},fin:{official:"Aruba",common:"Aruba"},fra:{official:"Aruba",common:"Aruba"},hrv:{official:"Aruba",common:"Aruba"},hun:{official:"Aruba",common:"Aruba"},ita:{official:"Aruba",common:"Aruba"},jpn:{official:"アルバ",common:"アルバ"},kor:{official:"아루바",common:"아루바"},nld:{official:"Aruba",common:"Aruba"},per:{official:"آروبا",common:"آروبا"},pol:{official:"Aruba",common:"Aruba"},por:{official:"Aruba",common:"Aruba"},rus:{official:"Аруба",common:"Аруба"},slk:{official:"Aruba",common:"Aruba"},spa:{official:"Aruba",common:"Aruba"},srp:{official:"Аруба",common:"Аруба"},swe:{official:"Aruba",common:"Aruba"},tur:{official:"Aruba",common:"Aruba"},urd:{official:"اروبا",common:"اروبا"},zho:{official:"阿鲁巴",common:"阿鲁巴"}},latlng:[12.5,-69.96666666],landlocked:!1,area:180,demonyms:{eng:{f:"Aruban",m:"Aruban"},fra:{f:"Arubaise",m:"Arubais"}},flag:"🇦🇼",maps:{googleMaps:"https://goo.gl/maps/8hopbQqifHAgyZyg8",openStreetMaps:"https://www.openstreetmap.org/relation/1231749"},population:106766,fifa:"ARU",car:{side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/aw.png",svg:"https://flagcdn.com/aw.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/aw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/aw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[12.52,-70.03]}},{name:{common:"Burkina Faso",official:"Burkina Faso",nativeName:{fra:{official:"République du Burkina",common:"Burkina Faso"}}},tld:[".bf"],cca2:"BF",ccn3:"854",cca3:"BFA",cioc:"BUR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["26"]},capital:["Ouagadougou"],altSpellings:["BF"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"بوركينا فاسو",common:"بوركينا فاسو"},bre:{official:"Burkina Faso",common:"Burkina Faso"},ces:{official:"Burkina Faso",common:"Burkina Faso"},cym:{official:"Bwrcina Ffaso",common:"Bwrcina Ffaso"},deu:{official:"Burkina Faso",common:"Burkina Faso"},est:{official:"Burkina Faso",common:"Burkina Faso"},fin:{official:"Burkina Faso",common:"Burkina Faso"},fra:{official:"République du Burkina",common:"Burkina Faso"},hrv:{official:"Burkina Faso",common:"Burkina Faso"},hun:{official:"Burkina Faso",common:"Burkina"},ita:{official:"Burkina Faso",common:"Burkina Faso"},jpn:{official:"ブルキナファソ",common:"ブルキナファソ"},kor:{official:"부르키나파소",common:"부르키나파소"},nld:{official:"Burkina Faso",common:"Burkina Faso"},per:{official:"بورکینافاسو",common:"بورکینافاسو"},pol:{official:"Burkina Faso",common:"Burkina Faso"},por:{official:"Burkina Faso",common:"Burkina Faso"},rus:{official:"Буркина -Фасо",common:"Буркина-Фасо"},slk:{official:"Burkina Faso",common:"Burkina Faso"},spa:{official:"Burkina Faso",common:"Burkina Faso"},srp:{official:"Буркина Фасо",common:"Буркина Фасо"},swe:{official:"Burkina Faso",common:"Burkina Faso"},tur:{official:"Burkina Faso",common:"Burkina Faso"},urd:{official:"برکینا فاسو",common:"برکینا فاسو"},zho:{official:"布基纳法索",common:"布基纳法索"}},latlng:[13,-2],landlocked:!0,borders:["BEN","CIV","GHA","MLI","NER","TGO"],area:272967,demonyms:{eng:{f:"Burkinabe",m:"Burkinabe"},fra:{f:"Burkinabée",m:"Burkinabé"}},flag:"🇧🇫",maps:{googleMaps:"https://goo.gl/maps/rKRmpcMbFher2ozb7",openStreetMaps:"https://www.openstreetmap.org/relation/192783"},population:20903278,gini:{2014:35.3},fifa:"BFA",car:{signs:["BF"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/bf.png",svg:"https://flagcdn.com/bf.svg",alt:"The flag of Burkina Faso features two equal horizontal bands of red and green, with a yellow five-pointed star in the center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bf.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bf.svg"},startOfWeek:"monday",capitalInfo:{latlng:[12.37,-1.52]}},{name:{common:"Mali",official:"Republic of Mali",nativeName:{fra:{official:"République du Mali",common:"Mali"}}},tld:[".ml"],cca2:"ML",ccn3:"466",cca3:"MLI",cioc:"MLI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["23"]},capital:["Bamako"],altSpellings:["ML","Republic of Mali","République du Mali"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"جمهورية مالي",common:"مالي"},bre:{official:"Republik Mali",common:"Mali"},ces:{official:"Republika Mali",common:"Mali"},cym:{official:"Republic of Mali",common:"Mali"},deu:{official:"Republik Mali",common:"Mali"},est:{official:"Mali Vabariik",common:"Mali"},fin:{official:"Malin tasavalta",common:"Mali"},fra:{official:"République du Mali",common:"Mali"},hrv:{official:"Republika Mali",common:"Mali"},hun:{official:"Mali Köztársaság",common:"Mali"},ita:{official:"Repubblica del Mali",common:"Mali"},jpn:{official:"マリ共和国",common:"マリ"},kor:{official:"말리 공화국",common:"말리"},nld:{official:"Republiek Mali",common:"Mali"},per:{official:"جمهوری مالی",common:"مالی"},pol:{official:"Republika Mali",common:"Mali"},por:{official:"República do Mali",common:"Mali"},rus:{official:"Республика Мали",common:"Мали"},slk:{official:"Malijská republika",common:"Mali"},spa:{official:"República de Malí",common:"Mali"},srp:{official:"Република Мали",common:"Мали"},swe:{official:"Republiken Mali",common:"Mali"},tur:{official:"Mali Cumhuriyeti",common:"Mali"},urd:{official:"جمہوریہ مالی",common:"مالی"},zho:{official:"马里共和国",common:"马里"}},latlng:[17,-4],landlocked:!0,borders:["DZA","BFA","GIN","CIV","MRT","NER","SEN"],area:1240192,demonyms:{eng:{f:"Malian",m:"Malian"},fra:{f:"Malienne",m:"Malien"}},flag:"🇲🇱",maps:{googleMaps:"https://goo.gl/maps/u9mYJkCB19wyuzh27",openStreetMaps:"https://www.openstreetmap.org/relation/192785"},population:20250834,gini:{2009:33},fifa:"MLI",car:{signs:["RMM"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ml.png",svg:"https://flagcdn.com/ml.svg",alt:"The flag of Mali is composed of three equal vertical bands of green, yellow and red."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ml.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ml.svg"},startOfWeek:"monday",capitalInfo:{latlng:[12.65,-8]}},{name:{common:"Puerto Rico",official:"Commonwealth of Puerto Rico",nativeName:{eng:{official:"Commonwealth of Puerto Rico",common:"Puerto Rico"},spa:{official:"Estado Libre Asociado de Puerto Rico",common:"Puerto Rico"}}},tld:[".pr"],cca2:"PR",ccn3:"630",cca3:"PRI",cioc:"PUR",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["787","939"]},capital:["San Juan"],altSpellings:["PR","Commonwealth of Puerto Rico","Estado Libre Asociado de Puerto Rico"],region:"Americas",subregion:"Caribbean",languages:{eng:"English",spa:"Spanish"},translations:{ara:{official:"كومنولث بويرتوريكو",common:"بويرتوريكو"},bre:{official:"Kenglad Puerto Rico",common:"Puerto Rico"},ces:{official:"Portoriko",common:"Portoriko"},cym:{official:"Commonwealth of Puerto Rico",common:"Puerto Rico"},deu:{official:"Freistaat Puerto Rico",common:"Puerto Rico"},est:{official:"Puerto Rico Ühendus",common:"Puerto Rico"},fin:{official:"Puerto Rico",common:"Puerto Rico"},fra:{official:"Porto Rico",common:"Porto Rico"},hrv:{official:"Zajednica Puerto Rico",common:"Portoriko"},hun:{official:"Puerto Rico",common:"Puerto Rico"},ita:{official:"Commonwealth di Porto Rico",common:"Porto Rico"},jpn:{official:"プエルトリコのコモンウェルス",common:"プエルトリコ"},kor:{official:"푸에르토리코",common:"푸에르토리코"},nld:{official:"Gemenebest van Puerto Rico",common:"Puerto Rico"},per:{official:"قلمرو همسود پورتوریکو",common:"پورتوریکو"},pol:{official:"Wolne Stowarzyszone Państwo Portoryko",common:"Portoryko"},por:{official:"Commonwealth of Puerto Rico",common:"Porto Rico"},rus:{official:"Содружество Пуэрто-Рико",common:"Пуэрто-Рико"},slk:{official:"Portorické spoločenstvo",common:"Portoriko"},spa:{official:"Asociado de Puerto Rico",common:"Puerto Rico"},srp:{official:"Комонвелт Порторико",common:"Порторико"},swe:{official:"Puerto Rico",common:"Puerto Rico"},tur:{official:"Porto Riko Topluluğu",common:"Porto Riko"},urd:{official:" دولتِ مشترکہ پورٹو ریکو",common:"پورٹو ریکو"},zho:{official:"波多黎各联邦",common:"波多黎各"}},latlng:[18.25,-66.5],landlocked:!1,area:8870,demonyms:{eng:{f:"Puerto Rican",m:"Puerto Rican"},fra:{f:"Portoricaine",m:"Portoricain"}},flag:"🇵🇷",maps:{googleMaps:"https://goo.gl/maps/sygfDbtwn389wu8x5",openStreetMaps:"https://www.openstreetmap.org/relation/4422604"},population:3194034,fifa:"PUR",car:{signs:["USA"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/pr.png",svg:"https://flagcdn.com/pr.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[18.47,-66.12]},postalCode:{format:"#####-####",regex:"^(\\d{9})$"}},{name:{common:"North Macedonia",official:"Republic of North Macedonia",nativeName:{mkd:{official:"Република Северна Македонија",common:"Македонија"}}},tld:[".mk"],cca2:"MK",ccn3:"807",cca3:"MKD",cioc:"MKD",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MKD:{name:"denar",symbol:"den"}},idd:{root:"+3",suffixes:["89"]},capital:["Skopje"],altSpellings:["MK","The former Yugoslav Republic of Macedonia","Republic of North Macedonia","Macedonia, The Former Yugoslav Republic of","Република Северна Македонија"],region:"Europe",subregion:"Southeast Europe",languages:{mkd:"Macedonian"},translations:{ara:{official:"جمهورية شمال مقدونيا",common:"شمال مقدونيا"},bre:{official:"Republik Makedonia an Norzh",common:"Makedonia an Norzh"},ces:{official:"Republika Severní Makedonie",common:"Severní Makedonie"},cym:{official:"Republic of North Macedonia",common:"North Macedonia"},deu:{official:"Republik Nordmazedonien",common:"Nordmazedonien"},est:{official:"Põhja-Makedoonia Vabariik",common:"Põhja-Makedoonia"},fin:{official:"Pohjois-Makedonian tasavalta",common:"Pohjois-Makedonia"},fra:{official:"République de Macédoine du Nord",common:"Macédoine du Nord"},hrv:{official:"Republika Sjeverna Makedonija",common:"Sjeverna Makedonija"},hun:{official:"Észak-macedón Köztársaság",common:"Észak-Macedónia"},ita:{official:"Repubblica di Macedonia del Nord",common:"Macedonia del Nord"},jpn:{official:"北マケドニア共和国",common:"北マケドニア "},kor:{official:"북마케도니아 공화국",common:"북마케도니아"},nld:{official:"Republiek Noord-Macedonië",common:"Noord-Macedonië"},per:{official:"جمهوری مقدونیه شمالی",common:"مقدونیه شمالی"},pol:{official:"Republika Macedonii Północnej",common:"Macedonia Północna"},por:{official:"República da Macedônia do Norte",common:"Macedónia do Norte"},rus:{official:"Республика Северная Македония",common:"Северная Македония"},slk:{official:"Severomacedónska republika",common:"Severné Macedónsko"},spa:{official:"República de Macedonia del Norte",common:"Macedonia del Norte"},srp:{official:"Република Северна Македонија",common:"Северна Македонија"},swe:{official:"Republiken Nordmakedonien",common:"Nordmakedonien"},tur:{official:"Kuzey Makedonya Cumhuriyeti",common:"Kuzey Makedonya"},urd:{official:"جمہوریہ مقدونیہ",common:"شمالی مقدونیہ"},zho:{official:"北馬其頓共和國",common:"北馬其頓"}},latlng:[41.83333333,22],landlocked:!0,borders:["ALB","BGR","GRC","UNK","SRB"],area:25713,demonyms:{eng:{f:"Macedonian",m:"Macedonian"},fra:{f:"Macédonienne",m:"Macédonien"}},flag:"🇲🇰",maps:{googleMaps:"https://goo.gl/maps/55Q8MEnF6ACdu3q79",openStreetMaps:"https://www.openstreetmap.org/relation/53293"},population:2077132,gini:{2018:33},fifa:"MKD",car:{signs:["MK"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/mk.png",svg:"https://flagcdn.com/mk.svg",alt:"The flag of North Macedonia has a red field, at the center of which is a golden-yellow sun with eight broadening rays that extend to the edges of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[42,21.43]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Venezuela",official:"Bolivarian Republic of Venezuela",nativeName:{spa:{official:"República Bolivariana de Venezuela",common:"Venezuela"}}},tld:[".ve"],cca2:"VE",ccn3:"862",cca3:"VEN",cioc:"VEN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{VES:{name:"Venezuelan bolívar soberano",symbol:"Bs.S."}},idd:{root:"+5",suffixes:["8"]},capital:["Caracas"],altSpellings:["VE","Bolivarian Republic of Venezuela","Venezuela, Bolivarian Republic of","República Bolivariana de Venezuela"],region:"Americas",subregion:"South America",languages:{spa:"Spanish"},translations:{ara:{official:"جمهورية فنزويلا البوليفارية",common:"فنزويلا"},bre:{official:"Republik Volivarian Venezuela",common:"Venezuela"},ces:{official:"Bolívarská republika Venezuela",common:"Venezuela"},cym:{official:"Bolivarian Republic of Venezuela",common:"Venezuela"},deu:{official:"Bolivarische Republik Venezuela",common:"Venezuela"},est:{official:"Venezuela Bolívari Vabariik",common:"Venezuela"},fin:{official:"Venezuelan bolivariaainen tasavalta",common:"Venezuela"},fra:{official:"République bolivarienne du Venezuela",common:"Venezuela"},hrv:{official:"BOLIVARIJANSKA Republika Venezuela",common:"Venezuela"},hun:{official:"Venezuelai Bolivári Köztársaság",common:"Venezuela"},ita:{official:"Repubblica Bolivariana del Venezuela",common:"Venezuela"},jpn:{official:"ベネズエラ·ボリバル共和国",common:"ベネズエラ・ボリバル共和国"},kor:{official:"베네수엘라 볼리바르 공화국",common:"베네수엘라"},nld:{official:"Bolivariaanse Republiek Venezuela",common:"Venezuela"},per:{official:"جمهوری بولیواری ونزوئلا",common:"ونزوئلا"},pol:{official:"Boliwariańska Republika Wenezueli",common:"Wenezuela"},por:{official:"República Bolivariana da Venezuela",common:"Venezuela"},rus:{official:"Боливарианская Республика Венесуэла",common:"Венесуэла"},slk:{official:"Venezuelská bolívarovská republika",common:"Venezuela"},spa:{official:"República Bolivariana de Venezuela",common:"Venezuela"},srp:{official:"Боливарска Република Венецуела",common:"Венецуела"},swe:{official:"Bolivarianska republiken Venezuela",common:"Venezuela"},tur:{official:"Bolivarcı Venezuela Cumhuriyeti",common:"Venezuela"},urd:{official:"جمہوریہ وینیزویلا",common:"وینیزویلا"},zho:{official:"委内瑞拉玻利瓦尔共和国",common:"委内瑞拉"}},latlng:[8,-66],landlocked:!1,borders:["BRA","COL","GUY"],area:916445,demonyms:{eng:{f:"Venezuelan",m:"Venezuelan"},fra:{f:"Vénézuélienne",m:"Vénézuélien"}},flag:"🇻🇪",maps:{googleMaps:"https://goo.gl/maps/KLCwDN8sec7z2kse9",openStreetMaps:"https://www.openstreetmap.org/relation/272644"},population:28435943,gini:{2006:44.8},fifa:"VEN",car:{signs:["YV"],side:"right"},timezones:["UTC-04:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/ve.png",svg:"https://flagcdn.com/ve.svg",alt:"The flag of Venezuela is composed of three equal horizontal bands of yellow, blue and red. At the center of the blue band are eight five-pointed white stars arranged in a horizontal arc."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ve.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ve.svg"},startOfWeek:"monday",capitalInfo:{latlng:[10.48,-66.87]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Nigeria",official:"Federal Republic of Nigeria",nativeName:{eng:{official:"Federal Republic of Nigeria",common:"Nigeria"}}},tld:[".ng"],cca2:"NG",ccn3:"566",cca3:"NGA",cioc:"NGR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{NGN:{name:"Nigerian naira",symbol:"₦"}},idd:{root:"+2",suffixes:["34"]},capital:["Abuja"],altSpellings:["NG","Nijeriya","Naíjíríà","Federal Republic of Nigeria"],region:"Africa",subregion:"Western Africa",languages:{eng:"English"},translations:{ara:{official:"جمهورية نيجيريا الاتحادية",common:"نيجيريا"},bre:{official:"Republik Kevreadel Nigeria",common:"Nigeria"},ces:{official:"Nigerijská federativní republika",common:"Nigérie"},cym:{official:"Federal Republic of Nigeria",common:"Nigeria"},deu:{official:"Bundesrepublik Nigeria",common:"Nigeria"},est:{official:"Nigeeria Liitvabariik",common:"Nigeeria"},fin:{official:"Nigerian liittotasavalta",common:"Nigeria"},fra:{official:"République fédérale du Nigeria",common:"Nigéria"},hrv:{official:"Savezna Republika Nigerija",common:"Nigerija"},hun:{official:"Nigéria",common:"Nigéria"},ita:{official:"Repubblica federale di Nigeria",common:"Nigeria"},jpn:{official:"ナイジェリア連邦共和国",common:"ナイジェリア"},kor:{official:"나이지리아 연방 공화국",common:"나이지리아"},nld:{official:"Federale Republiek Nigeria",common:"Nigeria"},per:{official:"جمهوری فدرال نیجریه",common:"نیجریه"},pol:{official:"Federalna Republika Nigerii",common:"Nigeria"},por:{official:"República Federal da Nigéria",common:"Nigéria"},rus:{official:"Федеративная Республика Нигерия",common:"Нигерия"},slk:{official:"Nigérijská federatívna republika",common:"Nigéria"},spa:{official:"República Federal de Nigeria",common:"Nigeria"},srp:{official:"Савезна Република Нигерија",common:"Нигерија "},swe:{official:"Förbundsrepubliken Nigeria",common:"Nigeria"},tur:{official:"Nijerya Federal Cumhuriyeti",common:"Nijerya"},urd:{official:"وفاقی جمہوریہ نائجیریا",common:"نائجیریا"},zho:{official:"尼日利亚联邦共和国",common:"尼日利亚"}},latlng:[10,8],landlocked:!1,borders:["BEN","CMR","TCD","NER"],area:923768,demonyms:{eng:{f:"Nigerian",m:"Nigerian"},fra:{f:"Nigériane",m:"Nigérian"}},flag:"🇳🇬",maps:{googleMaps:"https://goo.gl/maps/LTn417qWwBPFszuV9",openStreetMaps:"https://www.openstreetmap.org/relation/192787"},population:206139587,gini:{2018:35.1},fifa:"NGA",car:{signs:["WAN"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ng.png",svg:"https://flagcdn.com/ng.svg",alt:"The flag of Nigeria is composed of three equal vertical bands of green, white and green."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ng.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ng.svg"},startOfWeek:"monday",capitalInfo:{latlng:[9.08,7.53]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Tokelau",official:"Tokelau",nativeName:{eng:{official:"Tokelau",common:"Tokelau"},smo:{official:"Tokelau",common:"Tokelau"},tkl:{official:"Tokelau",common:"Tokelau"}}},tld:[".tk"],cca2:"TK",ccn3:"772",cca3:"TKL",independent:!1,status:"officially-assigned",unMember:!1,currencies:{NZD:{name:"New Zealand dollar",symbol:"$"}},idd:{root:"+6",suffixes:["90"]},capital:["Fakaofo"],altSpellings:["TK"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English",smo:"Samoan",tkl:"Tokelauan"},translations:{ara:{official:"توكيلاو",common:"توكيلاو"},bre:{official:"Tokelau",common:"Tokelau"},ces:{official:"Tokelau",common:"Tokelau"},cym:{official:"Tokelau",common:"Tokelau"},deu:{official:"Tokelau",common:"Tokelau"},est:{official:"Tokelau",common:"Tokelau"},fin:{official:"Tokelau",common:"Tokelau"},fra:{official:"Îles Tokelau",common:"Tokelau"},hrv:{official:"Tokelau",common:"Tokelau"},hun:{official:"Tokelau-szigetek",common:"Tokelau-szigetek"},ita:{official:"Tokelau",common:"Isole Tokelau"},jpn:{official:"トケラウ諸島",common:"トケラウ"},kor:{official:"토켈라우",common:"토켈라우"},nld:{official:"Tokelau",common:"Tokelau"},per:{official:"توکلائو",common:"توکلائو"},pol:{official:"Tokelau",common:"Tokelau"},por:{official:"Tokelau",common:"Tokelau"},rus:{official:"Токелау",common:"Токелау"},slk:{official:"Tokelauské ostrovy",common:"Tokelau"},spa:{official:"Tokelau",common:"Islas Tokelau"},srp:{official:"Токелау",common:"Токелау"},swe:{official:"Tokelauöarna",common:"Tokelauöarna"},tur:{official:"Tokelau",common:"Tokelau"},urd:{official:"ٹوکیلاؤ",common:"ٹوکیلاؤ"},zho:{official:"托克劳",common:"托克劳"}},latlng:[-9,-172],landlocked:!1,area:12,demonyms:{eng:{f:"Tokelauan",m:"Tokelauan"}},flag:"🇹🇰",maps:{googleMaps:"https://goo.gl/maps/Ap5qN8qien6pT9UN6",openStreetMaps:"https://www.openstreetmap.org/relation/2186600"},population:1411,car:{signs:[""],side:"left"},timezones:["UTC+13:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/tk.png",svg:"https://flagcdn.com/tk.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-9.38,-171.22]}},{name:{common:"Albania",official:"Republic of Albania",nativeName:{sqi:{official:"Republika e Shqipërisë",common:"Shqipëria"}}},tld:[".al"],cca2:"AL",ccn3:"008",cca3:"ALB",cioc:"ALB",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ALL:{name:"Albanian lek",symbol:"L"}},idd:{root:"+3",suffixes:["55"]},capital:["Tirana"],altSpellings:["AL","Shqipëri","Shqipëria","Shqipnia"],region:"Europe",subregion:"Southeast Europe",languages:{sqi:"Albanian"},translations:{ara:{official:"جمهورية ألبانيا",common:"ألبانيا"},bre:{official:"Republik Albania",common:"Albania"},ces:{official:"Albánská republika",common:"Albánie"},cym:{official:"Gweriniaeth Albania",common:"Albania"},deu:{official:"Republik Albanien",common:"Albanien"},est:{official:"Albaania Vabariik",common:"Albaania"},fin:{official:"Albanian tasavalta",common:"Albania"},fra:{official:"République d'Albanie",common:"Albanie"},hrv:{official:"Republika Albanija",common:"Albanija"},hun:{official:"Albán Köztársaság",common:"Albánia"},ita:{official:"Repubblica d'Albania",common:"Albania"},jpn:{official:"アルバニア共和国",common:"アルバニア"},kor:{official:"알바니아 공화국",common:"알바니아"},nld:{official:"Republiek Albanië",common:"Albanië"},per:{official:"جمهوری آلبانی",common:"آلبانی"},pol:{official:"Republika Albanii",common:"Albania"},por:{official:"República da Albânia",common:"Albânia"},rus:{official:"Республика Албания",common:"Албания"},slk:{official:"Albánska republika",common:"Albánsko"},spa:{official:"República de Albania",common:"Albania"},srp:{official:"Република Албанија",common:"Албанија"},swe:{official:"Republiken Albanien",common:"Albanien"},tur:{official:"Arnavutluk Cumhuriyeti",common:"Arnavutluk"},urd:{official:"جمہوریہ البانیا",common:"البانیا"},zho:{official:"阿尔巴尼亚共和国",common:"阿尔巴尼亚"}},latlng:[41,20],landlocked:!1,borders:["MNE","GRC","MKD","UNK"],area:28748,demonyms:{eng:{f:"Albanian",m:"Albanian"},fra:{f:"Albanaise",m:"Albanais"}},flag:"🇦🇱",maps:{googleMaps:"https://goo.gl/maps/BzN9cTuj68ZA8SyZ8",openStreetMaps:"https://www.openstreetmap.org/relation/53292"},population:2837743,gini:{2017:33.2},fifa:"ALB",car:{signs:["AL"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/al.png",svg:"https://flagcdn.com/al.svg",alt:"The flag of Albania features a silhouetted double-headed black eagle at the center of a red field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/al.png",svg:"https://mainfacts.com/media/images/coats_of_arms/al.svg"},startOfWeek:"monday",capitalInfo:{latlng:[41.32,19.82]}},{name:{common:"Monaco",official:"Principality of Monaco",nativeName:{fra:{official:"Principauté de Monaco",common:"Monaco"}}},tld:[".mc"],cca2:"MC",ccn3:"492",cca3:"MCO",cioc:"MON",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["77"]},capital:["Monaco"],altSpellings:["MC","Principality of Monaco","Principauté de Monaco"],region:"Europe",subregion:"Western Europe",languages:{fra:"French"},translations:{ara:{official:"إمارة موناكو",common:"موناكو"},bre:{official:"Priñselezh Monako",common:"Monako"},ces:{official:"Monacké knížectví",common:"Monako"},cym:{official:"Principality of Monaco",common:"Monaco"},deu:{official:"Fürstentum Monaco",common:"Monaco"},est:{official:"Monaco Vürstiriik",common:"Monaco"},fin:{official:"Monacon ruhtinaskunta",common:"Monaco"},fra:{official:"Principauté de Monaco",common:"Monaco"},hrv:{official:"Kneževina Monako",common:"Monako"},hun:{official:"Monacói Hercegség",common:"Monaco"},ita:{official:"Principato di Monaco",common:"Principato di Monaco"},jpn:{official:"モナコ公国",common:"モナコ"},kor:{official:"모나코 공국",common:"모나코"},nld:{official:"Vorstendom Monaco",common:"Monaco"},per:{official:"شاهزاده‌نشین موناکو",common:"موناکو"},pol:{official:"Księstwo Monako",common:"Monako"},por:{official:"Principado do Mónaco",common:"Mónaco"},rus:{official:"Княжество Монако",common:"Монако"},slk:{official:"Monacké kniežatstvo",common:"Monako"},spa:{official:"Principado de Mónaco",common:"Mónaco"},srp:{official:"Кнежевина Монако",common:"Монако"},swe:{official:"Furstendömet Monaco",common:"Monaco"},tur:{official:"Monako Prensliği",common:"Monako"},urd:{official:"جمہوریہ مناکو",common:"موناکو"},zho:{official:"摩纳哥公国",common:"摩纳哥"}},latlng:[43.73333333,7.4],landlocked:!1,borders:["FRA"],area:2.02,demonyms:{eng:{f:"Monegasque",m:"Monegasque"},fra:{f:"Monégasque",m:"Monégasque"}},flag:"🇲🇨",maps:{googleMaps:"https://goo.gl/maps/DGpndDot28bYdXYn7",openStreetMaps:"https://www.openstreetmap.org/relation/1124039"},population:39244,car:{signs:["MC"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/mc.png",svg:"https://flagcdn.com/mc.svg",alt:"The flag of Monaco is composed of two equal horizontal bands of red and white."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mc.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mc.svg"},startOfWeek:"monday",capitalInfo:{latlng:[43.73,7.42]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Gambia",official:"Republic of the Gambia",nativeName:{eng:{official:"Republic of the Gambia",common:"Gambia"}}},tld:[".gm"],cca2:"GM",ccn3:"270",cca3:"GMB",cioc:"GAM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{GMD:{name:"dalasi",symbol:"D"}},idd:{root:"+2",suffixes:["20"]},capital:["Banjul"],altSpellings:["GM","Republic of the Gambia"],region:"Africa",subregion:"Western Africa",languages:{eng:"English"},translations:{ara:{official:"جمهورية غامبيا",common:"غامبيا"},bre:{official:"Republik islamek ar Gambia",common:"Gambia"},ces:{official:"Gambijská republika",common:"Gambie"},cym:{official:"Republic of the Gambia",common:"Gambia"},deu:{official:"Republik Gambia",common:"Gambia"},est:{official:"Gambia Vabariik",common:"Gambia"},fin:{official:"Gambian tasavalta",common:"Gambia"},fra:{official:"République de Gambie",common:"Gambie"},hrv:{official:"Republika Gambija",common:"Gambija"},hun:{official:"Gambiai Köztársaság",common:"Gambia"},ita:{official:"Repubblica del Gambia",common:"Gambia"},jpn:{official:"ガンビア共和国",common:"ガンビア"},kor:{official:"감비아 공화국",common:"감비아"},nld:{official:"Republiek Gambia",common:"Gambia"},per:{official:"جمهوری گامبیا",common:"گامبیا"},pol:{official:"Republika Gambii",common:"Gambia"},por:{official:"República da Gâmbia",common:"Gâmbia"},rus:{official:"Республика Гамбия",common:"Гамбия"},slk:{official:"Gambijská republika",common:"Gambia"},spa:{official:"República de Gambia",common:"Gambia"},srp:{official:"Република Гамбија",common:"Гамбија"},swe:{official:"Republiken Gambia",common:"Gambia"},tur:{official:"Gambiya Cumhuriyeti",common:"Gambiya"},urd:{official:"جمہوریہ گیمبیا",common:"گیمبیا"},zho:{official:"冈比亚共和国",common:"冈比亚"}},latlng:[13.46666666,-16.56666666],landlocked:!1,borders:["SEN"],area:10689,demonyms:{eng:{f:"Gambian",m:"Gambian"},fra:{f:"Gambienne",m:"Gambien"}},flag:"🇬🇲",maps:{googleMaps:"https://goo.gl/maps/bbGBCxxtfD2A9Z4m6",openStreetMaps:"https://www.openstreetmap.org/relation/192774"},population:2416664,gini:{2015:35.9},fifa:"GAM",car:{signs:["WAG"],side:"right"},timezones:["UTC+00:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/gm.png",svg:"https://flagcdn.com/gm.svg",alt:"The flag of Gambia is composed of three equal horizontal bands of red, blue with white top and bottom edges, and green."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[13.45,-16.57]}},{name:{common:"Tanzania",official:"United Republic of Tanzania",nativeName:{eng:{official:"United Republic of Tanzania",common:"Tanzania"},swa:{official:"Jamhuri ya Muungano wa Tanzania",common:"Tanzania"}}},tld:[".tz"],cca2:"TZ",ccn3:"834",cca3:"TZA",cioc:"TAN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{TZS:{name:"Tanzanian shilling",symbol:"Sh"}},idd:{root:"+2",suffixes:["55"]},capital:["Dodoma"],altSpellings:["TZ","Tanzania, United Republic of","United Republic of Tanzania","Jamhuri ya Muungano wa Tanzania"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English",swa:"Swahili"},translations:{ara:{official:"جمهورية تنزانيا الاتحادية",common:"تنزانيا"},bre:{official:"Republik Unanet Tanzania",common:"Tanzania"},ces:{official:"Sjednocená tanzanská republika",common:"Tanzanie"},cym:{official:"United Republic of Tanzania",common:"Tanzania"},deu:{official:"Vereinigte Republik Tansania",common:"Tansania"},est:{official:"Tansaania Ühendvabariik",common:"Tansaania"},fin:{official:"Tansanian yhdistynyt tasavalta",common:"Tansania"},fra:{official:"République -Unie de Tanzanie",common:"Tanzanie"},hrv:{official:"Ujedinjena Republika Tanzanija",common:"Tanzanija"},hun:{official:"Tádzsik Köztársaság",common:"Tádzsikisztán"},ita:{official:"Repubblica Unita di Tanzania",common:"Tanzania"},jpn:{official:"タンザニア連合共和国",common:"タンザニア"},kor:{official:"탄자니아 연합 공화국",common:"탄자니아"},nld:{official:"Verenigde Republiek Tanzania",common:"Tanzania"},per:{official:"جمهوری متحد تانزانیا",common:"تانزانیا"},pol:{official:"Zjednoczona Republika Tanzanii",common:"Tanzania"},por:{official:"República Unida da Tanzânia",common:"Tanzânia"},rus:{official:"Объединенная Республика Танзания",common:"Танзания"},slk:{official:"Tanzánijská zjednotená republika",common:"Tanzánia"},spa:{official:"República Unida de Tanzania",common:"Tanzania"},srp:{official:"Уједињена Република Танзанија",common:"Танзанија"},swe:{official:"Förenade republiken Tanzania",common:"Tanzania"},tur:{official:"Tanzanya Birleşik Cumhuriyeti",common:"Tanzanya"},urd:{official:"متحدہ جمہوریہ تنزانیہ",common:"تنزانیہ"},zho:{official:"坦桑尼亚联合共和国",common:"坦桑尼亚"}},latlng:[-6,35],landlocked:!1,borders:["BDI","COD","KEN","MWI","MOZ","RWA","UGA","ZMB"],area:945087,demonyms:{eng:{f:"Tanzanian",m:"Tanzanian"},fra:{f:"Tanzanienne",m:"Tanzanien"}},flag:"🇹🇿",maps:{googleMaps:"https://goo.gl/maps/NWYMqZYXte4zGZ2Q8",openStreetMaps:"https://www.openstreetmap.org/relation/195270"},population:59734213,gini:{2017:40.5},fifa:"TAN",car:{signs:["EAT"],side:"left"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/tz.png",svg:"https://flagcdn.com/tz.svg",alt:"The flag of Tanzania features a yellow-edged black diagonal band that extends from the lower hoist-side corner to the upper fly-side corner of the field. Above and beneath this band are a green and light blue triangle respectively."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tz.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-6.16,35.75]}},{name:{common:"Belarus",official:"Republic of Belarus",nativeName:{bel:{official:"Рэспубліка Беларусь",common:"Белару́сь"},rus:{official:"Республика Беларусь",common:"Беларусь"}}},tld:[".by"],cca2:"BY",ccn3:"112",cca3:"BLR",cioc:"BLR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BYN:{name:"Belarusian ruble",symbol:"Br"}},idd:{root:"+3",suffixes:["75"]},capital:["Minsk"],altSpellings:["BY","Bielaruś","Republic of Belarus","Белоруссия","Республика Белоруссия"],region:"Europe",subregion:"Eastern Europe",languages:{bel:"Belarusian",rus:"Russian"},translations:{ara:{official:"جمهورية بيلاروسيا",common:"بيلاروسيا"},bre:{official:"Republik Belarus",common:"Belarus"},ces:{official:"Běloruská republika",common:"Bělorusko"},cym:{official:"Gweriniaeth Belarws",common:"Belarws"},deu:{official:"Republik Belarus",common:"Weißrussland"},est:{official:"Valgevene Vabariik",common:"Valgevene"},fin:{official:"Valko-Venäjän tasavalta",common:"Valko-Venäjä"},fra:{official:"République de Biélorussie",common:"Biélorussie"},hrv:{official:"Republika Bjelorusija",common:"Bjelorusija"},hun:{official:"Fehérorosz Köztársaság",common:"Fehéroroszország"},ita:{official:"Repubblica di Belarus",common:"Bielorussia"},jpn:{official:"ベラルーシ共和国",common:"ベラルーシ"},kor:{official:"벨라루스 공화국",common:"벨라루스"},nld:{official:"Republiek Belarus",common:"Wit-Rusland"},per:{official:"جمهوری بلاروس",common:"بلاروس"},pol:{official:"Republika Białorusi",common:"Białoruś"},por:{official:"República da Bielorrússia",common:"Bielorússia"},rus:{official:"Республика Беларусь",common:"Беларусь"},slk:{official:"Bieloruská republika",common:"Bielorusko"},spa:{official:"República de Belarús",common:"Bielorrusia"},srp:{official:"Република Белорусија",common:"Белорусија"},swe:{official:"Republiken Vitryssland",common:"Belarus"},tur:{official:"Belarus Cumhuriyeti",common:"Belarus"},urd:{official:"جمہوریہ بیلاروس",common:"بیلاروس"},zho:{official:"白俄罗斯共和国",common:"白俄罗斯"}},latlng:[53,28],landlocked:!0,borders:["LVA","LTU","POL","RUS","UKR"],area:207600,demonyms:{eng:{f:"Belarusian",m:"Belarusian"},fra:{f:"Biélorusse",m:"Biélorusse"}},flag:"🇧🇾",maps:{googleMaps:"https://goo.gl/maps/PJUDU3EBPSszCQcu6",openStreetMaps:"https://www.openstreetmap.org/relation/59065"},population:9398861,gini:{2019:25.3},fifa:"BLR",car:{signs:["BY"],side:"right"},timezones:["UTC+03:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/by.png",svg:"https://flagcdn.com/by.svg",alt:"The flag of Belarus features a vertical band, with a white and red ornamental pattern, spanning about one-fifth the width of the field on the hoist side. Adjoining the vertical band are two horizontal bands of red and green, with the red band twice the height of the green band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/by.png",svg:"https://mainfacts.com/media/images/coats_of_arms/by.svg"},startOfWeek:"monday",capitalInfo:{latlng:[53.9,27.57]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Republic of the Congo",official:"Republic of the Congo",nativeName:{fra:{official:"République du Congo",common:"République du Congo"},kon:{official:"Repubilika ya Kongo",common:"Repubilika ya Kongo"},lin:{official:"Republíki ya Kongó",common:"Republíki ya Kongó"}}},tld:[".cg"],cca2:"CG",ccn3:"178",cca3:"COG",cioc:"CGO",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XAF:{name:"Central African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["42"]},capital:["Brazzaville"],altSpellings:["CG","Congo","Congo-Brazzaville"],region:"Africa",subregion:"Middle Africa",languages:{fra:"French",kon:"Kikongo",lin:"Lingala"},translations:{ara:{official:"جمهورية الكونغو",common:"جمهورية الكونفو"},bre:{official:"Republik Kongo",common:"Kongo-Brazzaville"},ces:{official:"Konžská republika",common:"Kongo"},cym:{official:"Gweriniaeth y Congo",common:"Gweriniaeth y Congo"},deu:{official:"Republik Kongo",common:"Kongo"},est:{official:"Kongo Vabariik",common:"Kongo Vabariik"},fin:{official:"Kongon tasavalta",common:"Kongo-Brazzaville"},fra:{official:"République du Congo",common:"Congo"},hrv:{official:"Republika Kongo",common:"Kongo"},hun:{official:"Kongói Köztársaság",common:"Kongói Köztársaság"},ita:{official:"Repubblica del Congo",common:"Congo"},jpn:{official:"コンゴ共和国",common:"コンゴ共和国"},kor:{official:"콩고",common:"콩고"},nld:{official:"Republiek Congo",common:"Congo"},per:{official:"جمهوری برازاویل کُنگو",common:"جمهوری کُنگو"},pol:{official:"Republika Konga",common:"Kongo"},por:{official:"República do Congo",common:"Congo"},rus:{official:"Республика Конго",common:"Республика Конго"},slk:{official:"Konžská republika",common:"Kongo"},spa:{official:"República del Congo",common:"Congo"},srp:{official:"Република Конго",common:"Конго"},swe:{official:"Republiken Kongo",common:"Kongo-Brazzaville"},tur:{official:"Kongo Cumhuriyeti",common:"Kongo Cumhuriyeti"},urd:{official:"جمہوریہ کانگو",common:"جمہوریہ کانگو"},zho:{official:"刚果共和国",common:"刚果"}},latlng:[-1,15],landlocked:!1,borders:["AGO","CMR","CAF","COD","GAB"],area:342e3,demonyms:{eng:{f:"Congolese",m:"Congolese"},fra:{f:"Congolaise",m:"Congolais"}},flag:"🇨🇬",maps:{googleMaps:"https://goo.gl/maps/Phf5dDDKdfCtuBTb6",openStreetMaps:"https://www.openstreetmap.org/relation/192794"},population:5657e3,gini:{2011:48.9},fifa:"CGO",car:{signs:["RCB"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/cg.png",svg:"https://flagcdn.com/cg.svg",alt:"The flag of the Republic of the Congo features a yellow diagonal band that extends from the lower hoist-side corner to the upper fly-side corner of the field. Above and beneath this band are a green and red triangle respectively."},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-4.25,15.28]}},{name:{common:"Cyprus",official:"Republic of Cyprus",nativeName:{ell:{official:"Δημοκρατία της Κύπρος",common:"Κύπρος"},tur:{official:"Kıbrıs Cumhuriyeti",common:"Kıbrıs"}}},tld:[".cy"],cca2:"CY",ccn3:"196",cca3:"CYP",cioc:"CYP",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["57"]},capital:["Nicosia"],altSpellings:["CY","Kýpros","Kıbrıs","Republic of Cyprus","Κυπριακή Δημοκρατία","Kıbrıs Cumhuriyeti"],region:"Europe",subregion:"Southern Europe",languages:{ell:"Greek",tur:"Turkish"},translations:{ara:{official:"جمهورية قبرص",common:"قبرص"},bre:{official:"Republik Kiprenez",common:"Kiprenez"},ces:{official:"Kyperská republika",common:"Kypr"},cym:{official:"Gweriniaeth Cyprus",common:"Cyprus"},deu:{official:"Republik Zypern",common:"Zypern"},est:{official:"Küprose Vabariik",common:"Küpros"},fin:{official:"Kyproksen tasavalta",common:"Kypros"},fra:{official:"République de Chypre",common:"Chypre"},hrv:{official:"Republika Cipar",common:"Cipar"},hun:{official:"Ciprusi Köztársaság",common:"Ciprus"},ita:{official:"Repubblica di Cipro",common:"Cipro"},jpn:{official:"キプロス共和国",common:"キプロス"},kor:{official:"키프로스 공화국",common:"키프로스"},nld:{official:"Republiek Cyprus",common:"Cyprus"},per:{official:"جمهوری قبرس",common:"قِبرِس"},pol:{official:"Republika Cypryjska",common:"Cypr"},por:{official:"República de Chipre",common:"Chipre"},rus:{official:"Республика Кипр",common:"Кипр"},slk:{official:"Cyperská republika",common:"Cyprus"},spa:{official:"República de Chipre",common:"Chipre"},srp:{official:"Кипарска Република",common:"Кипар"},swe:{official:"Republiken Cypern",common:"Cypern"},tur:{official:"Kıbrıs Cumhuriyeti",common:"Kıbrıs"},urd:{official:"جمہوریہ قبرص",common:"قبرص"},zho:{official:"塞浦路斯共和国",common:"塞浦路斯"}},latlng:[35,33],landlocked:!1,area:9251,demonyms:{eng:{f:"Cypriot",m:"Cypriot"},fra:{f:"Chypriote",m:"Chypriote"}},flag:"🇨🇾",maps:{googleMaps:"https://goo.gl/maps/77hPBRdLid8yD5Bm7",openStreetMaps:"https://www.openstreetmap.org/relation/307787"},population:1207361,gini:{2018:32.7},fifa:"CYP",car:{signs:["CY"],side:"left"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/cy.png",svg:"https://flagcdn.com/cy.svg",alt:"The flag of Cyprus has a white field, at the center of which is a copper-colored silhouette of the Island of Cyprus above two green olive branches crossed at the stem."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cy.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cy.svg"},startOfWeek:"monday",capitalInfo:{latlng:[35.17,33.37]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Lebanon",official:"Lebanese Republic",nativeName:{ara:{official:"الجمهورية اللبنانية",common:"لبنان"},fra:{official:"République libanaise",common:"Liban"}}},tld:[".lb"],cca2:"LB",ccn3:"422",cca3:"LBN",cioc:"LBN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{LBP:{name:"Lebanese pound",symbol:"ل.ل"}},idd:{root:"+9",suffixes:["61"]},capital:["Beirut"],altSpellings:["LB","Lebanese Republic","Al-Jumhūrīyah Al-Libnānīyah"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic",fra:"French"},translations:{ara:{official:"الجمهورية اللبنانية",common:"لبنان"},bre:{official:"Republik Liban",common:"Liban"},ces:{official:"Libanonská republika",common:"Libanon"},cym:{official:"Lebanese Republic",common:"Lebanon"},deu:{official:"Libanesische Republik",common:"Libanon"},est:{official:"Liibanoni Vabariik",common:"Liibanon"},fin:{official:"Libanonin tasavalta",common:"Libanon"},fra:{official:"République libanaise",common:"Liban"},hrv:{official:"Libanonska Republika",common:"Libanon"},hun:{official:"Libanoni Köztársaság",common:"Libanon"},ita:{official:"Repubblica libanese",common:"Libano"},jpn:{official:"レバノン共和国",common:"レバノン"},kor:{official:"레바논 공화국",common:"레바논"},nld:{official:"Libanese Republiek",common:"Libanon"},per:{official:"جمهوری لبنان",common:"لبنان"},pol:{official:"Republika Libańska",common:"Liban"},por:{official:"República Libanesa",common:"Líbano"},rus:{official:"Ливанская Республика",common:"Ливан"},slk:{official:"Libanonská republika",common:"Libanon"},spa:{official:"República Libanesa",common:"Líbano"},srp:{official:"Либанска Република",common:"Либан"},swe:{official:"Republiken Libanon",common:"Libanon"},tur:{official:"Lübnan Cumhuriyeti",common:"Lübnan"},urd:{official:"جمہوریہ لبنان",common:"لبنان"},zho:{official:"黎巴嫩共和国",common:"黎巴嫩"}},latlng:[33.83333333,35.83333333],landlocked:!1,borders:["ISR","SYR"],area:10452,demonyms:{eng:{f:"Lebanese",m:"Lebanese"},fra:{f:"Libanaise",m:"Libanais"}},flag:"🇱🇧",maps:{googleMaps:"https://goo.gl/maps/Sz5VCU8UFBqMyTdc9",openStreetMaps:"https://www.openstreetmap.org/relation/184843"},population:6825442,gini:{2011:31.8},fifa:"LBN",car:{signs:["RL"],side:"right"},timezones:["UTC+02:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/lb.png",svg:"https://flagcdn.com/lb.svg",alt:"The flag of Lebanon is composed of three horizontal bands of red, white and red. The white band is twice the height of the red bands and bears a green Lebanese Cedar tree at its center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/lb.png",svg:"https://mainfacts.com/media/images/coats_of_arms/lb.svg"},startOfWeek:"monday",capitalInfo:{latlng:[33.87,35.5]},postalCode:{format:"#### ####|####",regex:"^(\\d{4}(\\d{4})?)$"}},{name:{common:"Slovakia",official:"Slovak Republic",nativeName:{slk:{official:"Slovenská republika",common:"Slovensko"}}},tld:[".sk"],cca2:"SK",ccn3:"703",cca3:"SVK",cioc:"SVK",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+4",suffixes:["21"]},capital:["Bratislava"],altSpellings:["SK","Slovak Republic","Slovenská republika"],region:"Europe",subregion:"Central Europe",languages:{slk:"Slovak"},translations:{ara:{official:"جمهورية سلوفاكيا",common:"سلوفاكيا"},bre:{official:"Republik Slovak",common:"Slovakia"},ces:{official:"Slovenská republika",common:"Slovensko"},cym:{official:"Slovak Republic",common:"Slovakia"},deu:{official:"Slowakische Republik",common:"Slowakei"},est:{official:"Slovaki Vabariik",common:"Slovakkia"},fin:{official:"Slovakian tasavalta",common:"Slovakia"},fra:{official:"République slovaque",common:"Slovaquie"},hrv:{official:"slovačka",common:"Slovačka"},hun:{official:"Szlovák Köztársaság",common:"Szlovákia"},ita:{official:"Repubblica slovacca",common:"Slovacchia"},jpn:{official:"スロバキア共和国",common:"スロバキア"},kor:{official:"슬로바키아 공화국",common:"슬로바키아"},nld:{official:"Slowaakse Republiek",common:"Slowakije"},per:{official:"جمهوری اسلواکی",common:"اِسلُواکی"},pol:{official:"Republika Słowacka",common:"Słowacja"},por:{official:"República Eslovaca",common:"Eslováquia"},rus:{official:"Словацкая Республика",common:"Словакия"},slk:{official:"Slovenská republika",common:"Slovensko"},spa:{official:"República Eslovaca",common:"República Eslovaca"},srp:{official:"Словачка Република",common:"Словачка"},swe:{official:"Republiken Slovakien",common:"Slovakien"},tur:{official:"Slovak Cumhuriyeti",common:"Slovakya"},urd:{official:"جمہوریہ سلوواکیہ",common:"سلوواکیہ"},zho:{official:"斯洛伐克共和国",common:"斯洛伐克"}},latlng:[48.66666666,19.5],landlocked:!0,borders:["AUT","CZE","HUN","POL","UKR"],area:49037,demonyms:{eng:{f:"Slovak",m:"Slovak"},fra:{f:"Slovaque",m:"Slovaque"}},flag:"🇸🇰",maps:{googleMaps:"https://goo.gl/maps/uNSH2wW4bLoZVYJj7",openStreetMaps:"https://www.openstreetmap.org/relation/14296"},population:5458827,gini:{2018:25},fifa:"SVK",car:{signs:["SK"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/sk.png",svg:"https://flagcdn.com/sk.svg",alt:"The flag of Slovakia is composed of three equal horizontal bands of white, blue and red. The coat of arms of Slovakia is superimposed at the center of the field slightly towards the hoist side."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[48.15,17.12]},postalCode:{format:"###  ##",regex:"^(\\d{5})$"}},{name:{common:"Samoa",official:"Independent State of Samoa",nativeName:{eng:{official:"Independent State of Samoa",common:"Samoa"},smo:{official:"Malo Saʻoloto Tutoʻatasi o Sāmoa",common:"Sāmoa"}}},tld:[".ws"],cca2:"WS",ccn3:"882",cca3:"WSM",cioc:"SAM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{WST:{name:"Samoan tālā",symbol:"T"}},idd:{root:"+6",suffixes:["85"]},capital:["Apia"],altSpellings:["WS","Independent State of Samoa","Malo Saʻoloto Tutoʻatasi o Sāmoa"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English",smo:"Samoan"},translations:{ara:{official:"دولة ساموا المستقلة",common:"ساموا"},bre:{official:"Stad Dizalc'h Samoa",common:"Samoa"},ces:{official:"Nezávislý stát Samoa",common:"Samoa"},cym:{official:"Independent State of Samoa",common:"Samoa"},deu:{official:"Unabhängige Staat Samoa",common:"Samoa"},est:{official:"Samoa Iseseisvusriik",common:"Samoa"},fin:{official:"Samoan itsenäinen valtio",common:"Samoa"},fra:{official:"Samoa",common:"Samoa"},hrv:{official:"Nezavisna Država Samoa",common:"Samoa"},hun:{official:"Szamoai Független Állam",common:"Szamoa"},ita:{official:"Stato indipendente di Samoa",common:"Samoa"},jpn:{official:"サモア独立国",common:"サモア"},kor:{official:"사모아 독립국",common:"사모아"},nld:{official:"Onafhankelijke Staat Samoa",common:"Samoa"},per:{official:"ایالت مستقل ساموآ",common:"ساموآ"},pol:{official:"Niezależne Państwo Samoa",common:"Samoa"},por:{official:"Estado Independente de Samoa",common:"Samoa"},rus:{official:"Независимое Государство Самоа",common:"Самоа"},slk:{official:"Nezávislý štátSamoa",common:"Samoa"},spa:{official:"Estado Independiente de Samoa",common:"Samoa"},srp:{official:"Независна Држава Самоа",common:"Самоа"},swe:{official:"Självständiga staten Samoa",common:"Samoa"},tur:{official:"Bağımsız Samoa Devleti",common:"Bağımsız Samoa Devleti"},urd:{official:"آزاد سلطنتِ ساموا",common:"سامووا"},zho:{official:"萨摩亚独立国",common:"萨摩亚"}},latlng:[-13.58333333,-172.33333333],landlocked:!1,area:2842,demonyms:{eng:{f:"Samoan",m:"Samoan"},fra:{f:"Samoane",m:"Samoan"}},flag:"🇼🇸",maps:{googleMaps:"https://goo.gl/maps/CFC9fEFP9cfkYUBF9",openStreetMaps:"https://www.openstreetmap.org/relation/1872673"},population:198410,gini:{2013:38.7},fifa:"SAM",car:{signs:["WS"],side:"left"},timezones:["UTC+13:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/ws.png",svg:"https://flagcdn.com/ws.svg",alt:"The flag of Samoa has a red field. A blue rectangle, bearing a representation of the Southern Cross made up of five large and one smaller five-pointed white stars, is superimposed in the canton."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ws.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ws.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-13.82,-171.77]}},{name:{common:"Estonia",official:"Republic of Estonia",nativeName:{est:{official:"Eesti Vabariik",common:"Eesti"}}},tld:[".ee"],cca2:"EE",ccn3:"233",cca3:"EST",cioc:"EST",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["72"]},capital:["Tallinn"],altSpellings:["EE","Eesti","Republic of Estonia","Eesti Vabariik"],region:"Europe",subregion:"Northern Europe",languages:{est:"Estonian"},translations:{ara:{official:"جمهورية إستونيا",common:"إستونيا"},bre:{official:"Republik Estonia",common:"Estonia"},ces:{official:"Estonská republika",common:"Estonsko"},cym:{official:"Gweriniaeth Estonia",common:"Estonia"},deu:{official:"Republik Estland",common:"Estland"},est:{official:"Eesti Vabariik",common:"Eesti"},fin:{official:"Viron tasavalta",common:"Viro"},fra:{official:"République d'Estonie",common:"Estonie"},hrv:{official:"Republika Estonija",common:"Estonija"},hun:{official:"Észt Köztársaság",common:"Észtország"},ita:{official:"Repubblica di Estonia",common:"Estonia"},jpn:{official:"エストニア共和国",common:"エストニア"},kor:{official:"에스토니아 공화국",common:"에스토니아"},nld:{official:"Republiek Estland",common:"Estland"},per:{official:"جمهوری استونی",common:"اِستونی"},pol:{official:"Republika Estońska",common:"Estonia"},por:{official:"República da Estónia",common:"Estónia"},rus:{official:"Эстонская Республика",common:"Эстония"},slk:{official:"Estónska republika",common:"Estónsko"},spa:{official:"República de Estonia",common:"Estonia"},srp:{official:"Естонска Република",common:"Естонија"},swe:{official:"Republiken Estland",common:"Estland"},tur:{official:"Estonya Cumhuriyeti",common:"Estonya"},urd:{official:"جمہوریہ اسٹونیا",common:"اسٹونیا"},zho:{official:"爱沙尼亚共和国",common:"爱沙尼亚"}},latlng:[59,26],landlocked:!1,borders:["LVA","RUS"],area:45227,demonyms:{eng:{f:"Estonian",m:"Estonian"},fra:{f:"Estonienne",m:"Estonien"}},flag:"🇪🇪",maps:{googleMaps:"https://goo.gl/maps/6SsynwGUodL1sDvq8",openStreetMaps:"https://www.openstreetmap.org/relation/79510"},population:1331057,gini:{2018:30.3},fifa:"EST",car:{signs:["EST"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ee.png",svg:"https://flagcdn.com/ee.svg",alt:"The flag of Estonia is composed of three equal horizontal bands of blue, black and white."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ee.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ee.svg"},startOfWeek:"monday",capitalInfo:{latlng:[59.43,24.72]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Palau",official:"Republic of Palau",nativeName:{eng:{official:"Republic of Palau",common:"Palau"},pau:{official:"Beluu er a Belau",common:"Belau"}}},tld:[".pw"],cca2:"PW",ccn3:"585",cca3:"PLW",cioc:"PLW",independent:!0,status:"officially-assigned",unMember:!0,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+6",suffixes:["80"]},capital:["Ngerulmud"],altSpellings:["PW","Republic of Palau","Beluu er a Belau"],region:"Oceania",subregion:"Micronesia",languages:{eng:"English",pau:"Palauan"},translations:{ara:{official:"جمهورية بالاو",common:"بالاو"},bre:{official:"Republik Palau",common:"Palau"},ces:{official:"Republika Palau",common:"Palau"},cym:{official:"Republic of Palau",common:"Palau"},deu:{official:"Republik Palau",common:"Palau"},est:{official:"Belau Vabariik",common:"Belau"},fin:{official:"Palaun tasavalta",common:"Palau"},fra:{official:"République des Palaos (Palau)",common:"Palaos (Palau)"},hrv:{official:"Republika Palau",common:"Palau"},hun:{official:"Palaui Köztársaság",common:"Palau"},ita:{official:"Repubblica di Palau",common:"Palau"},jpn:{official:"パラオ共和国",common:"パラオ"},kor:{official:"팔라우 공화국",common:"팔라우"},nld:{official:"Republiek van Palau",common:"Palau"},per:{official:"جمهوری پالائو",common:"پالائو"},pol:{official:"Republika Palau",common:"Palau"},por:{official:"República de Palau",common:"Palau"},rus:{official:"Республика Палау",common:"Палау"},slk:{official:"Palauská republika",common:"Palau"},spa:{official:"República de Palau",common:"Palau"},srp:{official:"Република Палау",common:"Палау"},swe:{official:"Republiken Palau",common:"Palau"},tur:{official:"Palau Cumhuriyeti",common:"Palau"},urd:{official:"جمہوریہ پلاؤ",common:"پلاؤ"},zho:{official:"帕劳共和国",common:"帕劳"}},latlng:[7.5,134.5],landlocked:!1,area:459,demonyms:{eng:{f:"Palauan",m:"Palauan"},fra:{f:"Paluane",m:"Paluan"}},flag:"🇵🇼",maps:{googleMaps:"https://goo.gl/maps/MVasQBbUkQP7qQDR9",openStreetMaps:"https://www.openstreetmap.org/relation/571805"},population:18092,car:{signs:["PAL"],side:"right"},timezones:["UTC+09:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/pw.png",svg:"https://flagcdn.com/pw.svg",alt:"The flag of Palau has a light blue field with a large golden-yellow circle that is offset slightly towards the hoist side of center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[7.5,134.62]},postalCode:{format:"96940",regex:"^(96940)$"}},{name:{common:"Micronesia",official:"Federated States of Micronesia",nativeName:{eng:{official:"Federated States of Micronesia",common:"Micronesia"}}},tld:[".fm"],cca2:"FM",ccn3:"583",cca3:"FSM",cioc:"FSM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+6",suffixes:["91"]},capital:["Palikir"],altSpellings:["FM","Federated States of Micronesia","Micronesia, Federated States of"],region:"Oceania",subregion:"Micronesia",languages:{eng:"English"},translations:{ara:{official:"ولايات ميكرونيسيا المتحدة",common:"ميكرونيسيا"},bre:{official:"Stadoù Kevreet Mikronezia",common:"Mikronezia"},ces:{official:"Federativní státy Mikronésie",common:"Mikronésie"},cym:{official:"Federated States of Micronesia",common:"Micronesia"},deu:{official:"Föderierte Staaten von Mikronesien",common:"Mikronesien"},est:{official:"Mikroneesia Liiduriigid",common:"Mikroneesia"},fin:{official:"Mikronesian liittovaltio",common:"Mikronesia"},fra:{official:"États fédérés de Micronésie",common:"Micronésie"},hrv:{official:"Savezne Države Mikronezije",common:"Mikronezija"},hun:{official:"Mikronéziai Szövetségi Államok",common:"Mikronéziai Szövetségi Államok"},ita:{official:"Stati federati di Micronesia",common:"Micronesia"},jpn:{official:"ミクロネシア連邦",common:"ミクロネシア連邦"},kor:{official:"미크로네시아 연방",common:"미크로네시아"},nld:{official:"Federale Staten van Micronesia",common:"Micronesië"},per:{official:"ایالات فدرال میکرونزی",common:"میکرونزی"},pol:{official:"Sfederowane Stany Mikronezji",common:"Mikronezja"},por:{official:"Estados Federados da Micronésia",common:"Micronésia"},rus:{official:"Федеративные Штаты Микронезии",common:"Федеративные Штаты Микронезии"},slk:{official:"Mikronézske federatívne štáty",common:"Mikronézia"},spa:{official:"Estados Federados de Micronesia",common:"Micronesia"},srp:{official:"Савез Држава Микронезије",common:"Микронезија"},swe:{official:"Mikronesiska federationen",common:"Mikronesiska federationen"},tur:{official:"Mikronezya Federal Devletleri",common:"Mikronezya"},urd:{official:"ریاستہائے وفاقیہ مائکرونیشیا",common:"مائکرونیشیا"},zho:{official:"密克罗尼西亚联邦",common:"密克罗尼西亚"}},latlng:[6.91666666,158.25],landlocked:!1,area:702,demonyms:{eng:{f:"Micronesian",m:"Micronesian"},fra:{f:"Micronésienne",m:"Micronésien"}},flag:"🇫🇲",maps:{googleMaps:"https://goo.gl/maps/LLcnofC5LxZsJXTo8",openStreetMaps:"https://www.openstreetmap.org/relation/571802"},population:115021,gini:{2013:40.1},car:{signs:["FSM"],side:"right"},timezones:["UTC+10:00","UTC+11:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/fm.png",svg:"https://flagcdn.com/fm.svg",alt:"The flag of Micronesia has a light blue field, at the center of which are four five-pointed white stars arranged in the shape of a diamond."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/fm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/fm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[6.92,158.15]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Haiti",official:"Republic of Haiti",nativeName:{fra:{official:"République d'Haïti",common:"Haïti"},hat:{official:"Repiblik Ayiti",common:"Ayiti"}}},tld:[".ht"],cca2:"HT",ccn3:"332",cca3:"HTI",cioc:"HAI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{HTG:{name:"Haitian gourde",symbol:"G"}},idd:{root:"+5",suffixes:["09"]},capital:["Port-au-Prince"],altSpellings:["HT","Republic of Haiti","République d'Haïti","Repiblik Ayiti"],region:"Americas",subregion:"Caribbean",languages:{fra:"French",hat:"Haitian Creole"},translations:{ara:{official:"جمهورية هايتي",common:"هايتي"},bre:{official:"Republik Haiti",common:"Haiti"},ces:{official:"Republika Haiti",common:"Haiti"},cym:{official:"Republic of Haiti",common:"Haiti"},deu:{official:"Republik Haiti",common:"Haiti"},est:{official:"Haiti Vabariik",common:"Haiti"},fin:{official:"Haitin tasavalta",common:"Haiti"},fra:{official:"République d'Haïti",common:"Haïti"},hrv:{official:"Republika Haiti",common:"Haiti"},hun:{official:"Haiti Köztársaság",common:"Haiti"},ita:{official:"Repubblica di Haiti",common:"Haiti"},jpn:{official:"ハイチ共和国",common:"ハイチ"},kor:{official:"아이티 공화국",common:"아이티"},nld:{official:"Republiek Haïti",common:"Haïti"},per:{official:"جمهوری هائیتی",common:"هائیتی"},pol:{official:"Republika Haiti",common:"Haiti"},por:{official:"República do Haiti",common:"Haiti"},rus:{official:"Республика Гаити",common:"Гаити"},slk:{official:"Haitská republika",common:"Haiti"},spa:{official:"República de Haití",common:"Haití"},srp:{official:"Република Хаити",common:"Хаити"},swe:{official:"Republiken Haiti",common:"Haiti"},tur:{official:"Haiti Cumhuriyeti",common:"Haiti"},urd:{official:"جمہوریہ ہیٹی",common:"ہیٹی"},zho:{official:"海地共和国",common:"海地"}},latlng:[19,-72.41666666],landlocked:!1,borders:["DOM"],area:27750,demonyms:{eng:{f:"Haitian",m:"Haitian"},fra:{f:"Haïtienne",m:"Haïtien"}},flag:"🇭🇹",maps:{googleMaps:"https://goo.gl/maps/9o13xtjuUdqFnHbn9",openStreetMaps:"https://www.openstreetmap.org/relation/307829"},population:11402533,gini:{2012:41.1},fifa:"HAI",car:{signs:["RH"],side:"right"},timezones:["UTC-05:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/ht.png",svg:"https://flagcdn.com/ht.svg",alt:"The flag of Haiti is composed of two equal horizontal bands of blue and red. A white square bearing the national coat of arms is superimposed at the center of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ht.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ht.svg"},startOfWeek:"monday",capitalInfo:{latlng:[18.53,-72.33]},postalCode:{format:"HT####",regex:"^(?:HT)*(\\d{4})$"}},{name:{common:"Moldova",official:"Republic of Moldova",nativeName:{ron:{official:"Republica Moldova",common:"Moldova"}}},tld:[".md"],cca2:"MD",ccn3:"498",cca3:"MDA",cioc:"MDA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MDL:{name:"Moldovan leu",symbol:"L"}},idd:{root:"+3",suffixes:["73"]},capital:["Chișinău"],altSpellings:["MD","Moldova, Republic of","Republic of Moldova","Republica Moldova"],region:"Europe",subregion:"Eastern Europe",languages:{ron:"Romanian"},translations:{ara:{official:"جمهورية مولدوڤا",common:"مولدوڤا"},bre:{official:"Republik Moldova",common:"Moldova"},ces:{official:"Moldavská republika",common:"Moldavsko"},cym:{official:"Republic of Moldova",common:"Moldova"},deu:{official:"Republik Moldau",common:"Moldawien"},est:{official:"Moldova Vabariik",common:"Moldova"},fin:{official:"Moldovan tasavalta",common:"Moldova"},fra:{official:"République de Moldavie",common:"Moldavie"},hrv:{official:"Moldavija",common:"Moldova"},hun:{official:"Moldovai Köztársaság",common:"Moldova"},ita:{official:"Repubblica di Moldova",common:"Moldavia"},jpn:{official:"モルドバ共和国",common:"モルドバ共和国"},kor:{official:"몰도바 공화국",common:"몰도바"},nld:{official:"Republiek Moldavië",common:"Moldavië"},per:{official:"جمهوری مولداوی",common:"مولداوی"},pol:{official:"Republika Mołdawii",common:"Mołdawia"},por:{official:"República da Moldávia",common:"Moldávia"},rus:{official:"Молдова",common:"Молдавия"},slk:{official:"Moldavská republika",common:"Moldavsko"},spa:{official:"República de Moldova",common:"Moldavia"},srp:{official:"Република Молдавија",common:"Молдавија"},swe:{official:"Republiken Moldavien",common:"Moldavien"},tur:{official:"Moldova Cumhuriyeti",common:"Moldova"},urd:{official:"جمہوریہ مالدووا",common:"مالدووا"},zho:{official:"摩尔多瓦共和国",common:"摩尔多瓦"}},latlng:[47,29],landlocked:!0,borders:["ROU","UKR"],area:33846,demonyms:{eng:{f:"Moldovan",m:"Moldovan"},fra:{f:"Moldave",m:"Moldave"}},flag:"🇲🇩",maps:{googleMaps:"https://goo.gl/maps/JjmyUuULujnDeFPf7",openStreetMaps:"https://www.openstreetmap.org/relation/58974"},population:2617820,gini:{2018:25.7},fifa:"MDA",car:{signs:["MD"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/md.png",svg:"https://flagcdn.com/md.svg",alt:"The flag of Moldova is composed of three equal vertical bands of blue, yellow and red, with the national coat of arms centered in the yellow band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/md.png",svg:"https://mainfacts.com/media/images/coats_of_arms/md.svg"},startOfWeek:"monday",capitalInfo:{latlng:[47.01,28.9]},postalCode:{format:"MD-####",regex:"^(?:MD)*(\\d{4})$"}},{name:{common:"Marshall Islands",official:"Republic of the Marshall Islands",nativeName:{eng:{official:"Republic of the Marshall Islands",common:"Marshall Islands"},mah:{official:"Republic of the Marshall Islands",common:"M̧ajeļ"}}},tld:[".mh"],cca2:"MH",ccn3:"584",cca3:"MHL",cioc:"MHL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+6",suffixes:["92"]},capital:["Majuro"],altSpellings:["MH","Republic of the Marshall Islands","Aolepān Aorōkin M̧ajeļ"],region:"Oceania",subregion:"Micronesia",languages:{eng:"English",mah:"Marshallese"},translations:{ara:{official:"جمهورية جزر مارشال",common:"جزر مارشال"},bre:{official:"Republik Inizi Marshall",common:"Inizi Marshall"},ces:{official:"Republika Marshallovy ostrovy",common:"Marshallovy ostrovy"},cym:{official:"Republic of the Marshall Islands",common:"Marshall Islands"},deu:{official:"Republik Marshallinseln",common:"Marshallinseln"},est:{official:"Marshalli Saarte Vabariik",common:"Marshalli Saared"},fin:{official:"Marshallinsaarten tasavalta",common:"Marshallinsaaret"},fra:{official:"République des Îles Marshall",common:"Îles Marshall"},hrv:{official:"Republika Maršalovi Otoci",common:"Maršalovi Otoci"},hun:{official:"Marshall-szigetek",common:"Marshall-szigetek"},ita:{official:"Repubblica delle Isole Marshall",common:"Isole Marshall"},jpn:{official:"マーシャル諸島共和国",common:"マーシャル諸島"},kor:{official:"마셜 제도 공화국",common:"마셜 제도"},nld:{official:"Republiek van de Marshall-eilanden",common:"Marshalleilanden"},per:{official:"جمهوری جزایر مارشال",common:"جزایر مارشال"},pol:{official:"Republika Wysp Marshalla",common:"Wyspy Marshalla"},por:{official:"República das Ilhas Marshall",common:"Ilhas Marshall"},rus:{official:"Республика Маршалловы острова",common:"Маршалловы Острова"},slk:{official:"Republika Marshallových ostrovov",common:"Marshallove ostrovy"},spa:{official:"República de las Islas Marshall",common:"Islas Marshall"},srp:{official:"Република Маршалска Острва",common:"Маршалска Острва"},swe:{official:"Republiken Marshallöarna",common:"Marshallöarna"},tur:{official:"Marshall Adaları Cumhuriyeti",common:"Marshall Adaları"},urd:{official:"جمہوریہ جزائر مارشل",common:"جزائر مارشل"},zho:{official:"马绍尔群岛共和国",common:"马绍尔群岛"}},latlng:[9,168],landlocked:!1,area:181,demonyms:{eng:{f:"Marshallese",m:"Marshallese"},fra:{f:"Marshallaise",m:"Marshallais"}},flag:"🇲🇭",maps:{googleMaps:"https://goo.gl/maps/A4xLi1XvcX88gi3W8",openStreetMaps:"https://www.openstreetmap.org/relation/571771"},population:59194,car:{signs:["MH"],side:"right"},timezones:["UTC+12:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/mh.png",svg:"https://flagcdn.com/mh.svg",alt:"The flag of Marshall Islands has a blue field with two broadening adjacent diagonal bands of orange and white that extend from the lower hoist-side corner to the upper fly-side corner of the field. A large white star with twenty-four rays — four large rays at the cardinal points and twenty smaller rays — is situated in the upper hoist-side corner above the diagonal bands."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mh.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mh.svg"},startOfWeek:"monday",capitalInfo:{latlng:[7.1,171.38]}},{name:{common:"Tunisia",official:"Tunisian Republic",nativeName:{ara:{official:"الجمهورية التونسية",common:"تونس"}}},tld:[".tn"],cca2:"TN",ccn3:"788",cca3:"TUN",cioc:"TUN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{TND:{name:"Tunisian dinar",symbol:"د.ت"}},idd:{root:"+2",suffixes:["16"]},capital:["Tunis"],altSpellings:["TN","Republic of Tunisia","al-Jumhūriyyah at-Tūnisiyyah"],region:"Africa",subregion:"Northern Africa",languages:{ara:"Arabic"},translations:{ara:{official:"الجمهورية التونسية",common:"تونس"},bre:{official:"Republik Tunizian",common:"Tunizia"},ces:{official:"Tuniská republika",common:"Tunisko"},cym:{official:"Tunisian Republic",common:"Tunisia"},deu:{official:"Tunesische Republik",common:"Tunesien"},est:{official:"Tuneesia Vabariik",common:"Tuneesia"},fin:{official:"Tunisian tasavalta",common:"Tunisia"},fra:{official:"République tunisienne",common:"Tunisie"},hrv:{official:"Tuniski Republika",common:"Tunis"},hun:{official:"Tunéziai Köztársaság",common:"Tunézia"},ita:{official:"Repubblica tunisina",common:"Tunisia"},jpn:{official:"チュニジア共和国",common:"チュニジア"},kor:{official:"튀니지 공화국",common:"튀니지"},nld:{official:"Republiek Tunesië",common:"Tunesië"},per:{official:"جمهوری تونس",common:"تونس"},pol:{official:"Republika Tunezyjska",common:"Tunezja"},por:{official:"República da Tunísia",common:"Tunísia"},rus:{official:"Тунисской Республики",common:"Тунис"},slk:{official:"Tuniská republika",common:"Tunisko"},spa:{official:"República de Túnez",common:"Túnez"},srp:{official:"Тунишанска Република",common:"Тунис"},swe:{official:"Republiken Tunisien",common:"Tunisien"},tur:{official:"Tunus Cumhuriyeti",common:"Tunus"},urd:{official:"جمہوریہ تونس",common:"تونس"},zho:{official:"突尼斯共和国",common:"突尼斯"}},latlng:[34,9],landlocked:!1,borders:["DZA","LBY"],area:163610,demonyms:{eng:{f:"Tunisian",m:"Tunisian"},fra:{f:"Tunisienne",m:"Tunisien"}},flag:"🇹🇳",maps:{googleMaps:"https://goo.gl/maps/KgUmpZdUuNRaougs8",openStreetMaps:"https://www.openstreetmap.org/relation/192757"},population:11818618,gini:{2015:32.8},fifa:"TUN",car:{signs:["TN"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/tn.png",svg:"https://flagcdn.com/tn.svg",alt:"The flag of Tunisia has a red field. A white circle bearing a five-pointed red star within a fly-side facing red crescent is situated at the center of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[36.8,10.18]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Lesotho",official:"Kingdom of Lesotho",nativeName:{eng:{official:"Kingdom of Lesotho",common:"Lesotho"},sot:{official:"Kingdom of Lesotho",common:"Lesotho"}}},tld:[".ls"],cca2:"LS",ccn3:"426",cca3:"LSO",cioc:"LES",independent:!0,status:"officially-assigned",unMember:!0,currencies:{LSL:{name:"Lesotho loti",symbol:"L"},ZAR:{name:"South African rand",symbol:"R"}},idd:{root:"+2",suffixes:["66"]},capital:["Maseru"],altSpellings:["LS","Kingdom of Lesotho","Muso oa Lesotho"],region:"Africa",subregion:"Southern Africa",languages:{eng:"English",sot:"Sotho"},translations:{ara:{official:"مملكة ليسوتو",common:"ليسوتو"},bre:{official:"Rouantelezh Lesotho",common:"Lesotho"},ces:{official:"Lesothské království",common:"Lesotho"},cym:{official:"Kingdom of Lesotho",common:"Lesotho"},deu:{official:"Königreich Lesotho",common:"Lesotho"},est:{official:"Lesotho Kuningriik",common:"Lesotho"},fin:{official:"Lesothon kuningaskunta",common:"Lesotho"},fra:{official:"Royaume du Lesotho",common:"Lesotho"},hrv:{official:"Kraljevina Lesoto",common:"Lesoto"},hun:{official:"Lesothói Királyság",common:"Lesotho"},ita:{official:"Regno del Lesotho",common:"Lesotho"},jpn:{official:"レソト王国",common:"レソト"},kor:{official:"레소토 왕국",common:"레소토"},nld:{official:"Koninkrijk Lesotho",common:"Lesotho"},per:{official:"پادشاهی لسوتو",common:"لسوتو"},pol:{official:"Królestwo Lesotho",common:"Lesotho"},por:{official:"Reino do Lesoto",common:"Lesoto"},rus:{official:"Королевство Лесото",common:"Лесото"},slk:{official:"Lesothské kráľovstvo",common:"Lesotho"},spa:{official:"Reino de Lesotho",common:"Lesotho"},srp:{official:"Краљевина Лесото",common:"Лесото"},swe:{official:"Konungariket Lesotho",common:"Lesotho"},tur:{official:"Lesotho Krallığı",common:"Lesotho"},urd:{official:"مملکتِ لیسوتھو",common:"لیسوتھو"},zho:{official:"莱索托王国",common:"莱索托"}},latlng:[-29.5,28.5],landlocked:!0,borders:["ZAF"],area:30355,demonyms:{eng:{f:"Mosotho",m:"Mosotho"},fra:{f:"Lésothienne",m:"Lésothien"}},flag:"🇱🇸",maps:{googleMaps:"https://goo.gl/maps/H8gJi5mL4Cmd1SF28",openStreetMaps:"https://www.openstreetmap.org/relation/2093234"},population:2142252,gini:{2017:44.9},fifa:"LES",car:{signs:["LS"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ls.png",svg:"https://flagcdn.com/ls.svg",alt:"The flag of Lesotho is composed of three horizontal bands of blue, white and green in the ratio of 3:4:3. A black mokorotlo — a Basotho hat — is centered in the white band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ls.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ls.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-29.32,27.48]},postalCode:{format:"###",regex:"^(\\d{3})$"}},{name:{common:"Mozambique",official:"Republic of Mozambique",nativeName:{por:{official:"República de Moçambique",common:"Moçambique"}}},tld:[".mz"],cca2:"MZ",ccn3:"508",cca3:"MOZ",cioc:"MOZ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MZN:{name:"Mozambican metical",symbol:"MT"}},idd:{root:"+2",suffixes:["58"]},capital:["Maputo"],altSpellings:["MZ","Republic of Mozambique","República de Moçambique"],region:"Africa",subregion:"Eastern Africa",languages:{por:"Portuguese"},translations:{ara:{official:"جمهورية موزمبيق",common:"موزمبيق"},bre:{official:"Republik Mozambik",common:"Mozambik"},ces:{official:"Mosambická republika",common:"Mosambik"},cym:{official:"Republic of Mozambique",common:"Mozambique"},deu:{official:"Republik Mosambik",common:"Mosambik"},est:{official:"Mosambiigi Vabariik",common:"Mosambiik"},fin:{official:"Mosambikin tasavalta",common:"Mosambik"},fra:{official:"République du Mozambique",common:"Mozambique"},hrv:{official:"Republika Mozambiku",common:"Mozambik"},hun:{official:"Mozambiki Köztársaság",common:"Mozambik"},ita:{official:"Repubblica del Mozambico",common:"Mozambico"},jpn:{official:"モザンビーク共和国",common:"モザンビーク"},kor:{official:"모잠비크 공화국",common:"모잠비크"},nld:{official:"Republiek Mozambique",common:"Mozambique"},per:{official:"جمهوری موزامبیک",common:"موزامبیک"},pol:{official:"Republika Mozambiku",common:"Mozambik"},por:{official:"República de Moçambique",common:"Moçambique"},rus:{official:"Республика Мозамбик",common:"Мозамбик"},slk:{official:"Mozambická republika",common:"Mozambik"},spa:{official:"República de Mozambique",common:"Mozambique"},srp:{official:"Република Мозамбик",common:"Мозамбик"},swe:{official:"Republiken Moçambique",common:"Moçambique"},tur:{official:"Mozambik Cumhuriyeti",common:"Mozambik"},urd:{official:"جمہوریہ موزمبیق",common:"موزمبیق"},zho:{official:"莫桑比克共和国",common:"莫桑比克"}},latlng:[-18.25,35],landlocked:!1,borders:["MWI","ZAF","SWZ","TZA","ZMB","ZWE"],area:801590,demonyms:{eng:{f:"Mozambican",m:"Mozambican"},fra:{f:"Mozambicaine",m:"Mozambicain"}},flag:"🇲🇿",maps:{googleMaps:"https://goo.gl/maps/xCLcY9fzU6x4Pueu5",openStreetMaps:"https://www.openstreetmap.org/relation/195273"},population:31255435,gini:{2014:54},fifa:"MOZ",car:{signs:["MOC"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/mz.png",svg:"https://flagcdn.com/mz.svg",alt:"The flag of Mozambique is composed of three equal horizontal bands of teal, black with white top and bottom edges, and yellow. A red isosceles triangle spanning about two-fifth the width of the field is superimposed on the hoist side with its base on the hoist end. This triangle bears a crossed rifle and hoe in black superimposed on an open white book which is superimposed on a five-pointed yellow star."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mz.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-25.95,32.58]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Bosnia and Herzegovina",official:"Bosnia and Herzegovina",nativeName:{bos:{official:"Bosna i Hercegovina",common:"Bosna i Hercegovina"},hrv:{official:"Bosna i Hercegovina",common:"Bosna i Hercegovina"},srp:{official:"Босна и Херцеговина",common:"Босна и Херцеговина"}}},tld:[".ba"],cca2:"BA",ccn3:"070",cca3:"BIH",cioc:"BIH",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BAM:{name:"Bosnia and Herzegovina convertible mark"}},idd:{root:"+3",suffixes:["87"]},capital:["Sarajevo"],altSpellings:["BA","Bosnia-Herzegovina","Босна и Херцеговина"],region:"Europe",subregion:"Southeast Europe",languages:{bos:"Bosnian",hrv:"Croatian",srp:"Serbian"},translations:{ara:{official:"جمهورية البوسنة والهرسك",common:"البوسنة والهرسك"},bre:{official:"Bosnia-ha-Herzegovina",common:"Bosnia-ha-Herzegovina"},ces:{official:"Bosna a Hercegovina",common:"Bosna a Hercegovina"},cym:{official:"Bosnia a Hercegovina",common:"Bosnia a Hercegovina"},deu:{official:"Bosnien und Herzegowina",common:"Bosnien und Herzegowina"},est:{official:"Bosnia ja Hertsegoviina",common:"Bosnia ja Hertsegoviina"},fin:{official:"Bosnia ja Hertsegovina",common:"Bosnia ja Hertsegovina"},fra:{official:"Bosnie-et-Herzégovine",common:"Bosnie-Herzégovine"},hrv:{official:"Bosna i Hercegovina",common:"Bosna i Hercegovina"},hun:{official:"Bosznia-Hercegovina",common:"Bosznia-Hercegovina"},ita:{official:"Bosnia-Erzegovina",common:"Bosnia ed Erzegovina"},jpn:{official:"ボスニア·ヘルツェゴビナ",common:"ボスニア・ヘルツェゴビナ"},kor:{official:"보스니아 헤르체고비나",common:"보스니아 헤르체고비나"},nld:{official:"Bosnië-Herzegovina",common:"Bosnië en Herzegovina"},per:{official:"بوسنی و هرزگوین",common:"بوسنی و هرزگوین"},pol:{official:"Bośnia i Hercegowina",common:"Bośnia i Hercegowina"},por:{official:"Bósnia e Herzegovina",common:"Bósnia e Herzegovina"},rus:{official:"Босния и Герцеговина",common:"Босния и Герцеговина"},slk:{official:"Republika Bosny a Hercegoviny",common:"Bosna a Hercegovina"},spa:{official:"Bosnia y Herzegovina",common:"Bosnia y Herzegovina"},srp:{official:"Босна и Херцеговина",common:"Босна и Херцеговина"},swe:{official:"Bosnien och Hercegovina",common:"Bosnien och Hercegovina"},tur:{official:"Bosna ve Hersek",common:"Bosna-Hersek"},urd:{official:"بوسنیا و ہرزیگووینا",common:"بوسنیا و ہرزیگووینا"},zho:{official:"波斯尼亚和黑塞哥维那",common:"波斯尼亚和黑塞哥维那"}},latlng:[44,18],landlocked:!1,borders:["HRV","MNE","SRB"],area:51209,demonyms:{eng:{f:"Bosnian, Herzegovinian",m:"Bosnian, Herzegovinian"},fra:{f:"Bosnienne",m:"Bosnien"}},flag:"🇧🇦",maps:{googleMaps:"https://www.google.com/maps/place/Bosnia+and+Herzegovina",openStreetMaps:"https://www.openstreetmap.org/relation/2528142"},population:3280815,gini:{2011:33},fifa:"BIH",car:{signs:["BIH"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ba.png",svg:"https://flagcdn.com/ba.svg",alt:"The flag of Bosnia and Herzegovina has a blue field, at the center of which is a large yellow hoist-side facing right-angled triangle that is based on the top edge and spans the height of the field. Adjacent to the hypotenuse of this triangle are nine adjoining five-pointed white stars with the top and bottom stars cut in half by the edges of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ba.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ba.svg"},startOfWeek:"monday",capitalInfo:{latlng:[43.87,18.42]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Mauritius",official:"Republic of Mauritius",nativeName:{eng:{official:"Republic of Mauritius",common:"Mauritius"},fra:{official:"République de Maurice",common:"Maurice"},mfe:{official:"Republik Moris",common:"Moris"}}},tld:[".mu"],cca2:"MU",ccn3:"480",cca3:"MUS",cioc:"MRI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MUR:{name:"Mauritian rupee",symbol:"₨"}},idd:{root:"+2",suffixes:["30"]},capital:["Port Louis"],altSpellings:["MU","Republic of Mauritius","République de Maurice"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English",fra:"French",mfe:"Mauritian Creole"},translations:{ara:{official:"جمهورية موريشيوس",common:"موريشيوس"},bre:{official:"Republik Moris",common:"Moris"},ces:{official:"Mauricijská republika",common:"Mauricius"},cym:{official:"Republic of Mauritius",common:"Mauritius"},deu:{official:"Republik Mauritius",common:"Mauritius"},est:{official:"Mauritiuse Vabariik",common:"Mauritius"},fin:{official:"Mauritiuksen tasavalta",common:"Mauritius"},fra:{official:"République de Maurice",common:"Île Maurice"},hrv:{official:"Republika Mauricijus",common:"Mauricijus"},hun:{official:"Mauritiusi Köztársaság",common:"Mauritius"},ita:{official:"Repubblica di Mauritius",common:"Mauritius"},jpn:{official:"モーリシャス共和国",common:"モーリシャス"},kor:{official:"모리셔스 공화국",common:"모리셔스"},nld:{official:"Republiek Mauritius",common:"Mauritius"},per:{official:"جمهوری موریس",common:"موریس"},pol:{official:"Republika Mauritiusu",common:"Mauritius"},por:{official:"República das Maurícias",common:"Maurício"},rus:{official:"Республика Маврикий",common:"Маврикий"},slk:{official:"Maurícijská republika",common:"Maurícius"},spa:{official:"República de Mauricio",common:"Mauricio"},srp:{official:"Република Маурицијус",common:"Маурицијус"},swe:{official:"Republiken Mauritius",common:"Mauritius"},tur:{official:"Mauritius Cumhuriyeti",common:"Mauritius"},urd:{official:"جمہوریہ موریشس",common:"موریشس"},zho:{official:"毛里求斯共和国",common:"毛里求斯"}},latlng:[-20.28333333,57.55],landlocked:!1,area:2040,demonyms:{eng:{f:"Mauritian",m:"Mauritian"},fra:{f:"Mauricienne",m:"Mauricien"}},flag:"🇲🇺",maps:{googleMaps:"https://goo.gl/maps/PpKtZ4W3tir5iGrz7",openStreetMaps:"https://www.openstreetmap.org/relation/535828"},population:1265740,gini:{2017:36.8},fifa:"MRI",car:{signs:["MS"],side:"left"},timezones:["UTC+04:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/mu.png",svg:"https://flagcdn.com/mu.svg",alt:"The flag of Mauritius is composed of four equal horizontal bands of red, blue, yellow and green."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mu.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mu.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-20.15,57.48]}},{name:{common:"Bhutan",official:"Kingdom of Bhutan",nativeName:{dzo:{official:"འབྲུག་རྒྱལ་ཁབ་",common:"འབྲུག་ཡུལ་"}}},tld:[".bt"],cca2:"BT",ccn3:"064",cca3:"BTN",cioc:"BHU",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BTN:{name:"Bhutanese ngultrum",symbol:"Nu."},INR:{name:"Indian rupee",symbol:"₹"}},idd:{root:"+9",suffixes:["75"]},capital:["Thimphu"],altSpellings:["BT","Kingdom of Bhutan"],region:"Asia",subregion:"Southern Asia",languages:{dzo:"Dzongkha"},translations:{ara:{official:"مملكة بوتان",common:"بوتان"},bre:{official:"Rouantelezh Bhoutan",common:"Bhoutan"},ces:{official:"Bhútánské království",common:"Bhútán"},cym:{official:"Teyrnas Bhwtan",common:"Bhwtan"},deu:{official:"Königreich Bhutan",common:"Bhutan"},est:{official:"Bhutani Kuningriik",common:"Bhutan"},fin:{official:"Bhutanin kuningaskunta",common:"Bhutan"},fra:{official:"Royaume du Bhoutan",common:"Bhoutan"},hrv:{official:"Kraljevina Butan",common:"Butan"},hun:{official:"Bhutáni Királyság",common:"Bhután"},ita:{official:"Regno del Bhutan",common:"Bhutan"},jpn:{official:"ブータン王国",common:"ブータン"},kor:{official:"부탄 왕국",common:"부탄"},nld:{official:"Koninkrijk Bhutan",common:"Bhutan"},per:{official:"پادشاهی بوتان",common:"بوتان"},pol:{official:"Bhutan",common:"Bhutan"},por:{official:"Reino do Butão",common:"Butão"},rus:{official:"Королевство Бутан",common:"Бутан"},slk:{official:"Bhutánske krâľovstvo",common:"Bhután"},spa:{official:"Reino de Bután",common:"Bután"},srp:{official:"Краљевина Бутан",common:"Бутан"},swe:{official:"Konungariket Bhutan",common:"Bhutan"},tur:{official:"Butan Krallığı",common:"Butan"},urd:{official:"سلطنت بھوٹان",common:"بھوٹان"},zho:{official:"不丹王国",common:"不丹"}},latlng:[27.5,90.5],landlocked:!0,borders:["CHN","IND"],area:38394,demonyms:{eng:{f:"Bhutanese",m:"Bhutanese"},fra:{f:"Bhoutanaise",m:"Bhoutanais"}},flag:"🇧🇹",maps:{googleMaps:"https://goo.gl/maps/VEfXXBftTFLUpNgp8",openStreetMaps:"https://www.openstreetmap.org/relation/184629"},population:771612,gini:{2017:37.4},fifa:"BHU",car:{signs:["BHT"],side:"left"},timezones:["UTC+06:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/bt.png",svg:"https://flagcdn.com/bt.svg",alt:"The flag of Bhutan is divided diagonally, from the lower hoist-side corner to the upper fly-side corner, into an upper yellow and a lower orange triangle. A fly-side facing white dragon holding four jewels in its claws is situated along the boundary of the two triangles."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bt.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bt.svg"},startOfWeek:"monday",capitalInfo:{latlng:[27.47,89.63]}},{name:{common:"Lithuania",official:"Republic of Lithuania",nativeName:{lit:{official:"Lietuvos Respublikos",common:"Lietuva"}}},tld:[".lt"],cca2:"LT",ccn3:"440",cca3:"LTU",cioc:"LTU",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["70"]},capital:["Vilnius"],altSpellings:["LT","Republic of Lithuania","Lietuvos Respublika"],region:"Europe",subregion:"Northern Europe",languages:{lit:"Lithuanian"},translations:{ara:{official:"جمهورية ليتوانيا",common:"ليتوانيا"},bre:{official:"Republik Lituania",common:"Lituania"},ces:{official:"Litevská republika",common:"Litva"},cym:{official:"Republic of Lithuania",common:"Lithuania"},deu:{official:"Republik Litauen",common:"Litauen"},est:{official:"Leedu Vabariik",common:"Leedu"},fin:{official:"Liettuan tasavalta",common:"Liettua"},fra:{official:"République de Lituanie",common:"Lituanie"},hrv:{official:"Republika Litva",common:"Litva"},hun:{official:"Litván Köztársaság",common:"Litvánia"},ita:{official:"Repubblica di Lituania",common:"Lituania"},jpn:{official:"リトアニア共和国",common:"リトアニア"},kor:{official:"리투아니아 공화국",common:"리투아니아"},nld:{official:"Republiek Litouwen",common:"Litouwen"},per:{official:"لیتوانیایی‌ها",common:"لیتوانیایی‌ها"},pol:{official:"Republika Litewska",common:"Litwa"},por:{official:"República da Lituânia",common:"Lituânia"},rus:{official:"Литовская Республика",common:"Литва"},slk:{official:"Litovská republika",common:"Litva"},spa:{official:"República de Lituania",common:"Lituania"},srp:{official:"Литванска Република",common:"Литванија"},swe:{official:"Republiken Litauen",common:"Litauen"},tur:{official:"Litvanya Cumhuriyeti",common:"Litvanya"},urd:{official:"جمہوریہ لتھووینیا",common:"لتھووینیا"},zho:{official:"立陶宛共和国",common:"立陶宛"}},latlng:[56,24],landlocked:!1,borders:["BLR","LVA","POL","RUS"],area:65300,demonyms:{eng:{f:"Lithuanian",m:"Lithuanian"},fra:{f:"Lituanienne",m:"Lituanien"}},flag:"🇱🇹",maps:{googleMaps:"https://goo.gl/maps/dd1s9rrLjrK2G8yY6",openStreetMaps:"https://www.openstreetmap.org/relation/72596"},population:2794700,gini:{2018:35.7},fifa:"LTU",car:{signs:["LT"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/lt.png",svg:"https://flagcdn.com/lt.svg",alt:"The flag of Lithuania is composed of three equal horizontal bands of yellow, green and red."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/lt.png",svg:"https://mainfacts.com/media/images/coats_of_arms/lt.svg"},startOfWeek:"monday",capitalInfo:{latlng:[54.68,25.32]},postalCode:{format:"LT-#####",regex:"^(?:LT)*(\\d{5})$"}},{name:{common:"Paraguay",official:"Republic of Paraguay",nativeName:{grn:{official:"Tetã Paraguái",common:"Paraguái"},spa:{official:"República de Paraguay",common:"Paraguay"}}},tld:[".py"],cca2:"PY",ccn3:"600",cca3:"PRY",cioc:"PAR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{PYG:{name:"Paraguayan guaraní",symbol:"₲"}},idd:{root:"+5",suffixes:["95"]},capital:["Asunción"],altSpellings:["PY","Republic of Paraguay","República del Paraguay","Tetã Paraguái"],region:"Americas",subregion:"South America",languages:{grn:"Guaraní",spa:"Spanish"},translations:{ara:{official:"جمهورية باراغواي",common:"باراغواي"},bre:{official:"Republik Paraguay",common:"Paraguay"},ces:{official:"Paraguayská republika",common:"Paraguay"},cym:{official:"Republic of Paraguay",common:"Paraguay"},deu:{official:"Republik Paraguay",common:"Paraguay"},est:{official:"Paraguay Vabariik",common:"Paraguay"},fin:{official:"Paraguayn tasavalta",common:"Paraguay"},fra:{official:"République du Paraguay",common:"Paraguay"},hrv:{official:"Republika Paragvaj",common:"Paragvaj"},hun:{official:"Paraguayi Köztársaság",common:"Paraguay"},ita:{official:"Repubblica del Paraguay",common:"Paraguay"},jpn:{official:"パラグアイ共和国",common:"パラグアイ"},kor:{official:"파라과이 공화국",common:"파라과이"},nld:{official:"Republiek Paraguay",common:"Paraguay"},per:{official:"جمهوری پاراگوئه",common:"پاراگوئه"},pol:{official:"Republika Paragwaju",common:"Paragwaj"},por:{official:"República do Paraguai",common:"Paraguai"},rus:{official:"Республика Парагвай",common:"Парагвай"},slk:{official:"Paraguajská republika",common:"Paraguaj"},spa:{official:"República de Paraguay",common:"Paraguay"},srp:{official:"Република Парагвај",common:"Парагвај"},swe:{official:"Republiken Paraguay",common:"Paraguay"},tur:{official:"Paraguay Cumhuriyeti",common:"Paraguay"},urd:{official:"جمہوریہ پیراگوئے",common:"پیراگوئے"},zho:{official:"巴拉圭共和国",common:"巴拉圭"}},latlng:[-23,-58],landlocked:!0,borders:["ARG","BOL","BRA"],area:406752,demonyms:{eng:{f:"Paraguayan",m:"Paraguayan"},fra:{f:"Paraguayenne",m:"Paraguayen"}},flag:"🇵🇾",maps:{googleMaps:"https://goo.gl/maps/JtnqG73WJn1Gx6mz6",openStreetMaps:"https://www.openstreetmap.org/relation/287077"},population:7132530,gini:{2019:45.7},fifa:"PAR",car:{signs:["PY"],side:"right"},timezones:["UTC-04:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/py.png",svg:"https://flagcdn.com/py.svg",alt:"The flag of Paraguay features three equal horizontal bands of red, white and blue, with an emblem centered in the white band. On the obverse side of the flag depicted, this emblem is the national coat of arms."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/py.png",svg:"https://mainfacts.com/media/images/coats_of_arms/py.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-25.28,-57.57]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Denmark",official:"Kingdom of Denmark",nativeName:{dan:{official:"Kongeriget Danmark",common:"Danmark"}}},tld:[".dk"],cca2:"DK",ccn3:"208",cca3:"DNK",cioc:"DEN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{DKK:{name:"Danish krone",symbol:"kr"}},idd:{root:"+4",suffixes:["5"]},capital:["Copenhagen"],altSpellings:["DK","Danmark","Kingdom of Denmark","Kongeriget Danmark"],region:"Europe",subregion:"Northern Europe",languages:{dan:"Danish"},translations:{ara:{official:"مملكة الدنمارك",common:"الدنمارك"},bre:{official:"Rouantelezh Danmark",common:"Danmark"},ces:{official:"Dánské království",common:"Dánsko"},cym:{official:"Teyrnas Denmarc",common:"Denmarc"},deu:{official:"Königreich Dänemark",common:"Dänemark"},est:{official:"Taani Kuningriik",common:"Taani"},fin:{official:"Tanskan kuningaskunta",common:"Tanska"},fra:{official:"Royaume du Danemark",common:"Danemark"},hrv:{official:"Kraljevina Danska",common:"Danska"},hun:{official:"Dán Királyság",common:"Dánia"},ita:{official:"Regno di Danimarca",common:"Danimarca"},jpn:{official:"デンマーク王国",common:"デンマーク"},kor:{official:"덴마크 왕국",common:"덴마크"},nld:{official:"Koninkrijk Denemarken",common:"Denemarken"},per:{official:"پادشاهی دانمارک",common:"دانمارک"},pol:{official:"Królestwo Danii",common:"Dania"},por:{official:"Reino da Dinamarca",common:"Dinamarca"},rus:{official:"Королевство Дания",common:"Дания"},slk:{official:"Dánske kráľovstvo",common:"Dánsko"},spa:{official:"Reino de Dinamarca",common:"Dinamarca"},srp:{official:"Краљевина Данска",common:"Данска"},swe:{official:"Konungariket Danmark",common:"Danmark"},tur:{official:"Danimarka Krallığı",common:"Danimarka"},urd:{official:"مملکتِ ڈنمارک",common:"ڈنمارک"},zho:{official:"丹麦王国",common:"丹麦"}},latlng:[56,10],landlocked:!1,borders:["DEU"],area:43094,demonyms:{eng:{f:"Danish",m:"Danish"},fra:{f:"Danoise",m:"Danois"}},flag:"🇩🇰",maps:{googleMaps:"https://goo.gl/maps/UddGPN7hAyrtpFiT6",openStreetMaps:"https://www.openstreetmap.org/relation/50046"},population:5831404,gini:{2018:28.2},fifa:"DEN",car:{signs:["DK"],side:"right"},timezones:["UTC-04:00","UTC-03:00","UTC-01:00","UTC","UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/dk.png",svg:"https://flagcdn.com/dk.svg",alt:"The flag of Denmark has a red field with a large white cross that extend to the edges of the field. The vertical part of this cross is offset towards the hoist side."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/dk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/dk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[55.67,12.58]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"British Indian Ocean Territory",official:"British Indian Ocean Territory",nativeName:{eng:{official:"British Indian Ocean Territory",common:"British Indian Ocean Territory"}}},tld:[".io"],cca2:"IO",ccn3:"086",cca3:"IOT",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+2",suffixes:["46"]},capital:["Diego Garcia"],altSpellings:["IO"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English"},translations:{ara:{official:"إقليم المحيط الهندي البريطاني",common:"إقليم المحيط الهندي البريطاني"},bre:{official:"Tiriad breizhveurat Meurvor Indez",common:"Tiriad breizhveurat Meurvor Indez"},ces:{official:"Britské indickooceánské území",common:"Britské indickooceánské území"},cym:{official:"Tiriogaeth Brydeinig Cefnfor India",common:"Tiriogaeth Brydeinig Cefnfor India"},deu:{official:"Britisches Territorium im Indischen Ozean",common:"Britisches Territorium im Indischen Ozean"},est:{official:"Briti India ookeani ala",common:"Briti India ookeani ala"},fin:{official:"Brittiläinen Intian valtameren alue",common:"Brittiläinen Intian valtameren alue"},fra:{official:"Territoire britannique de l' océan Indien",common:"Territoire britannique de l'océan Indien"},hrv:{official:"British Indian Ocean Territory",common:"Britanski Indijskooceanski teritorij"},hun:{official:"Brit Indiai-óceáni Terület",common:"Brit Indiai-óceáni Terület"},ita:{official:"Territorio britannico dell'Oceano Indiano",common:"Territorio britannico dell'oceano indiano"},jpn:{official:"イギリス領インド洋地域",common:"イギリス領インド洋地域"},kor:{official:"인도 공화국",common:"인도"},nld:{official:"Brits Indische Oceaan Territorium",common:"Britse Gebieden in de Indische Oceaan"},per:{official:"قلمرو بریتانیا در اقیانوس هند",common:"قلمرو بریتانیا در اقیانوس هند"},pol:{official:"Brytyjskie Terytorium Oceanu Indyjskiego",common:"Brytyjskie Terytorium Oceanu Indyjskiego"},por:{official:"British Indian Ocean Territory",common:"Território Britânico do Oceano Índico"},rus:{official:"Британская территория Индийского океана",common:"Британская территория в Индийском океане"},slk:{official:"Britské indickooceánske územie",common:"Britské indickooceánske územie"},spa:{official:"Territorio Británico del Océano Índico",common:"Territorio Británico del Océano Índico"},srp:{official:"Британска територија Индијског океана",common:"Британска територија Индијског океана"},swe:{official:"Brittiska territoriet i Indiska Oceanen",common:"Brittiska territoriet i Indiska Oceanen"},tur:{official:"Britanya Hint Okyanusu Toprakları",common:"Britanya Hint Okyanusu Toprakları"},urd:{official:"برطانوی بحرہند خطہ",common:"برطانوی بحرہند خطہ"},zho:{official:"英属印度洋领地",common:"英属印度洋领地"}},latlng:[-6,71.5],landlocked:!1,area:60,demonyms:{eng:{f:"Indian",m:"Indian"}},flag:"🇮🇴",maps:{googleMaps:"https://goo.gl/maps/bheNucgekVEYozoi6",openStreetMaps:"https://www.openstreetmap.org/relation/1993867"},population:3e3,car:{signs:["GB"],side:"right"},timezones:["UTC+06:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/io.png",svg:"https://flagcdn.com/io.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-7.3,72.4]}},{name:{common:"Kiribati",official:"Independent and Sovereign Republic of Kiribati",nativeName:{eng:{official:"Independent and Sovereign Republic of Kiribati",common:"Kiribati"},gil:{official:"Ribaberiki Kiribati",common:"Kiribati"}}},tld:[".ki"],cca2:"KI",ccn3:"296",cca3:"KIR",cioc:"KIR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AUD:{name:"Australian dollar",symbol:"$"},KID:{name:"Kiribati dollar",symbol:"$"}},idd:{root:"+6",suffixes:["86"]},capital:["South Tarawa"],altSpellings:["KI","Republic of Kiribati","Ribaberiki Kiribati"],region:"Oceania",subregion:"Micronesia",languages:{eng:"English",gil:"Gilbertese"},translations:{ara:{official:"جمهورية كيريباتي",common:"كيريباتي"},bre:{official:"Republik Kiribati",common:"Kiribati"},ces:{official:"Republika Kiribati",common:"Kiribati"},cym:{official:"Independent and Sovereign Republic of Kiribati",common:"Kiribati"},deu:{official:"Republik Kiribati",common:"Kiribati"},est:{official:"Kiribati Vabariik",common:"Kiribati"},fin:{official:"Kiribatin tasavalta",common:"Kiribati"},fra:{official:"République de Kiribati",common:"Kiribati"},hrv:{official:"Samostalne i suverene Republike Kiribati",common:"Kiribati"},hun:{official:"Kiribati Köztársaság",common:"Kiribati"},ita:{official:"Repubblica indipendente e sovrano di Kiribati",common:"Kiribati"},jpn:{official:"キリバスの独立と主権共和国",common:"キリバス"},kor:{official:"키리바시 공화국",common:"키리바시"},nld:{official:"Onafhankelijke en soevereine republiek Kiribati",common:"Kiribati"},per:{official:"جمهوری کیریباتی",common:"کیریباتی"},pol:{official:"Republika Kiribati",common:"Kiribati"},por:{official:"Independente e soberano República de Kiribati",common:"Kiribati"},rus:{official:"Независимой и суверенной Республики Кирибати",common:"Кирибати"},slk:{official:"Kiribatská republika",common:"Kiribati"},spa:{official:"República Independiente y Soberano de Kiribati",common:"Kiribati"},srp:{official:"Независна и Суверена Република Кирибати",common:"Кирибати"},swe:{official:"Republiken Kiribati",common:"Kiribati"},tur:{official:"Kiribati Cumhuriyeti",common:"Kiribati"},urd:{official:"سلطنت آزاد جمہوریہ کیریباتی",common:"کیریباتی"},zho:{official:"基里巴斯共和国",common:"基里巴斯"}},latlng:[1.41666666,173],landlocked:!1,area:811,demonyms:{eng:{f:"I-Kiribati",m:"I-Kiribati"},fra:{f:"Kiribatienne",m:"Kiribatien"}},flag:"🇰🇮",maps:{googleMaps:"https://goo.gl/maps/NBfYvrndW4skAimw9",openStreetMaps:"https://www.openstreetmap.org/relation/571178"},population:119446,gini:{2006:37},car:{signs:["KIR"],side:"left"},timezones:["UTC+12:00","UTC+13:00","UTC+14:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/ki.png",svg:"https://flagcdn.com/ki.svg",alt:"The flag of Kiribati is divided into two halves. While the upper half has a red field, at the center of which is a yellow frigate bird flying over the top half of a rising yellow sun with seventeen visible rays, the lower half is composed of six horizontal wavy bands of white alternating with blue to depict the ocean."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ki.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ki.svg"},startOfWeek:"monday",capitalInfo:{latlng:[1.33,172.98]}},{name:{common:"Bangladesh",official:"People's Republic of Bangladesh",nativeName:{ben:{official:"বাংলাদেশ গণপ্রজাতন্ত্রী",common:"বাংলাদেশ"}}},tld:[".bd"],cca2:"BD",ccn3:"050",cca3:"BGD",cioc:"BAN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BDT:{name:"Bangladeshi taka",symbol:"৳"}},idd:{root:"+8",suffixes:["80"]},capital:["Dhaka"],altSpellings:["BD","People's Republic of Bangladesh","Gônôprôjatôntri Bangladesh"],region:"Asia",subregion:"Southern Asia",languages:{ben:"Bengali"},translations:{ara:{official:"جمهورية بنغلاديش الشعبية",common:"بنغلاديش"},bre:{official:"Republik pobl Bangladesh",common:"Bangladesh"},ces:{official:"Bangladéšská lidová republika",common:"Bangladéš"},cym:{official:"Gweriniaeth Pobl Bangladesh",common:"Bangladesh"},deu:{official:"Volksrepublik Bangladesch",common:"Bangladesch"},est:{official:"Bangladeshi Rahvavabariik",common:"Bangladesh"},fin:{official:"Bangladeshin kansantasavalta",common:"Bangladesh"},fra:{official:"La République populaire du Bangladesh",common:"Bangladesh"},hrv:{official:"Narodna Republika Bangladeš",common:"Bangladeš"},hun:{official:"Banglades",common:"Banglades"},ita:{official:"Repubblica popolare del Bangladesh",common:"Bangladesh"},jpn:{official:"バングラデシュ人民共和国",common:"バングラデシュ"},kor:{official:"방글라데시 인민 공화국",common:"방글라데시"},nld:{official:"Volksrepubliek Bangladesh",common:"Bangladesh"},per:{official:"جمهوری خلق بنگلادش",common:"بنگلادش"},pol:{official:"Ludowa Republika Bangladeszu",common:"Bangladesz"},por:{official:"República Popular do Bangladesh",common:"Bangladesh"},rus:{official:"Народная Республика Бангладеш",common:"Бангладеш"},slk:{official:"Bangladéšska ľudová republika",common:"Bangladéš"},spa:{official:"República Popular de Bangladesh",common:"Bangladesh"},srp:{official:"Народна Република Бангладеш",common:"Бангладеш"},swe:{official:"Folkrepubliken Bangladesh",common:"Bangladesh"},tur:{official:"Bangladeş Halk Cumhuriyeti",common:"Bangladeş"},urd:{official:"عوامی جمہوریہ بنگلہ دیش",common:"بنگلہ دیش"},zho:{official:"孟加拉人民共和国",common:"孟加拉国"}},latlng:[24,90],landlocked:!1,borders:["MMR","IND"],area:147570,demonyms:{eng:{f:"Bangladeshi",m:"Bangladeshi"},fra:{f:"Bangladaise",m:"Bangladais"}},flag:"🇧🇩",maps:{googleMaps:"https://goo.gl/maps/op6gmLbHcvv6rLhH6",openStreetMaps:"https://www.openstreetmap.org/relation/184640"},population:164689383,gini:{2016:32.4},fifa:"BAN",car:{signs:["BD"],side:"left"},timezones:["UTC+06:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/bd.png",svg:"https://flagcdn.com/bd.svg",alt:"The flag of Bangladesh has a dark green field bearing a large red circle that is offset slightly towards the hoist side of center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bd.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bd.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[23.72,90.4]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Zambia",official:"Republic of Zambia",nativeName:{eng:{official:"Republic of Zambia",common:"Zambia"}}},tld:[".zm"],cca2:"ZM",ccn3:"894",cca3:"ZMB",cioc:"ZAM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ZMW:{name:"Zambian kwacha",symbol:"ZK"}},idd:{root:"+2",suffixes:["60"]},capital:["Lusaka"],altSpellings:["ZM","Republic of Zambia"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English"},translations:{ara:{official:"جمهورية زامبيا",common:"زامبيا"},bre:{official:"Republik Zambia",common:"Zambia"},ces:{official:"Zambijská republika",common:"Zambie"},cym:{official:"Republic of Zambia",common:"Zambia"},deu:{official:"Republik Sambia",common:"Sambia"},est:{official:"Sambia Vabariik",common:"Sambia"},fin:{official:"Sambian tasavalta",common:"Sambia"},fra:{official:"République de Zambie",common:"Zambie"},hrv:{official:"Republika Zambija",common:"Zambija"},hun:{official:"Zambiai Köztársaság",common:"Zambia"},ita:{official:"Repubblica di Zambia",common:"Zambia"},jpn:{official:"ザンビア共和国",common:"ザンビア"},kor:{official:"잠비아 공화국",common:"잠비아"},nld:{official:"Republiek Zambia",common:"Zambia"},per:{official:"جمهوری زامبیا",common:"زامبیا"},pol:{official:"Republika Zambii",common:"Zambia"},por:{official:"República da Zâmbia",common:"Zâmbia"},rus:{official:"Республика Замбия",common:"Замбия"},slk:{official:"Zambijská republika",common:"Zambia"},spa:{official:"República de Zambia",common:"Zambia"},srp:{official:"Република Замбија",common:"Замбија"},swe:{official:"Republiken Zambia",common:"Zambia"},tur:{official:"Zambiya Cumhuriyeti",common:"Zambiya"},urd:{official:"جمہوریہ زیمبیا",common:"زیمبیا"},zho:{official:"赞比亚共和国",common:"赞比亚"}},latlng:[-15,30],landlocked:!0,borders:["AGO","BWA","COD","MWI","MOZ","NAM","TZA","ZWE"],area:752612,demonyms:{eng:{f:"Zambian",m:"Zambian"},fra:{f:"Zambienne",m:"Zambien"}},flag:"🇿🇲",maps:{googleMaps:"https://goo.gl/maps/mweBcqvW8TppZW6q9",openStreetMaps:"https://www.openstreetmap.org/relation/195271"},population:18383956,gini:{2015:57.1},fifa:"ZAM",car:{signs:["RNR"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/zm.png",svg:"https://flagcdn.com/zm.svg",alt:"The flag of Zambia has a green field, on the fly side of which is a soaring orange African fish eagle above a rectangular area divided into three equal vertical bands of red, black and orange."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/zm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/zm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-15.42,28.28]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Gabon",official:"Gabonese Republic",nativeName:{fra:{official:"République gabonaise",common:"Gabon"}}},tld:[".ga"],cca2:"GA",ccn3:"266",cca3:"GAB",cioc:"GAB",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XAF:{name:"Central African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["41"]},capital:["Libreville"],altSpellings:["GA","Gabonese Republic","République Gabonaise"],region:"Africa",subregion:"Middle Africa",languages:{fra:"French"},translations:{ara:{official:"جمهورية الغابون",common:"الغابون"},bre:{official:"Republik Gabonat",common:"Gabon"},ces:{official:"Gabonská republika",common:"Gabon"},cym:{official:"Gabonese Republic",common:"Gabon"},deu:{official:"Gabunische Republik",common:"Gabun"},est:{official:"Gaboni Vabariik",common:"Gabon"},fin:{official:"Gabonin tasavalta",common:"Gabon"},fra:{official:"République gabonaise",common:"Gabon"},hrv:{official:"Gabon Republika",common:"Gabon"},hun:{official:"Gaboni Köztársaság",common:"Gabon"},ita:{official:"Repubblica gabonese",common:"Gabon"},jpn:{official:"ガボン共和国",common:"ガボン"},kor:{official:"가봉 공화국",common:"가봉"},nld:{official:"Republiek Gabon",common:"Gabon"},per:{official:"جمهوری گابُن",common:"گابن"},pol:{official:"Republika Gabońska",common:"Gabon"},por:{official:"República do Gabão",common:"Gabão"},rus:{official:"Габона Республика",common:"Габон"},slk:{official:"Gabonská republika",common:"Gabon"},spa:{official:"República de Gabón",common:"Gabón"},srp:{official:"Габонска Република",common:"Габон"},swe:{official:"Republiken Gabon",common:"Gabon"},tur:{official:"Gabon Cumhuriyeti",common:"Gabon"},urd:{official:"جمہوریہ گیبون",common:"گیبون"},zho:{official:"加蓬共和国",common:"加蓬"}},latlng:[-1,11.75],landlocked:!1,borders:["CMR","COG","GNQ"],area:267668,demonyms:{eng:{f:"Gabonese",m:"Gabonese"},fra:{f:"Gabonaise",m:"Gabonais"}},flag:"🇬🇦",maps:{googleMaps:"https://goo.gl/maps/vyRSkqw1H1fnq4ry6",openStreetMaps:"https://www.openstreetmap.org/relation/192793"},population:2225728,gini:{2017:38},fifa:"GAB",car:{signs:["G"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ga.png",svg:"https://flagcdn.com/ga.svg",alt:"The flag of Gabon is composed of three equal horizontal bands of green, yellow and blue."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ga.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ga.svg"},startOfWeek:"monday",capitalInfo:{latlng:[.38,9.45]}},{name:{common:"Kosovo",official:"Republic of Kosovo",nativeName:{sqi:{official:"Republika e Kosovës",common:"Kosova"},srp:{official:"Република Косово",common:"Косово"}}},cca2:"XK",cca3:"UNK",cioc:"KOS",status:"user-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["83"]},capital:["Pristina"],altSpellings:["XK","Република Косово"],region:"Europe",subregion:"Southeast Europe",languages:{sqi:"Albanian",srp:"Serbian"},translations:{ara:{official:"جمهورية كوسوفو",common:"كوسوفو"},bre:{official:"Republik Kosovo",common:"Kosovo"},ces:{official:"Kosovská republika",common:"Kosovo"},cym:{official:"Republic of Kosovo",common:"Kosovo"},deu:{official:"Republik Kosovo",common:"Kosovo"},est:{official:"Kosovo Vabariik",common:"Kosovo"},fin:{official:"Kosovon tasavalta",common:"Kosovo"},fra:{official:"République du Kosovo",common:"Kosovo"},hrv:{official:"Republika Kosovo",common:"Kosovo"},hun:{official:"Koszovó",common:"Koszovó"},ita:{official:"Repubblica del Kosovo",common:"Kosovo"},kor:{official:"코소보 공화국",common:"코소보"},nld:{official:"Republiek Kosovo",common:"Kosovo"},per:{official:"جمهوری کوزوو",common:"کوزوو"},pol:{official:"Republika Kosowa",common:"Kosowo"},por:{official:"República do Kosovo",common:"Kosovo"},rus:{official:"Республика Косово",common:"Республика Косово"},slk:{official:"Republika Kosovo",common:"Kosovo"},spa:{official:"República de Kosovo",common:"Kosovo"},srp:{official:"Република Косово",common:"Косово"},swe:{official:"Republiken Kosovo",common:"Kosovo"},tur:{official:"Kosova Cumhuriyeti",common:"Kosova"},urd:{official:"جمہوریہ کوسووہ",common:"کوسووہ"},zho:{official:"科索沃共和国",common:"科索沃"}},latlng:[42.666667,21.166667],landlocked:!0,borders:["ALB","MKD","MNE","SRB"],area:10908,demonyms:{eng:{f:"Kosovar",m:"Kosovar"},fra:{f:"Kosovare",m:"Kosovar"}},flag:"🇽🇰",maps:{googleMaps:"https://goo.gl/maps/CSC4Yc8SWPgburuD9",openStreetMaps:"https://www.openstreetmap.org/relation/2088990"},population:1775378,gini:{2017:29},fifa:"KVX",car:{signs:["CS"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/xk.png",svg:"https://flagcdn.com/xk.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/xk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/xk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[42.67,21.17]}},{name:{common:"Cameroon",official:"Republic of Cameroon",nativeName:{eng:{official:"Republic of Cameroon",common:"Cameroon"},fra:{official:"République du Cameroun",common:"Cameroun"}}},tld:[".cm"],cca2:"CM",ccn3:"120",cca3:"CMR",cioc:"CMR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XAF:{name:"Central African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["37"]},capital:["Yaoundé"],altSpellings:["CM","Republic of Cameroon","République du Cameroun"],region:"Africa",subregion:"Middle Africa",languages:{eng:"English",fra:"French"},translations:{ara:{official:"جمهورية الكاميرون",common:"الكاميرون"},bre:{official:"Republik Kameroun",common:"Kameroun"},ces:{official:"Kamerunská republika",common:"Kamerun"},cym:{official:"Gweriniaeth Camerŵn",common:"Camerŵn"},deu:{official:"Republik Kamerun",common:"Kamerun"},est:{official:"Kameruni Vabariik",common:"Kamerun"},fin:{official:"Kamerunin tasavalta",common:"Kamerun"},fra:{official:"République du Cameroun",common:"Cameroun"},hrv:{official:"Republika Kamerun",common:"Kamerun"},hun:{official:"Kameruni Köztársaság",common:"Kamerun"},ita:{official:"Repubblica del Camerun",common:"Camerun"},jpn:{official:"カメルーン共和国",common:"カメルーン"},kor:{official:"카메룬 공화국",common:"카메룬"},nld:{official:"Republiek Kameroen",common:"Kameroen"},per:{official:"جمهوری کامِرون",common:"کامِرون"},pol:{official:"Republika Kamerunu",common:"Kamerun"},por:{official:"República dos Camarões",common:"Camarões"},rus:{official:"Республика Камерун",common:"Камерун"},slk:{official:"Kamerunská republika",common:"Kamerun"},spa:{official:"República de Camerún",common:"Camerún"},srp:{official:"Република Камерун",common:"Камерун"},swe:{official:"Republiken Kamerun",common:"Kamerun"},tur:{official:"Kamerun Cumhuriyeti",common:"Kamerun"},urd:{official:"جمہوریہ کیمرون",common:"کیمرون"},zho:{official:"喀麦隆共和国",common:"喀麦隆"}},latlng:[6,12],landlocked:!1,borders:["CAF","TCD","COG","GNQ","GAB","NGA"],area:475442,demonyms:{eng:{f:"Cameroonian",m:"Cameroonian"},fra:{f:"Camerounaise",m:"Camerounais"}},flag:"🇨🇲",maps:{googleMaps:"https://goo.gl/maps/JqiipHgFboG3rBJh9",openStreetMaps:"https://www.openstreetmap.org/relation/192830"},population:26545864,gini:{2014:46.6},fifa:"CMR",car:{signs:["CAM"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/cm.png",svg:"https://flagcdn.com/cm.svg",alt:"The flag of Cameroon is composed of three equal vertical bands of green, red and yellow, with a yellow five-pointed star in the center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[3.85,11.5]}},{name:{common:"Guernsey",official:"Bailiwick of Guernsey",nativeName:{eng:{official:"Bailiwick of Guernsey",common:"Guernsey"},fra:{official:"Bailliage de Guernesey",common:"Guernesey"},nfr:{official:"Dgèrnésiais",common:"Dgèrnésiais"}}},tld:[".gg"],cca2:"GG",ccn3:"831",cca3:"GGY",independent:!1,status:"officially-assigned",unMember:!1,currencies:{GBP:{name:"British pound",symbol:"£"},GGP:{name:"Guernsey pound",symbol:"£"}},idd:{root:"+4",suffixes:["4"]},capital:["St. Peter Port"],altSpellings:["GG","Bailiwick of Guernsey","Bailliage de Guernesey"],region:"Europe",subregion:"Northern Europe",languages:{eng:"English",fra:"French",nfr:"Guernésiais"},translations:{ara:{official:"غيرنزي",common:"غيرنزي"},bre:{official:"Gwernenez",common:"Gwernenez"},ces:{official:"Rychtářství Guernsey",common:"Guernsey"},cym:{official:"Bailiwick of Guernsey",common:"Guernsey"},deu:{official:"Vogtei Guernsey",common:"Guernsey"},est:{official:"Guernsey foogtkond",common:"Guernsey"},fin:{official:"Guernsey",common:"Guernsey"},fra:{official:"Bailliage de Guernesey",common:"Guernesey"},hrv:{official:"Struka Guernsey",common:"Guernsey"},hun:{official:"Guernsey",common:"Guernsey"},ita:{official:"Baliato di Guernsey",common:"Guernsey"},jpn:{official:"ガーンジーの得意分野",common:"ガーンジー"},kor:{official:"건지 섬",common:"건지 섬"},nld:{official:"Baljuwschap Guernsey",common:"Guernsey"},per:{official:"گرنزی",common:"گرنزی"},pol:{official:"Baliwat Guernsey",common:"Guernsey"},por:{official:"Bailiado de Guernsey",common:"Guernsey"},rus:{official:"Коронное владение Гернси",common:"Гернси"},slk:{official:"Guernsey",common:"Guernsey"},spa:{official:"Bailía de Guernsey",common:"Guernsey"},srp:{official:"Бејливик Гернзи",common:"Гернзи"},swe:{official:"Guernsey",common:"Guernsey"},tur:{official:"Guernsey Muhafızlığı",common:"Guernsey"},urd:{official:"گرنزی رودبار",common:"گرنزی"},zho:{official:"根西岛",common:"根西岛"}},latlng:[49.46666666,-2.58333333],landlocked:!1,area:78,demonyms:{eng:{f:"Channel Islander",m:"Channel Islander"},fra:{f:"Guernesiaise",m:"Guernesiais"}},flag:"🇬🇬",maps:{googleMaps:"https://goo.gl/maps/6kXnQU5QvEZMD9VB7",openStreetMaps:"https://www.openstreetmap.org/relation/270009"},population:62999,car:{signs:["GBG"],side:"left"},timezones:["UTC+00:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/gg.png",svg:"https://flagcdn.com/gg.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[49.45,-2.54]},postalCode:{format:"@# #@@|@## #@@|@@# #@@|@@## #@@|@#@ #@@|@@#@ #@@|GIR0AA",regex:"^(([A-Z]\\d{2}[A-Z]{2})|([A-Z]\\d{3}[A-Z]{2})|([A-Z]{2}\\d{2}[A-Z]{2})|([A-Z]{2}\\d{3}[A-Z]{2})|([A-Z]\\d[A-Z]\\d[A-Z]{2})|([A-Z]{2}\\d[A-Z]\\d[A-Z]{2})|(GIR0AA))$"}},{name:{common:"Faroe Islands",official:"Faroe Islands",nativeName:{dan:{official:"Færøerne",common:"Færøerne"},fao:{official:"Føroyar",common:"Føroyar"}}},tld:[".fo"],cca2:"FO",ccn3:"234",cca3:"FRO",independent:!1,status:"officially-assigned",unMember:!1,currencies:{DKK:{name:"Danish krone",symbol:"kr"},FOK:{name:"Faroese króna",symbol:"kr"}},idd:{root:"+2",suffixes:["98"]},capital:["Tórshavn"],altSpellings:["FO","Føroyar","Færøerne"],region:"Europe",subregion:"Northern Europe",languages:{dan:"Danish",fao:"Faroese"},translations:{ara:{official:"جزر فارو",common:"جزر فارو"},bre:{official:"Inizi Faero",common:"Inizi Faero"},ces:{official:"Faerské ostrovy",common:"Faerské ostrovy"},cym:{official:"Faroe Islands",common:"Faroe Islands"},deu:{official:"Färöer",common:"Färöer-Inseln"},est:{official:"Fääri saared",common:"Fääri saared"},fin:{official:"Färsaaret",common:"Färsaaret"},fra:{official:"Îles Féroé",common:"Îles Féroé"},hrv:{official:"Farski Otoci",common:"Farski Otoci"},hun:{official:"Feröer",common:"Feröer"},ita:{official:"Isole Faroe",common:"Isole Far Oer"},jpn:{official:"フェロー諸島",common:"フェロー諸島"},kor:{official:"페로 제도",common:"페로 제도"},nld:{official:"Faeröer",common:"Faeröer"},per:{official:"جزایر فاروئه",common:"جزایر فاروئه"},pol:{official:"Wyspy Owcze",common:"Wyspy Owcze"},por:{official:"Ilhas Faroe",common:"Ilhas Faroé"},rus:{official:"Фарерские острова",common:"Фарерские острова"},slk:{official:"Faerské ostrovy",common:"Faerské ostrovy"},spa:{official:"Islas Feroe",common:"Islas Faroe"},srp:{official:"Фарска острва",common:"Фарска острва"},swe:{official:"Färöarna",common:"Färöarna"},tur:{official:"Faroe Adaları",common:"Faroe Adaları"},urd:{official:"جزائر فارو",common:"جزائر فارو"},zho:{official:"法罗群岛",common:"法罗群岛"}},latlng:[62,-7],landlocked:!1,area:1393,demonyms:{eng:{f:"Faroese",m:"Faroese"},fra:{f:"Féroïenne",m:"Féroïen"}},flag:"🇫🇴",maps:{googleMaps:"https://goo.gl/maps/6sTru4SmHdEVcNkM6",openStreetMaps:"https://www.openstreetmap.org/relation/52939"},population:48865,fifa:"FRO",car:{signs:["FO"],side:"right"},timezones:["UTC+00:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/fo.png",svg:"https://flagcdn.com/fo.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/fo.png",svg:"https://mainfacts.com/media/images/coats_of_arms/fo.svg"},startOfWeek:"monday",capitalInfo:{latlng:[62.01,-6.77]},postalCode:{format:"FO-###",regex:"^(?:FO)*(\\d{3})$"}},{name:{common:"Philippines",official:"Republic of the Philippines",nativeName:{eng:{official:"Republic of the Philippines",common:"Philippines"},fil:{official:"Republic of the Philippines",common:"Pilipinas"}}},tld:[".ph"],cca2:"PH",ccn3:"608",cca3:"PHL",cioc:"PHI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{PHP:{name:"Philippine peso",symbol:"₱"}},idd:{root:"+6",suffixes:["3"]},capital:["Manila"],altSpellings:["PH","Republic of the Philippines","Repúblika ng Pilipinas"],region:"Asia",subregion:"South-Eastern Asia",languages:{eng:"English",fil:"Filipino"},translations:{ara:{official:"جمهورية الفلبين",common:"الفلبين"},bre:{official:"Republik Filipinez",common:"Filipinez"},ces:{official:"Filipínská republika",common:"Filipíny"},cym:{official:"Republic of the Philippines",common:"Philippines"},deu:{official:"Republik der Philippinen",common:"Philippinen"},est:{official:"Filipiini Vabariik",common:"Filipiinid"},fin:{official:"Filippiinien tasavalta",common:"Filippiinit"},fra:{official:"République des Philippines",common:"Philippines"},hrv:{official:"Republika Filipini",common:"Filipini"},hun:{official:"Fülöp-szigeteki Köztársaság",common:"Fülöp-szigetek"},ita:{official:"Repubblica delle Filippine",common:"Filippine"},jpn:{official:"フィリピン共和国",common:"フィリピン"},kor:{official:"필리핀 공화국",common:"필리핀"},nld:{official:"Republiek der Filipijnen",common:"Filipijnen"},per:{official:"جمهوری فیلیپین",common:"فیلیپین"},pol:{official:"Republika Filipin",common:"Filipiny"},por:{official:"República das Filipinas",common:"Filipinas"},rus:{official:"Республика Филиппины",common:"Филиппины"},slk:{official:"Filipínska republika",common:"Filipíny"},spa:{official:"República de las Filipinas",common:"Filipinas"},srp:{official:"Република Филипини",common:"Филипини"},swe:{official:"Republiken Filippinerna",common:"Filippinerna"},tur:{official:"Filipinler Cumhuriyeti",common:"Filipinler"},urd:{official:"جمہوریہ فلپائن",common:"فلپائن"},zho:{official:"菲律宾共和国",common:"菲律宾"}},latlng:[13,122],landlocked:!1,area:342353,demonyms:{eng:{f:"Filipino",m:"Filipino"},fra:{f:"Philippine",m:"Philippin"}},flag:"🇵🇭",maps:{googleMaps:"https://goo.gl/maps/k8T2fb5VMUfsWFX6A",openStreetMaps:"https://www.openstreetmap.org/relation/443174"},population:109581085,gini:{2018:42.3},fifa:"PHI",car:{signs:["RP"],side:"right"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/ph.png",svg:"https://flagcdn.com/ph.svg",alt:"The flag of Philippines is composed of two equal horizontal bands of blue and red, with a white equilateral triangle superimposed on the hoist side of the field. This triangle has its base on the hoist end, spans about two-fifth the width of the field and bears a central golden-yellow sun with eight rays and a five-pointed golden-yellow star at each vertex."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ph.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ph.svg"},startOfWeek:"monday",capitalInfo:{latlng:[14.6,120.97]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Åland Islands",official:"Åland Islands",nativeName:{swe:{official:"Landskapet Åland",common:"Åland"}}},tld:[".ax"],cca2:"AX",ccn3:"248",cca3:"ALA",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["5818"]},capital:["Mariehamn"],altSpellings:["AX","Aaland","Aland","Ahvenanmaa"],region:"Europe",subregion:"Northern Europe",languages:{swe:"Swedish"},translations:{ara:{official:"جزر أولاند",common:"جزر أولاند"},bre:{official:"Inizi Åland",common:"Åland"},ces:{official:"Ålandské ostrovy",common:"Ålandy"},cym:{official:"Åland Islands",common:"Åland Islands"},deu:{official:"Åland-Inseln",common:"Åland"},est:{official:"Ahvenamaa maakond",common:"Ahvenamaa"},fin:{official:"Ahvenanmaan maakunta",common:"Ahvenanmaa"},fra:{official:"Ahvenanmaa",common:"Ahvenanmaa"},hrv:{official:"Aland Islands",common:"Ålandski otoci"},hun:{official:"Åland-szigetek",common:"Åland-szigetek"},ita:{official:"Isole Åland",common:"Isole Aland"},jpn:{official:"オーランド諸島",common:"オーランド諸島"},kor:{official:"올란드 제도",common:"올란드 제도"},nld:{official:"Åland eilanden",common:"Ålandeilanden"},per:{official:"جزایر الند",common:"جزایر الند"},pol:{official:"Wyspy Alandzkie",common:"Wyspy Alandzkie"},por:{official:"Ilhas Åland",common:"Alândia"},rus:{official:"Аландские острова",common:"Аландские острова"},slk:{official:"Alandské ostrovy",common:"Alandy"},spa:{official:"Islas Åland",common:"Alandia"},srp:{official:"Оландска Острва",common:"Оландска Острва"},swe:{official:"Åland",common:"Åland"},tur:{official:"Åland Adaları",common:"Åland"},urd:{official:"جزائر اولند",common:"جزائر اولند"},zho:{official:"奥兰群岛",common:"奥兰群岛"}},latlng:[60.116667,19.9],landlocked:!1,area:1580,demonyms:{eng:{f:"Ålandish",m:"Ålandish"},fra:{f:"Ålandaise",m:"Ålandais"}},flag:"🇦🇽",maps:{googleMaps:"https://goo.gl/maps/ewFb3vYsfUmVCoSb8",openStreetMaps:"https://www.openstreetmap.org/relation/1650407"},population:29458,car:{signs:[""],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ax.png",svg:"https://flagcdn.com/ax.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ax.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ax.svg"},startOfWeek:"monday",capitalInfo:{latlng:[60.12,19.9]}},{name:{common:"Czechia",official:"Czech Republic",nativeName:{ces:{official:"Česká republika",common:"Česko"},slk:{official:"Česká republika",common:"Česko"}}},tld:[".cz"],cca2:"CZ",ccn3:"203",cca3:"CZE",cioc:"CZE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CZK:{name:"Czech koruna",symbol:"Kč"}},idd:{root:"+4",suffixes:["20"]},capital:["Prague"],altSpellings:["CZ","Česká republika","Česko"],region:"Europe",subregion:"Central Europe",languages:{ces:"Czech",slk:"Slovak"},translations:{ara:{official:"جمهورية التشيك",common:"التشيك"},bre:{official:"Republik Tchek",common:"Tchekia"},ces:{official:"Česká republika",common:"Česko"},cym:{official:"Y Weriniaeth Tsiec",common:"Y Weriniaeth Tsiec"},deu:{official:"Tschechische Republik",common:"Tschechien"},est:{official:"Tšehhi Vabariik",common:"Tšehhi"},fin:{official:"Tšekin tasavalta",common:"Tšekki"},fra:{official:"République tchèque",common:"Tchéquie"},hrv:{official:"Češka",common:"Češka"},hun:{official:"Cseh Köztársaság",common:"Csehország"},ita:{official:"Repubblica Ceca",common:"Cechia"},jpn:{official:"チェコ共和国",common:"チェコ"},kor:{official:"체코",common:"체코"},nld:{official:"Tsjechische Republiek",common:"Tsjechië"},per:{official:"جمهوری چک",common:"جمهوری چک"},pol:{official:"Republika Czeska",common:"Czechy"},por:{official:"República Checa",common:"Chéquia"},rus:{official:"Чешская Республика",common:"Чехия"},slk:{official:"Česká republika",common:"Česko"},spa:{official:"República Checa",common:"Chequia"},srp:{official:"Чешка Република",common:"Чешка"},swe:{official:"Republiken Tjeckien",common:"Tjeckien"},tur:{official:"Çek Cumhuriyeti",common:"Çekya"},urd:{official:"چيک جمہوريہ",common:"چيک"},zho:{official:"捷克共和国",common:"捷克"}},latlng:[49.75,15.5],landlocked:!0,borders:["AUT","DEU","POL","SVK"],area:78865,demonyms:{eng:{f:"Czech",m:"Czech"},fra:{f:"Tchèque",m:"Tchèque"}},flag:"🇨🇿",maps:{googleMaps:"https://goo.gl/maps/47dmgeXMZyhDHyQW8",openStreetMaps:"https://www.openstreetmap.org/relation/51684"},population:10698896,gini:{2018:25},fifa:"CZE",car:{signs:["CZ"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/cz.png",svg:"https://flagcdn.com/cz.svg",alt:"The flag of Czechia is composed of two equal horizontal bands of white and red, with a blue isosceles triangle superimposed on the hoist side of the field. The triangle has its base on the hoist end and spans about two-fifth the width of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cz.svg"},startOfWeek:"monday",capitalInfo:{latlng:[50.08,14.47]},postalCode:{format:"### ##",regex:"^(\\d{5})$"}},{name:{common:"Cocos (Keeling) Islands",official:"Territory of the Cocos (Keeling) Islands",nativeName:{eng:{official:"Territory of the Cocos (Keeling) Islands",common:"Cocos (Keeling) Islands"}}},tld:[".cc"],cca2:"CC",ccn3:"166",cca3:"CCK",independent:!1,status:"officially-assigned",unMember:!1,currencies:{AUD:{name:"Australian dollar",symbol:"$"}},idd:{root:"+6",suffixes:["1"]},capital:["West Island"],altSpellings:["CC","Keeling Islands","Cocos Islands"],region:"Oceania",subregion:"Australia and New Zealand",languages:{eng:"English"},translations:{ara:{official:"إقليم جزر كوكوس",common:"جزر كوكوس"},bre:{official:"Tiriad Inizi Cocos (Keeling)",common:"Inizi Cocos (Keeling)"},ces:{official:"Kokosové ostrovy",common:"Kokosové ostrovy"},cym:{official:"Tiriogaeth yr Ynysoedd Cocos (Keeling)",common:"Ynysoedd Cocos"},deu:{official:"Gebiet der Kokos- (Keeling-) Inseln",common:"Kokosinseln"},est:{official:"Kookossaarte ala",common:"Kookossaared"},fin:{official:"Kookossaaret",common:"Kookossaaret"},fra:{official:"Territoire des îles Cocos (Keeling)",common:"Îles Cocos"},hrv:{official:"Teritoriju Kokosovi (Keeling) Islands",common:"Kokosovi Otoci"},hun:{official:"Kókusz-szigetek",common:"Kókusz-szigetek"},ita:{official:"Territorio della (Keeling) Isole Cocos",common:"Isole Cocos e Keeling"},jpn:{official:"ココス諸島の領土",common:"ココス（キーリング）諸島"},kor:{official:"코코스 제도",common:"코코스 제도"},nld:{official:"Grondgebied van de Eilanden Cocos (Keeling )",common:"Cocoseilanden"},per:{official:"جزایر کوکوس",common:"جزایر کوکوس"},pol:{official:"Wyspy Kokosowe",common:"Wyspy Kokosowe"},por:{official:"Território dos Cocos (Keeling)",common:"Ilhas Cocos (Keeling)"},rus:{official:"Территория Кокосовые (Килинг) острова",common:"Кокосовые острова"},slk:{official:"Kokosové ostrovy",common:"Kokosové ostrovy"},spa:{official:"Territorio de los (Keeling) Islas Cocos",common:"Islas Cocos o Islas Keeling"},srp:{official:"Кокосова (Килинг) Острва",common:"Кокосова Острва"},swe:{official:"Kokosöarna",common:"Kokosöarna"},tur:{official:"Cocos (Keeling) Adaları",common:"Cocos (Keeling) Adaları"},urd:{official:"جزائر (کیلنگ) کوکوس",common:"جزائر کوکوس"},zho:{official:"科科斯",common:"科科斯"}},latlng:[12.1642,96.871],landlocked:!1,area:14,demonyms:{eng:{f:"Cocos Islander",m:"Cocos Islander"}},flag:"🇨🇨",maps:{googleMaps:"https://goo.gl/maps/3eCdKVpVfMcZyKcK6",openStreetMaps:"https://www.openstreetmap.org/relation/82636"},population:544,car:{signs:["AUS"],side:"left"},timezones:["UTC+06:30"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/cc.png",svg:"https://flagcdn.com/cc.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-12.17,96.83]}},{name:{common:"French Guiana",official:"Guiana",nativeName:{fra:{official:"Guyane",common:"Guyane française"}}},tld:[".gf"],cca2:"GF",ccn3:"254",cca3:"GUF",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+5",suffixes:["94"]},capital:["Cayenne"],altSpellings:["GF","Guiana","Guyane"],region:"Americas",subregion:"South America",languages:{fra:"French"},translations:{ara:{official:"غويانا الفرنسية",common:"غويانا"},bre:{official:"Gwiana C'hall",common:"Gwiana C'hall"},ces:{official:"Francouzská Guyana",common:"Francouzská Guyana"},cym:{official:"Guiana",common:"French Guiana"},deu:{official:"Französisch-Guayana",common:"Französisch-Guayana"},est:{official:"Guajaana departemang",common:"Prantsuse Guajaana"},fin:{official:"Ranskan Guayana",common:"Ranskan Guayana"},fra:{official:"Guyane",common:"Guyane"},hrv:{official:"Gijana",common:"Francuska Gvajana"},hun:{official:"Francia Guyana",common:"Francia Guyana"},ita:{official:"Guiana",common:"Guyana francese"},jpn:{official:"ギアナ",common:"フランス領ギアナ"},kor:{official:"프랑스령 기아나",common:"프랑스령 기아나"},nld:{official:"Guyana",common:"Frans-Guyana"},per:{official:"گویان فرانسه",common:"گویان فرانسه"},pol:{official:"Gujana Francuska",common:"Gujana Francuska"},por:{official:"Guiana",common:"Guiana Francesa"},rus:{official:"Гвиана",common:"Французская Гвиана"},slk:{official:"Francúzska Guyana",common:"Guyana"},spa:{official:"Guayana",common:"Guayana Francesa"},srp:{official:"Француска Гвајана",common:"Француска Гвајана"},swe:{official:"Franska Guyana",common:"Franska Guyana"},tur:{official:"Fransız Guyanası",common:"Fransız Guyanası"},urd:{official:"گیانا",common:"فرانسیسی گیانا"},zho:{official:"法属圭亚那",common:"法属圭亚那"}},latlng:[4,-53],landlocked:!1,borders:["BRA","SUR"],area:83534,demonyms:{eng:{f:"Guianan",m:"Guianan"},fra:{f:"Guyanaise",m:"Guyanais"}},flag:"🇬🇫",maps:{googleMaps:"https://goo.gl/maps/NJawFwMzG7YtCrVP7",openStreetMaps:"https://www.openstreetmap.org/relation/2502058"},population:254541,car:{signs:["F"],side:"right"},timezones:["UTC-03:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/gf.png",svg:"https://flagcdn.com/gf.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gf.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gf.svg"},startOfWeek:"monday",capitalInfo:{latlng:[4.94,-52.33]},postalCode:{format:"#####",regex:"^((97|98)3\\d{2})$"}},{name:{common:"Togo",official:"Togolese Republic",nativeName:{fra:{official:"République togolaise",common:"Togo"}}},tld:[".tg"],cca2:"TG",ccn3:"768",cca3:"TGO",cioc:"TOG",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["28"]},capital:["Lomé"],altSpellings:["TG","Togolese","Togolese Republic","République Togolaise"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"جمهورية توغو",common:"توغو"},bre:{official:"Republik Togoat",common:"Togo"},ces:{official:"Republika Togo",common:"Togo"},cym:{official:"Togolese Republic",common:"Togo"},deu:{official:"Republik Togo",common:"Togo"},est:{official:"Togo Vabariik",common:"Togo"},fin:{official:"Togon tasavalta",common:"Togo"},fra:{official:"République togolaise",common:"Togo"},hrv:{official:"Togolese Republika",common:"Togo"},hun:{official:"Togói Köztársaság",common:"Togo"},ita:{official:"Repubblica del Togo",common:"Togo"},jpn:{official:"トーゴ共和国",common:"トーゴ"},kor:{official:"토고 공화국",common:"토고"},nld:{official:"Republiek Togo",common:"Togo"},per:{official:"جمهوری توگو",common:"توگو"},pol:{official:"Republika Togijska",common:"Togo"},por:{official:"República do Togo",common:"Togo"},rus:{official:"Того Республика",common:"Того"},slk:{official:"Togská republika",common:"Togo"},spa:{official:"República de Togo",common:"Togo"},srp:{official:"Тоголешка Република",common:"Того"},swe:{official:"Republiken Togo",common:"Togo"},tur:{official:"Togo Cumhuriyeti",common:"Togo"},urd:{official:"جمہوریہ ٹوگو",common:"ٹوگو"},zho:{official:"多哥共和国",common:"多哥"}},latlng:[8,1.16666666],landlocked:!1,borders:["BEN","BFA","GHA"],area:56785,demonyms:{eng:{f:"Togolese",m:"Togolese"},fra:{f:"Togolaise",m:"Togolais"}},flag:"🇹🇬",maps:{googleMaps:"https://goo.gl/maps/jzAa9feXuXPrKVb89",openStreetMaps:"https://www.openstreetmap.org/relation/192782"},population:8278737,gini:{2015:43.1},fifa:"TOG",car:{signs:["TG"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/tg.png",svg:"https://flagcdn.com/tg.svg",alt:"The flag of Togo is composed of five equal horizontal bands of green alternating with yellow. A red square bearing a five-pointed white star is superimposed in the canton."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[6.14,1.21]}},{name:{common:"Croatia",official:"Republic of Croatia",nativeName:{hrv:{official:"Republika Hrvatska",common:"Hrvatska"}}},tld:[".hr"],cca2:"HR",ccn3:"191",cca3:"HRV",cioc:"CRO",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["85"]},capital:["Zagreb"],altSpellings:["HR","Hrvatska","Republic of Croatia","Republika Hrvatska"],region:"Europe",subregion:"Southeast Europe",languages:{hrv:"Croatian"},translations:{ara:{official:"جمهورية كرواتيا",common:"كرواتيا"},bre:{official:"Republik Kroatia",common:"Kroatia"},ces:{official:"Chorvatská republika",common:"Chorvatsko"},cym:{official:"Gweriniaeth Croatia",common:"Croatia"},deu:{official:"Republik Kroatien",common:"Kroatien"},est:{official:"Horvaatia Vabariik",common:"Horvaatia"},fin:{official:"Kroatian tasavalta",common:"Kroatia"},fra:{official:"République de Croatie",common:"Croatie"},hrv:{official:"Republika Hrvatska",common:"Hrvatska"},hun:{official:"Horvát Köztársaság",common:"Horvátország"},ita:{official:"Repubblica di Croazia",common:"Croazia"},jpn:{official:"クロアチア共和国",common:"クロアチア"},kor:{official:"크로아티아 공화국",common:"크로아티아"},nld:{official:"Republiek Kroatië",common:"Kroatië"},per:{official:"جمهوری کرواسی",common:"کرُواسی"},pol:{official:"Republika Chorwacji",common:"Chorwacja"},por:{official:"República da Croácia",common:"Croácia"},rus:{official:"Республика Хорватия",common:"Хорватия"},slk:{official:"Chorvátska republika",common:"Chorvátsko"},spa:{official:"República de Croacia",common:"Croacia"},srp:{official:"Република Хрватска",common:"Хрватска"},swe:{official:"Republiken Kroatien",common:"Kroatien"},tur:{official:"Hırvatistan Cumhuriyeti",common:"Hırvatistan"},urd:{official:"جمہوریہ کرویئشا",common:"کرویئشا"},zho:{official:"克罗地亚共和国",common:"克罗地亚"}},latlng:[45.16666666,15.5],landlocked:!1,borders:["BIH","HUN","MNE","SRB","SVN"],area:56594,demonyms:{eng:{f:"Croatian",m:"Croatian"},fra:{f:"Croate",m:"Croate"}},flag:"🇭🇷",maps:{googleMaps:"https://goo.gl/maps/qSG6xTKUmrYpwmGQ6",openStreetMaps:"https://www.openstreetmap.org/relation/214885"},population:4047200,gini:{2018:29.7},fifa:"CRO",car:{signs:["HR"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/hr.png",svg:"https://flagcdn.com/hr.svg",alt:"The flag of Croatia is composed of three equal horizontal bands of red, white and blue, with coat of arms of Croatia superimposed in the center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/hr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/hr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[45.8,16]},postalCode:{format:"HR-#####",regex:"^(?:HR)*(\\d{5})$"}},{name:{common:"Saint Lucia",official:"Saint Lucia",nativeName:{eng:{official:"Saint Lucia",common:"Saint Lucia"}}},tld:[".lc"],cca2:"LC",ccn3:"662",cca3:"LCA",cioc:"LCA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["758"]},capital:["Castries"],altSpellings:["LC"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"سانت لوسيا",common:"سانت لوسيا"},bre:{official:"Santez-Lusia",common:"Santez-Lusia"},ces:{official:"Svatá Lucie",common:"Svatá Lucie"},cym:{official:"Saint Lucia",common:"Saint Lucia"},deu:{official:"St. Lucia",common:"St. Lucia"},est:{official:"Saint Lucia",common:"Saint Lucia"},fin:{official:"Saint Lucia",common:"Saint Lucia"},fra:{official:"Sainte-Lucie",common:"Sainte-Lucie"},hrv:{official:"Sveta Lucija",common:"Sveta Lucija"},hun:{official:"Saint Lucia",common:"Saint Lucia"},ita:{official:"Santa Lucia",common:"Santa Lucia"},jpn:{official:"セントルシア",common:"セントルシア"},kor:{official:"세인트루시아",common:"세인트루시아"},nld:{official:"Saint Lucia",common:"Saint Lucia"},per:{official:"سنت لوسیا",common:"سنت لوسیا"},pol:{official:"Saint Lucia",common:"Saint Lucia"},por:{official:"Santa Lúcia",common:"Santa Lúcia"},rus:{official:"Сент-Люсия",common:"Сент-Люсия"},slk:{official:"Svätá Lucia",common:"Svätá Lucia"},spa:{official:"Santa Lucía",common:"Santa Lucía"},srp:{official:"Света Луција",common:"Света Луција"},swe:{official:"Saint Lucia",common:"Saint Lucia"},tur:{official:"Saint Lucia",common:"Saint Lucia"},urd:{official:"سینٹ لوسیا",common:"سینٹ لوسیا"},zho:{official:"圣卢西亚",common:"圣卢西亚"}},latlng:[13.88333333,-60.96666666],landlocked:!1,area:616,demonyms:{eng:{f:"Saint Lucian",m:"Saint Lucian"},fra:{f:"Saint-Lucienne",m:"Saint-Lucien"}},flag:"🇱🇨",maps:{googleMaps:"https://goo.gl/maps/4HhJ2jkPdSL9BPRcA",openStreetMaps:"https://www.openstreetmap.org/relation/550728"},population:183629,gini:{2016:51.2},fifa:"LCA",car:{signs:["WL"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/lc.png",svg:"https://flagcdn.com/lc.svg",alt:"The flag of Saint Lucia has a light blue field, at the center of which are two triangles which share a common base — a small golden-yellow isosceles triangle superimposed on a large white-edged black isosceles triangle."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/lc.png",svg:"https://mainfacts.com/media/images/coats_of_arms/lc.svg"},startOfWeek:"monday",capitalInfo:{latlng:[14,-61]}},{name:{common:"Guinea-Bissau",official:"Republic of Guinea-Bissau",nativeName:{por:{official:"República da Guiné-Bissau",common:"Guiné-Bissau"},pov:{official:"República da Guiné-Bissau",common:"Guiné-Bissau"}}},tld:[".gw"],cca2:"GW",ccn3:"624",cca3:"GNB",cioc:"GBS",independent:!0,status:"officially-assigned",unMember:!1,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["45"]},capital:["Bissau"],altSpellings:["GW","Republic of Guinea-Bissau","República da Guiné-Bissau"],region:"Africa",subregion:"Western Africa",languages:{por:"Portuguese",pov:"Upper Guinea Creole"},translations:{ara:{official:"جمهورية غينيا بيساو",common:"غينيا بيساو"},bre:{official:"Republik Ginea-Bissau",common:"Ginea-Bissau"},ces:{official:"Republika Guinea-Bissau",common:"Guinea-Bissau"},cym:{official:"Republic of Guinea-Bissau",common:"Guinea-Bissau"},deu:{official:"Republik Guinea-Bissau",common:"Guinea-Bissau"},est:{official:"Guinea-Bissau Vabariik",common:"Guinea-Bissau"},fin:{official:"Guinea-Bissaun tasavalta",common:"Guinea-Bissau"},fra:{official:"République de Guinée-Bissau",common:"Guinée-Bissau"},hrv:{official:"Republika Gvineja Bisau",common:"Gvineja Bisau"},hun:{official:"Bissau-Guineai Köztársaság",common:"Bissau-Guinea"},ita:{official:"Repubblica di Guinea-Bissau",common:"Guinea-Bissau"},jpn:{official:"ギニアビサウ共和国",common:"ギニアビサウ"},kor:{official:"기니비사우 공화국",common:"기니비사우"},nld:{official:"Republiek Guinee-Bissau",common:"Guinee-Bissau"},per:{official:"جمهوری گینه بیسائو",common:"گینه بیسائو"},pol:{official:"Republika Gwinei Bissau",common:"Gwinea Bissau"},por:{official:"República da Guiné-Bissau",common:"Guiné-Bissau"},rus:{official:"Республика Гвинея -Бисау",common:"Гвинея-Бисау"},slk:{official:"Guinejsko-bissauská republika",common:"Guinea-Bissau"},spa:{official:"República de Guinea-Bissau",common:"Guinea-Bisáu"},srp:{official:"Република Гвинеја Бисао",common:"Гвинеја Бисао"},swe:{official:"Republiken Guinea-Bissau",common:"Guinea-Bissau"},tur:{official:"Gine-Bissau Cumhuriyeti",common:"Gine-Bissau"},urd:{official:"جمہوریہ گنی بساؤ",common:"گنی بساؤ"},zho:{official:"几内亚比绍共和国",common:"几内亚比绍"}},latlng:[12,-15],landlocked:!1,borders:["GIN","SEN"],area:36125,demonyms:{eng:{f:"Guinea-Bissauan",m:"Guinea-Bissauan"},fra:{f:"Bissau-Guinéenne",m:"Bissau-Guinéen"}},flag:"🇬🇼",maps:{googleMaps:"https://goo.gl/maps/5Wyaz17miUc1zLc67",openStreetMaps:"https://www.openstreetmap.org/relation/192776"},population:1967998,gini:{2010:50.7},fifa:"GNB",car:{signs:["RGB"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/gw.png",svg:"https://flagcdn.com/gw.svg",alt:"The flag of Guinea-Bissau features a red vertical band on its hoist side that takes up about two-fifth the width of the field, and two equal horizontal bands of yellow and green adjoining the vertical band. A five-pointed black star is centered in the vertical band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[11.85,-15.58]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Eritrea",official:"State of Eritrea",nativeName:{ara:{official:"دولة إرتريا",common:"إرتريا‎"},eng:{official:"State of Eritrea",common:"Eritrea"},tir:{official:"ሃገረ ኤርትራ",common:"ኤርትራ"}}},tld:[".er"],cca2:"ER",ccn3:"232",cca3:"ERI",cioc:"ERI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ERN:{name:"Eritrean nakfa",symbol:"Nfk"}},idd:{root:"+2",suffixes:["91"]},capital:["Asmara"],altSpellings:["ER","State of Eritrea","ሃገረ ኤርትራ","Dawlat Iritriyá","ʾErtrā","Iritriyā"],region:"Africa",subregion:"Eastern Africa",languages:{ara:"Arabic",eng:"English",tir:"Tigrinya"},translations:{ara:{official:"دولة إريتريا",common:"إريتريا"},bre:{official:"Stad Eritrea",common:"Eritrea"},ces:{official:"Stát Eritrea",common:"Eritrea"},cym:{official:"Gwladwriaeth Eritrea",common:"Eritrea"},deu:{official:"Staat Eritrea",common:"Eritrea"},est:{official:"Eritrea Riik",common:"Eritrea"},fin:{official:"Eritrean valtio",common:"Eritrea"},fra:{official:"État d'Érythrée",common:"Érythrée"},hrv:{official:"Država Eritreji",common:"Eritreja"},hun:{official:"Eritrea",common:"Eritrea"},ita:{official:"Stato di Eritrea",common:"Eritrea"},jpn:{official:"エリトリア国",common:"エリトリア"},kor:{official:"에리트레아국",common:"에리트레아"},nld:{official:"Staat Eritrea",common:"Eritrea"},per:{official:"جمهوری اریتره",common:"اریتره"},pol:{official:"Państwo Erytrea",common:"Erytrea"},por:{official:"Estado da Eritreia",common:"Eritreia"},rus:{official:"Государство Эритрея",common:"Эритрея"},slk:{official:"Eritrejský štát",common:"Eritrea"},spa:{official:"Estado de Eritrea",common:"Eritrea"},srp:{official:"Држава Еритреја",common:"Еритреја"},swe:{official:"Staten Eritrea",common:"Eritrea"},tur:{official:"Eritre Devleti",common:"Eritre"},urd:{official:"ریاستِ ارتریا",common:"ارتریا"},zho:{official:"厄立特里亚",common:"厄立特里亚"}},latlng:[15,39],landlocked:!1,borders:["DJI","ETH","SDN"],area:117600,demonyms:{eng:{f:"Eritrean",m:"Eritrean"},fra:{f:"Érythréenne",m:"Érythréen"}},flag:"🇪🇷",maps:{googleMaps:"https://goo.gl/maps/HRyqUpnPwwG6jY5j6",openStreetMaps:"https://www.openstreetmap.org/relation/296961"},population:5352e3,fifa:"ERI",car:{signs:["ER"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/er.png",svg:"https://flagcdn.com/er.svg",alt:"The flag of Eritrea comprises three triangles — a large red isosceles triangle with its base spanning the hoist end and its apex at the midpoint on the fly end, and a green and blue right-angled triangle above and beneath the red triangle. On the hoist side of the red triangle is a golden vertical olive branch encircled by a golden olive wreath."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/er.png",svg:"https://mainfacts.com/media/images/coats_of_arms/er.svg"},startOfWeek:"monday",capitalInfo:{latlng:[15.33,38.93]}},{name:{common:"Bahrain",official:"Kingdom of Bahrain",nativeName:{ara:{official:"مملكة البحرين",common:"‏البحرين"}}},tld:[".bh"],cca2:"BH",ccn3:"048",cca3:"BHR",cioc:"BHR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BHD:{name:"Bahraini dinar",symbol:".د.ب"}},idd:{root:"+9",suffixes:["73"]},capital:["Manama"],altSpellings:["BH","Kingdom of Bahrain","Mamlakat al-Baḥrayn"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"مملكة البحرين",common:"‏البحرين"},bre:{official:"Rouantelezh Bahrein",common:"Bahrein"},ces:{official:"Království Bahrajn",common:"Bahrajn"},cym:{official:"Teyrnas Bahrein",common:"Bahrain"},deu:{official:"Königreich Bahrain",common:"Bahrain"},est:{official:"Bahreini Kuningriik",common:"Bahrein"},fin:{official:"Bahrainin kuningaskunta",common:"Bahrain"},fra:{official:"Royaume de Bahreïn",common:"Bahreïn"},hrv:{official:"Kraljevina Bahrein",common:"Bahrein"},hun:{official:"Bahreini Királyság",common:"Bahrein"},ita:{official:"Regno del Bahrain",common:"Bahrein"},jpn:{official:"バーレーン王国",common:"バーレーン"},kor:{official:"바레인 왕국",common:"바레인"},nld:{official:"Koninkrijk Bahrein",common:"Bahrein"},per:{official:"پادشاهی بحرین",common:"بحرین"},pol:{official:"Królestwo Bahrajnu",common:"Bahrajn"},por:{official:"Reino do Bahrein",common:"Bahrein"},rus:{official:"Королевство Бахрейн",common:"Бахрейн"},slk:{official:"Bahrajnské kráľovstvo",common:"Bahrajn"},spa:{official:"Reino de Bahrein",common:"Bahrein"},srp:{official:"Краљевина Бахреин",common:"Бахреин"},swe:{official:"Konungariket Bahrain",common:"Bahrain"},tur:{official:"Bahreyn Krallığı",common:"Bahreyn"},urd:{official:"مملکتِ بحرین",common:"بحرین"},zho:{official:"巴林王国",common:"巴林"}},latlng:[26,50.55],landlocked:!1,area:765,demonyms:{eng:{f:"Bahraini",m:"Bahraini"},fra:{f:"Bahreïnienne",m:"Bahreïnien"}},flag:"🇧🇭",maps:{googleMaps:"https://goo.gl/maps/5Zue99Zc6vFBHxzJ7",openStreetMaps:"https://www.openstreetmap.org/relation/378734"},population:1701583,fifa:"BHR",car:{signs:["BRN"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/bh.png",svg:"https://flagcdn.com/bh.svg",alt:"The flag of Bahrain has a red field. On the hoist side, it features a white vertical band that spans about one-third the width of the field and is separated from the rest of the field by five adjoining fly-side pointing white isosceles triangles that serve as a serrated line."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bh.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bh.svg"},startOfWeek:"monday",capitalInfo:{latlng:[26.23,50.57]},postalCode:{format:"####|###",regex:"^(\\d{3}\\d?)$"}},{name:{common:"Palestine",official:"State of Palestine",nativeName:{ara:{official:"دولة فلسطين",common:"فلسطين"}}},tld:[".ps","فلسطين."],cca2:"PS",ccn3:"275",cca3:"PSE",cioc:"PLE",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EGP:{name:"Egyptian pound",symbol:"E£"},ILS:{name:"Israeli new shekel",symbol:"₪"},JOD:{name:"Jordanian dinar",symbol:"JD"}},idd:{root:"+9",suffixes:["70"]},capital:["Ramallah","Jerusalem"],altSpellings:["PS","Palestine, State of","State of Palestine","Dawlat Filasṭin"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"دولة فلسطين",common:"فلسطين"},bre:{official:"Stad Palestina",common:"Palestina"},ces:{official:"Stát Palestina",common:"Palestina"},cym:{official:"State of Palestine",common:"Palestine"},deu:{official:"Staat Palästina",common:"Palästina"},est:{official:"Palestiina Riik",common:"Palestiina"},fin:{official:"Palestiinan valtio",common:"Palestiina"},fra:{official:"État de Palestine",common:"Palestine"},hrv:{official:"State of Palestine",common:"Palestina"},hun:{official:"Palesztin Autonómia",common:"Palesztina"},ita:{official:"Stato di Palestina",common:"Palestina"},jpn:{official:"パレスチナ自治政府",common:"パレスチナ"},kor:{official:"팔레스타인국",common:"팔레스타인"},nld:{official:"Staat Palestina",common:"Palestijnse gebieden"},per:{official:"دولت فلسطین",common:"فلسطین"},pol:{official:"Państwo Palestyna",common:"Palestyna"},por:{official:"Estado da Palestina",common:"Palestina"},rus:{official:"Государство Палестина",common:"Палестина"},slk:{official:"Palestínsky štát",common:"Palestína"},spa:{official:"Estado de Palestina",common:"Palestina"},srp:{official:"Држава Палестина",common:"Палестина"},swe:{official:"Palestina",common:"Palestina"},tur:{official:"Filistin Devleti",common:"Filistin"},urd:{official:"ریاستِ فلسطین",common:"فلسطین"},zho:{official:"巴勒斯坦国",common:"巴勒斯坦"}},latlng:[31.9,35.2],landlocked:!1,borders:["ISR","EGY","JOR"],area:6220,demonyms:{eng:{f:"Palestinian",m:"Palestinian"},fra:{f:"Palestinienne",m:"Palestinien"}},flag:"🇵🇸",maps:{googleMaps:"https://goo.gl/maps/QvTbkRdmdWEoYAmt5",openStreetMaps:"https://www.openstreetmap.org/relation/1703814"},population:4803269,gini:{2016:33.7},fifa:"PLE",car:{signs:["PS"],side:"right"},timezones:["UTC+02:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/ps.png",svg:"https://flagcdn.com/ps.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ps.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ps.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[31.9,35.2]}},{name:{common:"Niue",official:"Niue",nativeName:{eng:{official:"Niue",common:"Niue"},niu:{official:"Niuē",common:"Niuē"}}},tld:[".nu"],cca2:"NU",ccn3:"570",cca3:"NIU",independent:!1,status:"officially-assigned",unMember:!1,currencies:{NZD:{name:"New Zealand dollar",symbol:"$"}},idd:{root:"+6",suffixes:["83"]},capital:["Alofi"],altSpellings:["NU"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English",niu:"Niuean"},translations:{ara:{official:"نييوي",common:"نييوي"},bre:{official:"Niue",common:"Niue"},ces:{official:"Niue",common:"Niue"},cym:{official:"Niue",common:"Niue"},deu:{official:"Niue",common:"Niue"},est:{official:"Niue",common:"Niue"},fin:{official:"Niue",common:"Niue"},fra:{official:"Niue",common:"Niue"},hrv:{official:"Niue",common:"Niue"},hun:{official:"Niue",common:"Niue"},ita:{official:"Niue",common:"Niue"},jpn:{official:"ニウエ",common:"ニウエ"},kor:{official:"니우에",common:"니우에"},nld:{official:"Niue",common:"Niue"},per:{official:"نیووی",common:"نیووی"},pol:{official:"Niue",common:"Niue"},por:{official:"Niue",common:"Niue"},rus:{official:"Ниуэ",common:"Ниуэ"},slk:{official:"Niue",common:"Niue"},spa:{official:"Niue",common:"Niue"},srp:{official:"Нијуе",common:"Нијуе"},swe:{official:"Niue",common:"Niue"},tur:{official:"Niue",common:"Niue"},urd:{official:"نیووے",common:"نیووے"},zho:{official:"纽埃",common:"纽埃"}},latlng:[-19.03333333,-169.86666666],landlocked:!1,area:260,demonyms:{eng:{f:"Niuean",m:"Niuean"},fra:{f:"Niuéenne",m:"Niuéen"}},flag:"🇳🇺",maps:{googleMaps:"https://goo.gl/maps/xFgdzs3E55Rk1y8P9",openStreetMaps:"https://www.openstreetmap.org/relation/1558556"},population:1470,car:{signs:["NZ"],side:"left"},timezones:["UTC-11:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/nu.png",svg:"https://flagcdn.com/nu.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-19.02,-169.92]}},{name:{common:"Honduras",official:"Republic of Honduras",nativeName:{spa:{official:"República de Honduras",common:"Honduras"}}},tld:[".hn"],cca2:"HN",ccn3:"340",cca3:"HND",cioc:"HON",independent:!0,status:"officially-assigned",unMember:!0,currencies:{HNL:{name:"Honduran lempira",symbol:"L"}},idd:{root:"+5",suffixes:["04"]},capital:["Tegucigalpa"],altSpellings:["HN","Republic of Honduras","República de Honduras"],region:"Americas",subregion:"Central America",languages:{spa:"Spanish"},translations:{ara:{official:"جمهورية هندوراس",common:"هندوراس"},bre:{official:"Republik Honduras",common:"Honduras"},ces:{official:"Honduraská republika",common:"Honduras"},cym:{official:"Republic of Honduras",common:"Honduras"},deu:{official:"Republik Honduras",common:"Honduras"},est:{official:"Hondurase Vabariik",common:"Honduras"},fin:{official:"Hondurasin tasavalta",common:"Honduras"},fra:{official:"République du Honduras",common:"Honduras"},hrv:{official:"Republika Honduras",common:"Honduras"},hun:{official:"Hondurasi Köztársaság",common:"Honduras"},ita:{official:"Repubblica di Honduras",common:"Honduras"},jpn:{official:"ホンジュラス共和国",common:"ホンジュラス"},kor:{official:"온두라스 공화국",common:"온두라스"},nld:{official:"Republiek Honduras",common:"Honduras"},per:{official:"جمهوری هندوراس",common:"هُندوراس"},pol:{official:"Republika Hondurasu",common:"Honduras"},por:{official:"República de Honduras",common:"Honduras"},rus:{official:"Республика Гондурас",common:"Гондурас"},slk:{official:"Honduraská republika",common:"Honduras"},spa:{official:"República de Honduras",common:"Honduras"},srp:{official:"Република Хондурас",common:"Хондурас"},swe:{official:"Republiken Honduras",common:"Honduras"},tur:{official:"Honduras Cumhuriyeti",common:"Honduras"},urd:{official:"جمہوریہ ہونڈوراس",common:"ہونڈوراس"},zho:{official:"洪都拉斯共和国",common:"洪都拉斯"}},latlng:[15,-86.5],landlocked:!1,borders:["GTM","SLV","NIC"],area:112492,demonyms:{eng:{f:"Honduran",m:"Honduran"},fra:{f:"Hondurienne",m:"Hondurien"}},flag:"🇭🇳",maps:{googleMaps:"https://goo.gl/maps/BbeJK8Sk2VkMHbdF8",openStreetMaps:"https://www.openstreetmap.org/relation/287670"},population:9904608,gini:{2019:48.2},fifa:"HON",car:{signs:["HN"],side:"right"},timezones:["UTC-06:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/hn.png",svg:"https://flagcdn.com/hn.svg",alt:"The flag of Honduras is composed of three equal horizontal bands of turquoise, white and turquoise, with five small five-pointed turquoise stars arranged in a quincuncial pattern at the center of the white band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/hn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/hn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[14.1,-87.22]},postalCode:{format:"@@####",regex:"^([A-Z]{2}\\d{4})$"}},{name:{common:"Brazil",official:"Federative Republic of Brazil",nativeName:{por:{official:"República Federativa do Brasil",common:"Brasil"}}},tld:[".br"],cca2:"BR",ccn3:"076",cca3:"BRA",cioc:"BRA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BRL:{name:"Brazilian real",symbol:"R$"}},idd:{root:"+5",suffixes:["5"]},capital:["Brasília"],altSpellings:["BR","Brasil","Federative Republic of Brazil","República Federativa do Brasil"],region:"Americas",subregion:"South America",languages:{por:"Portuguese"},translations:{ara:{official:"جمهورية البرازيل الاتحادية",common:"البرازيل"},bre:{official:"Republik Kevreel Brazil",common:"Brazil"},ces:{official:"Brazilská federativní republika",common:"Brazílie"},cym:{official:"Gweriniaeth Ffederal Brasil",common:"Brasil"},deu:{official:"Föderative Republik Brasilien",common:"Brasilien"},est:{official:"Brasiilia Liitvabariik",common:"Brasiilia"},fin:{official:"Brasilian liittotasavalta",common:"Brasilia"},fra:{official:"République fédérative du Brésil",common:"Brésil"},hrv:{official:"Savezne Republike Brazil",common:"Brazil"},hun:{official:"Brazil Szövetségi Köztársaság",common:"Brazília"},ita:{official:"Repubblica federativa del Brasile",common:"Brasile"},jpn:{official:"ブラジル連邦共和国",common:"ブラジル"},kor:{official:"브라질 연방 공화국",common:"브라질"},nld:{official:"Federale Republiek Brazilië",common:"Brazilië"},per:{official:"جمهوری فدراتیو برزیل",common:"برزیل"},pol:{official:"Federacyjna Republika Brazylii",common:"Brazylia"},por:{official:"República Federativa do Brasil",common:"Brasil"},rus:{official:"Федеративная Республика Бразилия",common:"Бразилия"},slk:{official:"Brazílska federatívna republika",common:"Brazília"},spa:{official:"República Federativa del Brasil",common:"Brasil"},srp:{official:"Савезна Република Бразил",common:"Бразил"},swe:{official:"Förbundsrepubliken Brasilien",common:"Brasilien"},tur:{official:"Brezilya Federal Cumhuriyeti",common:"Brezilya"},urd:{official:"وفاقی جمہوریہ برازیل",common:"برازیل"},zho:{official:"巴西联邦共和国",common:"巴西"}},latlng:[-10,-55],landlocked:!1,borders:["ARG","BOL","COL","GUF","GUY","PRY","PER","SUR","URY","VEN"],area:8515767,demonyms:{eng:{f:"Brazilian",m:"Brazilian"},fra:{f:"Brésilienne",m:"Brésilien"}},flag:"🇧🇷",maps:{googleMaps:"https://goo.gl/maps/waCKk21HeeqFzkNC9",openStreetMaps:"https://www.openstreetmap.org/relation/59470"},population:212559409,gini:{2019:53.4},fifa:"BRA",car:{signs:["BR"],side:"right"},timezones:["UTC-05:00","UTC-04:00","UTC-03:00","UTC-02:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/br.png",svg:"https://flagcdn.com/br.svg",alt:"The flag of Brazil has a green field with a large yellow rhombus in the center. Within the rhombus is a dark blue globe with twenty-seven small five-pointed white stars depicting a starry sky and a thin white convex horizontal band inscribed with the national motto 'Ordem e Progresso' across its center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/br.png",svg:"https://mainfacts.com/media/images/coats_of_arms/br.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-15.79,-47.88]},postalCode:{format:"#####-###",regex:"^(\\d{8})$"}},{name:{common:"Western Sahara",official:"Sahrawi Arab Democratic Republic",nativeName:{ber:{official:"Sahrawi Arab Democratic Republic",common:"Western Sahara"},mey:{official:"الجمهورية العربية الصحراوية الديمقراطية",common:"الصحراء الغربية"},spa:{official:"República Árabe Saharaui Democrática",common:"Sahara Occidental"}}},tld:[".eh"],cca2:"EH",ccn3:"732",cca3:"ESH",independent:!1,status:"officially-assigned",unMember:!1,currencies:{DZD:{name:"Algerian dinar",symbol:"دج"},MAD:{name:"Moroccan dirham",symbol:"DH"},MRU:{name:"Mauritanian ouguiya",symbol:"UM"}},idd:{root:"+2",suffixes:["125288","125289"]},capital:["El Aaiún"],altSpellings:["EH","Taneẓroft Tutrimt"],region:"Africa",subregion:"Northern Africa",languages:{ber:"Berber",mey:"Hassaniya",spa:"Spanish"},translations:{ara:{official:"الجمهورية العربية الصحراوية الديمقراطية",common:"الصحراء الغربية"},bre:{official:"Republik Arab Saharaoui Demokratel",common:"Sahara ar C'hornôg"},ces:{official:"Západní Sahara",common:"Západní Sahara"},cym:{official:"Sahrawi Arab Democratic Republic",common:"Western Sahara"},deu:{official:"Demokratische Arabische Republik Sahara",common:"Westsahara"},est:{official:"Lääne-Sahara",common:"Lääne-Sahara"},fin:{official:"Länsi-Sahara",common:"Länsi-Sahara"},fra:{official:"République arabe sahraouie démocratique",common:"Sahara Occidental"},hrv:{official:"Sahrawi Arab Demokratska Republika",common:"Zapadna Sahara"},hun:{official:"Nyugat-Szahara",common:"Nyugat-Szahara"},ita:{official:"Repubblica Araba Saharawi Democratica",common:"Sahara Occidentale"},jpn:{official:"サハラアラブ民主共和国",common:"西サハラ"},kor:{official:"사하라 아랍 민주 공화국",common:"서사하라"},nld:{official:"Sahrawi Arabische Democratische Republiek",common:"Westelijke Sahara"},per:{official:"صحرای غربی",common:"صحرای غربی"},pol:{official:"Saharyjska Arabska Republika Demokratyczna",common:"Sahara Zachodnia"},por:{official:"República Árabe Saharaui Democrática",common:"Saara Ocidental"},rus:{official:"Sahrawi Арабская Демократическая Республика",common:"Западная Сахара"},slk:{official:"Západná Sahara",common:"Západná Sahara"},spa:{official:"República Árabe Saharaui Democrática",common:"Sahara Occidental"},srp:{official:"Сахарска Арапска Демократска Република",common:"Сахарска Република"},swe:{official:"Västsahara",common:"Västsahara"},tur:{official:"Sahra Demokratik Arap Cumhuriyeti",common:"Sahra Demokratik Arap Cumhuriyeti"},urd:{official:"صحراوی عرب عوامی جمہوریہ",common:"مغربی صحارا"},zho:{official:"阿拉伯撒哈拉民主共和国",common:"西撒哈拉"}},latlng:[24.5,-13],landlocked:!1,borders:["DZA","MRT","MAR"],area:266e3,demonyms:{eng:{f:"Sahrawi",m:"Sahrawi"}},flag:"🇪🇭",maps:{googleMaps:"https://goo.gl/maps/7nU3mB69vP6zQp7A8",openStreetMaps:"https://www.openstreetmap.org/relation/5441968"},population:510713,car:{signs:[""],side:"right"},timezones:["UTC+00:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/eh.png",svg:"https://flagcdn.com/eh.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-13.28,27.14]}},{name:{common:"Myanmar",official:"Republic of the Union of Myanmar",nativeName:{mya:{official:"ပြည်ထောင်စု သမ္မတ မြန်မာနိုင်ငံတော်",common:"မြန်မာ"}}},tld:[".mm"],cca2:"MM",ccn3:"104",cca3:"MMR",cioc:"MYA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MMK:{name:"Burmese kyat",symbol:"Ks"}},idd:{root:"+9",suffixes:["5"]},capital:["Naypyidaw"],altSpellings:["MM","Burma","Republic of the Union of Myanmar","Pyidaunzu Thanmăda Myăma Nainngandaw"],region:"Asia",subregion:"South-Eastern Asia",languages:{mya:"Burmese"},translations:{ara:{official:"جمهورية اتحاد ميانمار",common:"ميانمار"},bre:{official:"Republik Unaniezh Myanmar",common:"Myanmar"},ces:{official:"Republika Myanmarský svaz",common:"Myanmar"},cym:{official:"Republic of the Union of Myanmar",common:"Myanmar"},deu:{official:"Republik der Union Myanmar",common:"Myanmar"},est:{official:"Myanmari Liidu Vabariik",common:"Myanmar"},fin:{official:"Myanmarin liiton tasavalta",common:"Myanmar"},fra:{official:"République de l'Union du Myanmar",common:"Birmanie"},hrv:{official:"Republika Unije Mijanmar",common:"Mijanmar"},hun:{official:"Mianmari Államszövetség Köztársasága",common:"Mianmar"},ita:{official:"Repubblica dell'Unione di Myanmar",common:"Birmania"},jpn:{official:"ミャンマー連邦共和国",common:"ミャンマー"},kor:{official:"미얀마 연방 공화국",common:"미얀마"},nld:{official:"Republiek van de Unie van Myanmar",common:"Myanmar"},per:{official:"اتحادیه جمهوری میانمار",common:"میانمار"},pol:{official:"Republika Związku Mjanmy",common:"Mjanma"},por:{official:"República da União de Myanmar",common:"Myanmar"},rus:{official:"Республика Союза Мьянма",common:"Мьянма"},slk:{official:"Mjanmarská zväzová republika",common:"Mjanmarsko"},spa:{official:"República de la Unión de Myanmar",common:"Myanmar"},srp:{official:"Република Савез Мјанмара",common:"Мјанмар"},swe:{official:"Republiken Unionen Myanmar",common:"Myanmar"},tur:{official:"Myanmar Birliği Cumhuriyeti",common:"Myanmar"},urd:{official:"متحدہ جمہوریہ میانمار",common:"میانمار"},zho:{official:"缅甸联邦共和国",common:"缅甸"}},latlng:[22,98],landlocked:!1,borders:["BGD","CHN","IND","LAO","THA"],area:676578,demonyms:{eng:{f:"Burmese",m:"Burmese"},fra:{f:"Birmane",m:"Birman"}},flag:"🇲🇲",maps:{googleMaps:"https://goo.gl/maps/4jrZyJkDERUfHyp26",openStreetMaps:"https://www.openstreetmap.org/relation/50371"},population:54409794,gini:{2017:30.7},fifa:"MYA",car:{signs:["BUR"],side:"right"},timezones:["UTC+06:30"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/mm.png",svg:"https://flagcdn.com/mm.svg",alt:"The flag of Myanmar is composed of three equal horizontal bands of yellow, green and red, with a large five-pointed white star superimposed at the center of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[19.76,96.07]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Spain",official:"Kingdom of Spain",nativeName:{spa:{official:"Reino de España",common:"España"}}},tld:[".es"],cca2:"ES",ccn3:"724",cca3:"ESP",cioc:"ESP",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["4"]},capital:["Madrid"],altSpellings:["ES","Kingdom of Spain","Reino de España"],region:"Europe",subregion:"Southern Europe",languages:{spa:"Spanish"},translations:{ara:{official:"مملكة إسبانيا",common:"إسبانيا"},bre:{official:"Rouantelezh Spagn",common:"Spagn"},ces:{official:"Španělské království",common:"Španělsko"},cym:{official:"Kingdom of Spain",common:"Spain"},deu:{official:"Königreich Spanien",common:"Spanien"},est:{official:"Hispaania Kuningriik",common:"Hispaania"},fin:{official:"Espanjan kuningaskunta",common:"Espanja"},fra:{official:"Royaume d'Espagne",common:"Espagne"},hrv:{official:"Kraljevina Španjolska",common:"Španjolska"},hun:{official:"Spanyol Királyság",common:"Spanyolország"},ita:{official:"Regno di Spagna",common:"Spagna"},jpn:{official:"スペイン王国",common:"スペイン"},kor:{official:"에스파냐 왕국",common:"스페인"},nld:{official:"Koninkrijk Spanje",common:"Spanje"},per:{official:"پادشاهی اسپانیا",common:"اسپانیا"},pol:{official:"Królestwo Hiszpanii ",common:"Hiszpania"},por:{official:"Reino de Espanha",common:"Espanha"},rus:{official:"Королевство Испания",common:"Испания"},slk:{official:"Španielske kráľovstvo",common:"Španielsko"},spa:{official:"Reino de España",common:"España"},srp:{official:"Краљевина Шпанија",common:"Шпанија"},swe:{official:"Konungariket Spanien",common:"Spanien"},tur:{official:"İspanya Krallığı",common:"İspanya"},urd:{official:"مملکتِ ہسپانیہ",common:"ہسپانیہ"},zho:{official:"西班牙王国",common:"西班牙"}},latlng:[40,-4],landlocked:!1,borders:["AND","FRA","GIB","PRT","MAR"],area:505992,demonyms:{eng:{f:"Spanish",m:"Spanish"},fra:{f:"Espagnole",m:"Espagnol"}},flag:"🇪🇸",maps:{googleMaps:"https://goo.gl/maps/138JaXW8EZzRVitY9",openStreetMaps:"https://www.openstreetmap.org/relation/1311341"},population:47351567,gini:{2018:34.7},fifa:"ESP",car:{signs:["E"],side:"right"},timezones:["UTC","UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/es.png",svg:"https://flagcdn.com/es.svg",alt:"The flag of Spain is composed of three horizontal bands of red, yellow and red, with the yellow band twice the height of the red bands. In the yellow band is the national coat of arms offset slightly towards the hoist side of center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/es.png",svg:"https://mainfacts.com/media/images/coats_of_arms/es.svg"},startOfWeek:"monday",capitalInfo:{latlng:[40.4,-3.68]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Somalia",official:"Federal Republic of Somalia",nativeName:{ara:{official:"جمهورية الصومال‎‎",common:"الصومال‎‎"},som:{official:"Jamhuuriyadda Federaalka Soomaaliya",common:"Soomaaliya"}}},tld:[".so"],cca2:"SO",ccn3:"706",cca3:"SOM",cioc:"SOM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SOS:{name:"Somali shilling",symbol:"Sh"}},idd:{root:"+2",suffixes:["52"]},capital:["Mogadishu"],altSpellings:["SO","aṣ-Ṣūmāl","Federal Republic of Somalia","Jamhuuriyadda Federaalka Soomaaliya","Jumhūriyyat aṣ-Ṣūmāl al-Fiderāliyya"],region:"Africa",subregion:"Eastern Africa",languages:{ara:"Arabic",som:"Somali"},translations:{ara:{official:"جمهورية الصومال الفيدرالية",common:"الصومال"},bre:{official:"Republik Kevreadel Somalia",common:"Somalia"},ces:{official:"Somálská demokratická republika",common:"Somálsko"},cym:{official:"Federal Republic of Somalia",common:"Somalia"},deu:{official:"Bundesrepublik Somalia",common:"Somalia"},est:{official:"Somaalia Liitvabariik",common:"Somaalia"},fin:{official:"Somalian liittotasavalta",common:"Somalia"},fra:{official:"République fédérale de Somalie",common:"Somalie"},hrv:{official:"Savezna Republika Somaliji",common:"Somalija"},hun:{official:"Szomáli Szövetségi Köztársaság",common:"Szomália"},ita:{official:"Repubblica federale di Somalia",common:"Somalia"},jpn:{official:"ソマリア連邦共和国",common:"ソマリア"},kor:{official:" 소말리아 연방 공화국",common:"소말리아"},nld:{official:"Federale Republiek Somalië",common:"Somalië"},per:{official:"جمهوری فدرال سومالی",common:"سومالی"},pol:{official:"Federalna Republika Somalii",common:"Somalia"},por:{official:"República Federal da Somália",common:"Somália"},rus:{official:"Федеративная Республика Сомали",common:"Сомали"},slk:{official:"Somálska federatívna republika",common:"Somálsko"},spa:{official:"República Federal de Somalia",common:"Somalia"},srp:{official:"Савезна Република Сомалија",common:"Сомалија"},swe:{official:"Förbundsrepubliken Somalia",common:"Somalia"},tur:{official:"Somali Federal Cumhuriyeti",common:"Somali"},urd:{official:"وفاقی جمہوریہ صومالیہ",common:"صومالیہ"},zho:{official:"索马里共和国",common:"索马里"}},latlng:[10,49],landlocked:!1,borders:["DJI","ETH","KEN"],area:637657,demonyms:{eng:{f:"Somali",m:"Somali"},fra:{f:"Somalienne",m:"Somalien"}},flag:"🇸🇴",maps:{googleMaps:"https://goo.gl/maps/8of8q7D1a8p7R6Fc9",openStreetMaps:"https://www.openstreetmap.org/relation/192799"},population:15893219,gini:{2017:36.8},fifa:"SOM",car:{signs:["SO"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/so.png",svg:"https://flagcdn.com/so.svg",alt:"The flag of Somalia features a large five-pointed white star centered on a light blue field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/so.png",svg:"https://mainfacts.com/media/images/coats_of_arms/so.svg"},startOfWeek:"monday",capitalInfo:{latlng:[2.07,45.33]},postalCode:{format:"@@  #####",regex:"^([A-Z]{2}\\d{5})$"}},{name:{common:"DR Congo",official:"Democratic Republic of the Congo",nativeName:{fra:{official:"République démocratique du Congo",common:"RD Congo"},kon:{official:"Repubilika ya Kongo Demokratiki",common:"Repubilika ya Kongo Demokratiki"},lin:{official:"Republiki ya Kongó Demokratiki",common:"Republiki ya Kongó Demokratiki"},lua:{official:"Ditunga dia Kongu wa Mungalaata",common:"Ditunga dia Kongu wa Mungalaata"},swa:{official:"Jamhuri ya Kidemokrasia ya Kongo",common:"Jamhuri ya Kidemokrasia ya Kongo"}}},tld:[".cd"],cca2:"CD",ccn3:"180",cca3:"COD",cioc:"COD",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CDF:{name:"Congolese franc",symbol:"FC"}},idd:{root:"+2",suffixes:["43"]},capital:["Kinshasa"],altSpellings:["CD","DR Congo","Congo-Kinshasa","Congo, the Democratic Republic of the","DRC"],region:"Africa",subregion:"Middle Africa",languages:{fra:"French",kon:"Kikongo",lin:"Lingala",lua:"Tshiluba",swa:"Swahili"},translations:{ara:{official:"جمهورية الكونغو الديمقراطية",common:"الكونغو"},bre:{official:"Republik Demokratel Kongo",common:"Kongo-Kinshasa"},ces:{official:"Demokratická republika Kongo",common:"DR Kongo"},cym:{official:"Gweriniaeth Ddemocrataidd Congo",common:"Gweriniaeth Ddemocrataidd Congo"},deu:{official:"Demokratische Republik Kongo",common:"Kongo (Dem. Rep.)"},est:{official:"Kongo Demokraatlik Vabariik",common:"Kongo DV"},fin:{official:"Kongon demokraattinen tasavalta",common:"Kongon demokraattinen tasavalta"},fra:{official:"République démocratique du Congo",common:"Congo (Rép. dém.)"},hrv:{official:"Demokratska Republika Kongo",common:"Kongo, Demokratska Republika"},hun:{official:"Kongói Demokratikus Köztársaság",common:"Kongói Demokratikus Köztársaság"},ita:{official:"Repubblica Democratica del Congo",common:"Congo (Rep. Dem.)"},jpn:{official:"コンゴ民主共和国",common:"コンゴ民主共和国"},kor:{official:"콩고 민주 공화국",common:"콩고 민주 공화국"},nld:{official:"Democratische Republiek Congo",common:"Congo (DRC)"},per:{official:"جمهوری دموکراتیک کنگو",common:"کنگو دموکراتیک"},pol:{official:"Demokratyczna Republika Konga",common:"Demokratyczna Republika Konga"},por:{official:"República Democrática do Congo",common:"República Democrática do Congo"},rus:{official:"Демократическая Республика Конго",common:"Демократическая Республика Конго"},slk:{official:"Konžská demokratická republika",common:"Kongo"},spa:{official:"República Democrática del Congo",common:"Congo (Rep. Dem.)"},srp:{official:"Демократска Република Конго",common:"ДР Конго"},swe:{official:"Demokratiska republiken Kongo",common:"Kongo-Kinshasa"},tur:{official:"Kongo Demokratik Cumhuriyeti",common:"Kongo Demokratik Cumhuriyeti"},urd:{official:"جمہوری جمہوریہ کانگو",common:"کانگو"},zho:{official:"刚果民主共和国",common:"民主刚果"}},latlng:[0,25],landlocked:!1,borders:["AGO","BDI","CAF","COG","RWA","SSD","TZA","UGA","ZMB"],area:2344858,demonyms:{eng:{f:"Congolese",m:"Congolese"},fra:{f:"Congolaise",m:"Congolais"}},flag:"🇨🇩",maps:{googleMaps:"https://goo.gl/maps/KfhNVn6VqdZXWu8n9",openStreetMaps:"https://www.openstreetmap.org/relation/192795"},population:108407721,gini:{2012:42.1},fifa:"COD",car:{signs:["CGO"],side:"right"},timezones:["UTC+01:00","UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/cd.png",svg:"https://flagcdn.com/cd.svg",alt:"The flag of the Democratic Republic of the Congo has a sky-blue field with a yellow-edged red diagonal band that extends from the lower hoist-side corner to the upper fly-side corner of the field. A large five-pointed yellow star is situated above the diagonal band on the upper hoist side of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cd.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cd.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-4.32,15.3]}},{name:{common:"Curaçao",official:"Country of Curaçao",nativeName:{eng:{official:"Country of Curaçao",common:"Curaçao"},nld:{official:"Land Curaçao",common:"Curaçao"},pap:{official:"Pais Kòrsou",common:"Pais Kòrsou"}}},tld:[".cw"],cca2:"CW",ccn3:"531",cca3:"CUW",independent:!1,status:"officially-assigned",unMember:!1,currencies:{ANG:{name:"Netherlands Antillean guilder",symbol:"ƒ"}},idd:{root:"+5",suffixes:["99"]},capital:["Willemstad"],altSpellings:["CW","Curacao","Kòrsou","Country of Curaçao","Land Curaçao","Pais Kòrsou"],region:"Americas",subregion:"Caribbean",languages:{eng:"English",nld:"Dutch",pap:"Papiamento"},translations:{ara:{official:"دولة كوراساو",common:"كوراساو"},bre:{official:"Bro Curaçao",common:"Curaçao"},ces:{official:"Autonomní země Curaçao",common:"Curaçao"},cym:{official:"Country of Curaçao",common:"Curaçao"},deu:{official:"Land Curaçao",common:"Curaçao"},est:{official:"Curaçao",common:"Curaçao"},fin:{official:"Curaçao",common:"Curaçao"},fra:{official:"Pays de Curaçao",common:"Curaçao"},hun:{official:"Curaçao",common:"Curaçao"},ita:{official:"Paese di Curaçao",common:"Curaçao"},kor:{official:"퀴라소",common:"퀴라소"},nld:{official:"Land Curaçao",common:"Curaçao"},per:{official:"کوراسائو",common:"کوراسائو"},pol:{official:"Curaçao",common:"Curaçao"},por:{official:"País de Curaçao",common:"ilha da Curação"},rus:{official:"Страна Кюрасао",common:"Кюрасао"},slk:{official:"Curacao",common:"Curacao"},spa:{official:"País de Curazao",common:"Curazao"},srp:{official:"Курасао",common:"Курасао"},swe:{official:"Curaçao",common:"Curaçao"},tur:{official:"Curaçao",common:"Curaçao"},urd:{official:"مملکتِ کیوراساؤ",common:"کیوراساؤ"},zho:{official:"库拉索",common:"库拉索"}},latlng:[12.116667,-68.933333],landlocked:!1,area:444,demonyms:{eng:{f:"Curaçaoan",m:"Curaçaoan"},fra:{f:"Curacienne",m:"Curacien"}},flag:"🇨🇼",maps:{googleMaps:"https://goo.gl/maps/9D3hTeA3qKaRT7S16",openStreetMaps:"https://www.openstreetmap.org/relation/1216719"},population:155014,fifa:"CUW",car:{signs:["CW"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/cw.png",svg:"https://flagcdn.com/cw.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[12.1,-68.92]}},{name:{common:"Ireland",official:"Republic of Ireland",nativeName:{eng:{official:"Republic of Ireland",common:"Ireland"},gle:{official:"Poblacht na hÉireann",common:"Éire"}}},tld:[".ie"],cca2:"IE",ccn3:"372",cca3:"IRL",cioc:"IRL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["53"]},capital:["Dublin"],altSpellings:["IE","Éire","Republic of Ireland","Poblacht na hÉireann"],region:"Europe",subregion:"Northern Europe",languages:{eng:"English",gle:"Irish"},translations:{ara:{official:"جمهورية أيرلندا",common:"أيرلندا"},bre:{official:"Republik Iwerzhon",common:"Iwerzhon"},ces:{official:"Irsko",common:"Irsko"},cym:{official:"Republic of Ireland",common:"Ireland"},deu:{official:"Republik Irland",common:"Irland"},est:{official:"Iirimaa",common:"Iirimaa"},fin:{official:"Irlannin tasavalta",common:"Irlanti"},fra:{official:"République d'Irlande",common:"Irlande"},hrv:{official:"Republika Irska",common:"Irska"},hun:{official:"Ír Köztársaság",common:"Írország"},ita:{official:"Repubblica d'Irlanda",common:"Irlanda"},jpn:{official:"アイルランド共和国",common:"アイルランド"},kor:{official:"아일랜드 공화국",common:"아일랜드"},nld:{official:"Republic of Ireland",common:"Ierland"},per:{official:"ایرلند",common:"ایرلند"},pol:{official:"Republika Irlandii",common:"Irlandia"},por:{official:"República da Irlanda",common:"Irlanda"},rus:{official:"Ирландия",common:"Ирландия"},slk:{official:"Írska republika",common:"Írsko"},spa:{official:"República de Irlanda",common:"Irlanda"},srp:{official:"Република Ирска",common:"Ирска"},swe:{official:"Irland",common:"Irland"},tur:{official:"İrlanda Cumhuriyeti",common:"İrlanda"},urd:{official:"جمہوریہ جزیرہ آئرلینڈ",common:"جزیرہ آئرلینڈ"},zho:{official:"爱尔兰共和国",common:"爱尔兰"}},latlng:[53,-8],landlocked:!1,borders:["GBR"],area:70273,demonyms:{eng:{f:"Irish",m:"Irish"},fra:{f:"Irlandaise",m:"Irlandais"}},flag:"🇮🇪",maps:{googleMaps:"https://goo.gl/maps/hxd1BKxgpchStzQC6",openStreetMaps:"https://www.openstreetmap.org/relation/62273"},population:4994724,gini:{2017:31.4},fifa:"IRL",car:{signs:["IRL"],side:"left"},timezones:["UTC"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ie.png",svg:"https://flagcdn.com/ie.svg",alt:"The flag of Ireland is composed of three equal vertical bands of green, white and orange."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ie.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ie.svg"},startOfWeek:"monday",capitalInfo:{latlng:[53.32,-6.23]}},{name:{common:"Equatorial Guinea",official:"Republic of Equatorial Guinea",nativeName:{fra:{official:"République de la Guinée Équatoriale",common:"Guinée équatoriale"},por:{official:"República da Guiné Equatorial",common:"Guiné Equatorial"},spa:{official:"República de Guinea Ecuatorial",common:"Guinea Ecuatorial"}}},tld:[".gq"],cca2:"GQ",ccn3:"226",cca3:"GNQ",cioc:"GEQ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XAF:{name:"Central African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["40"]},capital:["Malabo"],altSpellings:["GQ","Republic of Equatorial Guinea","República de Guinea Ecuatorial","République de Guinée équatoriale","República da Guiné Equatorial"],region:"Africa",subregion:"Middle Africa",languages:{fra:"French",por:"Portuguese",spa:"Spanish"},translations:{ara:{official:"جمهورية غينيا الاستوائية",common:"غينيا الاستوائية"},bre:{official:"Republik Ginea ar C'heheder",common:"Ginea ar C'heheder"},ces:{official:"Republika Rovníková Guinea",common:"Rovníková Guinea"},cym:{official:"Gweriniaeth Gini Gyhydeddol",common:"Gini Gyhydeddol"},deu:{official:"Republik Äquatorialguinea",common:"Äquatorialguinea"},est:{official:"Ekvatoriaal-Guinea Vabariik",common:"Ekvatoriaal-Guinea"},fin:{official:"Päiväntasaajan Guinean tasavalta",common:"Päiväntasaajan Guinea"},fra:{official:"République de Guinée équatoriale",common:"Guinée équatoriale"},hrv:{official:"Republika Ekvatorska Gvineja",common:"Ekvatorijalna Gvineja"},hun:{official:"Egyenlítői-Guinea-i Köztársaság",common:"Egyenlítői-Guinea"},ita:{official:"Repubblica della Guinea Equatoriale",common:"Guinea Equatoriale"},jpn:{official:"赤道ギニア共和国",common:"赤道ギニア"},kor:{official:"적도 기니 공화국",common:"적도 기니"},nld:{official:"Republiek Equatoriaal-Guinea",common:"Equatoriaal-Guinea"},per:{official:"جمهوری گینه استوایی",common:"گینه استوایی"},pol:{official:"Republika Gwinei Równikowej",common:"Gwinea Równikowa"},por:{official:"República da Guiné Equatorial",common:"Guiné Equatorial"},rus:{official:"Республика Экваториальная Гвинея",common:"Экваториальная Гвинея"},slk:{official:"Republika rovníkovej Guiney",common:"Rovníková Guinea"},spa:{official:"República de Guinea Ecuatorial",common:"Guinea Ecuatorial"},srp:{official:"Република Екваторијална Гвинеја",common:"Екваторијална Гвинеја"},swe:{official:"Republiken Ekvatorialguinea",common:"Ekvatorialguinea"},tur:{official:"Ekvator Ginesi Cumhuriyeti",common:"Ekvator Ginesi"},urd:{official:"جمہوریہ استوائی گنی",common:"استوائی گنی"},zho:{official:"赤道几内亚共和国",common:"赤道几内亚"}},latlng:[2,10],landlocked:!1,borders:["CMR","GAB"],area:28051,demonyms:{eng:{f:"Equatorial Guinean",m:"Equatorial Guinean"},fra:{f:"Équato-guinéenne",m:"Équato-guinéen"}},flag:"🇬🇶",maps:{googleMaps:"https://goo.gl/maps/ucWfFd8aW1FbGMva9",openStreetMaps:"https://www.openstreetmap.org/relation/192791"},population:1402985,fifa:"EQG",car:{signs:["GQ"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/gq.png",svg:"https://flagcdn.com/gq.svg",alt:"The flag of Equatorial Guinea is composed of three equal horizontal bands of green, white and red with the national coat of arms centered in the white band and an isosceles triangle superimposed on the hoist side of the field. The triangle is light blue, has its base on the hoist end and spans about one-fifth the width of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gq.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gq.svg"},startOfWeek:"monday",capitalInfo:{latlng:[3.75,8.78]}},{name:{common:"Saint Barthélemy",official:"Collectivity of Saint Barthélemy",nativeName:{fra:{official:"Collectivité de Saint-Barthélemy",common:"Saint-Barthélemy"}}},tld:[".bl"],cca2:"BL",ccn3:"652",cca3:"BLM",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+5",suffixes:["90"]},capital:["Gustavia"],altSpellings:["BL","St. Barthelemy","Collectivity of Saint Barthélemy","Collectivité de Saint-Barthélemy"],region:"Americas",subregion:"Caribbean",languages:{fra:"French"},translations:{ara:{official:"التجمع الإقليمي لسانت بارتيليمي",common:"سان بارتليمي"},bre:{official:"Saint-Barthélemy",common:"Saint-Barthélemy"},ces:{official:"Svatý Bartoloměj",common:"Svatý Bartoloměj"},cym:{official:"Collectivity of Saint Barthélemy",common:"Saint Barthélemy"},deu:{official:"Gebietskörperschaft Saint-Barthélemy",common:"Saint-Barthélemy"},est:{official:"Saint-Barthélemy territoriaalühendus",common:"Saint-Barthélemy"},fin:{official:"Saint-Barthélemyn yhteisö",common:"Saint-Barthélemy"},fra:{official:"Collectivité de Saint-Barthélemy",common:"Saint-Barthélemy"},hrv:{official:"Kolektivnost sv Barthélemy",common:"Saint Barthélemy"},hun:{official:"Saint-Barthélemy",common:"Saint-Barthélemy"},ita:{official:"Collettività di Saint Barthélemy",common:"Antille Francesi"},jpn:{official:"サン·バルテルミー島の集合体",common:"サン・バルテルミー"},kor:{official:"생바르텔레미",common:"생바르텔레미"},nld:{official:"Gemeenschap Saint Barthélemy",common:"Saint Barthélemy"},per:{official:"سن بارتلمی",common:"سن بارتلمی"},pol:{official:"Saint-Barthélemy",common:"Saint-Barthélemy"},por:{official:"Coletividade de Saint Barthélemy",common:"São Bartolomeu"},rus:{official:"Коллективность Санкт -Бартельми",common:"Сен-Бартелеми"},slk:{official:"Svätý Bartolomej",common:"Svätý Bartolomej"},spa:{official:"Colectividad de San Barthélemy",common:"San Bartolomé"},srp:{official:"Сен Бартелеми",common:"Територијални Kолектив Сен Бартелеми"},swe:{official:"Saint-Barthélemy",common:"Saint-Barthélemy"},tur:{official:"Saint Barthélemy",common:"Saint Barthélemy"},urd:{official:"سینٹ بارتھیملے",common:"سینٹ بارتھیملے"},zho:{official:"圣巴泰勒米集体",common:"圣巴泰勒米"}},latlng:[18.5,-63.41666666],landlocked:!1,area:21,demonyms:{eng:{f:"Saint Barthélemy Islander",m:"Saint Barthélemy Islander"},fra:{f:"Barthéloméenne",m:"Barthéloméen"}},flag:"🇧🇱",maps:{googleMaps:"https://goo.gl/maps/Mc7GqH466S7AAk297",openStreetMaps:"https://www.openstreetmap.org/relation/7552779"},population:4255,car:{signs:["F"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/bl.png",svg:"https://flagcdn.com/bl.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[17.88,-62.85]},postalCode:{format:"### ###"}},{name:{common:"Nepal",official:"Federal Democratic Republic of Nepal",nativeName:{nep:{official:"नेपाल संघीय लोकतान्त्रिक गणतन्त्र",common:"नेपाल"}}},tld:[".np"],cca2:"NP",ccn3:"524",cca3:"NPL",cioc:"NEP",independent:!0,status:"officially-assigned",unMember:!0,currencies:{NPR:{name:"Nepalese rupee",symbol:"₨"}},idd:{root:"+9",suffixes:["77"]},capital:["Kathmandu"],altSpellings:["NP","Federal Democratic Republic of Nepal","Loktāntrik Ganatantra Nepāl"],region:"Asia",subregion:"Southern Asia",languages:{nep:"Nepali"},translations:{ara:{official:"جمهورية نيبال الديمقراطية الاتحادية",common:"نيبال"},bre:{official:"Republik Demokratel Kevreadel Nepal",common:"Nepal"},ces:{official:"Federativní demokratická republika Nepál",common:"Nepál"},cym:{official:"Federal Democratic Republic of Nepal",common:"Nepal"},deu:{official:"Demokratische Bundesrepublik Nepal",common:"Nepal"},est:{official:"Nepali Demokraatlik Liitvabariik",common:"Nepal"},fin:{official:"Nepalin demokraattinen liittotasavalta",common:"Nepal"},fra:{official:"République du Népal",common:"Népal"},hrv:{official:"Savezna Demokratska Republika Nepal",common:"Nepal"},hun:{official:"Nepáli Szövetségi Demokratikus Köztársaság",common:"Nepál"},ita:{official:"Repubblica federale democratica del Nepal",common:"Nepal"},jpn:{official:"ネパール連邦民主共和国",common:"ネパール"},kor:{official:"네팔 연방 민주 공화국",common:"네팔"},nld:{official:"Federale Democratische Republiek Nepal",common:"Nepal"},per:{official:"جمهوری فدرال دموکراتیک نپال",common:"نپال"},pol:{official:"Federalna Demokratyczna Republika Nepalu",common:"Nepal"},por:{official:"República Democrática Federal do Nepal",common:"Nepal"},rus:{official:"Федеративная Демократическая Республика Непал",common:"Непал"},slk:{official:"Nepálska federatívna demokratická republika",common:"Nepál"},spa:{official:"República Democrática Federal de Nepal",common:"Nepal"},srp:{official:"Савезна Демократска Република Непал",common:"Непал"},swe:{official:"Demokratiska förbundsrepubliken Nepal",common:"Nepal"},tur:{official:"Nepal Federal Demokratik Cumhuriyeti",common:"Nepal"},urd:{official:"وفاقی جمہوری جمہوریہ نیپال",common:"نیپال"},zho:{official:"尼泊尔联邦民主共和国",common:"尼泊尔"}},latlng:[28,84],landlocked:!0,borders:["CHN","IND"],area:147181,demonyms:{eng:{f:"Nepalese",m:"Nepalese"},fra:{f:"Népalaise",m:"Népalais"}},flag:"🇳🇵",maps:{googleMaps:"https://goo.gl/maps/UMj2zpbQp7B5c3yT7",openStreetMaps:"https://www.openstreetmap.org/relation/184633"},population:29136808,gini:{2010:32.8},fifa:"NEP",car:{signs:["NEP"],side:"left"},timezones:["UTC+05:45"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/np.png",svg:"https://flagcdn.com/np.svg",alt:"The flag of Nepal is the world's only non-quadrilateral flag of a sovereign country. It takes the shape of two adjoining right-angled triangles and has a crimson red field with deep blue edges. Within the smaller upper triangle is an emblem of the upper half of a white sun resting on an upward facing white crescent. The lower triangle bears a white sun with twelve rays."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/np.png",svg:"https://mainfacts.com/media/images/coats_of_arms/np.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[27.72,85.32]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Ecuador",official:"Republic of Ecuador",nativeName:{spa:{official:"República del Ecuador",common:"Ecuador"}}},tld:[".ec"],cca2:"EC",ccn3:"218",cca3:"ECU",cioc:"ECU",independent:!0,status:"officially-assigned",unMember:!0,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+5",suffixes:["93"]},capital:["Quito"],altSpellings:["EC","Republic of Ecuador","República del Ecuador"],region:"Americas",subregion:"South America",languages:{spa:"Spanish"},translations:{ara:{official:"جمهورية الإكوادور",common:"الإكوادور"},bre:{official:"Republik Ecuador",common:"Ecuador"},ces:{official:"Ekvádorská republika",common:"Ekvádor"},cym:{official:"Gweriniaeth Ecwador",common:"Ecwador"},deu:{official:"Republik Ecuador",common:"Ecuador"},est:{official:"Ecuadori Vabariik",common:"Ecuador"},fin:{official:"Ecuadorin tasavalta",common:"Ecuador"},fra:{official:"République de l'Équateur",common:"Équateur"},hrv:{official:"Republika Ekvador",common:"Ekvador"},hun:{official:"Ecuadori Köztársaság",common:"Ecuador"},ita:{official:"Repubblica dell'Ecuador",common:"Ecuador"},jpn:{official:"エクアドル共和国",common:"エクアドル"},kor:{official:"에콰도르 공화국",common:"에콰도르"},nld:{official:"Republiek Ecuador",common:"Ecuador"},per:{official:"جمهوری اکوادور",common:"اکوادور"},pol:{official:"Ekwador",common:"Ekwador"},por:{official:"República do Equador",common:"Equador"},rus:{official:"Республика Эквадор",common:"Эквадор"},slk:{official:"Ekvádorská republika",common:"Ekvádor"},spa:{official:"República del Ecuador",common:"Ecuador"},srp:{official:"Република Еквадор",common:"Еквадор"},swe:{official:"Republiken Ecuador",common:"Ecuador"},tur:{official:"Ekvador Cumhuriyeti",common:"Ekvador"},urd:{official:"جمہوریہ ایکوڈور",common:"ایکواڈور"},zho:{official:"厄瓜多尔共和国",common:"厄瓜多尔"}},latlng:[-2,-77.5],landlocked:!1,borders:["COL","PER"],area:276841,demonyms:{eng:{f:"Ecuadorean",m:"Ecuadorean"},fra:{f:"Équatorienne",m:"Équatorien"}},flag:"🇪🇨",maps:{googleMaps:"https://goo.gl/maps/TbX8hUW4gcbRPZiK7",openStreetMaps:"https://www.openstreetmap.org/relation/108089"},population:17643060,gini:{2019:45.7},fifa:"ECU",car:{signs:["EC"],side:"right"},timezones:["UTC-06:00","UTC-05:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/ec.png",svg:"https://flagcdn.com/ec.svg",alt:"The flag of Ecuador is composed of the horizontal bands of yellow, blue and red, with the yellow band twice the height of the other two bands. The Ecuadorian coat of arms is superimposed in the center of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ec.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ec.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-.22,-78.5]},postalCode:{format:"@####@",regex:"^([a-zA-Z]\\d{4}[a-zA-Z])$"}},{name:{common:"Switzerland",official:"Swiss Confederation",nativeName:{fra:{official:"Confédération suisse",common:"Suisse"},gsw:{official:"Schweizerische Eidgenossenschaft",common:"Schweiz"},ita:{official:"Confederazione Svizzera",common:"Svizzera"},roh:{official:"Confederaziun svizra",common:"Svizra"}}},tld:[".ch"],cca2:"CH",ccn3:"756",cca3:"CHE",cioc:"SUI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CHF:{name:"Swiss franc",symbol:"Fr."}},idd:{root:"+4",suffixes:["1"]},capital:["Bern"],altSpellings:["CH","Swiss Confederation","Schweiz","Suisse","Svizzera","Svizra"],region:"Europe",subregion:"Western Europe",languages:{fra:"French",gsw:"Swiss German",ita:"Italian",roh:"Romansh"},translations:{ara:{official:"الاتحاد السويسري",common:"سويسرا"},bre:{official:"Kengevredad Suis",common:"Suis"},ces:{official:"Švýcarská konfederace",common:"Švýcarsko"},cym:{official:"Swiss Confederation",common:"Switzerland"},deu:{official:"Schweizerische Eidgenossenschaft",common:"Schweiz"},est:{official:"Šveitsi Konföderatsioon",common:"Šveits"},fin:{official:"Sveitsin valaliitto",common:"Sveitsi"},fra:{official:"Confédération suisse",common:"Suisse"},hrv:{official:"švicarska Konfederacija",common:"Švicarska"},hun:{official:"Svájc",common:"Svájc"},ita:{official:"Confederazione svizzera",common:"Svizzera"},jpn:{official:"スイス連邦",common:"スイス"},kor:{official:"스위스 연방",common:"스위스"},nld:{official:"Zwitserse Confederatie",common:"Zwitserland"},per:{official:"کنفدراسیون سوئیس",common:"سوئیس"},pol:{official:"Konfederacja Szwajcarska",common:"Szwajcaria"},por:{official:"Confederação Suíça",common:"Suíça"},rus:{official:"Швейцарская Конфедерация",common:"Швейцария"},slk:{official:"Švajčiarska konfederácia",common:"Švajčiarsko"},spa:{official:"Confederación Suiza",common:"Suiza"},srp:{official:"Швајцарска Конфедерација",common:"Швајцарска"},swe:{official:"Schweiziska edsförbundet",common:"Schweiz"},tur:{official:"İsviçre Konfederasyonu",common:"İsviçre"},urd:{official:"سوئیس  متحدہ",common:"سویٹذرلینڈ"},zho:{official:"瑞士联邦",common:"瑞士"}},latlng:[47,8],landlocked:!0,borders:["AUT","FRA","ITA","LIE","DEU"],area:41284,demonyms:{eng:{f:"Swiss",m:"Swiss"},fra:{f:"Suisse",m:"Suisse"}},flag:"🇨🇭",maps:{googleMaps:"https://goo.gl/maps/uVuZcXaxSx5jLyEC9",openStreetMaps:"https://www.openstreetmap.org/relation/51701"},population:8654622,gini:{2018:33.1},fifa:"SUI",car:{signs:["CH"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ch.png",svg:"https://flagcdn.com/ch.svg",alt:"The flag of Switzerland is square shaped. It features a white Swiss cross centered on a red field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ch.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ch.svg"},startOfWeek:"monday",capitalInfo:{latlng:[46.92,7.47]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Taiwan",official:"Republic of China (Taiwan)",nativeName:{zho:{official:"中華民國",common:"台灣"}}},tld:[".tw",".台灣",".台湾"],cca2:"TW",ccn3:"158",cca3:"TWN",cioc:"TPE",independent:!1,status:"officially-assigned",unMember:!1,currencies:{TWD:{name:"New Taiwan dollar",symbol:"$"}},idd:{root:"+8",suffixes:["86"]},capital:["Taipei"],altSpellings:["TW","Táiwān","Republic of China","中華民國","Zhōnghuá Mínguó","Chinese Taipei"],region:"Asia",subregion:"Eastern Asia",languages:{zho:"Chinese"},translations:{ara:{official:"جمهورية الصين (تايوان)",common:"تايوان"},bre:{official:"Republik Sina (Taiwan)",common:"Taiwan"},ces:{official:"Čínská republika",common:"Tchaj-wan"},cym:{official:"Republic of China (Taiwan)",common:"Taiwan"},deu:{official:"Republik China (Taiwan)",common:"Taiwan"},est:{official:"Taiwani",common:"Taiwan"},fin:{official:"Kiinan tasavalta",common:"Taiwan"},fra:{official:"République de Chine (Taïwan)",common:"Taïwan"},hrv:{official:"Republika Kina",common:"Tajvan"},hun:{official:"Kínai Köztársaság",common:"Tajvan"},ita:{official:"Repubblica cinese (Taiwan)",common:"Taiwan"},jpn:{official:"中華民国",common:"台湾"},kor:{official:"중화민국",common:"대만"},nld:{official:"Republiek China (Taiwan)",common:"Taiwan"},per:{official:"جمهوری چین",common:"تایوان"},pol:{official:"Republika Chińska (Tajwan)",common:"Tajwan"},por:{official:"República da China",common:"Ilha Formosa"},rus:{official:"Китайская Республика",common:"Тайвань"},slk:{official:"Čínska republika",common:"Taiwan"},spa:{official:"República de China en Taiwán",common:"Taiwán"},srp:{official:"Република Кина",common:"Тајван"},swe:{official:"Republiken Kina",common:"Taiwan"},tur:{official:"Çin Cumhuriyeti (Tayvan)",common:"Tayvan"},urd:{official:"جمہوریہ چین (تائیوان)",common:"تائیوان"}},latlng:[23.5,121],landlocked:!1,area:36193,demonyms:{eng:{f:"Taiwanese",m:"Taiwanese"},fra:{f:"Taïwanaise",m:"Taïwanais"}},flag:"🇹🇼",maps:{googleMaps:"https://goo.gl/maps/HgMKFQjNadF3Wa6B6",openStreetMaps:"https://www.openstreetmap.org/relation/449220"},population:23503349,fifa:"TPE",car:{signs:["RC"],side:"right"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/tw.png",svg:"https://flagcdn.com/tw.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[25.03,121.52]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Cuba",official:"Republic of Cuba",nativeName:{spa:{official:"República de Cuba",common:"Cuba"}}},tld:[".cu"],cca2:"CU",ccn3:"192",cca3:"CUB",cioc:"CUB",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CUC:{name:"Cuban convertible peso",symbol:"$"},CUP:{name:"Cuban peso",symbol:"$"}},idd:{root:"+5",suffixes:["3"]},capital:["Havana"],altSpellings:["CU","Republic of Cuba","República de Cuba"],region:"Americas",subregion:"Caribbean",languages:{spa:"Spanish"},translations:{ara:{official:"جمهورية كوبا",common:"كوبا"},bre:{official:"Republik Kuba",common:"Kuba"},ces:{official:"Kubánská republika",common:"Kuba"},cym:{official:"Gweriniaeth Ciwba",common:"Ciwba"},deu:{official:"Republik Kuba",common:"Kuba"},est:{official:"Kuuba Vabariik",common:"Kuuba"},fin:{official:"Kuuban tasavalta",common:"Kuuba"},fra:{official:"République de Cuba",common:"Cuba"},hrv:{official:"Republika Kuba",common:"Kuba"},hun:{official:"Kubai Köztársaság",common:"Kuba"},ita:{official:"Repubblica di Cuba",common:"Cuba"},jpn:{official:"キューバ共和国",common:"キューバ"},kor:{official:"쿠바 공화국",common:"쿠바"},nld:{official:"Republiek Cuba",common:"Cuba"},per:{official:"جمهوری کوبا",common:"کوبا"},pol:{official:"Republika Kuby",common:"Kuba"},por:{official:"República de Cuba",common:"Cuba"},rus:{official:"Республика Куба",common:"Куба"},slk:{official:"Kubánska republika",common:"Kuba"},spa:{official:"República de Cuba",common:"Cuba"},srp:{official:"Република Куба",common:"Куба"},swe:{official:"Republiken Kuba",common:"Kuba"},tur:{official:"Küba Cumhuriyeti",common:"Küba"},urd:{official:"جمہوریہ کیوبا",common:"کیوبا"},zho:{official:"古巴共和国",common:"古巴"}},latlng:[21.5,-80],landlocked:!1,area:109884,demonyms:{eng:{f:"Cuban",m:"Cuban"},fra:{f:"Cubaine",m:"Cubain"}},flag:"🇨🇺",maps:{googleMaps:"https://goo.gl/maps/1dDw1QfZspfMUTm99",openStreetMaps:"https://www.openstreetmap.org/relation/307833"},population:11326616,fifa:"CUB",car:{signs:["C"],side:"right"},timezones:["UTC-05:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/cu.png",svg:"https://flagcdn.com/cu.svg",alt:"The flag of Cuba is composed of five equal horizontal bands of blue alternating with white and a red equilateral triangle superimposed on the hoist side of the field. The triangle has its base on the hoist end, spans about two-fifth the width of the field and bears a white five-pointed star at its center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cu.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cu.svg"},startOfWeek:"monday",capitalInfo:{latlng:[23.12,-82.35]},postalCode:{format:"CP #####",regex:"^(?:CP)*(\\d{5})$"}},{name:{common:"Liberia",official:"Republic of Liberia",nativeName:{eng:{official:"Republic of Liberia",common:"Liberia"}}},tld:[".lr"],cca2:"LR",ccn3:"430",cca3:"LBR",cioc:"LBR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{LRD:{name:"Liberian dollar",symbol:"$"}},idd:{root:"+2",suffixes:["31"]},capital:["Monrovia"],altSpellings:["LR","Republic of Liberia"],region:"Africa",subregion:"Western Africa",languages:{eng:"English"},translations:{ara:{official:"جمهورية ليبيريا",common:"ليبيريا"},bre:{official:"Republik Liberia",common:"Liberia"},ces:{official:"Liberijská republika",common:"Libérie"},cym:{official:"Republic of Liberia",common:"Liberia"},deu:{official:"Republik Liberia",common:"Liberia"},est:{official:"Libeeria Vabariik",common:"Libeeria"},fin:{official:"Liberian tasavalta",common:"Liberia"},fra:{official:"République du Libéria",common:"Liberia"},hrv:{official:"Republika Liberija",common:"Liberija"},hun:{official:"Libériai Köztársaság",common:"Libéria"},ita:{official:"Repubblica di Liberia",common:"Liberia"},jpn:{official:"リベリア共和国",common:"リベリア"},kor:{official:"라이베리아 공화국",common:"라이베리아"},nld:{official:"Republiek Liberia",common:"Liberia"},per:{official:"جمهوری لیبریا",common:"لیبـِریا"},pol:{official:"Republika Liberii",common:"Liberia"},por:{official:"República da Libéria",common:"Libéria"},rus:{official:"Республика Либерия",common:"Либерия"},slk:{official:"Libérijská republika",common:"Libéria"},spa:{official:"República de Liberia",common:"Liberia"},srp:{official:"Република Либерија",common:"Либерија"},swe:{official:"Republiken Liberia",common:"Liberia"},tur:{official:"Liberya Cumhuriyeti",common:"Liberya"},urd:{official:"جمہوریہ لائبیریا",common:"لائبیریا"},zho:{official:"利比里亚共和国",common:"利比里亚"}},latlng:[6.5,-9.5],landlocked:!1,borders:["GIN","CIV","SLE"],area:111369,demonyms:{eng:{f:"Liberian",m:"Liberian"},fra:{f:"Libérienne",m:"Libérien"}},flag:"🇱🇷",maps:{googleMaps:"https://goo.gl/maps/4VsHsc2oeGeRL3wg6",openStreetMaps:"https://www.openstreetmap.org/relation/192780"},population:5057677,gini:{2016:35.3},fifa:"LBR",car:{signs:["LB"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/lr.png",svg:"https://flagcdn.com/lr.svg",alt:"The flag of Liberia is composed of eleven equal horizontal bands of red alternating with white. A blue square bearing a five-pointed white star is superimposed in the canton."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/lr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/lr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[6.3,-10.8]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Martinique",official:"Martinique",nativeName:{fra:{official:"Martinique",common:"Martinique"}}},tld:[".mq"],cca2:"MQ",ccn3:"474",cca3:"MTQ",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+5",suffixes:["96"]},capital:["Fort-de-France"],altSpellings:["MQ"],region:"Americas",subregion:"Caribbean",languages:{fra:"French"},translations:{ara:{official:"مارتينيك",common:"مارتينيك"},bre:{official:"Martinik",common:"Martinik"},ces:{official:"Martinik",common:"Martinik"},cym:{official:"Martinique",common:"Martinique"},deu:{official:"Martinique",common:"Martinique"},est:{official:"Martinique’i departemang",common:"Martinique"},fin:{official:"Martinique",common:"Martinique"},fra:{official:"Martinique",common:"Martinique"},hrv:{official:"Martinique",common:"Martinique"},hun:{official:"Martinique",common:"Martinique"},ita:{official:"Martinique",common:"Martinica"},jpn:{official:"マルティニーク島",common:"マルティニーク"},kor:{official:"마르티니크",common:"마르티니크"},nld:{official:"Martinique",common:"Martinique"},per:{official:"مارتینیک",common:"مارتینیک"},pol:{official:"Martynika",common:"Martynika"},por:{official:"Martinique",common:"Martinica"},rus:{official:"Мартиника",common:"Мартиника"},slk:{official:"Martinique",common:"Martinique"},spa:{official:"Martinica",common:"Martinica"},srp:{official:"Мартиник",common:"Мартиник"},swe:{official:"Martinique",common:"Martinique"},tur:{official:"Martinik",common:"Martinik"},urd:{official:"مارٹینیک",common:"مارٹینیک"},zho:{official:"马提尼克",common:"马提尼克"}},latlng:[14.666667,-61],landlocked:!1,area:1128,demonyms:{eng:{f:"Martinican",m:"Martinican"},fra:{f:"Martiniquaise",m:"Martiniquais"}},flag:"🇲🇶",maps:{googleMaps:"https://goo.gl/maps/87ER7sDAFU7JjcvR6",openStreetMaps:"https://www.openstreetmap.org/relation/2473088"},population:378243,car:{signs:["F"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/mq.png",svg:"https://flagcdn.com/mq.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mq.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mq.svg"},startOfWeek:"monday",capitalInfo:{latlng:[14.6,-61.08]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"South Africa",official:"Republic of South Africa",nativeName:{afr:{official:"Republiek van Suid-Afrika",common:"South Africa"},eng:{official:"Republic of South Africa",common:"South Africa"},nbl:{official:"IRiphabliki yeSewula Afrika",common:"Sewula Afrika"},nso:{official:"Rephaboliki ya Afrika-Borwa ",common:"Afrika-Borwa"},sot:{official:"Rephaboliki ya Afrika Borwa",common:"Afrika Borwa"},ssw:{official:"IRiphabhulikhi yeNingizimu Afrika",common:"Ningizimu Afrika"},tsn:{official:"Rephaboliki ya Aforika Borwa",common:"Aforika Borwa"},tso:{official:"Riphabliki ra Afrika Dzonga",common:"Afrika Dzonga"},ven:{official:"Riphabuḽiki ya Afurika Tshipembe",common:"Afurika Tshipembe"},xho:{official:"IRiphabliki yaseMzantsi Afrika",common:"Mzantsi Afrika"},zul:{official:"IRiphabliki yaseNingizimu Afrika",common:"Ningizimu Afrika"}}},tld:[".za"],cca2:"ZA",ccn3:"710",cca3:"ZAF",cioc:"RSA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ZAR:{name:"South African rand",symbol:"R"}},idd:{root:"+2",suffixes:["7"]},capital:["Pretoria","Bloemfontein","Cape Town"],altSpellings:["ZA","RSA","Suid-Afrika","Republic of South Africa"],region:"Africa",subregion:"Southern Africa",languages:{afr:"Afrikaans",eng:"English",nbl:"Southern Ndebele",nso:"Northern Sotho",sot:"Southern Sotho",ssw:"Swazi",tsn:"Tswana",tso:"Tsonga",ven:"Venda",xho:"Xhosa",zul:"Zulu"},translations:{ara:{official:"جمهورية جنوب أفريقيا",common:"جنوب أفريقيا"},bre:{official:"Republik Suafrika",common:"Suafrika"},ces:{official:"Jihoafrická republika",common:"Jihoafrická republika"},cym:{official:"Republic of South Africa",common:"South Africa"},deu:{official:"Republik Südafrika",common:"Südafrika"},est:{official:"Lõuna-Aafrika Vabariik",common:"Lõuna-Aafrika Vabariik"},fin:{official:"Etelä-Afrikan tasavalta",common:"Etelä-Afrikka"},fra:{official:"République d'Afrique du Sud",common:"Afrique du Sud"},hrv:{official:"Južnoafrička Republika",common:"Južna Afrika"},hun:{official:"Dél-afrikai Köztársaság",common:"Dél-afrikai Köztársaság"},ita:{official:"Repubblica del Sud Africa",common:"Sud Africa"},jpn:{official:"南アフリカ共和国",common:"南アフリカ"},kor:{official:"남아프리카 공화국",common:"남아프리카"},nld:{official:"Republiek Zuid-Afrika",common:"Zuid-Afrika"},per:{official:"جمهوری آفریقای جنوبی",common:"آفریقای جنوبی"},pol:{official:"Republika Południowej Afryki",common:"Południowa Afryka"},por:{official:"República da África do Sul",common:"África do Sul"},rus:{official:"Южно-Африканская Республика",common:"Южная Африка"},slk:{official:"Juhoafrická republika",common:"Južná Afrika"},spa:{official:"República de Sudáfrica",common:"Sudáfrica"},srp:{official:"Република Јужна Африка",common:"Јужноафричка Република"},swe:{official:"Republiken Sydafrika",common:"Sydafrika"},tur:{official:"Güney Afrika Cumhuriyeti",common:"Güney Afrika"},urd:{official:"جمہوریہ جنوبی افریقا",common:"جنوبی افریقا"},zho:{official:"南非共和国",common:"南非"}},latlng:[-29,24],landlocked:!1,borders:["BWA","LSO","MOZ","NAM","SWZ","ZWE"],area:1221037,demonyms:{eng:{f:"South African",m:"South African"},fra:{f:"Sud-africaine",m:"Sud-africain"}},flag:"🇿🇦",maps:{googleMaps:"https://goo.gl/maps/CLCZ1R8Uz1KpYhRv6",openStreetMaps:"https://www.openstreetmap.org/relation/87565"},population:59308690,gini:{2014:63},fifa:"RSA",car:{signs:["ZA"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/za.png",svg:"https://flagcdn.com/za.svg",alt:"The flag of South Africa is composed of two equal horizontal bands of red and blue, with a yellow-edged black isosceles triangle superimposed on the hoist side of the field. This triangle has its base centered on the hoist end, spans about two-fifth the width and two-third the height of the field, and is enclosed on its sides by the arms of a white-edged green horizontally oriented Y-shaped band which extends along the boundary of the red and blue bands to the fly end of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/za.png",svg:"https://mainfacts.com/media/images/coats_of_arms/za.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-25.7,28.22]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Central African Republic",official:"Central African Republic",nativeName:{fra:{official:"République centrafricaine",common:"République centrafricaine"},sag:{official:"Ködörösêse tî Bêafrîka",common:"Bêafrîka"}}},tld:[".cf"],cca2:"CF",ccn3:"140",cca3:"CAF",cioc:"CAF",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XAF:{name:"Central African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["36"]},capital:["Bangui"],altSpellings:["CF","Central African Republic","République centrafricaine"],region:"Africa",subregion:"Middle Africa",languages:{fra:"French",sag:"Sango"},translations:{ara:{official:"جمهورية أفريقيا الوسطى",common:"جمهورية أفريقيا الوسطى"},bre:{official:"Republik Kreizafrikan",common:"Republik Kreizafrikan"},ces:{official:"Středoafrická republika",common:"Středoafrická republika"},cym:{official:"Gweriniaeth Canolbarth Affrica",common:"Gweriniaeth Canolbarth Affrica"},deu:{official:"Zentralafrikanische Republik",common:"Zentralafrikanische Republik"},est:{official:"Kesk-Aafrika Vabariik",common:"Kesk-Aafrika Vabariik"},fin:{official:"Keski-Afrikan tasavalta",common:"Keski-Afrikan tasavalta"},fra:{official:"République centrafricaine",common:"République centrafricaine"},hrv:{official:"Centralna Afrička Republika",common:"Srednjoafrička Republika"},hun:{official:"Közép-afrikai Köztársaság",common:"Közép-afrikai Köztársaság"},ita:{official:"Repubblica Centrafricana",common:"Repubblica Centrafricana"},jpn:{official:"中央アフリカ共和国",common:"中央アフリカ共和国"},kor:{official:"중앙아프리카 공화국",common:"중앙아프리카 공화국"},nld:{official:"Centraal-Afrikaanse Republiek",common:"Centraal-Afrikaanse Republiek"},per:{official:"جمهوری آفریقای مرکزی",common:"جمهوری آفریقای مرکزی"},pol:{official:"Republika Środkowoafrykańska",common:"Republika Środkowoafrykańska"},por:{official:"República Centro-Africano",common:"República Centro-Africana"},rus:{official:"Центрально-Африканская Республика",common:"Центральноафриканская Республика"},slk:{official:"Stredoafrická republika",common:"Stredoafrická republika"},spa:{official:"República Centroafricana",common:"República Centroafricana"},srp:{official:"Централноафричка Република",common:"Централноафричка Република"},swe:{official:"Centralafrikanska republiken",common:"Centralafrikanska republiken"},tur:{official:"Orta Afrika Cumhuriyeti",common:"Orta Afrika Cumhuriyeti"},urd:{official:"وسطی افریقی جمہوریہ",common:"وسطی افریقی جمہوریہ"},zho:{official:"中非共和国",common:"中非共和国"}},latlng:[7,21],landlocked:!0,borders:["CMR","TCD","COD","COG","SSD","SDN"],area:622984,demonyms:{eng:{f:"Central African",m:"Central African"},fra:{f:"Centrafricaine",m:"Centrafricain"}},flag:"🇨🇫",maps:{googleMaps:"https://goo.gl/maps/51V8dsi2rGYC9n3c9",openStreetMaps:"https://www.openstreetmap.org/relation/192790"},population:4829764,gini:{2008:56.2},fifa:"CTA",car:{signs:["RCA"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/cf.png",svg:"https://flagcdn.com/cf.svg",alt:"The flag of Central African Republic is composed of four equal horizontal bands of blue, white, green and yellow intersected at the center by a vertical red band of equal size as the horizontal bands. A yellow five-pointed star is situated on the hoist side of the blue band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cf.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cf.svg"},startOfWeek:"monday",capitalInfo:{latlng:[4.37,18.58]}},{name:{common:"Poland",official:"Republic of Poland",nativeName:{pol:{official:"Rzeczpospolita Polska",common:"Polska"}}},tld:[".pl"],cca2:"PL",ccn3:"616",cca3:"POL",cioc:"POL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{PLN:{name:"Polish złoty",symbol:"zł"}},idd:{root:"+4",suffixes:["8"]},capital:["Warsaw"],altSpellings:["PL","Republic of Poland","Rzeczpospolita Polska"],region:"Europe",subregion:"Central Europe",languages:{pol:"Polish"},translations:{ara:{official:"الجمهورية البولندية",common:"بولندا"},bre:{official:"Republik Polonia",common:"Polonia"},ces:{official:"Polská republika",common:"Polsko"},cym:{official:"Republic of Poland",common:"Poland"},deu:{official:"Republik Polen",common:"Polen"},est:{official:"Poola Vabariik",common:"Poola"},fin:{official:"Puolan tasavalta",common:"Puola"},fra:{official:"République de Pologne",common:"Pologne"},hrv:{official:"Republika Poljska",common:"Poljska"},hun:{official:"Lengyel Köztársaság",common:"Lengyelország"},ita:{official:"Repubblica di Polonia",common:"Polonia"},jpn:{official:"ポーランド共和国",common:"ポーランド"},kor:{official:"폴란드 공화국",common:"폴란드"},nld:{official:"Republiek Polen",common:"Polen"},per:{official:"جمهوری لهستان",common:"لهستان"},pol:{official:"Rzeczpospolita Polska",common:"Polska"},por:{official:"República da Polónia",common:"Polónia"},rus:{official:"Республика Польша",common:"Польша"},slk:{official:"Poľská republika",common:"Poľsko"},spa:{official:"República de Polonia",common:"Polonia"},srp:{official:"Република Пољска",common:"Пољска"},swe:{official:"Republiken Polen",common:"Polen"},tur:{official:"Polonya Cumhuriyeti",common:"Polonya"},urd:{official:"جمہوریہ پولینڈ",common:"پولینڈ"},zho:{official:"波兰共和国",common:"波兰"}},latlng:[52,20],landlocked:!1,borders:["BLR","CZE","DEU","LTU","RUS","SVK","UKR"],area:312679,demonyms:{eng:{f:"Polish",m:"Polish"},fra:{f:"Polonaise",m:"Polonais"}},flag:"🇵🇱",maps:{googleMaps:"https://goo.gl/maps/gY9Xw4Sf4415P4949",openStreetMaps:"https://www.openstreetmap.org/relation/49715"},population:37950802,gini:{2018:30.2},fifa:"POL",car:{signs:["PL"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/pl.png",svg:"https://flagcdn.com/pl.svg",alt:"The flag of Poland is composed of two equal horizontal bands of white and red."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pl.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pl.svg"},startOfWeek:"monday",capitalInfo:{latlng:[52.25,21]},postalCode:{format:"##-###",regex:"^(\\d{5})$"}},{name:{common:"France",official:"French Republic",nativeName:{fra:{official:"République française",common:"France"}}},tld:[".fr"],cca2:"FR",ccn3:"250",cca3:"FRA",cioc:"FRA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["3"]},capital:["Paris"],altSpellings:["FR","French Republic","République française"],region:"Europe",subregion:"Western Europe",languages:{fra:"French"},translations:{ara:{official:"الجمهورية الفرنسية",common:"فرنسا"},bre:{official:"Republik Frañs",common:"Frañs"},ces:{official:"Francouzská republika",common:"Francie"},cym:{official:"French Republic",common:"France"},deu:{official:"Französische Republik",common:"Frankreich"},est:{official:"Prantsuse Vabariik",common:"Prantsusmaa"},fin:{official:"Ranskan tasavalta",common:"Ranska"},fra:{official:"République française",common:"France"},hrv:{official:"Francuska Republika",common:"Francuska"},hun:{official:"Francia Köztársaság",common:"Franciaország"},ita:{official:"Repubblica francese",common:"Francia"},jpn:{official:"フランス共和国",common:"フランス"},kor:{official:"프랑스 공화국",common:"프랑스"},nld:{official:"Franse Republiek",common:"Frankrijk"},per:{official:"جمهوری فرانسه",common:"فرانسه"},pol:{official:"Republika Francuska",common:"Francja"},por:{official:"República Francesa",common:"França"},rus:{official:"Французская Республика",common:"Франция"},slk:{official:"Francúzska republika",common:"Francúzsko"},spa:{official:"República francés",common:"Francia"},srp:{official:"Француска Република",common:"Француска"},swe:{official:"Republiken Frankrike",common:"Frankrike"},tur:{official:"Fransa Cumhuriyeti",common:"Fransa"},urd:{official:"جمہوریہ فرانس",common:"فرانس"},zho:{official:"法兰西共和国",common:"法国"}},latlng:[46,2],landlocked:!1,borders:["AND","BEL","DEU","ITA","LUX","MCO","ESP","CHE"],area:551695,demonyms:{eng:{f:"French",m:"French"},fra:{f:"Française",m:"Français"}},flag:"🇫🇷",maps:{googleMaps:"https://goo.gl/maps/g7QxxSFsWyTPKuzd7",openStreetMaps:"https://www.openstreetmap.org/relation/1403916"},population:67391582,gini:{2018:32.4},fifa:"FRA",car:{signs:["F"],side:"right"},timezones:["UTC-10:00","UTC-09:30","UTC-09:00","UTC-08:00","UTC-04:00","UTC-03:00","UTC+01:00","UTC+02:00","UTC+03:00","UTC+04:00","UTC+05:00","UTC+10:00","UTC+11:00","UTC+12:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/fr.png",svg:"https://flagcdn.com/fr.svg",alt:"The flag of France is composed of three equal vertical bands of blue, white and red."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/fr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/fr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[48.87,2.33]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Slovenia",official:"Republic of Slovenia",nativeName:{slv:{official:"Republika Slovenija",common:"Slovenija"}}},tld:[".si"],cca2:"SI",ccn3:"705",cca3:"SVN",cioc:"SLO",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["86"]},capital:["Ljubljana"],altSpellings:["SI","Republic of Slovenia","Republika Slovenija"],region:"Europe",subregion:"Central Europe",languages:{slv:"Slovene"},translations:{ara:{official:"جمهورية سلوفينيا",common:"سلوفينيا"},bre:{official:"Republik Slovenia",common:"Slovenia"},ces:{official:"Slovinská republika",common:"Slovinsko"},cym:{official:"Republic of Slovenia",common:"Slovenia"},deu:{official:"Republik Slowenien",common:"Slowenien"},est:{official:"Sloveenia Vabariik",common:"Sloveenia"},fin:{official:"Slovenian tasavalta",common:"Slovenia"},fra:{official:"République de Slovénie",common:"Slovénie"},hrv:{official:"Republika Slovenija",common:"Slovenija"},hun:{official:"Szlovén Köztársaság",common:"Szlovénia"},ita:{official:"Repubblica di Slovenia",common:"Slovenia"},jpn:{official:"スロベニア共和国",common:"スロベニア"},kor:{official:"슬로베니아 공화국",common:"슬로베니아"},nld:{official:"Republiek Slovenië",common:"Slovenië"},per:{official:"جمهوری اسلوونی",common:"اسلوونی"},pol:{official:"Republika Słowenii",common:"Słowenia"},por:{official:"República da Eslovénia",common:"Eslovénia"},rus:{official:"Республика Словения",common:"Словения"},slk:{official:"Slovinská republika",common:"Slovinsko"},spa:{official:"República de Eslovenia",common:"Eslovenia"},srp:{official:"Република Словенија",common:"Словенија"},swe:{official:"Republiken Slovenien",common:"Slovenien"},tur:{official:"Slovenya Cumhuriyeti",common:"Slovenya"},urd:{official:"جمہوریہ سلووینیا",common:"سلووینیا"},zho:{official:"斯洛文尼亚共和国",common:"斯洛文尼亚"}},latlng:[46.11666666,14.81666666],landlocked:!1,borders:["AUT","HRV","ITA","HUN"],area:20273,demonyms:{eng:{f:"Slovene",m:"Slovene"},fra:{f:"Slovène",m:"Slovène"}},flag:"🇸🇮",maps:{googleMaps:"https://goo.gl/maps/7zgFmswcCJh5L5D49",openStreetMaps:"https://www.openstreetmap.org/relation/218657"},population:2100126,gini:{2018:24.6},fifa:"SVN",car:{signs:["SLO"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/si.png",svg:"https://flagcdn.com/si.svg",alt:"The flag of Slovenia is composed of three equal horizontal bands of white, blue and red. The national coat of arms is situated in the upper hoist side of the field centered on the boundary between the white and blue bands."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/si.png",svg:"https://mainfacts.com/media/images/coats_of_arms/si.svg"},startOfWeek:"monday",capitalInfo:{latlng:[46.05,14.52]},postalCode:{format:"SI- ####",regex:"^(?:SI)*(\\d{4})$"}},{name:{common:"Belize",official:"Belize",nativeName:{bjz:{official:"Belize",common:"Belize"},eng:{official:"Belize",common:"Belize"},spa:{official:"Belice",common:"Belice"}}},tld:[".bz"],cca2:"BZ",ccn3:"084",cca3:"BLZ",cioc:"BIZ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BZD:{name:"Belize dollar",symbol:"$"}},idd:{root:"+5",suffixes:["01"]},capital:["Belmopan"],altSpellings:["BZ"],region:"Americas",subregion:"Central America",languages:{bjz:"Belizean Creole",eng:"English",spa:"Spanish"},translations:{ara:{official:"بليز",common:"بليز"},bre:{official:"Belize",common:"Belize"},ces:{official:"Belize",common:"Belize"},cym:{official:"Belîs",common:"Belîs"},deu:{official:"Belize",common:"Belize"},est:{official:"Belize",common:"Belize"},fin:{official:"Belize",common:"Belize"},fra:{official:"Belize",common:"Belize"},hrv:{official:"Belize",common:"Belize"},hun:{official:"Belize",common:"Belize"},ita:{official:"Belize",common:"Belize"},jpn:{official:"ベリーズ",common:"ベリーズ"},kor:{official:"벨리즈",common:"벨리즈"},nld:{official:"Belize",common:"Belize"},per:{official:"بلیز",common:"بلیز"},pol:{official:"Belize",common:"Belize"},por:{official:"Belize",common:"Belize"},rus:{official:"Белиз",common:"Белиз"},slk:{official:"Belize",common:"Belize"},spa:{official:"Belice",common:"Belice"},srp:{official:"Белизе",common:"Белизе"},swe:{official:"Belize",common:"Belize"},tur:{official:"Belize",common:"Belize"},urd:{official:"بیلیز",common:"بیلیز"},zho:{official:"伯利兹",common:"伯利兹"}},latlng:[17.25,-88.75],landlocked:!1,borders:["GTM","MEX"],area:22966,demonyms:{eng:{f:"Belizean",m:"Belizean"},fra:{f:"Bélizienne",m:"Bélizien"}},flag:"🇧🇿",maps:{googleMaps:"https://goo.gl/maps/jdCccpdLodm1uTmo9",openStreetMaps:"https://www.openstreetmap.org/relation/287827"},population:397621,gini:{1999:53.3},fifa:"BLZ",car:{signs:["BH"],side:"right"},timezones:["UTC-06:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/bz.png",svg:"https://flagcdn.com/bz.svg",alt:"The flag of Belize has a royal blue field with a thin red horizontal band at the top and bottom of the field and the national coat of arms in the center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bz.svg"},startOfWeek:"monday",capitalInfo:{latlng:[17.25,-88.77]}},{name:{common:"Kyrgyzstan",official:"Kyrgyz Republic",nativeName:{kir:{official:"Кыргыз Республикасы",common:"Кыргызстан"},rus:{official:"Кыргызская Республика",common:"Киргизия"}}},tld:[".kg"],cca2:"KG",ccn3:"417",cca3:"KGZ",cioc:"KGZ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KGS:{name:"Kyrgyzstani som",symbol:"с"}},idd:{root:"+9",suffixes:["96"]},capital:["Bishkek"],altSpellings:["KG","Киргизия","Kyrgyz Republic","Кыргыз Республикасы","Kyrgyz Respublikasy"],region:"Asia",subregion:"Central Asia",languages:{kir:"Kyrgyz",rus:"Russian"},translations:{ara:{official:"الجمهورية القيرغيزية",common:"قيرغيزستان"},bre:{official:"Republik Kirgiz",common:"Kirgizstan"},ces:{official:"Kyrgyzská republika",common:"Kyrgyzstán"},cym:{official:"Kyrgyz Republic",common:"Kyrgyzstan"},deu:{official:"Kirgisische Republik",common:"Kirgisistan"},est:{official:"Kirgiisi Vabariik",common:"Kõrgõzstan"},fin:{official:"Kirgisian tasavalta",common:"Kirgisia"},fra:{official:"République kirghize",common:"Kirghizistan"},hrv:{official:"Kirgistanu",common:"Kirgistan"},hun:{official:"Kirgiz Köztársaság",common:"Kirgizisztán"},ita:{official:"Kirghizistan",common:"Kirghizistan"},jpn:{official:"キルギス共和国",common:"キルギス"},kor:{official:"키르기스 공화국",common:"키르기스스탄"},nld:{official:"Kirgizische Republiek",common:"Kirgizië"},per:{official:"جمهوری قِرقیزستان",common:"قرقیزستان"},pol:{official:"Republika Kirgiska",common:"Kirgistan"},por:{official:"República do Quirguistão",common:"Quirguistão"},rus:{official:"Кыргызская Республика",common:"Киргизия"},slk:{official:"Kirgizská republika",common:"Kirgizsko"},spa:{official:"República Kirguisa",common:"Kirguizistán"},srp:{official:"Киргиска Република",common:"Киргизија"},swe:{official:"Republiken Kirgizistan",common:"Kirgizistan"},tur:{official:"Kırgızistan Cumhuriyeti",common:"Kırgızistan"},urd:{official:"جمہوریہ کرغیزستان",common:"کرغیزستان"},zho:{official:"吉尔吉斯斯坦共和国",common:"吉尔吉斯斯坦"}},latlng:[41,75],landlocked:!0,borders:["CHN","KAZ","TJK","UZB"],area:199951,demonyms:{eng:{f:"Kirghiz",m:"Kirghiz"},fra:{f:"Kirghize",m:"Kirghize"}},flag:"🇰🇬",maps:{googleMaps:"https://goo.gl/maps/SKG8BSMMQVvxkRkB7",openStreetMaps:"https://www.openstreetmap.org/relation/178009"},population:6591600,gini:{2019:29.7},fifa:"KGZ",car:{signs:["KS"],side:"right"},timezones:["UTC+06:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/kg.png",svg:"https://flagcdn.com/kg.svg",alt:"The flag of Kyrgyzstan features a yellow sun with forty rays at the center of a red field. At the center of the sun is a stylized depiction of a tunduk."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/kg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/kg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[42.87,74.6]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Bulgaria",official:"Republic of Bulgaria",nativeName:{bul:{official:"Република България",common:"България"}}},tld:[".bg"],cca2:"BG",ccn3:"100",cca3:"BGR",cioc:"BUL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BGN:{name:"Bulgarian lev",symbol:"лв"}},idd:{root:"+3",suffixes:["59"]},capital:["Sofia"],altSpellings:["BG","Republic of Bulgaria","Република България"],region:"Europe",subregion:"Southeast Europe",languages:{bul:"Bulgarian"},translations:{ara:{official:"جمهورية بلغاريا",common:"بلغاريا"},bre:{official:"Republik Bulgaria",common:"Bulgaria"},ces:{official:"Bulharská republika",common:"Bulharsko"},cym:{official:"Gweriniaeth Bwlgaria",common:"Bwlgaria"},deu:{official:"Republik Bulgarien",common:"Bulgarien"},est:{official:"Bulgaaria Vabariik",common:"Bulgaaria"},fin:{official:"Bulgarian tasavalta",common:"Bulgaria"},fra:{official:"République de Bulgarie",common:"Bulgarie"},hrv:{official:"Republika Bugarska",common:"Bugarska"},hun:{official:"Bolgár Köztársaság",common:"Bulgária"},ita:{official:"Repubblica di Bulgaria",common:"Bulgaria"},jpn:{official:"ブルガリア共和国",common:"ブルガリア"},kor:{official:"불가리아 공화국",common:"불가리아"},nld:{official:"Republiek Bulgarije",common:"Bulgarije"},per:{official:"جمهوری بلغارستان",common:"بلغارستان"},pol:{official:"Republika Bułgarii",common:"Bułgaria"},por:{official:"República da Bulgária",common:"Bulgária"},rus:{official:"Республика Болгария",common:"Болгария"},slk:{official:"Bulharská republika",common:"Bulharsko"},spa:{official:"República de Bulgaria",common:"Bulgaria"},srp:{official:"Република Бугарска",common:"Бугарска"},swe:{official:"Republiken Bulgarien",common:"Bulgarien"},tur:{official:"Bulgaristan Cumhuriyeti",common:"Bulgaristan"},urd:{official:"جمہوریہ بلغاریہ",common:"بلغاریہ"},zho:{official:"保加利亚共和国",common:"保加利亚"}},latlng:[43,25],landlocked:!1,borders:["GRC","MKD","ROU","SRB","TUR"],area:110879,demonyms:{eng:{f:"Bulgarian",m:"Bulgarian"},fra:{f:"Bulgare",m:"Bulgare"}},flag:"🇧🇬",maps:{googleMaps:"https://goo.gl/maps/F5uAhDGWzc3BrHfm9",openStreetMaps:"https://www.openstreetmap.org/relation/186382"},population:6927288,gini:{2018:41.3},fifa:"BUL",car:{signs:["BG"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/bg.png",svg:"https://flagcdn.com/bg.svg",alt:"The flag of Bulgaria is composed of three equal horizontal bands of white, green and red."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[42.68,23.32]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Falkland Islands",official:"Falkland Islands",nativeName:{eng:{official:"Falkland Islands",common:"Falkland Islands"}}},tld:[".fk"],cca2:"FK",ccn3:"238",cca3:"FLK",independent:!1,status:"officially-assigned",unMember:!1,currencies:{FKP:{name:"Falkland Islands pound",symbol:"£"}},idd:{root:"+5",suffixes:["00"]},capital:["Stanley"],altSpellings:["FK","Islas Malvinas","Falkland Islands (Malvinas)"],region:"Americas",subregion:"South America",languages:{eng:"English"},translations:{ara:{official:"جزر فوكلاند",common:"جزر فوكلاند"},bre:{official:"Inizi Maloù",common:"Inizi Maloù"},ces:{official:"Falklandské ostrovy",common:"Falklandy"},cym:{official:"Falkland Islands",common:"Falkland Islands"},deu:{official:"Falklandinseln",common:"Falklandinseln"},est:{official:"Falklandi saared",common:"Falklandi saared"},fin:{official:"Falkandinsaaret",common:"Falkandinsaaret"},fra:{official:"Îles Malouines",common:"Îles Malouines"},hrv:{official:"Falklandski otoci",common:"Falklandski Otoci"},hun:{official:"Falkland-szigetek",common:"Falkland-szigetek"},ita:{official:"Isole Falkland",common:"Isole Falkland o Isole Malvine"},jpn:{official:"フォークランド",common:"フォークランド（マルビナス）諸島"},kor:{official:"포클랜드 제도",common:"포클랜드 제도"},nld:{official:"Falkland eilanden",common:"Falklandeilanden"},per:{official:"جزایر فالکلند",common:"جزایر فالکلند"},pol:{official:"Falklandy",common:"Falklandy"},por:{official:"Ilhas Malvinas",common:"Ilhas Malvinas"},rus:{official:"Фолклендские острова",common:"Фолклендские острова"},slk:{official:"Falklandské ostrovy",common:"Falklandy"},spa:{official:"islas Malvinas",common:"Islas Malvinas"},srp:{official:"Фолкландска Острва",common:"Фолкланди"},swe:{official:"Falklandsöarna",common:"Falklandsöarna"},tur:{official:"Falkland (Malvina) Adaları",common:"Falkland (Malvina) Adaları"},urd:{official:"جزائر فاکلینڈ",common:"جزائر فاکلینڈ"},zho:{official:"福克兰群岛",common:"福克兰群岛"}},latlng:[-51.75,-59],landlocked:!1,area:12173,demonyms:{eng:{f:"Falkland Islander",m:"Falkland Islander"},fra:{f:"Malouinne",m:"Malouin"}},flag:"🇫🇰",maps:{googleMaps:"https://goo.gl/maps/TZH1x7AGanQKifNk7",openStreetMaps:"https://www.openstreetmap.org/relation/2185374"},population:2563,car:{signs:["GB"],side:"left"},timezones:["UTC-04:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/fk.png",svg:"https://flagcdn.com/fk.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/fk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/fk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-51.7,-57.85]}},{name:{common:"Botswana",official:"Republic of Botswana",nativeName:{eng:{official:"Republic of Botswana",common:"Botswana"},tsn:{official:"Lefatshe la Botswana",common:"Botswana"}}},tld:[".bw"],cca2:"BW",ccn3:"072",cca3:"BWA",cioc:"BOT",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BWP:{name:"Botswana pula",symbol:"P"}},idd:{root:"+2",suffixes:["67"]},capital:["Gaborone"],altSpellings:["BW","Republic of Botswana","Lefatshe la Botswana"],region:"Africa",subregion:"Southern Africa",languages:{eng:"English",tsn:"Tswana"},translations:{ara:{official:"جمهورية بوتسوانا",common:"بوتسوانا"},bre:{official:"Republik Botswana",common:"Botswana"},ces:{official:"Botswanská republika",common:"Botswana"},cym:{official:"Republic of Botswana",common:"Botswana"},deu:{official:"Republik Botsuana",common:"Botswana"},est:{official:"Botswana Vabariik",common:"Botswana"},fin:{official:"Botswanan tasavalta",common:"Botswana"},fra:{official:"République du Botswana",common:"Botswana"},hrv:{official:"Republika Bocvana",common:"Bocvana"},hun:{official:"Botswanai Köztársaság",common:"Botswana"},ita:{official:"Repubblica del Botswana",common:"Botswana"},jpn:{official:"ボツワナ共和国",common:"ボツワナ"},kor:{official:"보츠와나 공화국",common:"보츠와나"},nld:{official:"Republiek Botswana",common:"Botswana"},per:{official:"جمهوری بوتسوانا",common:"بوتسوانا"},pol:{official:"Republika Botswany",common:"Botswana"},por:{official:"República do Botswana",common:"Botswana"},rus:{official:"Республика Ботсвана",common:"Ботсвана"},slk:{official:"Botswanská republika",common:"Botswana"},spa:{official:"República de Botswana",common:"Botswana"},srp:{official:"Република Боцвана",common:"Боцвана"},swe:{official:"Republiken Botswana",common:"Botswana"},tur:{official:"Botsvana Cumhuriyeti",common:"Botsvana"},urd:{official:"جمہوریہ بوٹسوانا",common:"بوٹسوانا"},zho:{official:"博茨瓦纳共和国",common:"博茨瓦纳"}},latlng:[-22,24],landlocked:!0,borders:["NAM","ZAF","ZMB","ZWE"],area:582e3,demonyms:{eng:{f:"Motswana",m:"Motswana"},fra:{f:"Botswanaise",m:"Botswanais"}},flag:"🇧🇼",maps:{googleMaps:"https://goo.gl/maps/E364KeLy6N4JwxwQ8",openStreetMaps:"https://www.openstreetmap.org/relation/1889339"},population:2351625,gini:{2015:53.3},fifa:"BOT",car:{signs:["BW"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/bw.png",svg:"https://flagcdn.com/bw.svg",alt:"The flag of Botswana has a light blue field with a white-edged black horizontal band across its center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-24.63,25.9]}},{name:{common:"Cape Verde",official:"Republic of Cabo Verde",nativeName:{por:{official:"República de Cabo Verde",common:"Cabo Verde"}}},tld:[".cv"],cca2:"CV",ccn3:"132",cca3:"CPV",cioc:"CPV",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CVE:{name:"Cape Verdean escudo",symbol:"Esc"}},idd:{root:"+2",suffixes:["38"]},capital:["Praia"],altSpellings:["CV","Republic of Cabo Verde","República de Cabo Verde"],region:"Africa",subregion:"Western Africa",languages:{por:"Portuguese"},translations:{ara:{official:"جمهورية كابو فيردي",common:"كابو فيردي"},bre:{official:"Republik Kab Glas",common:"Kab Glas"},ces:{official:"Kapverdská republika",common:"Kapverdy"},cym:{official:"Gweriniaeth Cabo Verde",common:"Penrhyn Verde"},deu:{official:"Republik Cabo Verde",common:"Kap Verde"},est:{official:"Cabo Verde Vabariik",common:"Roheneemesaared"},fin:{official:"Kap Verden tasavalta",common:"Kap Verde"},fra:{official:"République du Cap-Vert",common:"Îles du Cap-Vert"},hrv:{official:"Republika Cabo Verde",common:"Zelenortska Republika"},hun:{official:"Zöld-foki Köztársaság",common:"Zöld-foki Köztársaság"},ita:{official:"Repubblica di Capo Verde",common:"Capo Verde"},jpn:{official:"カーボベルデ共和国",common:"カーボベルデ"},kor:{official:"카보베르데 공화국",common:"카보베르데"},nld:{official:"Republiek van Cabo Verde",common:"Kaapverdië"},per:{official:"جمهوری کبو ورد",common:"دماغهٔ سبز"},pol:{official:"Republika Zielonego Przylądka",common:"Republika Zielonego Przylądka"},por:{official:"República de Cabo Verde",common:"Cabo Verde"},rus:{official:"Республика Кабо -Верде",common:"Кабо-Верде"},slk:{official:"Kapverdská republika",common:"Kapverdy"},spa:{official:"República de Cabo Verde",common:"Cabo Verde"},srp:{official:"Зеленортска Република",common:"Зеленортска Острва"},swe:{official:"Republiken Kap Verde",common:"Kap Verde"},tur:{official:"Yeşil Burun Cumhuriyeti",common:"Yeşil Burun"},urd:{official:"جمہوریہ کیپ ورڈی",common:"کیپ ورڈی"},zho:{official:"佛得角共和国",common:"佛得角"}},latlng:[16.5388,23.0418],landlocked:!1,area:4033,demonyms:{eng:{f:"Cape Verdian",m:"Cape Verdian"},fra:{f:"Cap-verdienne",m:"Cap-verdien"}},flag:"🇨🇻",maps:{googleMaps:"https://goo.gl/maps/Kc9vy5ChjuiAgMfXA",openStreetMaps:"https://www.openstreetmap.org/relation/535774"},population:555988,gini:{2015:42.4},fifa:"CPV",car:{signs:["CV"],side:"right"},timezones:["UTC-01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/cv.png",svg:"https://flagcdn.com/cv.svg",alt:"The flag of Cape Verde is composed of five horizontal bands of blue, white, red, white and blue in the ratio of 6:1:1:1:3. A ring of ten five-pointed yellow stars is centered at three-eighth of the height from the bottom edge and three-eighth of the width from the hoist end of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cv.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cv.svg"},startOfWeek:"monday",capitalInfo:{latlng:[14.92,-23.52]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Heard Island and McDonald Islands",official:"Heard Island and McDonald Islands",nativeName:{eng:{official:"Heard Island and McDonald Islands",common:"Heard Island and McDonald Islands"}}},tld:[".hm",".aq"],cca2:"HM",ccn3:"334",cca3:"HMD",independent:!1,status:"officially-assigned",unMember:!1,idd:{},altSpellings:["HM","Heard Island and McDonald Islands"],region:"Antarctic",languages:{eng:"English"},translations:{ara:{official:"جزيرة هيرد وجزر ماكدونالد",common:"جزيرة هيرد وجزر ماكدونالد"},bre:{official:"Enez Heard hag Inizi McDonald",common:"Inizi Heard ha McDonald"},ces:{official:"Heardův ostrov a McDonaldovy ostrovy",common:"Heardův ostrov a McDonaldovy ostrovy"},cym:{official:"Heard Island and McDonald Islands",common:"Heard Island and McDonald Islands"},deu:{official:"Heard und McDonaldinseln",common:"Heard und die McDonaldinseln"},est:{official:"Heardi ja McDonaldi saarte ala",common:"Heard ja McDonald"},fin:{official:"Heard ja McDonaldinsaaret",common:"Heard ja McDonaldinsaaret"},fra:{official:"Des îles Heard et McDonald",common:"Îles Heard-et-MacDonald"},hrv:{official:"Otok Heard i otočje McDonald",common:"Otok Heard i otočje McDonald"},hun:{official:"Heard-sziget és McDonald-szigetek",common:"Heard-sziget és McDonald-szigetek"},ita:{official:"Isole Heard e McDonald",common:"Isole Heard e McDonald"},jpn:{official:"ハード島とマクドナルド諸島",common:"ハード島とマクドナルド諸島"},kor:{official:"허드 맥도널드 제도",common:"허드 맥도널드 제도"},nld:{official:"Heard en McDonaldeilanden",common:"Heard-en McDonaldeilanden"},per:{official:"جزیره هرد و جزایر مک‌دونالد",common:"جزیره هرد و جزایر مک‌دونالد"},pol:{official:"Terytorium Wysp Heard i McDonalda",common:"Wyspy Heard i McDonalda"},por:{official:"Ilha Heard e Ilhas McDonald",common:"Ilha Heard e Ilhas McDonald"},rus:{official:"Остров Херд и острова Макдональд",common:"Остров Херд и острова Макдональд"},slk:{official:"Teritórium Heardovho ostrova a Macdonaldových ostrovov",common:"Heardov ostrov"},spa:{official:"Islas Heard y McDonald",common:"Islas Heard y McDonald"},srp:{official:"Острва Херд и Макдоналд",common:"Острва Херд и Макдоналд"},swe:{official:"Heard- och McDonaldöarna",common:"Heard- och McDonaldöarna"},tur:{official:"Heard Adası ve McDonald Adaları",common:"Heard Adası ve McDonald Adaları"},urd:{official:"جزیرہ ہرڈ و جزائر مکڈونلڈ",common:"جزیرہ ہرڈ و جزائر مکڈونلڈ"},zho:{official:"赫德岛和麦当劳群岛",common:"赫德岛和麦当劳群岛"}},latlng:[53.0818,73.5042],landlocked:!1,area:412,demonyms:{eng:{f:"Heard and McDonald Islander",m:"Heard and McDonald Islander"}},flag:"🇭🇲",maps:{googleMaps:"https://goo.gl/maps/k5FBAiVaVyozuYeA7",openStreetMaps:"https://www.openstreetmap.org/relation/2177227"},population:0,car:{signs:[""],side:"right"},timezones:["UTC+05:00"],continents:["Antarctica"],flags:{png:"https://flagcdn.com/w320/hm.png",svg:"https://flagcdn.com/hm.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{}},{name:{common:"Benin",official:"Republic of Benin",nativeName:{fra:{official:"République du Bénin",common:"Bénin"}}},tld:[".bj"],cca2:"BJ",ccn3:"204",cca3:"BEN",cioc:"BEN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["29"]},capital:["Porto-Novo"],altSpellings:["BJ","Republic of Benin","République du Bénin"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"جمهورية بنين",common:"بنين"},bre:{official:"Republik Benin",common:"Benin"},ces:{official:"Beninská republika",common:"Benin"},cym:{official:"Gweriniaeth Benin",common:"Benin"},deu:{official:"Republik Benin",common:"Benin"},est:{official:"Benini Vabariik",common:"Benin"},fin:{official:"Beninin tasavalta",common:"Benin"},fra:{official:"République du Bénin",common:"Bénin"},hrv:{official:"Republika Benin",common:"Benin"},hun:{official:"Benini Köztársaság",common:"Benin"},ita:{official:"Repubblica del Benin",common:"Benin"},jpn:{official:"ベナン共和国",common:"ベナン"},kor:{official:"베냉 공화국",common:"베냉"},nld:{official:"Republiek Benin",common:"Benin"},per:{official:"جمهوری بنین",common:"بنین"},pol:{official:"Benin",common:"Benin"},por:{official:"República do Benin",common:"Benin"},rus:{official:"Республика Бенин",common:"Бенин"},slk:{official:"Beninská republika",common:"Benin"},spa:{official:"República de Benin",common:"Benín"},srp:{official:"Република Бенин",common:"Бенин"},swe:{official:"Republiken Benin",common:"Benin"},tur:{official:"Benin Cumhuriyeti",common:"Benin"},urd:{official:"جمہوریہ بینن",common:"بینن"},zho:{official:"贝宁共和国",common:"贝宁"}},latlng:[9.5,2.25],landlocked:!1,borders:["BFA","NER","NGA","TGO"],area:112622,demonyms:{eng:{f:"Beninese",m:"Beninese"},fra:{f:"Béninoise",m:"Béninois"}},flag:"🇧🇯",maps:{googleMaps:"https://goo.gl/maps/uMw1BsHEXQYgVFFu6",openStreetMaps:"https://www.openstreetmap.org/relation/192784"},population:12123198,gini:{2015:47.8},fifa:"BEN",car:{signs:["DY"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/bj.png",svg:"https://flagcdn.com/bj.svg",alt:"The flag of Benin features a green vertical band on its hoist side that takes up about two-fifth the width of the field and two equal horizontal bands of yellow and red adjoining the vertical band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bj.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bj.svg"},startOfWeek:"monday",capitalInfo:{latlng:[6.48,2.62]}},{name:{common:"Trinidad and Tobago",official:"Republic of Trinidad and Tobago",nativeName:{eng:{official:"Republic of Trinidad and Tobago",common:"Trinidad and Tobago"}}},tld:[".tt"],cca2:"TT",ccn3:"780",cca3:"TTO",cioc:"TTO",independent:!0,status:"officially-assigned",unMember:!0,currencies:{TTD:{name:"Trinidad and Tobago dollar",symbol:"$"}},idd:{root:"+1",suffixes:["868"]},capital:["Port of Spain"],altSpellings:["TT","Republic of Trinidad and Tobago"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"جمهورية ترينيداد وتوباغو",common:"ترينيداد وتوباغو"},bre:{official:"Republik Trinidad ha Tobago",common:"Trinidad ha Tobago"},ces:{official:"Republika Trinidad a Tobago",common:"Trinidad a Tobago"},cym:{official:"Republic of Trinidad and Tobago",common:"Trinidad and Tobago"},deu:{official:"Republik Trinidad und Tobago",common:"Trinidad und Tobago"},est:{official:"Trinidadi ja Tobago Vabariik",common:"Trinidad ja Tobago"},fin:{official:"Trinidadin ja Tobagon tasavalta",common:"Trinidad ja Tobago"},fra:{official:"République de Trinité-et-Tobago",common:"Trinité-et-Tobago"},hrv:{official:"Republika Trinidad i Tobago",common:"Trinidad i Tobago"},hun:{official:"Trinidad és Tobago Köztársaság",common:"Trinidad és Tobago"},ita:{official:"Repubblica di Trinidad e Tobago",common:"Trinidad e Tobago"},jpn:{official:"トリニダード·トバゴ共和国",common:"トリニダード・トバゴ"},kor:{official:"트리니다드 토바고 공화국",common:"트리니다드 토바고"},nld:{official:"Republiek Trinidad en Tobago",common:"Trinidad en Tobago"},per:{official:"جمهوری ترینیداد و توباگو",common:"ترینیداد و توباگو"},pol:{official:"Trynidad i Tobago",common:"Trynidad i Tobago"},por:{official:"República de Trinidad e Tobago",common:"Trinidade e Tobago"},rus:{official:"Республика Тринидад и Тобаго",common:"Тринидад и Тобаго"},slk:{official:"Republika Trinidad a Tobaga",common:"Trinidad a Tobago"},spa:{official:"República de Trinidad y Tobago",common:"Trinidad y Tobago"},srp:{official:"Република Тринидад и Тобаго",common:"Тринидад и Тобаго"},swe:{official:"Republiken Trinidad och Tobago",common:"Trinidad och Tobago"},tur:{official:"Trinidad ve Tobago",common:"Trinidad ve Tobago"},urd:{official:"جمہوریہ ٹرینیڈاڈ و ٹوباگو",common:"ٹرینیڈاڈ و ٹوباگو"},zho:{official:"特立尼达和多巴哥共和国",common:"特立尼达和多巴哥"}},latlng:[10.6918,61.2225],landlocked:!1,area:5130,demonyms:{eng:{f:"Trinidadian",m:"Trinidadian"},fra:{f:"Trinidadienne",m:"Trinidadien"}},flag:"🇹🇹",maps:{googleMaps:"https://goo.gl/maps/NrRfDEWoG8FGZqWY7",openStreetMaps:"https://www.openstreetmap.org/relation/555717"},population:1399491,gini:{1992:40.3},fifa:"TRI",car:{signs:["TT"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/tt.png",svg:"https://flagcdn.com/tt.svg",alt:"The flag of Trinidad and Tobago has a red field with a white-edged black diagonal band that extends from the upper hoist-side corner to the lower fly-side corner of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tt.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tt.svg"},startOfWeek:"monday",capitalInfo:{latlng:[10.65,-61.52]}},{name:{common:"San Marino",official:"Republic of San Marino",nativeName:{ita:{official:"Repubblica di San Marino",common:"San Marino"}}},tld:[".sm"],cca2:"SM",ccn3:"674",cca3:"SMR",cioc:"SMR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["78"]},capital:["City of San Marino"],altSpellings:["SM","Republic of San Marino","Repubblica di San Marino"],region:"Europe",subregion:"Southern Europe",languages:{ita:"Italian"},translations:{ara:{official:"جمهورية سان مارينو",common:"سان مارينو"},bre:{official:"Republik San Marino",common:"San Marino"},ces:{official:"Republika San Marino",common:"San Marino"},cym:{official:"Republic of San Marino",common:"San Marino"},deu:{official:"Republik San Marino",common:"San Marino"},est:{official:"San Marino Vabariik",common:"San Marino"},fin:{official:"San Marinon seesteinen tasavalta",common:"San Marino"},fra:{official:"République de Saint-Marin",common:"Saint-Marin"},hrv:{official:"Većina Serene Republika San Marino",common:"San Marino"},hun:{official:"San Marino Köztársaság",common:"San Marino"},ita:{official:"Serenissima Repubblica di San Marino",common:"San Marino"},jpn:{official:"サンマリノのほとんどセリーヌ共和国",common:"サンマリノ"},kor:{official:"산마리노 공화국",common:"산마리노"},nld:{official:"Meest Serene Republiek San Marino",common:"San Marino"},per:{official:"جمهوری سان مارینو",common:"سان مارینو"},pol:{official:"Republika San Marino",common:"San Marino"},por:{official:"Sereníssima República de San Marino",common:"San Marino"},rus:{official:"Большинство Serene Республика Сан-Марино",common:"Сан-Марино"},slk:{official:"Sanmarínska republika",common:"San Maríno"},spa:{official:"Serenísima República de San Marino",common:"San Marino"},srp:{official:"Најузвишенија Република Сан Марино",common:"Сан Марино"},swe:{official:"Republiken San Marino",common:"San Marino"},tur:{official:"San Marino Cumhuriyeti",common:"San Marino"},urd:{official:"جمہوریہ سان مارینو",common:"سان مارینو"},zho:{official:"圣马力诺共和国",common:"圣马力诺"}},latlng:[43.76666666,12.41666666],landlocked:!0,borders:["ITA"],area:61,demonyms:{eng:{f:"Sammarinese",m:"Sammarinese"},fra:{f:"Saint-Marinaise",m:"Saint-Marinais"}},flag:"🇸🇲",maps:{googleMaps:"https://goo.gl/maps/rxCVJjm8dVY93RPY8",openStreetMaps:"https://www.openstreetmap.org/relation/54624"},population:33938,fifa:"SMR",car:{signs:["RSM"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/sm.png",svg:"https://flagcdn.com/sm.svg",alt:"The flag of San Marino is composed of two equal horizontal bands of white and light blue, with the national coat of arms superimposed in the center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[43.94,12.45]},postalCode:{format:"4789#",regex:"^(4789\\d)$"}},{name:{common:"Djibouti",official:"Republic of Djibouti",nativeName:{ara:{official:"جمهورية جيبوتي",common:"جيبوتي‎"},fra:{official:"République de Djibouti",common:"Djibouti"}}},tld:[".dj"],cca2:"DJ",ccn3:"262",cca3:"DJI",cioc:"DJI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{DJF:{name:"Djiboutian franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["53"]},capital:["Djibouti"],altSpellings:["DJ","Jabuuti","Gabuuti","Republic of Djibouti","République de Djibouti","Gabuutih Ummuuno","Jamhuuriyadda Jabuuti"],region:"Africa",subregion:"Eastern Africa",languages:{ara:"Arabic",fra:"French"},translations:{ara:{official:"جمهورية جيبوتي",common:"جيبوتي"},bre:{official:"Republik Djibouti",common:"Djibouti"},ces:{official:"Džibutská republika",common:"Džibutsko"},cym:{official:"Gweriniaeth Jibwti",common:"Jibwti"},deu:{official:"Republik Dschibuti",common:"Dschibuti"},est:{official:"Djibouti Vabariik",common:"Djibouti"},fin:{official:"Dijiboutin tasavalta",common:"Dijibouti"},fra:{official:"République de Djibouti",common:"Djibouti"},hrv:{official:"Republika Džibuti",common:"Džibuti"},hun:{official:"Dzsibuti Köztársaság",common:"Dzsibuti"},ita:{official:"Repubblica di Gibuti",common:"Gibuti"},jpn:{official:"ジブチ共和国",common:"ジブチ"},kor:{official:"지부티 공화국",common:"지부티"},nld:{official:"Republiek Djibouti",common:"Djibouti"},per:{official:"جمهوری جیبوتی",common:"جیبوتی"},pol:{official:"Republika Dżibuti",common:"Dżibuti"},por:{official:"República do Djibouti",common:"Djibouti"},rus:{official:"Республика Джибути",common:"Джибути"},slk:{official:"ǅibutská republika",common:"ǅibutsko"},spa:{official:"República de Djibouti",common:"Djibouti"},srp:{official:"Република Џибути",common:"Џибути"},swe:{official:"Republiken Djibouti",common:"Djibouti"},tur:{official:"Cibuti Cumhuriyeti",common:"Cibuti"},urd:{official:"جمہوریہ جبوتی",common:"جبوتی"},zho:{official:"吉布提共和国",common:"吉布提"}},latlng:[11.5,43],landlocked:!1,borders:["ERI","ETH","SOM"],area:23200,demonyms:{eng:{f:"Djibouti",m:"Djibouti"},fra:{f:"Djiboutienne",m:"Djiboutien"}},flag:"🇩🇯",maps:{googleMaps:"https://goo.gl/maps/V1HWfzN3bS1kwf4C6",openStreetMaps:"https://www.openstreetmap.org/relation/192801"},population:988002,gini:{2017:41.6},fifa:"DJI",car:{signs:["DJI"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/dj.png",svg:"https://flagcdn.com/dj.svg",alt:"The flag of Djibouti is composed of two equal horizontal bands of light blue and light green, with a white isosceles triangle superimposed on the hoist side of the field. The triangle has its base on the hoist end, spans about two-fifth the width of the field and bears a red five-pointed star at its center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/dj.png",svg:"https://mainfacts.com/media/images/coats_of_arms/dj.svg"},startOfWeek:"monday",capitalInfo:{latlng:[11.58,43.15]}},{name:{common:"Jersey",official:"Bailiwick of Jersey",nativeName:{eng:{official:"Bailiwick of Jersey",common:"Jersey"},fra:{official:"Bailliage de Jersey",common:"Jersey"},nrf:{official:"Bailliage dé Jèrri",common:"Jèrri"}}},tld:[".je"],cca2:"JE",ccn3:"832",cca3:"JEY",independent:!1,status:"officially-assigned",unMember:!1,currencies:{GBP:{name:"British pound",symbol:"£"},JEP:{name:"Jersey pound",symbol:"£"}},idd:{root:"+4",suffixes:["4"]},capital:["Saint Helier"],altSpellings:["JE","Bailiwick of Jersey","Bailliage de Jersey","Bailliage dé Jèrri"],region:"Europe",subregion:"Northern Europe",languages:{eng:"English",fra:"French",nrf:"Jèrriais"},translations:{ara:{official:"جيرزي",common:"جيرزي"},bre:{official:"Jerzenez",common:"Jerzenez"},ces:{official:"Rychtářství Jersey",common:"Jersey"},cym:{official:"Bailiwick of Jersey",common:"Jersey"},deu:{official:"Vogtei Jersey",common:"Jersey"},est:{official:"Jersey foogtkond",common:"Jersey"},fin:{official:"Jersey",common:"Jersey"},fra:{official:"Bailliage de Jersey",common:"Jersey"},hrv:{official:"Struka od Jersey",common:"Jersey"},hun:{official:"Jersey",common:"Jersey"},ita:{official:"Baliato di Jersey",common:"Isola di Jersey"},jpn:{official:"ジャージの得意分野",common:"ジャージー"},kor:{official:"저지 섬",common:"저지 섬"},nld:{official:"Baljuwschap Jersey",common:"Jersey"},per:{official:"جرزی",common:"جرزی"},pol:{official:"Jersey",common:"Jersey"},por:{official:"Bailiado de Jersey",common:"Jersey"},rus:{official:"Коронное владение Джерси",common:"Джерси"},slk:{official:"Bailiwick Jersey",common:"Jersey"},spa:{official:"Bailía de Jersey",common:"Jersey"},srp:{official:"Џерзи",common:"Џерзи"},swe:{official:"Jersey",common:"Jersey"},tur:{official:"Jersey",common:"Jersey"},urd:{official:"جرزی",common:"جرزی"},zho:{official:"泽西岛",common:"泽西岛"}},latlng:[49.25,-2.16666666],landlocked:!1,area:116,demonyms:{eng:{f:"Channel Islander",m:"Channel Islander"},fra:{f:"Jersiaise",m:"Jersiais"}},flag:"🇯🇪",maps:{googleMaps:"https://goo.gl/maps/rXG8GZZtsqK92kTCA",openStreetMaps:"https://www.openstreetmap.org/relation/367988"},population:100800,car:{signs:["GBJ"],side:"left"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/je.png",svg:"https://flagcdn.com/je.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/je.png",svg:"https://mainfacts.com/media/images/coats_of_arms/je.svg"},startOfWeek:"monday",capitalInfo:{latlng:[49.18,-2.1]},postalCode:{format:"@# #@@|@## #@@|@@# #@@|@@## #@@|@#@ #@@|@@#@ #@@|GIR0AA",regex:"^(([A-Z]\\d{2}[A-Z]{2})|([A-Z]\\d{3}[A-Z]{2})|([A-Z]{2}\\d{2}[A-Z]{2})|([A-Z]{2}\\d{3}[A-Z]{2})|([A-Z]\\d[A-Z]\\d[A-Z]{2})|([A-Z]{2}\\d[A-Z]\\d[A-Z]{2})|(GIR0AA))$"}},{name:{common:"Israel",official:"State of Israel",nativeName:{ara:{official:"دولة إسرائيل",common:"إسرائيل"},heb:{official:"מדינת ישראל",common:"ישראל"}}},tld:[".il"],cca2:"IL",ccn3:"376",cca3:"ISR",cioc:"ISR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ILS:{name:"Israeli new shekel",symbol:"₪"}},idd:{root:"+9",suffixes:["72"]},capital:["Jerusalem"],altSpellings:["IL","State of Israel","Medīnat Yisrā'el"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic",heb:"Hebrew"},translations:{ara:{official:"دولة إسرائيل",common:"إسرائيل"},bre:{official:"Stad Israel",common:"Israel"},ces:{official:"Stát Izrael",common:"Izrael"},cym:{official:"State of Israel",common:"Israel"},deu:{official:"Staat Israel",common:"Israel"},est:{official:"Iisraeli Riik",common:"Iisrael"},fin:{official:"Israelin valtio",common:"Israel"},fra:{official:"État d'Israël",common:"Israël"},hrv:{official:"Država Izrael",common:"Izrael"},hun:{official:"Izrael",common:"Izrael"},ita:{official:"Stato di Israele",common:"Israele"},jpn:{official:"イスラエル国",common:"イスラエル"},kor:{official:"이스라엘국",common:"이스라엘"},nld:{official:"Staat Israël",common:"Israël"},per:{official:"فلسطين اشغالی",common:"فلسطين اشغالی"},pol:{official:"Państwo Izrael",common:"Izrael"},por:{official:"Estado de Israel",common:"Israel"},rus:{official:"Государство Израиль",common:"Израиль"},slk:{official:"Izraelský štát",common:"Izrael"},spa:{official:"Estado de Israel",common:"Israel"},srp:{official:"Држава Израел",common:"Израел"},swe:{official:"Staten Israel",common:"Israel"},tur:{official:"İsrail Devleti",common:"İsrail"},urd:{official:"ریاستِ اسرائیل",common:"اسرائیل"},zho:{official:"以色列国",common:"以色列"}},latlng:[31.47,35.13],landlocked:!1,borders:["EGY","JOR","LBN","PSE","SYR"],area:20770,demonyms:{eng:{f:"Israeli",m:"Israeli"},fra:{f:"Israélienne",m:"Israélien"}},flag:"🇮🇱",maps:{googleMaps:"https://goo.gl/maps/6UY1AH8XeafVwdC97",openStreetMaps:"https://www.openstreetmap.org/relation/1473946"},population:9216900,gini:{2016:39},fifa:"ISR",car:{signs:["IL"],side:"right"},timezones:["UTC+02:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/il.png",svg:"https://flagcdn.com/il.svg",alt:"The flag of Israel has a white field with a blue hexagram — the Magen David — centered between two equal horizontal blue bands situated near the top and bottom edges of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/il.png",svg:"https://mainfacts.com/media/images/coats_of_arms/il.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[31.77,35.23]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Saint Pierre and Miquelon",official:"Saint Pierre and Miquelon",nativeName:{fra:{official:"Collectivité territoriale de Saint-Pierre-et-Miquelon",common:"Saint-Pierre-et-Miquelon"}}},tld:[".pm"],cca2:"PM",ccn3:"666",cca3:"SPM",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+5",suffixes:["08"]},capital:["Saint-Pierre"],altSpellings:["PM","Collectivité territoriale de Saint-Pierre-et-Miquelon"],region:"Americas",subregion:"North America",languages:{fra:"French"},translations:{ara:{official:"سان بيير وميكلون",common:"سان بيير وميكلون"},bre:{official:"Sant-Pêr-ha-Mikelon",common:"Sant-Pêr-ha-Mikelon"},ces:{official:"Saint-Pierre a Miquelon",common:"Saint-Pierre a Miquelon"},cym:{official:"Saint Pierre and Miquelon",common:"Saint Pierre and Miquelon"},deu:{official:"St. Pierre und Miquelon",common:"St. Pierre und Miquelon"},est:{official:"Saint-Pierre’i ja Miqueloni territoriaalühendus",common:"Saint-Pierre ja Miquelon"},fin:{official:"Saint-Pierre ja Miquelon",common:"Saint-Pierre ja Miquelon"},fra:{official:"Saint-Pierre-et-Miquelon",common:"Saint-Pierre-et-Miquelon"},hrv:{official:"Saint Pierre i Miquelon",common:"Sveti Petar i Mikelon"},hun:{official:"Saint-Pierre és Miquelon",common:"Saint-Pierre és Miquelon"},ita:{official:"Saint Pierre e Miquelon",common:"Saint-Pierre e Miquelon"},jpn:{official:"サンピエール島·ミクロン島",common:"サンピエール島・ミクロン島"},kor:{official:"생피에르 미클롱",common:"생피에르 미클롱"},nld:{official:"Saint-Pierre en Miquelon",common:"Saint Pierre en Miquelon"},per:{official:"سن-پیر-ا-میکلون",common:"سن-پیِر و میکلُن"},pol:{official:"Saint-Pierre i Miquelon",common:"Saint-Pierre i Miquelon"},por:{official:"Saint Pierre e Miquelon",common:"Saint-Pierre e Miquelon"},rus:{official:"Сен-Пьер и Микелон",common:"Сен-Пьер и Микелон"},slk:{official:"Ostrovy Saint Pierre a Miquelon",common:"Saint Pierre a Miquelon"},spa:{official:"San Pedro y Miquelón",common:"San Pedro y Miquelón"},srp:{official:"Сен Пјер и Микелон",common:"Сен Пјер и Микелон"},swe:{official:"Saint-Pierre och Miquelon",common:"Saint-Pierre och Miquelon"},tur:{official:"Saint Pierre ve Miquelon",common:"Saint Pierre ve Miquelon"},urd:{official:"سینٹ پیئر و میکیلون",common:"سینٹ پیئر و میکیلون"},zho:{official:"圣皮埃尔和密克隆",common:"圣皮埃尔和密克隆"}},latlng:[46.83333333,-56.33333333],landlocked:!1,area:242,demonyms:{eng:{f:"Saint-Pierrais, Miquelonnais",m:"Saint-Pierrais, Miquelonnais"},fra:{f:"Saint-Pierraise, Miquelonaise",m:"Saint-Pierrais, Miquelonais"}},flag:"🇵🇲",maps:{googleMaps:"https://goo.gl/maps/bUM8Yc8pA8ghyhmt6",openStreetMaps:"https://www.openstreetmap.org/relation/3406826"},population:6069,car:{signs:["F"],side:"right"},timezones:["UTC-03:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/pm.png",svg:"https://flagcdn.com/pm.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[46.77,-56.18]},postalCode:{format:"#####",regex:"^(97500)$"}},{name:{common:"Bouvet Island",official:"Bouvet Island",nativeName:{nor:{official:"Bouvetøya",common:"Bouvetøya"}}},tld:[".bv"],cca2:"BV",ccn3:"074",cca3:"BVT",independent:!1,status:"officially-assigned",unMember:!1,idd:{root:"+4",suffixes:["7"]},altSpellings:["BV","Bouvetøya","Bouvet-øya"],region:"Antarctic",languages:{nor:"Norwegian"},translations:{ara:{official:"جزر بوفيه",common:"جزر بوفيه"},bre:{official:"Enez Bouvet",common:"Enez Bouvet"},ces:{official:"Bouvetův ostrov",common:"Bouvetův ostrov"},cym:{official:"Bouvet Island",common:"Bouvet Island"},deu:{official:"Bouvetinsel",common:"Bouvetinsel"},est:{official:"Bouvet’ saar",common:"Bouvet’ saar"},fin:{official:"Bouvet'nsaari",common:"Bouvet'nsaari"},fra:{official:"Île Bouvet",common:"Île Bouvet"},hrv:{official:"Bouvet Island",common:"Otok Bouvet"},hun:{official:"Bouvet-sziget",common:"Bouvet-sziget"},ita:{official:"Isola Bouvet",common:"Isola Bouvet"},jpn:{official:"ブーヴェ島",common:"ブーベ島"},kor:{official:"부베 섬",common:"부베 섬"},nld:{official:"Bouvet Island",common:"Bouveteiland"},per:{official:"جزیرهٔ بووه",common:"جزیرهٔ بووه"},pol:{official:"Wyspa Bouveta",common:"Wyspa Bouveta"},por:{official:"Ilha Bouvet",common:"Ilha Bouvet"},rus:{official:"Остров Буве",common:"Остров Буве"},slk:{official:"Bouvetov ostrov",common:"Bouvetov ostrov"},spa:{official:"Isla Bouvet",common:"Isla Bouvet"},srp:{official:"Буве",common:"Буве"},swe:{official:"Bouvetön",common:"Bouvetön"},tur:{official:"Bouvet Adası",common:"Bouvet Adası"},urd:{official:"جزیرہ بووہ",common:"جزیرہ بووہ"},zho:{official:"布维岛",common:"布维岛"}},latlng:[54.4208,3.3464],landlocked:!1,area:49,flag:"🇧🇻",maps:{googleMaps:"https://goo.gl/maps/7WRQAEKZb4uK36yi9",openStreetMaps:"https://www.openstreetmap.org/way/174996681"},population:0,car:{signs:[""],side:"right"},timezones:["UTC+01:00"],continents:["Antarctica"],flags:{png:"https://flagcdn.com/w320/bv.png",svg:"https://flagcdn.com/bv.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{}},{name:{common:"Panama",official:"Republic of Panama",nativeName:{spa:{official:"República de Panamá",common:"Panamá"}}},tld:[".pa"],cca2:"PA",ccn3:"591",cca3:"PAN",cioc:"PAN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{PAB:{name:"Panamanian balboa",symbol:"B/."},USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+5",suffixes:["07"]},capital:["Panama City"],altSpellings:["PA","Republic of Panama","República de Panamá"],region:"Americas",subregion:"Central America",languages:{spa:"Spanish"},translations:{ara:{official:"جمهورية بنما",common:"بنما"},bre:{official:"Republik Panama",common:"Panama"},ces:{official:"Panamská republika",common:"Panama"},cym:{official:"Republic of Panama",common:"Panama"},deu:{official:"Republik Panama",common:"Panama"},est:{official:"Panama Vabariik",common:"Panama"},fin:{official:"Panaman tasavalta",common:"Panama"},fra:{official:"République du Panama",common:"Panama"},hrv:{official:"Republika Panama",common:"Panama"},hun:{official:"Panamai Köztársaság",common:"Panama"},ita:{official:"Repubblica di Panama",common:"Panama"},jpn:{official:"パナマ共和国",common:"パナマ"},kor:{official:"파나마 공화국",common:"파나마"},nld:{official:"Republiek Panama",common:"Panama"},per:{official:"جمهوری پاناما",common:"پاناما"},pol:{official:"Republika Panamy",common:"Panama"},por:{official:"República do Panamá",common:"Panamá"},rus:{official:"Республика Панама",common:"Панама"},slk:{official:"Panamská republika",common:"Panama"},spa:{official:"República de Panamá",common:"Panamá"},srp:{official:"Република Панама",common:"Панама"},swe:{official:"Republiken Panama",common:"Panama"},tur:{official:"Panama Cumhuriyeti",common:"Panama"},urd:{official:"جمہوریہ پاناما",common:"پاناما"},zho:{official:"巴拿马共和国",common:"巴拿马"}},latlng:[9,-80],landlocked:!1,borders:["COL","CRI"],area:75417,demonyms:{eng:{f:"Panamanian",m:"Panamanian"},fra:{f:"Panaméenne",m:"Panaméen"}},flag:"🇵🇦",maps:{googleMaps:"https://goo.gl/maps/sEN7sKqeawa5oPNLA",openStreetMaps:"https://www.openstreetmap.org/relation/287668"},population:4314768,gini:{2019:49.8},fifa:"PAN",car:{signs:["PA"],side:"right"},timezones:["UTC-05:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/pa.png",svg:"https://flagcdn.com/pa.svg",alt:"The flag of Panama is composed of four equal rectangular areas — a white rectangular area with a blue five-pointed star at its center, a red rectangular area, a white rectangular area with a red five-pointed star at its center, and a blue rectangular area — in the upper hoist side, upper fly side, lower fly side and lower hoist side respectively."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pa.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pa.svg"},startOfWeek:"monday",capitalInfo:{latlng:[8.97,-79.53]}},{name:{common:"Serbia",official:"Republic of Serbia",nativeName:{srp:{official:"Република Србија",common:"Србија"}}},tld:[".rs",".срб"],cca2:"RS",ccn3:"688",cca3:"SRB",cioc:"SRB",independent:!0,status:"officially-assigned",unMember:!0,currencies:{RSD:{name:"Serbian dinar",symbol:"дин."}},idd:{root:"+3",suffixes:["81"]},capital:["Belgrade"],altSpellings:["RS","Srbija","Republic of Serbia","Република Србија","Republika Srbija"],region:"Europe",subregion:"Southeast Europe",languages:{srp:"Serbian"},translations:{ara:{official:"جمهورية صيربيا",common:"صيربيا"},bre:{official:"Republik Serbia",common:"Serbia"},ces:{official:"Srbská republika",common:"Srbsko"},cym:{official:"Republic of Serbia",common:"Serbia"},deu:{official:"Republik Serbien",common:"Serbien"},est:{official:"Serbia Vabariik",common:"Serbia"},fin:{official:"Serbian tasavalta",common:"Serbia"},fra:{official:"République de Serbie",common:"Serbie"},hrv:{official:"Republika Srbija",common:"Srbija"},hun:{official:"Szerb Köztársaság",common:"Szerbia"},ita:{official:"Repubblica di Serbia",common:"Serbia"},jpn:{official:"セルビア共和国",common:"セルビア"},kor:{official:"세르비아 공화국",common:"세르비아"},nld:{official:"Republiek Servië",common:"Servië"},per:{official:"جمهوری صربستان",common:"صربستان"},pol:{official:"Republika Serbii",common:"Serbia"},por:{official:"República da Sérvia",common:"Sérvia"},rus:{official:"Республика Сербия",common:"Сербия"},slk:{official:"Srbská republika",common:"Srbsko"},spa:{official:"República de Serbia",common:"Serbia"},srp:{official:"Република Србија",common:"Србија"},swe:{official:"Republiken Serbien",common:"Serbien"},tur:{official:"Sırbistan Cumhuriyeti",common:"Sırbistan"},urd:{official:"جمہوریہ سربیا",common:"سربیا"},zho:{official:"塞尔维亚共和国",common:"塞尔维亚"}},latlng:[44,21],landlocked:!0,borders:["BIH","BGR","HRV","HUN","UNK","MKD","MNE","ROU"],area:88361,demonyms:{eng:{f:"Serbian",m:"Serbian"},fra:{f:"Serbe",m:"Serbe"}},flag:"🇷🇸",maps:{googleMaps:"https://goo.gl/maps/2Aqof7aV2Naq8YEK8",openStreetMaps:"https://www.openstreetmap.org/relation/1741311"},population:6908224,gini:{2017:36.2},fifa:"SRB",car:{signs:["SRB"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/rs.png",svg:"https://flagcdn.com/rs.svg",alt:"The flag of Serbia is composed of three equal horizontal bands of red, blue and white. The coat of arms of Serbia is superimposed at the center of the field slightly towards the hoist side."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/rs.png",svg:"https://mainfacts.com/media/images/coats_of_arms/rs.svg"},startOfWeek:"monday",capitalInfo:{latlng:[44.83,20.5]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Uruguay",official:"Oriental Republic of Uruguay",nativeName:{spa:{official:"República Oriental del Uruguay",common:"Uruguay"}}},tld:[".uy"],cca2:"UY",ccn3:"858",cca3:"URY",cioc:"URU",independent:!0,status:"officially-assigned",unMember:!0,currencies:{UYU:{name:"Uruguayan peso",symbol:"$"}},idd:{root:"+5",suffixes:["98"]},capital:["Montevideo"],altSpellings:["UY","Oriental Republic of Uruguay","República Oriental del Uruguay"],region:"Americas",subregion:"South America",languages:{spa:"Spanish"},translations:{ara:{official:"جمهورية الأوروغواي الشرقية",common:"الأوروغواي"},bre:{official:"Republik Reter Uruguay",common:"Uruguay"},ces:{official:"Uruguayská východní republika",common:"Uruguay"},cym:{official:"Oriental Republic of Uruguay",common:"Uruguay"},deu:{official:"Republik Östlich des Uruguay",common:"Uruguay"},est:{official:"Uruguay Idavabariik",common:"Uruguay"},fin:{official:"Uruguayn itäinen tasavalta",common:"Uruguay"},fra:{official:"République orientale de l'Uruguay",common:"Uruguay"},hrv:{official:"Orijentalna Republika Urugvaj",common:"Urugvaj"},hun:{official:"Uruguayi Keleti Köztársaság",common:"Uruguay"},ita:{official:"Repubblica Orientale dell'Uruguay",common:"Uruguay"},jpn:{official:"ウルグアイ東方共和国",common:"ウルグアイ"},kor:{official:"우루과이 동방 공화국",common:"우루과이"},nld:{official:"Oosterse Republiek Uruguay",common:"Uruguay"},per:{official:"جمهوری اروگوئه",common:"اروگوئه"},pol:{official:"Wschodnia Republika Urugwaju",common:"Urugwaj"},por:{official:"República Oriental do Uruguai",common:"Uruguai"},rus:{official:"Восточной Республики Уругвай",common:"Уругвай"},slk:{official:"Uruguajská východná republika",common:"Uruguaj"},spa:{official:"República Oriental del Uruguay",common:"Uruguay"},srp:{official:"Источна Република Уругвај",common:"Уругвај"},swe:{official:"Republiken Uruguay",common:"Uruguay"},tur:{official:"Uruguay Doğu Cumhuriyeti",common:"Uruguay"},urd:{official:"جمہوریہ شرقیہ یوراگوئے",common:"یوراگوئے"},zho:{official:"乌拉圭东岸共和国",common:"乌拉圭"}},latlng:[-33,-56],landlocked:!1,borders:["ARG","BRA"],area:181034,demonyms:{eng:{f:"Uruguayan",m:"Uruguayan"},fra:{f:"Uruguayenne",m:"Uruguayen"}},flag:"🇺🇾",maps:{googleMaps:"https://goo.gl/maps/tiQ9Baekb1jQtDSD9",openStreetMaps:"https://www.openstreetmap.org/relation/287072"},population:3473727,gini:{2019:39.7},fifa:"URU",car:{signs:["ROU"],side:"right"},timezones:["UTC-03:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/uy.png",svg:"https://flagcdn.com/uy.svg",alt:"The flag of Uruguay is composed of nine equal horizontal bands of white alternating with blue, with a white square superimposed in the canton. In the white square is a yellow sun bearing a human face — the Sun of May — from which sixteen rays extend. The sun's rays alternate between triangular and wavy."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/uy.png",svg:"https://mainfacts.com/media/images/coats_of_arms/uy.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-34.85,-56.17]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"New Zealand",official:"New Zealand",nativeName:{eng:{official:"New Zealand",common:"New Zealand"},mri:{official:"Aotearoa",common:"Aotearoa"},nzs:{official:"New Zealand",common:"New Zealand"}}},tld:[".nz"],cca2:"NZ",ccn3:"554",cca3:"NZL",cioc:"NZL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{NZD:{name:"New Zealand dollar",symbol:"$"}},idd:{root:"+6",suffixes:["4"]},capital:["Wellington"],altSpellings:["NZ","Aotearoa"],region:"Oceania",subregion:"Australia and New Zealand",languages:{eng:"English",mri:"Māori",nzs:"New Zealand Sign Language"},translations:{ara:{official:"نيوزيلندا",common:"نيوزيلندا"},bre:{official:"Zeland-Nevez",common:"Zeland-Nevez"},ces:{official:"Nový Zéland",common:"Nový Zéland"},cym:{official:"New Zealand",common:"New Zealand"},deu:{official:"Neuseeland",common:"Neuseeland"},est:{official:"Uus-Meremaa",common:"Uus-Meremaa"},fin:{official:"Uusi-Seelanti",common:"Uusi-Seelanti"},fra:{official:"Nouvelle-Zélande",common:"Nouvelle-Zélande"},hrv:{official:"Novi Zeland",common:"Novi Zeland"},hun:{official:"Új-Zéland",common:"Új-Zéland"},ita:{official:"Nuova Zelanda",common:"Nuova Zelanda"},jpn:{official:"ニュージーランド",common:"ニュージーランド"},kor:{official:"뉴질랜드",common:"뉴질랜드"},nld:{official:"Nieuw Zeeland",common:"Nieuw-Zeeland"},per:{official:"نیوزیلند",common:"نیوزیلند"},pol:{official:"Nowa Zelandia",common:"Nowa Zelandia"},por:{official:"nova Zelândia",common:"Nova Zelândia"},rus:{official:"Новая Зеландия",common:"Новая Зеландия"},slk:{official:"Nový Zéland",common:"Nový Zéland"},spa:{official:"nueva Zelanda",common:"Nueva Zelanda"},srp:{official:"Нови Зеланд",common:"Нови Зеланд"},swe:{official:"Nya Zeeland",common:"Nya Zeeland"},tur:{official:"Yeni Zelanda",common:"Yeni Zelanda"},urd:{official:"نیوزی لینڈ",common:"نیوزی لینڈ"},zho:{official:"新西兰",common:"新西兰"}},latlng:[-41,174],landlocked:!1,area:270467,demonyms:{eng:{f:"New Zealander",m:"New Zealander"},fra:{f:"Neo-Zélandaise",m:"Neo-Zélandais"}},flag:"🇳🇿",maps:{googleMaps:"https://goo.gl/maps/xXiDQo65dwdpw9iu8",openStreetMaps:"https://www.openstreetmap.org/relation/556706#map=5/-46.710/172.046"},population:5084300,fifa:"NZL",car:{signs:["NZ"],side:"left"},timezones:["UTC-11:00","UTC-10:00","UTC+12:00","UTC+12:45","UTC+13:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/nz.png",svg:"https://flagcdn.com/nz.svg",alt:"The flag of New Zealand has a dark blue field with the flag of the United Kingdom — the Union Jack — in the canton and a representation of the Southern Cross constellation, made up of four five-pointed white-edged red stars, on the fly side of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/nz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/nz.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-41.3,174.78]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Tajikistan",official:"Republic of Tajikistan",nativeName:{rus:{official:"Республика Таджикистан",common:"Таджикистан"},tgk:{official:"Ҷумҳурии Тоҷикистон",common:"Тоҷикистон"}}},tld:[".tj"],cca2:"TJ",ccn3:"762",cca3:"TJK",cioc:"TJK",independent:!0,status:"officially-assigned",unMember:!0,currencies:{TJS:{name:"Tajikistani somoni",symbol:"ЅМ"}},idd:{root:"+9",suffixes:["92"]},capital:["Dushanbe"],altSpellings:["TJ","Toçikiston","Republic of Tajikistan","Ҷумҳурии Тоҷикистон","Çumhuriyi Toçikiston"],region:"Asia",subregion:"Central Asia",languages:{rus:"Russian",tgk:"Tajik"},translations:{ara:{official:"جمهورية طاجيكستان",common:"طاجيكستان"},bre:{official:"Republik Tadjikistan",common:"Tadjikistan"},ces:{official:"Republika Tádžikistán",common:"Tádžikistán"},cym:{official:"Republic of Tajikistan",common:"Tajikistan"},deu:{official:"Republik Tadschikistan",common:"Tadschikistan"},est:{official:"Tadžikistani Vabariik",common:"Tadžikistan"},fin:{official:"Tadžikistanin tasavalta",common:"Tadžikistan"},fra:{official:"République du Tadjikistan",common:"Tadjikistan"},hrv:{official:"Republika Tadžikistan",common:"Tađikistan"},hun:{official:"Tádzsik Köztársaság",common:"Tádzsikisztán"},ita:{official:"Repubblica del Tajikistan",common:"Tagikistan"},jpn:{official:"タジキスタン共和国",common:"タジキスタン"},kor:{official:"타지키스탄 공화국",common:"타지키스탄"},nld:{official:"Tadzjikistan",common:"Tadzjikistan"},per:{official:"جمهوری تاجیکستان",common:"تاجیکِستان"},pol:{official:"Republika Tadżykistanu",common:"Tadżykistan"},por:{official:"República do Tajiquistão",common:"Tajiquistão"},rus:{official:"Республика Таджикистан",common:"Таджикистан"},slk:{official:"Taǆická republika",common:"Taǆikistan"},spa:{official:"República de Tayikistán",common:"Tayikistán"},srp:{official:"Република Таџикистан",common:"Таџикистан"},swe:{official:"Republiken Tadzjikistan",common:"Tadzjikistan"},tur:{official:"Tacikistan Cumhuriyeti",common:"Tacikistan"},urd:{official:"جمہوریہ تاجکستان",common:"تاجکستان"},zho:{official:"塔吉克斯坦共和国",common:"塔吉克斯坦"}},latlng:[39,71],landlocked:!0,borders:["AFG","CHN","KGZ","UZB"],area:143100,demonyms:{eng:{f:"Tadzhik",m:"Tadzhik"},fra:{f:"Tadjike",m:"Tadjike"}},flag:"🇹🇯",maps:{googleMaps:"https://goo.gl/maps/8rQgW88jEXijhVb58",openStreetMaps:"https://www.openstreetmap.org/relation/214626"},population:9537642,gini:{2015:34},fifa:"TJK",car:{signs:["TJ"],side:"right"},timezones:["UTC+05:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/tj.png",svg:"https://flagcdn.com/tj.svg",alt:"The flag of Tajikistan is composed of three horizontal bands of red, white and green in the ratio of 2:3:2. A golden-yellow crown surmounted by an arc of seven five-pointed golden-yellow stars is centered in the white band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tj.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tj.svg"},startOfWeek:"monday",capitalInfo:{latlng:[38.55,68.77]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Bermuda",official:"Bermuda",nativeName:{eng:{official:"Bermuda",common:"Bermuda"}}},tld:[".bm"],cca2:"BM",ccn3:"060",cca3:"BMU",cioc:"BER",independent:!1,status:"officially-assigned",unMember:!1,currencies:{BMD:{name:"Bermudian dollar",symbol:"$"}},idd:{root:"+1",suffixes:["441"]},capital:["Hamilton"],altSpellings:["BM","The Islands of Bermuda","The Bermudas","Somers Isles"],region:"Americas",subregion:"North America",languages:{eng:"English"},translations:{ara:{official:"برمودا",common:"برمودا"},bre:{official:"Bermuda",common:"Bermuda"},ces:{official:"Bermudské ostrovy",common:"Bermudy"},cym:{official:"Bermiwda",common:"Bermiwda"},deu:{official:"Bermuda",common:"Bermuda"},est:{official:"Bermuda",common:"Bermuda"},fin:{official:"Bermuda",common:"Bermuda"},fra:{official:"Bermudes",common:"Bermudes"},hrv:{official:"Bermuda",common:"Bermudi"},hun:{official:"Bermuda",common:"Bermuda"},ita:{official:"Bermuda",common:"Bermuda"},jpn:{official:"バミューダ",common:"バミューダ"},kor:{official:"버뮤다",common:"버뮤다"},nld:{official:"Bermuda",common:"Bermuda"},per:{official:"جزایر برمودا",common:"برمودا"},pol:{official:"Bermudy",common:"Bermudy"},por:{official:"Bermudas",common:"Bermudas"},rus:{official:"Бермудские острова",common:"Бермудские Острова"},slk:{official:"Bermudy",common:"Bermudy"},spa:{official:"Bermuda",common:"Bermudas"},srp:{official:"Бермуда",common:"Бермуда"},swe:{official:"Bermuda",common:"Bermuda"},tur:{official:"Bermuda",common:"Bermuda"},urd:{official:"برمودا",common:"برمودا"},zho:{official:"百慕大",common:"百慕大"}},latlng:[32.33333333,-64.75],landlocked:!1,area:54,demonyms:{eng:{f:"Bermudian",m:"Bermudian"},fra:{f:"Bermudienne",m:"Bermudien"}},flag:"🇧🇲",maps:{googleMaps:"https://goo.gl/maps/NLsRGNjTzDghTtAJA",openStreetMaps:"https://www.openstreetmap.org/relation/1993208"},population:63903,fifa:"BER",car:{signs:["GB"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/bm.png",svg:"https://flagcdn.com/bm.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[32.28,-64.78]},postalCode:{format:"@@ ##",regex:"^([A-Z]{2}\\d{2})$"}},{name:{common:"Solomon Islands",official:"Solomon Islands",nativeName:{eng:{official:"Solomon Islands",common:"Solomon Islands"}}},tld:[".sb"],cca2:"SB",ccn3:"090",cca3:"SLB",cioc:"SOL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SBD:{name:"Solomon Islands dollar",symbol:"$"}},idd:{root:"+6",suffixes:["77"]},capital:["Honiara"],altSpellings:["SB"],region:"Oceania",subregion:"Melanesia",languages:{eng:"English"},translations:{ara:{official:"جزر سليمان",common:"جزر سليمان"},bre:{official:"Inizi Salomon",common:"Inizi Salomon"},ces:{official:"Šalamounovy ostrovy",common:"Šalamounovy ostrovy"},cym:{official:"Solomon Islands",common:"Solomon Islands"},deu:{official:"Salomonen",common:"Salomonen"},est:{official:"Saalomoni Saared",common:"Saalomoni Saared"},fin:{official:"Salomonsaaret",common:"Salomonsaaret"},fra:{official:"Îles Salomon",common:"Îles Salomon"},hrv:{official:"Solomonski Otoci",common:"Solomonski Otoci"},hun:{official:"Salamon-szigetek",common:"Salamon-szigetek"},ita:{official:"Isole Salomone",common:"Isole Salomone"},jpn:{official:"ソロモン諸島",common:"ソロモン諸島"},kor:{official:"솔로몬 제도",common:"솔로몬 제도"},nld:{official:"Solomon eilanden",common:"Salomonseilanden"},per:{official:"جزایر سلیمان",common:"جزایر سلیمان"},pol:{official:"Wyspy Salomona",common:"Wyspy Salomona"},por:{official:"Ilhas Salomão",common:"Ilhas Salomão"},rus:{official:"Соломоновы острова",common:"Соломоновы Острова"},slk:{official:"Salomonove ostrovy",common:"Salomonove ostrovy"},spa:{official:"islas Salomón",common:"Islas Salomón"},srp:{official:"Соломонска Острва",common:"Соломонска Острва"},swe:{official:"Salomonöarna",common:"Salomonöarna"},tur:{official:"Solomon Adaları",common:"Solomon Adaları"},urd:{official:"جزائر سلیمان",common:"جزائر سلیمان"},zho:{official:"所罗门群岛",common:"所罗门群岛"}},latlng:[-8,159],landlocked:!1,area:28896,demonyms:{eng:{f:"Solomon Islander",m:"Solomon Islander"},fra:{f:"Salomonienne",m:"Salomonien"}},flag:"🇸🇧",maps:{googleMaps:"https://goo.gl/maps/JbPkx86Ywjv8C1n8A",openStreetMaps:"https://www.openstreetmap.org/relation/1857436"},population:686878,gini:{2012:37.1},fifa:"SOL",car:{signs:["SOL"],side:"left"},timezones:["UTC+11:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/sb.png",svg:"https://flagcdn.com/sb.svg",alt:"The flag of Solomon Islands features a thin yellow diagonal band that extends from the lower hoist-side corner to the upper fly-side corner of the field. Above and beneath this band are a blue and green triangle respectively. Five white five-pointed stars arranged in an X shape are situated on the hoist side of the upper blue triangle."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sb.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sb.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-9.43,159.95]}},{name:{common:"Turkmenistan",official:"Turkmenistan",nativeName:{rus:{official:"Туркменистан",common:"Туркмения"},tuk:{official:"Türkmenistan",common:"Türkmenistan"}}},tld:[".tm"],cca2:"TM",ccn3:"795",cca3:"TKM",cioc:"TKM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{TMT:{name:"Turkmenistan manat",symbol:"m"}},idd:{root:"+9",suffixes:["93"]},capital:["Ashgabat"],altSpellings:["TM"],region:"Asia",subregion:"Central Asia",languages:{rus:"Russian",tuk:"Turkmen"},translations:{ara:{official:"تركمانستان",common:"تركمانستان"},bre:{official:"Republik Turkmenistan",common:"Turkmenistan"},ces:{official:"Turkmenistán",common:"Turkmenistán"},cym:{official:"Turkmenistan",common:"Turkmenistan"},deu:{official:"Turkmenistan",common:"Turkmenistan"},est:{official:"Türkmenistan",common:"Türkmenistan"},fin:{official:"Turkmenistan",common:"Turkmenistan"},fra:{official:"Turkménistan",common:"Turkménistan"},hrv:{official:"Turkmenistan",common:"Turkmenistan"},hun:{official:"Türkmén Köztársaság",common:"Türkmenisztán"},ita:{official:"Turkmenistan",common:"Turkmenistan"},jpn:{official:"トルクメニスタン",common:"トルクメニスタン"},kor:{official:"투르크메니스탄",common:"투르크메니스탄"},nld:{official:"Turkmenistan",common:"Turkmenistan"},per:{official:"جمهوری خلق ترکمنستان",common:"ترکمنستان"},pol:{official:"Republika Turkmenistanu",common:"Turkmenistan"},por:{official:"Turcomenistão",common:"Turquemenistão"},rus:{official:"Туркменистан",common:"Туркмения"},slk:{official:"Turkménsko",common:"Turkménsko"},spa:{official:"Turkmenistán",common:"Turkmenistán"},srp:{official:"Туркменистан",common:"Туркменистан"},swe:{official:"Turkmenistan",common:"Turkmenistan"},tur:{official:"Türkmenistan",common:"Türkmenistan"},urd:{official:"ترکمانستان",common:"ترکمانستان"},zho:{official:"土库曼斯坦",common:"土库曼斯坦"}},latlng:[40,60],landlocked:!0,borders:["AFG","IRN","KAZ","UZB"],area:488100,demonyms:{eng:{f:"Turkmen",m:"Turkmen"},fra:{f:"Turkmène",m:"Turkmène"}},flag:"🇹🇲",maps:{googleMaps:"https://goo.gl/maps/cgfUcaQHSWKuqeKk9",openStreetMaps:"https://www.openstreetmap.org/relation/223026"},population:6031187,gini:{1998:40.8},fifa:"TKM",car:{signs:["TM"],side:"right"},timezones:["UTC+05:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/tm.png",svg:"https://flagcdn.com/tm.svg",alt:"The flag of Turkmenistan has a green field. It features a red vertical band, bearing five carpet guls stacked above two crossed olive branches, near the hoist end of the field. Just to the fly side of the vertical band near the top edge of the field is a hoist-side facing white crescent and five small five-pointed white stars placed just outside the crescent opening."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[37.95,58.38]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Saint Helena, Ascension and Tristan da Cunha",official:"Saint Helena, Ascension and Tristan da Cunha",nativeName:{eng:{official:"Saint Helena, Ascension and Tristan da Cunha",common:"Saint Helena, Ascension and Tristan da Cunha"}}},tld:[".sh",".ac"],cca2:"SH",ccn3:"654",cca3:"SHN",independent:!1,status:"officially-assigned",unMember:!1,currencies:{GBP:{name:"Pound sterling",symbol:"£"},SHP:{name:"Saint Helena pound",symbol:"£"}},idd:{root:"+2",suffixes:["90","47"]},capital:["Jamestown"],altSpellings:["Saint Helena","St. Helena, Ascension and Tristan da Cunha"],region:"Africa",subregion:"Western Africa",languages:{eng:"English"},translations:{ara:{official:"سانت هيلينا وأسينشين وتريستان دا كونا",common:"سانت هيلينا وأسينشين وتريستان دا كونا"},bre:{official:"Saint Helena, Ascension ha Tristan da Cunha",common:"Saint Helena, Ascension ha Tristan da Cunha"},ces:{official:"Svatá Helena, Ascension a Tristan da Cunha",common:"Svatá Helena, Ascension a Tristan da Cunha"},cym:{official:"Saint Helena, Ascension and Tristan da Cunha",common:"Saint Helena, Ascension and Tristan da Cunha"},deu:{official:"Sankt Helena, Ascension und Tristan da Cunha",common:"St. Helena, Ascension und Tristan da Cunha"},est:{official:"Saint Helena, Ascension ja Tristan da Cunha",common:"Saint Helena, Ascension ja Tristan da Cunha"},fin:{official:"Saint Helena, Ascension ja Tristan da Cunha",common:"Saint Helena, Ascension ja Tristan da Cunha"},fra:{official:"Sainte-Hélène, Ascension et Tristan da Cunha",common:"Sainte-Hélène, Ascension et Tristan da Cunha"},hrv:{official:"Sveta Helena",common:"Sveta Helena"},hun:{official:"Szent Ilona",common:"Szent Ilona-sziget"},ita:{official:"Sant'Elena, Ascensione e Tristan da Cunha",common:"Sant'Elena, Ascensione e Tristan da Cunha"},jpn:{official:"セントヘレナ・アセンションおよびトリスタンダクーニャ",common:"セントヘレナ・アセンションおよびトリスタンダクーニャ"},kor:{official:"세인트헬레나",common:"세인트헬레나"},nld:{official:"Sint-Helena, Ascension en Tristan da Cunha",common:"Sint-Helena, Ascension en Tristan da Cunha"},per:{official:"سنت هلن",common:"سنت هلن"},pol:{official:"Wyspa Świętej Heleny, Wyspa Wniebowstąpienia i Tristan da Cunha",common:"Wyspa Świętej Heleny, Wyspa Wniebowstąpienia i Tristan da Cunha"},por:{official:"Santa Helena, Ascensão e Tristão da Cunha",common:"Santa Helena, Ascensão e Tristão da Cunha"},rus:{official:"Острова Святой Елены, Вознесения и Тристан-да-Кунья",common:"Острова Святой Елены, Вознесения и Тристан-да-Кунья"},slk:{official:"Svätá Helena (zámorské územie)",common:"Svätá Helena (zámorské územie)"},spa:{official:"Santa Elena, Ascensión y Tristán de Acuña",common:"Santa Elena, Ascensión y Tristán de Acuña"},srp:{official:"Света Јелена, Асенсион и Тристан да Куња",common:"Света Јелена"},swe:{official:"Sankta Helena",common:"Sankta Helena"},tur:{official:"Saint Helena",common:"Saint Helena"},urd:{official:"سینٹ ہلینا، اسینشن و ترسٹان دا کونیا",common:"سینٹ ہلینا، اسینشن و ترسٹان دا کونیا"},zho:{official:"圣赫勒拿、阿森松和特里斯坦-达库尼亚",common:"圣赫勒拿、阿森松和特里斯坦-达库尼亚"}},latlng:[-15.95,-5.72],landlocked:!1,area:394,demonyms:{eng:{f:"Saint Helenian",m:"Saint Helenian"},fra:{f:"Sainte-Hélénoise",m:"Sainte-Hélènois"}},flag:"🇸🇭",maps:{googleMaps:"https://goo.gl/maps/iv4VxnPzHkjLCJuc6",openStreetMaps:"https://www.openstreetmap.org/relation/4868269#map=13/-15.9657/-5.7120"},population:53192,car:{signs:["GB"],side:"left"},timezones:["UTC+00:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/sh.png",svg:"https://flagcdn.com/sh.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-15.93,-5.72]},postalCode:{format:"STHL 1ZZ",regex:"^(STHL1ZZ)$"}},{name:{common:"China",official:"People's Republic of China",nativeName:{zho:{official:"中华人民共和国",common:"中国"}}},tld:[".cn",".中国",".中國",".公司",".网络"],cca2:"CN",ccn3:"156",cca3:"CHN",cioc:"CHN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CNY:{name:"Chinese yuan",symbol:"¥"}},idd:{root:"+8",suffixes:["6"]},capital:["Beijing"],altSpellings:["CN","Zhōngguó","Zhongguo","Zhonghua","People's Republic of China","中华人民共和国","Zhōnghuá Rénmín Gònghéguó"],region:"Asia",subregion:"Eastern Asia",languages:{zho:"Chinese"},translations:{ara:{official:"جمهورية الصين الشعبية",common:"الصين"},bre:{official:"Republik Pobl Sina",common:"Sina"},ces:{official:"Čínská lidová republika",common:"Čína"},cym:{official:"Gweriniaeth Pobl Tsieina",common:"Tsieina"},deu:{official:"Volksrepublik China",common:"China"},est:{official:"Hiina Rahvavabariik",common:"Hiina"},fin:{official:"Kiinan kansantasavalta",common:"Kiina"},fra:{official:"République populaire de Chine",common:"Chine"},hrv:{official:"Narodna Republika Kina",common:"Kina"},hun:{official:"Kínai Népköztársaság",common:"Kína"},ita:{official:"Repubblica popolare cinese",common:"Cina"},jpn:{official:"中華人民共和国",common:"中国"},kor:{official:"중화인민공화국",common:"중국"},nld:{official:"Volksrepubliek China",common:"China"},per:{official:"جمهوری خلق چین",common:"چین"},pol:{official:"Chińska Republika Ludowa",common:"Chiny"},por:{official:"República Popular da China",common:"China"},rus:{official:"Народная Республика Китай",common:"Китай"},slk:{official:"Čínska ľudová republika",common:"Čína"},spa:{official:"República Popular de China",common:"China"},srp:{official:"Народна Република Кина",common:"Кина"},swe:{official:"Folkrepubliken Kina",common:"Kina"},tur:{official:"Çin Halk Cumhuriyeti",common:"Çin"},urd:{official:"عوامی جمہوریہ چین",common:"چین"}},latlng:[35,105],landlocked:!1,borders:["AFG","BTN","MMR","HKG","IND","KAZ","NPL","PRK","KGZ","LAO","MAC","MNG","PAK","RUS","TJK","VNM"],area:9706961,demonyms:{eng:{f:"Chinese",m:"Chinese"},fra:{f:"Chinoise",m:"Chinois"}},flag:"🇨🇳",maps:{googleMaps:"https://goo.gl/maps/p9qC6vgiFRRXzvGi7",openStreetMaps:"https://www.openstreetmap.org/relation/270056"},population:1402112e3,gini:{2016:38.5},fifa:"CHN",car:{signs:["RC"],side:"right"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/cn.png",svg:"https://flagcdn.com/cn.svg",alt:"The flag of China has a red field. In the canton are five yellow five-pointed stars — a large star and four smaller stars arranged in a vertical arc on the fly side of the large star."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[39.92,116.38]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Hungary",official:"Hungary",nativeName:{hun:{official:"Magyarország",common:"Magyarország"}}},tld:[".hu"],cca2:"HU",ccn3:"348",cca3:"HUN",cioc:"HUN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{HUF:{name:"Hungarian forint",symbol:"Ft"}},idd:{root:"+3",suffixes:["6"]},capital:["Budapest"],altSpellings:["HU"],region:"Europe",subregion:"Central Europe",languages:{hun:"Hungarian"},translations:{ara:{official:"الجمهورية المجرية",common:"المجر"},bre:{official:"Hungaria",common:"Hungaria"},ces:{official:"Maďarsko",common:"Maďarsko"},cym:{official:"Hungary",common:"Hungary"},deu:{official:"Ungarn",common:"Ungarn"},est:{official:"Ungari",common:"Ungari"},fin:{official:"Unkari",common:"Unkari"},fra:{official:"Hongrie",common:"Hongrie"},hrv:{official:"Madžarska",common:"Mađarska"},hun:{official:"Magyarország",common:"Magyarország"},ita:{official:"Ungheria",common:"Ungheria"},jpn:{official:"ハンガリー",common:"ハンガリー"},kor:{official:"헝가리",common:"헝가리"},nld:{official:"Hongarije",common:"Hongarije"},per:{official:"مجارستان",common:"مجارستان"},pol:{official:"Węgry",common:"Węgry"},por:{official:"Hungria",common:"Hungria"},rus:{official:"Венгрия",common:"Венгрия"},slk:{official:"Maďarsko",common:"Maďarsko"},spa:{official:"Hungría",common:"Hungría"},srp:{official:"Мађарска",common:"Мађарска"},swe:{official:"Ungern",common:"Ungern"},tur:{official:"Macaristan",common:"Macaristan"},urd:{official:"مجارستان",common:"مجارستان"},zho:{official:"匈牙利",common:"匈牙利"}},latlng:[47,20],landlocked:!0,borders:["AUT","HRV","ROU","SRB","SVK","SVN","UKR"],area:93028,demonyms:{eng:{f:"Hungarian",m:"Hungarian"},fra:{f:"Hongroise",m:"Hongrois"}},flag:"🇭🇺",maps:{googleMaps:"https://goo.gl/maps/9gfPupm5bffixiFJ6",openStreetMaps:"https://www.openstreetmap.org/relation/21335"},population:9749763,gini:{2018:29.6},fifa:"HUN",car:{signs:["H"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/hu.png",svg:"https://flagcdn.com/hu.svg",alt:"The flag of Hungary is composed of three equal horizontal bands of red, white and green."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/hu.png",svg:"https://mainfacts.com/media/images/coats_of_arms/hu.svg"},startOfWeek:"monday",capitalInfo:{latlng:[47.5,19.08]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Cayman Islands",official:"Cayman Islands",nativeName:{eng:{official:"Cayman Islands",common:"Cayman Islands"}}},tld:[".ky"],cca2:"KY",ccn3:"136",cca3:"CYM",cioc:"CAY",independent:!1,status:"officially-assigned",unMember:!1,currencies:{KYD:{name:"Cayman Islands dollar",symbol:"$"}},idd:{root:"+1",suffixes:["345"]},capital:["George Town"],altSpellings:["KY"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"جزر كايمان",common:"جزر كايمان"},bre:{official:"Inizi Cayman",common:"Inizi Cayman"},ces:{official:"Kajmanské ostrovy",common:"Kajmanské ostrovy"},cym:{official:"Ynysoedd Cayman",common:"Ynysoedd Cayman"},deu:{official:"Cayman-Inseln",common:"Kaimaninseln"},est:{official:"Kaimanisaared",common:"Kaimanisaared"},fin:{official:"Caymansaaret",common:"Caymansaaret"},fra:{official:"Îles Caïmans",common:"Îles Caïmans"},hrv:{official:"Kajmanski otoci",common:"Kajmanski otoci"},hun:{official:"Kajmán-szigetek",common:"Kajmán-szigetek"},ita:{official:"Isole Cayman",common:"Isole Cayman"},jpn:{official:"ケイマン諸島",common:"ケイマン諸島"},kor:{official:"케이맨 제도",common:"케이맨 제도"},nld:{official:"Caymaneilanden",common:"Caymaneilanden"},per:{official:"جزایر کیمن",common:"جزایر کیمن"},pol:{official:"Kajmany",common:"Kajmany"},por:{official:"Ilhas Cayman",common:"Ilhas Caimão"},rus:{official:"Каймановы острова",common:"Каймановы острова"},slk:{official:"Kajmanie ostrovy",common:"Kajmanie ostrovy"},spa:{official:"Islas Caimán",common:"Islas Caimán"},srp:{official:"Кајманска Острва",common:"Кајманска Острва"},swe:{official:"Caymanöarna",common:"Caymanöarna"},tur:{official:"Cayman Adaları",common:"Cayman Adaları"},urd:{official:"جزائر کیمین",common:"جزائر کیمین"},zho:{official:"开曼群岛",common:"开曼群岛"}},latlng:[19.3133,81.2546],landlocked:!1,area:264,demonyms:{eng:{f:"Caymanian",m:"Caymanian"},fra:{f:"Caïmanienne",m:"Caïmanien"}},flag:"🇰🇾",maps:{googleMaps:"https://goo.gl/maps/P3ZVXX3LH63t91hL8",openStreetMaps:"https://www.openstreetmap.org/relation/7269765"},population:65720,fifa:"CAY",car:{signs:["GB"],side:"left"},timezones:["UTC-05:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/ky.png",svg:"https://flagcdn.com/ky.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ky.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ky.svg"},startOfWeek:"monday",capitalInfo:{latlng:[19.3,-81.38]}},{name:{common:"Seychelles",official:"Republic of Seychelles",nativeName:{crs:{official:"Repiblik Sesel",common:"Sesel"},eng:{official:"Republic of Seychelles",common:"Seychelles"},fra:{official:"République des Seychelles",common:"Seychelles"}}},tld:[".sc"],cca2:"SC",ccn3:"690",cca3:"SYC",cioc:"SEY",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SCR:{name:"Seychellois rupee",symbol:"₨"}},idd:{root:"+2",suffixes:["48"]},capital:["Victoria"],altSpellings:["SC","Republic of Seychelles","Repiblik Sesel","République des Seychelles"],region:"Africa",subregion:"Eastern Africa",languages:{crs:"Seychellois Creole",eng:"English",fra:"French"},translations:{ara:{official:"جمهورية سيشل",common:"سيشل"},bre:{official:"Republik Sechelez",common:"Sechelez"},ces:{official:"Seychelská republika",common:"Seychely"},cym:{official:"Republic of Seychelles",common:"Seychelles"},deu:{official:"Republik der Seychellen",common:"Seychellen"},est:{official:"Seišelli Vabariik",common:"Seišellid"},fin:{official:"Seychellien tasavalta",common:"Seychellit"},fra:{official:"République des Seychelles",common:"Seychelles"},hrv:{official:"Republika Sejšeli",common:"Sejšeli"},hun:{official:"Seychelle Köztársaság",common:"Seychelle-szigetek"},ita:{official:"Repubblica delle Seychelles",common:"Seychelles"},jpn:{official:"セイシェル共和国",common:"セーシェル"},kor:{official:"세이셸 공화국",common:"세이셸"},nld:{official:"Republiek der Seychellen",common:"Seychellen"},per:{official:"جمهوری سیشل",common:"سیشل"},pol:{official:"Republika Seszeli",common:"Seszele"},por:{official:"República das Seychelles",common:"Seicheles"},rus:{official:"Республика Сейшельские Острова",common:"Сейшельские Острова"},slk:{official:"Seychelská republika",common:"Seychely"},spa:{official:"República de las Seychelles",common:"Seychelles"},srp:{official:"Република Сејшели",common:"Сејшели"},swe:{official:"Republiken Seychellerna",common:"Seychellerna"},tur:{official:"Seyşeller Cumhuriyeti",common:"Seyşeller"},urd:{official:"جمہوریہ سیچیلیس",common:"سیچیلیس"},zho:{official:"塞舌尔共和国",common:"塞舌尔"}},latlng:[-4.58333333,55.66666666],landlocked:!1,area:452,demonyms:{eng:{f:"Seychellois",m:"Seychellois"},fra:{f:"Seychelloise",m:"Seychellois"}},flag:"🇸🇨",maps:{googleMaps:"https://goo.gl/maps/aqCcy2TKh5TV5MAX8",openStreetMaps:"https://www.openstreetmap.org/relation/536765"},population:98462,gini:{2018:32.1},fifa:"SEY",car:{signs:["SY"],side:"left"},timezones:["UTC+04:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/sc.png",svg:"https://flagcdn.com/sc.svg",alt:"The flag of Seychelles is composed of five broadening oblique bands of blue, yellow, red, white and green, which extend from the hoist side of the bottom edge to the top and fly edges of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sc.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sc.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-4.62,55.45]}},{name:{common:"Ivory Coast",official:"Republic of Côte d'Ivoire",nativeName:{fra:{official:"République de Côte d'Ivoire",common:"Côte d'Ivoire"}}},tld:[".ci"],cca2:"CI",ccn3:"384",cca3:"CIV",cioc:"CIV",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["25"]},capital:["Yamoussoukro"],altSpellings:["CI","Côte d'Ivoire","Ivory Coast","Republic of Côte d'Ivoire","République de Côte d'Ivoire"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"جمهورية ساحل العاج",common:"ساحل العاج"},bre:{official:"Republik Aod an Olifant",common:"Aod an Olifant"},ces:{official:"Republika Pobřeží slonoviny",common:"Pobřeží slonoviny"},cym:{official:"Republic of Côte d'Ivoire",common:"Ivory Coast"},deu:{official:"Republik Côte d'Ivoire",common:"Elfenbeinküste"},est:{official:"Côte d’Ivoire’i Vabariik",common:"Elevandiluurannik"},fin:{official:"Norsunluurannikon tasavalta",common:"Norsunluurannikko"},fra:{official:"République de Côte d' Ivoire",common:"Côte d'Ivoire"},hrv:{official:"Republika Côte d'Ivoire",common:"Obala Bjelokosti"},hun:{official:"Elefántcsontparti Köztársaság",common:"Elefántcsontpart"},ita:{official:"Repubblica della Costa d'Avorio",common:"Costa d'Avorio"},jpn:{official:"コートジボワール共和国",common:"コートジボワール"},kor:{official:"코트디부아르 공화국",common:"코트디부아르"},nld:{official:"Republiek Ivoorkust",common:"Ivoorkust"},per:{official:"جمهوری ساحل عاج",common:"ساحل عاج"},pol:{official:"Republika WybrzeŻa Kości Słoniowej",common:"WybrzeŻe Kości Słoniowej"},por:{official:"República da Côte d'Ivoire",common:"Costa do Marfim"},rus:{official:"Республика Кот-д'Ивуаре",common:"Кот-д’Ивуар"},slk:{official:"Republika Pobrežie Slonoviny",common:"Pobržie Slonoviny"},spa:{official:"República de Côte d'Ivoire",common:"Costa de Marfil"},srp:{official:"Република Обала Слоноваче",common:"Обала Слоноваче"},swe:{official:"Republiken Elfenbenskusten",common:"Elfenbenskusten"},tur:{official:"Fildişi Sahili",common:"Fildişi Sahili"},urd:{official:"جمہوریہ کوت دیواغ",common:"آئیوری کوسٹ"},zho:{official:"科特迪瓦共和国",common:"科特迪瓦"}},latlng:[8,-5],landlocked:!1,borders:["BFA","GHA","GIN","LBR","MLI"],area:322463,demonyms:{eng:{f:"Ivorian",m:"Ivorian"},fra:{f:"Ivoirienne",m:"Ivoirien"}},flag:"🇨🇮",maps:{googleMaps:"https://goo.gl/maps/wKsmN7f5qAeNtGjP6",openStreetMaps:"https://www.openstreetmap.org/relation/192779"},population:26378275,gini:{2015:41.5},fifa:"CIV",car:{signs:["CI"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ci.png",svg:"https://flagcdn.com/ci.svg",alt:"The flag of Ivory Coast is composed of three equal vertical bands of orange, white and green."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ci.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ci.svg"},startOfWeek:"monday",capitalInfo:{latlng:[6.82,-5.27]}},{name:{common:"Saint Kitts and Nevis",official:"Federation of Saint Christopher and Nevis",nativeName:{eng:{official:"Federation of Saint Christopher and Nevis",common:"Saint Kitts and Nevis"}}},tld:[".kn"],cca2:"KN",ccn3:"659",cca3:"KNA",cioc:"SKN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["869"]},capital:["Basseterre"],altSpellings:["KN","Federation of Saint Christopher and Nevis"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"اتحاد القديس كريستوفر ونيفيس",common:"سانت كيتس ونيفيس"},bre:{official:"Kevread Saint Kitts ha Nevis",common:"Saint Kitts ha Nevis"},ces:{official:"Federace Sv. Kryštof a Nevis",common:"Svatý Kryštof a Nevis"},cym:{official:"Federation of Saint Christopher and Nevis",common:"Saint Kitts and Nevis"},deu:{official:"Föderation von St. Kitts und Nevis",common:"St. Kitts und Nevis"},est:{official:"Saint Kittsi ja Nevise Föderatsioon",common:"Saint Kitts ja Nevis"},fin:{official:"Saint Christopherin ja Nevisin federaatio",common:"Saint Kitts ja Nevis"},fra:{official:"Fédération de Saint-Christophe-et-Niévès",common:"Saint-Christophe-et-Niévès"},hrv:{official:"Federacija Sv.Kristofora i Nevisa",common:"Sveti Kristof i Nevis"},hun:{official:"Saint Christopher és Nevis Államszövetség",common:"Saint Kitts és Nevis"},ita:{official:"Federazione di Saint Christopher e Nevis",common:"Saint Kitts e Nevis"},jpn:{official:"セントクリストファーNevis連盟",common:"セントクリストファー・ネイビス"},kor:{official:"세인트키츠 네비스 연방",common:"세인트키츠 네비스"},nld:{official:"Federatie van Saint Kitts en Nevis",common:"Saint Kitts en Nevis"},per:{official:"فدراسیون سنت کیتس و نویس",common:"سنت کیتس و نویس"},pol:{official:"Federacja Saint Kitts i Nevis",common:"Saint Kitts i Nevis"},por:{official:"Federação de São Cristóvão e Nevis",common:"São Cristóvão e Nevis"},rus:{official:"Федерация Сент-Кристофер и Н е в и с",common:"Сент-Китс и Невис"},slk:{official:"Feder໡cia Svätého Krištofa a Nevisu",common:"Svätý Krištof a Nevis"},spa:{official:"Federación de San Cristóbal y Nevis",common:"San Cristóbal y Nieves"},srp:{official:"Федерација Свети Кристофер и Невис",common:"Сент Китс и Невис"},swe:{official:"Federationen Saint Kitts och Nevis",common:"Saint Kitts och Nevis"},tur:{official:"Saint Kitts ve Nevis Federasyonu",common:"Saint Kitts ve Nevis"},urd:{official:"وفاقِ سینٹ کیٹز و ناویس",common:"سینٹ کیٹز و ناویس"},zho:{official:"圣克里斯托弗和尼维斯联邦",common:"圣基茨和尼维斯"}},latlng:[17.33333333,-62.75],landlocked:!1,area:261,demonyms:{eng:{f:"Kittitian or Nevisian",m:"Kittitian or Nevisian"},fra:{f:"Kittitienne-et-nevicienne",m:"Kittitien-et-nevicien"}},flag:"🇰🇳",maps:{googleMaps:"https://goo.gl/maps/qiaVwcLVTXX3eoTNA",openStreetMaps:"https://www.openstreetmap.org/relation/536899"},population:53192,fifa:"SKN",car:{signs:["KN"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/kn.png",svg:"https://flagcdn.com/kn.svg",alt:"The flag of Saint Kitts and Nevis features two large five-pointed white stars within a yellow-edged black diagonal band that extends from the lower hoist-side corner to the upper fly-side corner of the field. Above and beneath this band are a green and red triangle respectively."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/kn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/kn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[17.3,-62.72]}},{name:{common:"Greece",official:"Hellenic Republic",nativeName:{ell:{official:"Ελληνική Δημοκρατία",common:"Ελλάδα"}}},tld:[".gr"],cca2:"GR",ccn3:"300",cca3:"GRC",cioc:"GRE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["0"]},capital:["Athens"],altSpellings:["GR","Elláda","Hellenic Republic","Ελληνική Δημοκρατία"],region:"Europe",subregion:"Southern Europe",languages:{ell:"Greek"},translations:{ara:{official:"الجمهورية الهيلينية",common:"اليونان"},bre:{official:"Republik Hellenek",common:"Gres"},ces:{official:"Řecká republika",common:"Řecko"},cym:{official:"Hellenic Republic",common:"Greece"},deu:{official:"Hellenische Republik",common:"Griechenland"},est:{official:"Kreeka Vabariik",common:"Kreeka"},fin:{official:"Helleenien tasavalta",common:"Kreikka"},fra:{official:"République hellénique",common:"Grèce"},hrv:{official:"Helenska Republika",common:"Grčka"},hun:{official:"Görög Köztársaság",common:"Görögország"},ita:{official:"Repubblica ellenica",common:"Grecia"},jpn:{official:"ギリシャ共和国",common:"ギリシャ"},kor:{official:"그리스 공화국",common:"그리스"},nld:{official:"Helleense Republiek",common:"Griekenland"},per:{official:"جمهوری یونان",common:"یونان"},pol:{official:"Republika Grecka",common:"Grecja"},por:{official:"República Helénica",common:"Grécia"},rus:{official:"Греческая Республика",common:"Греция"},slk:{official:"Grécka republika",common:"Greécko"},spa:{official:"República Helénica",common:"Grecia"},srp:{official:"Хеленска Република",common:"Грчка"},swe:{official:"Republiken Grekland",common:"Grekland"},tur:{official:"Helen Cumhuriyeti",common:"Yunanistan"},urd:{official:"جمہوریہ ہیلینیہ",common:"یونان"},zho:{official:"希腊共和国",common:"希腊"}},latlng:[39,22],landlocked:!1,borders:["ALB","BGR","TUR","MKD"],area:131990,demonyms:{eng:{f:"Greek",m:"Greek"},fra:{f:"Grecque",m:"Grec"}},flag:"🇬🇷",maps:{googleMaps:"https://goo.gl/maps/LHGcAvuRyD2iKECC6",openStreetMaps:"https://www.openstreetmap.org/relation/192307"},population:10715549,gini:{2018:32.9},fifa:"GRE",car:{signs:["GR"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/gr.png",svg:"https://flagcdn.com/gr.svg",alt:"The flag of Greece is composed of nine equal horizontal bands of blue alternating with white. A blue square bearing a white cross is superimposed in the canton."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[37.98,23.73]},postalCode:{format:"### ##",regex:"^(\\d{5})$"}},{name:{common:"Montenegro",official:"Montenegro",nativeName:{cnr:{official:"Црна Гора",common:"Црна Гора"}}},tld:[".me"],cca2:"ME",ccn3:"499",cca3:"MNE",cioc:"MNE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["82"]},capital:["Podgorica"],altSpellings:["ME","Crna Gora"],region:"Europe",subregion:"Southeast Europe",languages:{cnr:"Montenegrin"},translations:{ara:{official:"الجبل الاسود",common:"الجبل الاسود"},bre:{official:"Republik Montenegro",common:"Montenegro"},ces:{official:"Černá Hora",common:"Černá Hora"},cym:{official:"Montenegro",common:"Montenegro"},deu:{official:"Montenegro",common:"Montenegro"},est:{official:"Montenegro",common:"Montenegro"},fin:{official:"Montenegro",common:"Montenegro"},fra:{official:"Monténégro",common:"Monténégro"},hrv:{official:"Crna Gora",common:"Crna Gora"},hun:{official:"Montenegró",common:"Montenegró"},ita:{official:"Montenegro",common:"Montenegro"},jpn:{official:"モンテネグロ",common:"モンテネグロ"},kor:{official:"몬테네그로",common:"몬테네그로"},nld:{official:"Montenegro",common:"Montenegro"},per:{official:"مونته‌نگرو",common:"مونته‌نگرو"},pol:{official:"Czarnogóra",common:"Czarnogóra"},por:{official:"Montenegro",common:"Montenegro"},rus:{official:"Черногория",common:"Черногория"},slk:{official:"Čierna Hora",common:"Čierna Hora"},spa:{official:"Montenegro",common:"Montenegro"},srp:{official:"Црна Гора",common:"Црна Гора"},swe:{official:"Montenegro",common:"Montenegro"},tur:{official:"Karadağ",common:"Karadağ"},urd:{official:"مونٹینیگرو",common:"مونٹینیگرو"},zho:{official:"黑山",common:"黑山"}},latlng:[42.5,19.3],landlocked:!1,borders:["ALB","BIH","HRV","UNK","SRB"],area:13812,demonyms:{eng:{f:"Montenegrin",m:"Montenegrin"},fra:{f:"Monténégrine",m:"Monténégrin"}},flag:"🇲🇪",maps:{googleMaps:"https://goo.gl/maps/4THX1fM7WqANuPbB8",openStreetMaps:"https://www.openstreetmap.org/relation/53296"},population:621718,gini:{2016:38.5},fifa:"MNE",car:{signs:["SCG"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/me.png",svg:"https://flagcdn.com/me.svg",alt:"The flag of Montenegro features a large red central rectangular area surrounded by a golden-yellow border. The coat of arms of Montenegro is centered in the red rectangle."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/me.png",svg:"https://mainfacts.com/media/images/coats_of_arms/me.svg"},startOfWeek:"monday",capitalInfo:{latlng:[42.43,19.27]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Germany",official:"Federal Republic of Germany",nativeName:{deu:{official:"Bundesrepublik Deutschland",common:"Deutschland"}}},tld:[".de"],cca2:"DE",ccn3:"276",cca3:"DEU",cioc:"GER",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+4",suffixes:["9"]},capital:["Berlin"],altSpellings:["DE","Federal Republic of Germany","Bundesrepublik Deutschland"],region:"Europe",subregion:"Western Europe",languages:{deu:"German"},translations:{ara:{official:"جمهورية ألمانيا الاتحادية",common:"ألمانيا"},bre:{official:"Republik Kevreadel Alamagn",common:"Alamagn"},ces:{official:"Spolková republika Německo",common:"Německo"},cym:{official:"Federal Republic of Germany",common:"Germany"},deu:{official:"Bundesrepublik Deutschland",common:"Deutschland"},est:{official:"Saksamaa Liitvabariik",common:"Saksamaa"},fin:{official:"Saksan liittotasavalta",common:"Saksa"},fra:{official:"République fédérale d'Allemagne",common:"Allemagne"},hrv:{official:"Njemačka Federativna Republika",common:"Njemačka"},hun:{official:"Német Szövetségi Köztársaság",common:"Németország"},ita:{official:"Repubblica federale di Germania",common:"Germania"},jpn:{official:"ドイツ連邦共和国",common:"ドイツ"},kor:{official:"독일 연방 공화국",common:"독일"},nld:{official:"Bondsrepubliek Duitsland",common:"Duitsland"},per:{official:"جمهوری فدرال آلمان",common:"آلمان"},pol:{official:"Republika Federalna Niemiec",common:"Niemcy"},por:{official:"República Federal da Alemanha",common:"Alemanha"},rus:{official:"Федеративная Республика Германия",common:"Германия"},slk:{official:"Nemecká spolková republika",common:"Nemecko"},spa:{official:"República Federal de Alemania",common:"Alemania"},srp:{official:"Савезна Република Немачка",common:"Немачка"},swe:{official:"Förbundsrepubliken Tyskland",common:"Tyskland"},tur:{official:"Almanya Federal Cumhuriyeti",common:"Almanya"},urd:{official:"وفاقی جمہوریہ جرمنی",common:"جرمنی"},zho:{official:"德意志联邦共和国",common:"德国"}},latlng:[51,9],landlocked:!1,borders:["AUT","BEL","CZE","DNK","FRA","LUX","NLD","POL","CHE"],area:357114,demonyms:{eng:{f:"German",m:"German"},fra:{f:"Allemande",m:"Allemand"}},flag:"🇩🇪",maps:{googleMaps:"https://goo.gl/maps/mD9FBMq1nvXUBrkv6",openStreetMaps:"https://www.openstreetmap.org/relation/51477"},population:83240525,gini:{2016:31.9},fifa:"GER",car:{signs:["DY"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/de.png",svg:"https://flagcdn.com/de.svg",alt:"The flag of Germany is composed of three equal horizontal bands of black, red and gold."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/de.png",svg:"https://mainfacts.com/media/images/coats_of_arms/de.svg"},startOfWeek:"monday",capitalInfo:{latlng:[52.52,13.4]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Fiji",official:"Republic of Fiji",nativeName:{eng:{official:"Republic of Fiji",common:"Fiji"},fij:{official:"Matanitu Tugalala o Viti",common:"Viti"},hif:{official:"रिपब्लिक ऑफ फीजी",common:"फिजी"}}},tld:[".fj"],cca2:"FJ",ccn3:"242",cca3:"FJI",cioc:"FIJ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{FJD:{name:"Fijian dollar",symbol:"$"}},idd:{root:"+6",suffixes:["79"]},capital:["Suva"],altSpellings:["FJ","Viti","Republic of Fiji","Matanitu ko Viti","Fijī Gaṇarājya"],region:"Oceania",subregion:"Melanesia",languages:{eng:"English",fij:"Fijian",hif:"Fiji Hindi"},translations:{ara:{official:"جمهورية جزر فيجي",common:"فيجي"},bre:{official:"Republik Fidji",common:"Fidji"},ces:{official:"Republika Fidžijských ostrovů",common:"Fidži"},cym:{official:"Republic of Fiji",common:"Fiji"},deu:{official:"Republik Fidschi",common:"Fidschi"},est:{official:"Fidži Vabariik",common:"Fidži"},fin:{official:"Fidžin tasavalta",common:"Fidži"},fra:{official:"République des Fidji",common:"Fidji"},hrv:{official:"Republika Fidži",common:"Fiđi"},hun:{official:"Fidzsi-szigeteki Köztársaság",common:"Fidzsi-szigetek"},ita:{official:"Repubblica di Figi",common:"Figi"},jpn:{official:"フィジー共和国",common:"フィジー"},kor:{official:"피지 공화국",common:"피지"},nld:{official:"Republiek Fiji",common:"Fiji"},per:{official:"جمهوری جزایر فیجی",common:"فیجی"},pol:{official:"Republika Fidżi",common:"Fidżi"},por:{official:"República de Fiji",common:"Fiji"},rus:{official:"Республика Фиджи",common:"Фиджи"},slk:{official:"Fiǆijská republika",common:"Fiǆi"},spa:{official:"República de Fiji",common:"Fiyi"},srp:{official:"Република Фиџи",common:"Фиџи"},swe:{official:"Republiken Fiji",common:"Fiji"},tur:{official:"Fiji Cumhuriyeti",common:"Fiji"},urd:{official:"جمہوریہ فجی",common:"فجی"},zho:{official:"斐济共和国",common:"斐济"}},latlng:[17.7134,178.065],landlocked:!1,area:18272,demonyms:{eng:{f:"Fijian",m:"Fijian"},fra:{f:"Fidjienne",m:"Fidjien"}},flag:"🇫🇯",maps:{googleMaps:"https://goo.gl/maps/r9fhDqoLZdg1zmE99",openStreetMaps:"https://www.openstreetmap.org/relation/571747"},population:896444,gini:{2013:36.7},fifa:"FIJ",car:{signs:["FJI"],side:"left"},timezones:["UTC+12:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/fj.png",svg:"https://flagcdn.com/fj.svg",alt:"The flag of Fiji has a light blue field. It features the flag of the United Kingdom — the Union Jack — in the canton and the shield of the national coat of arms centered in the fly half."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/fj.png",svg:"https://mainfacts.com/media/images/coats_of_arms/fj.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-18.13,178.42]}},{name:{common:"British Virgin Islands",official:"Virgin Islands",nativeName:{eng:{official:"Virgin Islands",common:"British Virgin Islands"}}},tld:[".vg"],cca2:"VG",ccn3:"092",cca3:"VGB",cioc:"IVB",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["284"]},capital:["Road Town"],altSpellings:["VG","Virgin Islands, British"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"جزر العذراء البريطانية",common:"جزر العذراء"},bre:{official:"Inizi Gwerc'h Breizhveurat",common:"Inizi Gwerc'h Breizhveurat"},ces:{official:"Britské Panenské ostrovy",common:"Britské Panenské ostrovy"},cym:{official:"Virgin Islands",common:"British Virgin Islands"},deu:{official:"Jungferninseln",common:"Britische Jungferninseln"},est:{official:"Neitsisaared",common:"Briti Neitsisaared"},fin:{official:"Brittiläiset Neitsytsaaret",common:"Neitsytsaaret"},fra:{official:"îles Vierges",common:"Îles Vierges britanniques"},hrv:{official:"Djevičanski Otoci",common:"Britanski Djevičanski Otoci"},hun:{official:"Brit Virgin-szigetek",common:"Brit Virgin-szigetek"},ita:{official:"Isole Vergini",common:"Isole Vergini Britanniche"},jpn:{official:"バージン諸島",common:"イギリス領ヴァージン諸島"},kor:{official:"영국령 버진아일랜드",common:"영국령 버진아일랜드"},nld:{official:"Maagdeneilanden",common:"Britse Maagdeneilanden"},per:{official:"جزایر ویرجین بریتانیا",common:"جزایر ویرجین بریتانیا"},pol:{official:"Brytyjskie Wyspy Dziewicze",common:"Brytyjskie Wyspy Dziewicze"},por:{official:"Ilhas Virgens",common:"Ilhas Virgens"},rus:{official:"Виргинские острова",common:"Британские Виргинские острова"},slk:{official:"Panenské ostrovy",common:"Panenské ostrovy"},spa:{official:"Islas Vírgenes",common:"Islas Vírgenes del Reino Unido"},srp:{official:"Британска Девичанска Острва",common:"Британска Девичанска Острва"},swe:{official:"Brittiska Jungfruöarna",common:"Brittiska Jungfruöarna"},tur:{official:"Virjin Adaları",common:"Virjin Adaları"},urd:{official:"برطانوی جزائر ورجن",common:"برطانوی جزائر ورجن"},zho:{official:"英属维尔京群岛",common:"英属维尔京群岛"}},latlng:[18.431383,-64.62305],landlocked:!1,area:151,demonyms:{eng:{f:"Virgin Islander",m:"Virgin Islander"}},flag:"🇻🇬",maps:{googleMaps:"https://goo.gl/maps/49C9cSesNVAR9DQk8",openStreetMaps:"https://www.openstreetmap.org/relation/285454"},population:30237,fifa:"VGB",car:{signs:["BVI"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/vg.png",svg:"https://flagcdn.com/vg.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/vg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/vg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[18.42,-64.62]}},{name:{common:"Jamaica",official:"Jamaica",nativeName:{eng:{official:"Jamaica",common:"Jamaica"},jam:{official:"Jamaica",common:"Jamaica"}}},tld:[".jm"],cca2:"JM",ccn3:"388",cca3:"JAM",cioc:"JAM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{JMD:{name:"Jamaican dollar",symbol:"$"}},idd:{root:"+1",suffixes:["876"]},capital:["Kingston"],altSpellings:["JM"],region:"Americas",subregion:"Caribbean",languages:{eng:"English",jam:"Jamaican Patois"},translations:{ara:{official:"جامايكا",common:"جامايكا"},bre:{official:"Jamaika",common:"Jamaika"},ces:{official:"Jamajka",common:"Jamajka"},cym:{official:"Jamaica",common:"Jamaica"},deu:{official:"Jamaika",common:"Jamaika"},est:{official:"Jamaica",common:"Jamaica"},fin:{official:"Jamaika",common:"Jamaika"},fra:{official:"Jamaïque",common:"Jamaïque"},hrv:{official:"Jamajka",common:"Jamajka"},hun:{official:"Jamaica",common:"Jamaica"},ita:{official:"Giamaica",common:"Giamaica"},jpn:{official:"ジャマイカ",common:"ジャマイカ"},kor:{official:"자메이카",common:"자메이카"},nld:{official:"Jamaica",common:"Jamaica"},per:{official:"جامائیکا",common:"جامائیکا"},pol:{official:"Jamajka",common:"Jamajka"},por:{official:"Jamaica",common:"Jamaica"},rus:{official:"Ямайка",common:"Ямайка"},slk:{official:"Jamajka",common:"Jamajka"},spa:{official:"Jamaica",common:"Jamaica"},srp:{official:"Јамајка",common:"Јамајка"},swe:{official:"Jamaica",common:"Jamaica"},tur:{official:"Jamaika",common:"Jamaika"},urd:{official:"جمیکا",common:"جمیکا"},zho:{official:"牙买加",common:"牙买加"}},latlng:[18.25,-77.5],landlocked:!1,area:10991,demonyms:{eng:{f:"Jamaican",m:"Jamaican"},fra:{f:"Jamaïcaine",m:"Jamaïcain"}},flag:"🇯🇲",maps:{googleMaps:"https://goo.gl/maps/Z8mQ6jxnRQKFwJy9A",openStreetMaps:"https://www.openstreetmap.org/relation/555017"},population:2961161,gini:{2004:45.5},fifa:"JAM",car:{signs:["JA"],side:"left"},timezones:["UTC-05:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/jm.png",svg:"https://flagcdn.com/jm.svg",alt:"The flag of Jamaica is divided by a gold diagonal cross into four alternating triangular areas of green at the top and bottom, and black on the hoist and fly sides"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/jm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/jm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[17.99702,-76.79358]}},{name:{common:"Jordan",official:"Hashemite Kingdom of Jordan",nativeName:{ara:{official:"المملكة الأردنية الهاشمية",common:"الأردن"}}},tld:[".jo","الاردن."],cca2:"JO",ccn3:"400",cca3:"JOR",cioc:"JOR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{JOD:{name:"Jordanian dinar",symbol:"د.ا"}},idd:{root:"+9",suffixes:["62"]},capital:["Amman"],altSpellings:["JO","Hashemite Kingdom of Jordan","al-Mamlakah al-Urdunīyah al-Hāshimīyah"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"المملكة الأردنية الهاشمية",common:"الأردن"},bre:{official:"Rouantelezh hachemit Jordania",common:"Jordania"},ces:{official:"Jordánské hášimovské království",common:"Jordánsko"},cym:{official:"Hashemite Kingdom of Jordan",common:"Jordan"},deu:{official:"Haschemitisches Königreich Jordanien",common:"Jordanien"},est:{official:"Jordaania Hašimiidi Kuningriik",common:"Jordaania"},fin:{official:"Jordanian hašemiittinen kunigaskunta",common:"Jordania"},fra:{official:"Royaume hachémite de Jordanie",common:"Jordanie"},hrv:{official:"Hašemitske Kraljevine Jordan",common:"Jordan"},hun:{official:"Jordánia",common:"Jordánia"},ita:{official:"Regno hascemita di Giordania",common:"Giordania"},jpn:{official:"ヨルダン·ハシミテ王国",common:"ヨルダン"},kor:{official:"요르단 하심 왕국",common:"요르단"},nld:{official:"Hasjemitisch Koninkrijk Jordanië",common:"Jordanië"},per:{official:"پادشاهی اُردُن هاشمی",common:"اردن"},pol:{official:"Jordańskie Królestwo Haszymidzkie",common:"Jordania"},por:{official:"Reino Hachemita da Jordânia",common:"Jordânia"},rus:{official:"Иорданского Хашимитского Королевства",common:"Иордания"},slk:{official:"Jordánske hášimovské kráľovstvo",common:"Jordánsko"},spa:{official:"Reino Hachemita de Jordania",common:"Jordania"},srp:{official:"Хашемитска Краљевина Јордан",common:"Јордан"},swe:{official:"Hashimitiska kungadömet Jordanien",common:"Jordanien"},tur:{official:"Ürdün Hâşimi Krallığı",common:"Ürdün"},urd:{official:"ھاشمی مملکتِ اردن",common:"اردن"},zho:{official:"约旦哈希姆王国",common:"约旦"}},latlng:[31,36],landlocked:!1,borders:["IRQ","ISR","PSE","SAU","SYR"],area:89342,demonyms:{eng:{f:"Jordanian",m:"Jordanian"},fra:{f:"Jordanienne",m:"Jordanien"}},flag:"🇯🇴",maps:{googleMaps:"https://goo.gl/maps/ko1dzSDKg8Gsi9A98",openStreetMaps:"https://www.openstreetmap.org/relation/184818"},population:10203140,gini:{2010:33.7},fifa:"JOR",car:{signs:["HKJ"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/jo.png",svg:"https://flagcdn.com/jo.svg",alt:"The flag of Jordan is composed of three equal horizontal bands of black, white and green, with a red isosceles triangle superimposed on the hoist side of the field. This triangle has its base on the hoist end, spans about half the width of the field and bears a small seven-pointed white star at its center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/jo.png",svg:"https://mainfacts.com/media/images/coats_of_arms/jo.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[31.95,35.93]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Mayotte",official:"Department of Mayotte",nativeName:{fra:{official:"Département de Mayotte",common:"Mayotte"}}},tld:[".yt"],cca2:"YT",ccn3:"175",cca3:"MYT",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+2",suffixes:["62"]},capital:["Mamoudzou"],altSpellings:["YT","Department of Mayotte","Département de Mayotte"],region:"Africa",subregion:"Eastern Africa",languages:{fra:"French"},translations:{ara:{official:"مايوت",common:"مايوت"},bre:{official:"Departamant Mayotte",common:"Mayotte"},ces:{official:"Mayotte",common:"Mayotte"},cym:{official:"Department of Mayotte",common:"Mayotte"},deu:{official:"Übersee-Département Mayotte",common:"Mayotte"},est:{official:"Mayotte",common:"Mayotte"},fin:{official:"Mayotte",common:"Mayotte"},fra:{official:"Département de Mayotte",common:"Mayotte"},hrv:{official:"Odjel Mayotte",common:"Mayotte"},hun:{official:"Mayotte",common:"Mayotte"},ita:{official:"Dipartimento di Mayotte",common:"Mayotte"},jpn:{official:"マヨット科",common:"マヨット"},kor:{official:"마요트",common:"마요트"},nld:{official:"Afdeling Mayotte",common:"Mayotte"},per:{official:"مجموعه شهرستانی مایوت",common:"مایوت"},pol:{official:"Majotta",common:"Majotta"},por:{official:"Departamento de Mayotte",common:"Mayotte"},rus:{official:"Департамент Майотта",common:"Майотта"},slk:{official:"Department Mayotte",common:"Mayotte"},spa:{official:"Departamento de Mayotte",common:"Mayotte"},srp:{official:"Мајот",common:"Мајот"},swe:{official:"Departementsområdet Mayotte",common:"Mayotte"},tur:{official:"Mayotte",common:"Mayotte"},urd:{official:"مایوٹ",common:"مایوٹ"},zho:{official:"马约特",common:"马约特"}},latlng:[-12.83333333,45.16666666],landlocked:!1,area:374,demonyms:{eng:{f:"Mahoran",m:"Mahoran"},fra:{f:"Mahoraise",m:"Mahorais"}},flag:"🇾🇹",maps:{googleMaps:"https://goo.gl/maps/1e7MXmfBwQv3TQGF7",openStreetMaps:"https://www.openstreetmap.org/relation/1259885"},population:226915,car:{signs:["F"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/yt.png",svg:"https://flagcdn.com/yt.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-12.78,45.22]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Maldives",official:"Republic of the Maldives",nativeName:{div:{official:"ދިވެހިރާއްޖޭގެ ޖުމްހޫރިއްޔާ",common:"ދިވެހިރާއްޖޭގެ"}}},tld:[".mv"],cca2:"MV",ccn3:"462",cca3:"MDV",cioc:"MDV",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MVR:{name:"Maldivian rufiyaa",symbol:".ރ"}},idd:{root:"+9",suffixes:["60"]},capital:["Malé"],altSpellings:["MV","Maldive Islands","Republic of the Maldives","Dhivehi Raajjeyge Jumhooriyya"],region:"Asia",subregion:"Southern Asia",languages:{div:"Maldivian"},translations:{ara:{official:"جمهورية المالديف",common:"المالديف"},bre:{official:"Republik Maldivez",common:"Maldivez"},ces:{official:"Maledivská republika",common:"Maledivy"},cym:{official:"Republic of the Maldives",common:"Maldives"},deu:{official:"Republik Malediven",common:"Malediven"},est:{official:"Maldiivi Vabariik",common:"Maldiivid"},fin:{official:"Malediivien tasavalta",common:"Malediivit"},fra:{official:"République des Maldives",common:"Maldives"},hrv:{official:"Republika Maldivi",common:"Maldivi"},hun:{official:"Maldív-szigetek",common:"Maldív-szigetek"},ita:{official:"Repubblica delle Maldive",common:"Maldive"},jpn:{official:"モルディブ共和国",common:"モルディブ"},kor:{official:"몰디브 공화국",common:"몰디브"},nld:{official:"Republiek van de Malediven",common:"Maldiven"},per:{official:"جمهوری مالدیو",common:"مالدیو"},pol:{official:"Republika Malediwów",common:"Malediwy"},por:{official:"República das Maldivas",common:"Maldivas"},rus:{official:"Республика Мальдивы",common:"Мальдивы"},slk:{official:"Maldivská republika",common:"Maldivy"},spa:{official:"República de las Maldivas",common:"Maldivas"},srp:{official:"Малдивска Република",common:"Малдиви"},swe:{official:"Republiken Maldiverna",common:"Maldiverna"},tur:{official:"Maldivler Cumhuriyeti",common:"Maldivler"},urd:{official:"جمہوریہ مالدیپ",common:"مالدیپ"},zho:{official:"马尔代夫共和国",common:"马尔代夫"}},latlng:[3.25,73],landlocked:!1,area:300,demonyms:{eng:{f:"Maldivan",m:"Maldivan"},fra:{f:"Maldivienne",m:"Maldivien"}},flag:"🇲🇻",maps:{googleMaps:"https://goo.gl/maps/MNAWGq9vEdbZ9vUV7",openStreetMaps:"https://www.openstreetmap.org/relation/536773"},population:540542,gini:{2016:31.3},fifa:"MDV",car:{signs:["MV"],side:"left"},timezones:["UTC+05:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/mv.png",svg:"https://flagcdn.com/mv.svg",alt:"The flag of Maldives has a red field, at the center of which is a large green rectangle bearing a fly-side facing white crescent."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mv.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mv.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[4.17,73.51]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Kenya",official:"Republic of Kenya",nativeName:{eng:{official:"Republic of Kenya",common:"Kenya"},swa:{official:"Republic of Kenya",common:"Kenya"}}},tld:[".ke"],cca2:"KE",ccn3:"404",cca3:"KEN",cioc:"KEN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KES:{name:"Kenyan shilling",symbol:"Sh"}},idd:{root:"+2",suffixes:["54"]},capital:["Nairobi"],altSpellings:["KE","Republic of Kenya","Jamhuri ya Kenya"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English",swa:"Swahili"},translations:{ara:{official:"جمهورية كينيا",common:"كينيا"},bre:{official:"Republik Kenya",common:"Kenya"},ces:{official:"Keňská republika",common:"Keňa"},cym:{official:"Republic of Kenya",common:"Kenya"},deu:{official:"Republik Kenia",common:"Kenia"},est:{official:"Keenia Vabariik",common:"Keenia"},fin:{official:"Kenian tasavalta",common:"Kenia"},fra:{official:"République du Kenya",common:"Kenya"},hrv:{official:"Republika Kenija",common:"Kenija"},hun:{official:"Kenyai Köztársaság",common:"Kenya"},ita:{official:"Repubblica del Kenya",common:"Kenya"},jpn:{official:"ケニア共和国",common:"ケニア"},kor:{official:"케냐 공화국",common:"케냐"},nld:{official:"Republiek Kenia",common:"Kenia"},per:{official:"جمهوری کنیا",common:"کنیا"},pol:{official:"Republika Kenii",common:"Kenia"},por:{official:"República do Quénia",common:"Quénia"},rus:{official:"Республика Кения",common:"Кения"},slk:{official:"Kenská republika",common:"Keňa"},spa:{official:"República de Kenya",common:"Kenia"},srp:{official:"Република Кенија",common:"Кенија"},swe:{official:"Republiken Kenya",common:"Kenya"},tur:{official:"Kenya Cumhuriyeti",common:"Kenya"},urd:{official:"جمہوریہ کینیا",common:"کینیا"},zho:{official:"肯尼亚共和国",common:"肯尼亚"}},latlng:[1,38],landlocked:!1,borders:["ETH","SOM","SSD","TZA","UGA"],area:580367,demonyms:{eng:{f:"Kenyan",m:"Kenyan"},fra:{f:"Kényane",m:"Kényan"}},flag:"🇰🇪",maps:{googleMaps:"https://goo.gl/maps/Ni9M7wcCxf8bJHLX8",openStreetMaps:"https://www.openstreetmap.org/relation/192798"},population:53771300,gini:{2015:40.8},fifa:"KEN",car:{signs:["EAK"],side:"left"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ke.png",svg:"https://flagcdn.com/ke.svg",alt:"The flag of Kenya is composed of three equal horizontal bands of black, red with white top and bottom edges, and green. An emblem comprising a red, black and white Maasai shield covering two crossed white spears is superimposed at the center of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ke.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ke.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-1.28,36.82]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Comoros",official:"Union of the Comoros",nativeName:{ara:{official:"الاتحاد القمري",common:"القمر‎"},fra:{official:"Union des Comores",common:"Comores"},zdj:{official:"Udzima wa Komori",common:"Komori"}}},tld:[".km"],cca2:"KM",ccn3:"174",cca3:"COM",cioc:"COM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KMF:{name:"Comorian franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["69"]},capital:["Moroni"],altSpellings:["KM","Union of the Comoros","Union des Comores","Udzima wa Komori","al-Ittiḥād al-Qumurī"],region:"Africa",subregion:"Eastern Africa",languages:{ara:"Arabic",fra:"French",zdj:"Comorian"},translations:{ara:{official:"الإتحاد القمري",common:"جزر القمر"},bre:{official:"Unaniezh Komorez",common:"Komorez"},ces:{official:"Komorský svaz",common:"Komory"},cym:{official:"Undeb y Comoros",common:"Y Comoros"},deu:{official:"Union der Komoren",common:"Komoren"},est:{official:"Komoori Liit",common:"Komoorid"},fin:{official:"Komorien liitto",common:"Komorit"},fra:{official:"Union des Comores",common:"Comores"},hrv:{official:"Savez Komori",common:"Komori"},hun:{official:"Comore-szigeteki Unió",common:"Comore-szigetek"},ita:{official:"Unione delle Comore",common:"Comore"},jpn:{official:"コモロ連合",common:"コモロ"},kor:{official:"코모로 연방",common:"코모로"},nld:{official:"Unie van de Comoren",common:"Comoren"},per:{official:"مجمع‌الجزایر قمر",common:"اتحاد قُمُر"},pol:{official:"Związek Komorów",common:"Komory"},por:{official:"União das Comores",common:"Comores"},rus:{official:"Союз Коморских Островов",common:"Коморы"},slk:{official:"Komorská únia",common:"Komory"},spa:{official:"Unión de las Comoras",common:"Comoras"},srp:{official:"Савез Комора",common:"Комори"},swe:{official:"Unionen Komorerna",common:"Komorerna"},tur:{official:"Komorlar Birliği",common:"Komorlar"},urd:{official:"اتحاد القمری",common:"القمری"},zho:{official:"科摩罗联盟",common:"科摩罗"}},latlng:[-12.16666666,44.25],landlocked:!1,area:1862,demonyms:{eng:{f:"Comoran",m:"Comoran"},fra:{f:"Comorienne",m:"Comorien"}},flag:"🇰🇲",maps:{googleMaps:"https://goo.gl/maps/eas4GP28C1GyStnu6",openStreetMaps:"https://www.openstreetmap.org/relation/535790"},population:869595,gini:{2014:45.3},fifa:"COM",car:{signs:["COM"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/km.png",svg:"https://flagcdn.com/km.svg",alt:"The flag of Comoros is composed of four equal horizontal bands of yellow, white, red and blue, with a green isosceles triangle superimposed on the hoist side of the field. This triangle has its base on the hoist end, spans about two-fifth the width of the field and bears a fly-side facing white crescent and four five-pointed white stars arranged in a vertical line along the opening of the crescent."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/km.png",svg:"https://mainfacts.com/media/images/coats_of_arms/km.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-11.7,43.23]}},{name:{common:"Japan",official:"Japan",nativeName:{jpn:{official:"日本",common:"日本"}}},tld:[".jp",".みんな"],cca2:"JP",ccn3:"392",cca3:"JPN",cioc:"JPN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{JPY:{name:"Japanese yen",symbol:"¥"}},idd:{root:"+8",suffixes:["1"]},capital:["Tokyo"],altSpellings:["JP","Nippon","Nihon"],region:"Asia",subregion:"Eastern Asia",languages:{jpn:"Japanese"},translations:{ara:{official:"اليابان",common:"اليابان"},bre:{official:"Japan",common:"Japan"},ces:{official:"Japonsko",common:"Japonsko"},cym:{official:"Japan",common:"Japan"},deu:{official:"Japan",common:"Japan"},est:{official:"Jaapan",common:"Jaapan"},fin:{official:"Japani",common:"Japani"},fra:{official:"Japon",common:"Japon"},hrv:{official:"Japan",common:"Japan"},hun:{official:"Japán",common:"Japán"},ita:{official:"Giappone",common:"Giappone"},jpn:{official:"日本",common:"日本"},kor:{official:"일본국",common:"일본"},nld:{official:"Japan",common:"Japan"},per:{official:"ژاپن",common:"ژاپن"},pol:{official:"Japonia",common:"Japonia"},por:{official:"Japão",common:"Japão"},rus:{official:"Япония",common:"Япония"},slk:{official:"Japonsko",common:"Japonsko"},spa:{official:"Japón",common:"Japón"},srp:{official:"Јапан",common:"Јапан"},swe:{official:"Japan",common:"Japan"},tur:{official:"Japonya",common:"Japonya"},urd:{official:"جاپان",common:"جاپان"},zho:{official:"日本国",common:"日本"}},latlng:[36,138],landlocked:!1,area:377930,demonyms:{eng:{f:"Japanese",m:"Japanese"},fra:{f:"Japonaise",m:"Japonais"}},flag:"🇯🇵",maps:{googleMaps:"https://goo.gl/maps/NGTLSCSrA8bMrvnX9",openStreetMaps:"https://www.openstreetmap.org/relation/382313"},population:125836021,gini:{2013:32.9},fifa:"JPN",car:{signs:["J"],side:"left"},timezones:["UTC+09:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/jp.png",svg:"https://flagcdn.com/jp.svg",alt:"The flag of Japan features a crimson-red circle at the center of a white field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/jp.png",svg:"https://mainfacts.com/media/images/coats_of_arms/jp.svg"},startOfWeek:"monday",capitalInfo:{latlng:[35.68,139.75]},postalCode:{format:"###-####",regex:"^(\\d{7})$"}},{name:{common:"Malawi",official:"Republic of Malawi",nativeName:{eng:{official:"Republic of Malawi",common:"Malawi"},nya:{official:"Chalo cha Malawi, Dziko la Malaŵi",common:"Malaŵi"}}},tld:[".mw"],cca2:"MW",ccn3:"454",cca3:"MWI",cioc:"MAW",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MWK:{name:"Malawian kwacha",symbol:"MK"}},idd:{root:"+2",suffixes:["65"]},capital:["Lilongwe"],altSpellings:["MW","Republic of Malawi"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English",nya:"Chewa"},translations:{ara:{official:"جمهورية مالاوي",common:"مالاوي"},bre:{official:"Republik Malawi",common:"Malawi"},ces:{official:"Malawiská republika",common:"Malawi"},cym:{official:"Republic of Malawi",common:"Malawi"},deu:{official:"Republik Malawi",common:"Malawi"},est:{official:"Malawi Vabariik",common:"Malawi"},fin:{official:"Malawin tasavalta",common:"Malawi"},fra:{official:"République du Malawi",common:"Malawi"},hrv:{official:"Republika Malavi",common:"Malavi"},hun:{official:"Malawi Köztársaság",common:"Malawi"},ita:{official:"Repubblica del Malawi",common:"Malawi"},jpn:{official:"マラウイ共和国",common:"マラウイ"},kor:{official:"말라위 공화국",common:"말라위"},nld:{official:"Republiek Malawi",common:"Malawi"},per:{official:"جمهوری مالاوی",common:"مالاوی"},pol:{official:"Republika Malawi",common:"Malawi"},por:{official:"República do Malawi",common:"Malawi"},rus:{official:"Республика Малави",common:"Малави"},slk:{official:"Malawijská republika",common:"Malawi"},spa:{official:"República de Malawi",common:"Malawi"},srp:{official:"Република Малави",common:"Малави"},swe:{official:"Republiken Malawi",common:"Malawi"},tur:{official:"Malavi Cumhuriyeti",common:"Malavi"},urd:{official:"جمہوریہ ملاوی",common:"ملاوی"},zho:{official:"马拉维共和国",common:"马拉维"}},latlng:[-13.5,34],landlocked:!0,borders:["MOZ","TZA","ZMB"],area:118484,demonyms:{eng:{f:"Malawian",m:"Malawian"},fra:{f:"Malawienne",m:"Malawien"}},flag:"🇲🇼",maps:{googleMaps:"https://goo.gl/maps/mc6z83pW9m98X2Ef6",openStreetMaps:"https://www.openstreetmap.org/relation/195290"},population:19129955,gini:{2016:44.7},fifa:"MWI",car:{signs:["MW"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/mw.png",svg:"https://flagcdn.com/mw.svg",alt:"The flag of Malawi is composed of three equal horizontal bands of black, red and green. The top half of a red sun with thirty-one visible rays is centered in the black band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-13.97,33.78]}},{name:{common:"Pakistan",official:"Islamic Republic of Pakistan",nativeName:{eng:{official:"Islamic Republic of Pakistan",common:"Pakistan"},urd:{official:"اسلامی جمہوریۂ پاكستان",common:"پاكستان"}}},tld:[".pk"],cca2:"PK",ccn3:"586",cca3:"PAK",cioc:"PAK",independent:!0,status:"officially-assigned",unMember:!0,currencies:{PKR:{name:"Pakistani rupee",symbol:"₨"}},idd:{root:"+9",suffixes:["2"]},capital:["Islamabad"],altSpellings:["PK","Pākistān","Islamic Republic of Pakistan","Islāmī Jumhūriya'eh Pākistān"],region:"Asia",subregion:"Southern Asia",languages:{eng:"English",urd:"Urdu"},translations:{ara:{official:"جمهورية باكستان الإسلامية",common:"باكستان"},bre:{official:"Republik islamek Pakistan",common:"Pakistan"},ces:{official:"Pákistánská islámská republika",common:"Pákistán"},cym:{official:"Islamic Republic of Pakistan",common:"Pakistan"},deu:{official:"Islamische Republik Pakistan",common:"Pakistan"},est:{official:"Pakistani Islamivabariik",common:"Pakistan"},fin:{official:"Pakistanin islamilainen tasavalta",common:"Pakistan"},fra:{official:"République islamique du Pakistan",common:"Pakistan"},hrv:{official:"Islamska Republika Pakistan",common:"Pakistan"},hun:{official:"Pakisztán",common:"Pakisztán"},ita:{official:"Repubblica islamica del Pakistan",common:"Pakistan"},jpn:{official:"パキスタン",common:"パキスタン"},kor:{official:"파키스탄 이슬람 공화국",common:"파키스탄"},nld:{official:"Islamitische Republiek Pakistan",common:"Pakistan"},per:{official:"جمهوری اسلامی پاکستان",common:"پاکستان"},pol:{official:"Islamska Republika Pakistanu",common:"Pakistan"},por:{official:"República Islâmica do Paquistão",common:"Paquistão"},rus:{official:"Исламская Республика Пакистан",common:"Пакистан"},slk:{official:"Pakistanská islamská republika",common:"Pakistan"},spa:{official:"República Islámica de Pakistán",common:"Pakistán"},srp:{official:"Исламска Република Пакистан",common:"Пакистан"},swe:{official:"Islamiska republiken Pakistan",common:"Pakistan"},tur:{official:"Pakistan İslam Cumhuriyeti",common:"Pakistan"},urd:{official:"اسلامی جمہوریہ پاکستان",common:"پاکستان"},zho:{official:"巴基斯坦伊斯兰共和国",common:"巴基斯坦"}},latlng:[30,70],landlocked:!1,borders:["AFG","CHN","IND","IRN"],area:881912,demonyms:{eng:{f:"Pakistani",m:"Pakistani"},fra:{f:"Pakistanaise",m:"Pakistanais"}},flag:"🇵🇰",maps:{googleMaps:"https://goo.gl/maps/5LYujdfR5yLUXoERA",openStreetMaps:"https://www.openstreetmap.org/relation/307573"},population:220892331,gini:{2018:31.6},fifa:"PAK",car:{signs:["PK"],side:"left"},timezones:["UTC+05:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/pk.png",svg:"https://flagcdn.com/pk.svg",alt:"The flag of Pakistan is composed of a white vertical band on its hoist side that takes up about one-fourth the width of the field and a dark green rectangular area that spans the rest of the field. A white fly-side facing crescent and five-pointed star are centered in the dark green area."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[33.68,73.05]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Guinea",official:"Republic of Guinea",nativeName:{fra:{official:"République de Guinée",common:"Guinée"}}},tld:[".gn"],cca2:"GN",ccn3:"324",cca3:"GIN",cioc:"GUI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{GNF:{name:"Guinean franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["24"]},capital:["Conakry"],altSpellings:["GN","Republic of Guinea","République de Guinée"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"جمهورية غينيا",common:"غينيا"},bre:{official:"Republik Ginea",common:"Ginea"},ces:{official:"Guinejská republika",common:"Guinea"},cym:{official:"Republic of Guinea",common:"Guinea"},deu:{official:"Republik Guinea",common:"Guinea"},est:{official:"Guinea Vabariik",common:"Guinea"},fin:{official:"Guinean tasavalta",common:"Guinea"},fra:{official:"République de Guinée",common:"Guinée"},hrv:{official:"Republika Gvineja",common:"Gvineja"},hun:{official:"Guineai Köztársaság",common:"Guinea"},ita:{official:"Repubblica di Guinea",common:"Guinea"},jpn:{official:"ギニア共和国",common:"ギニア"},kor:{official:"기니 공화국",common:"기니"},nld:{official:"Republiek Guinee",common:"Guinee"},per:{official:"مملکت مستقل پاپوآ گینه نو",common:"پاپوآ گینه نو"},pol:{official:"Republika Gwinei",common:"Gwinea"},por:{official:"República da Guiné",common:"Guiné"},rus:{official:"Республика Гвинея",common:"Гвинея"},slk:{official:"Guinejská republika",common:"Guinea"},spa:{official:"República de Guinea",common:"Guinea"},srp:{official:"Кооперативна Република Гвајана",common:"Гвајана"},swe:{official:"Republiken Guinea",common:"Guinea"},tur:{official:"Gine Cumhuriyeti",common:"Gine"},urd:{official:"جمہوریہ گنی",common:"گنی"},zho:{official:"几内亚共和国",common:"几内亚"}},latlng:[11,-10],landlocked:!1,borders:["CIV","GNB","LBR","MLI","SEN","SLE"],area:245857,demonyms:{eng:{f:"Guinean",m:"Guinean"},fra:{f:"Guinéenne",m:"Guinéen"}},flag:"🇬🇳",maps:{googleMaps:"https://goo.gl/maps/8J5oM5sA4Ayr1ZYGA",openStreetMaps:"https://www.openstreetmap.org/relation/192778"},population:13132792,gini:{2012:33.7},fifa:"GUI",car:{signs:["RG"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/gn.png",svg:"https://flagcdn.com/gn.svg",alt:"The flag of Guinea is composed of three equal vertical bands of red, yellow and green."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[9.5,-13.7]}},{name:{common:"Pitcairn Islands",official:"Pitcairn Group of Islands",nativeName:{eng:{official:"Pitcairn Group of Islands",common:"Pitcairn Islands"}}},tld:[".pn"],cca2:"PN",ccn3:"612",cca3:"PCN",independent:!1,status:"officially-assigned",unMember:!1,currencies:{NZD:{name:"New Zealand dollar",symbol:"$"}},idd:{root:"+6",suffixes:["4"]},capital:["Adamstown"],altSpellings:["PN","Pitcairn","Pitcairn Henderson Ducie and Oeno Islands"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English"},translations:{ara:{official:"جزر بيتكيرن",common:"جزر بيتكيرن"},bre:{official:"Inizi Pitcairn, Henderson, Ducie hag Oeno",common:"Inizi Pitcairn"},ces:{official:"Pitcairnovy ostrovy",common:"Pitcairnovy ostrovy"},cym:{official:"Pitcairn Group of Islands",common:"Pitcairn Islands"},deu:{official:"Pitcairninseln",common:"Pitcairninseln"},est:{official:"Pitcairni, Hendersoni, Ducie ja Oeno saar",common:"Pitcairn"},fin:{official:"Pitcairn",common:"Pitcairn"},fra:{official:"Groupe d'îles Pitcairn",common:"Îles Pitcairn"},hrv:{official:"Pitcairn skupine otoka",common:"Pitcairnovo otočje"},hun:{official:"Pitcairn-szigetek",common:"Pitcairn-szigetek"},ita:{official:"Pitcairn gruppo di isole",common:"Isole Pitcairn"},jpn:{official:"島のピトケアングループ",common:"ピトケアン"},kor:{official:"핏케언 제도",common:"핏케언 제도"},nld:{official:"Pitcairn groep eilanden",common:"Pitcairneilanden"},per:{official:"جزایر پیت‌کرن",common:"جزایر پیت‌کرن"},pol:{official:"Wyspy Pitcairn, Henderson, Ducie i Oeno",common:"Pitcairn"},por:{official:"Pitcairn grupo de ilhas",common:"Ilhas Pitcairn"},rus:{official:"Питкэрн группа островов",common:"Острова Питкэрн"},slk:{official:"Pitcairnove ostrovy",common:"Pitcairnove ostrovy"},spa:{official:"Grupo de Islas Pitcairn",common:"Islas Pitcairn"},srp:{official:"Острва Питкерн, Хендерсон, Дуци и Оин",common:"Острва Питкерн"},swe:{official:"Pitcairnöarna",common:"Pitcairnöarna"},tur:{official:"Pitcairn, Henderson, Ducie ve Oeno Adaları",common:"Pitcairn Adaları"},urd:{official:"پٹکیرن جزائر",common:"جزائر پٹکیرن"},zho:{official:"皮特凯恩群岛",common:"皮特凯恩群岛"}},latlng:[-25.06666666,-130.1],landlocked:!1,area:47,demonyms:{eng:{f:"Pitcairn Islander",m:"Pitcairn Islander"},fra:{f:"Pitcairnaise",m:"Pitcairnais"}},flag:"🇵🇳",maps:{googleMaps:"https://goo.gl/maps/XGJMnMAigXjXcxSa7",openStreetMaps:"https://www.openstreetmap.org/relation/2185375"},population:56,car:{signs:["GB"],side:"left"},timezones:["UTC-08:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/pn.png",svg:"https://flagcdn.com/pn.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-25.07,-130.08]}},{name:{common:"Sri Lanka",official:"Democratic Socialist Republic of Sri Lanka",nativeName:{sin:{official:"ශ්‍රී ලංකා ප්‍රජාතාන්ත්‍රික සමාජවාදී ජනරජය",common:"ශ්‍රී ලංකාව"},tam:{official:"இலங்கை சனநாயக சோசலிசக் குடியரசு",common:"இலங்கை"}}},tld:[".lk",".இலங்கை",".ලංකා"],cca2:"LK",ccn3:"144",cca3:"LKA",cioc:"SRI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{LKR:{name:"Sri Lankan rupee",symbol:"Rs  රු"}},idd:{root:"+9",suffixes:["4"]},capital:["Sri Jayawardenepura Kotte"],altSpellings:["LK","ilaṅkai","Democratic Socialist Republic of Sri Lanka"],region:"Asia",subregion:"Southern Asia",languages:{sin:"Sinhala",tam:"Tamil"},translations:{ara:{official:"جمهورية سريلانكا الديمقراطية الشعبية",common:"سريلانكا"},bre:{official:"Republik Demokratel ha Sokialour Sri Lanka",common:"Sri Lanka"},ces:{official:"Srílanská demokratická socialistická republika",common:"Srí Lanka"},cym:{official:"Democratic Socialist Republic of Sri Lanka",common:"Sri Lanka"},deu:{official:"Demokratische Sozialistische Republik Sri Lanka",common:"Sri Lanka"},est:{official:"Sri Lanka Demokraatlik Sotsialistlik Vabariik",common:"Sri Lanka"},fin:{official:"Sri Lankan demokraattinen sosialistinen tasavalta",common:"Sri Lanka"},fra:{official:"République démocratique socialiste du Sri Lanka",common:"Sri Lanka"},hrv:{official:"Demokratska Socijalističke Republike Šri Lanke",common:"Šri Lanka"},hun:{official:"Srí Lanka-i Demokratikus Szocialista Köztársaság",common:"Srí Lanka"},ita:{official:"Repubblica democratica socialista dello Sri Lanka",common:"Sri Lanka"},jpn:{official:"スリランカ民主社会主義共和国",common:"スリランカ"},kor:{official:"스리랑카 민주 사회주의 공화국",common:"스리랑카"},nld:{official:"Democratische Socialistische Republiek Sri Lanka",common:"Sri Lanka"},per:{official:"جمهوری دموکراتیک سوسیالیستی سری‌لانکا",common:"سری‌لانکا"},pol:{official:"Demokratyczno-Socjalistyczna Republika Sri Lanki",common:"Sri Lanka"},por:{official:"República Democrática Socialista do Sri Lanka",common:"Sri Lanka"},rus:{official:"Демократическая Социалистическая Республика Шри-Ланка",common:"Шри-Ланка"},slk:{official:"Srílanská demokratická socialistická republika",common:"Srí Lanka"},spa:{official:"República Democrática Socialista de Sri Lanka",common:"Sri Lanka"},srp:{official:"Демократска Социјалистичка Република Сри Ланка",common:"Сри Ланка"},swe:{official:"Demokratiska socialistiska republiken Sri Lanka",common:"Sri Lanka"},tur:{official:"Sri Lanka Demokratik Sosyalist Cumhuriyeti",common:"Sri Lanka"},urd:{official:"جمہوری و اشتراکی جمہوریہ سری لنکا",common:"سری لنکا"},zho:{official:"斯里兰卡民主社会主义共和国",common:"斯里兰卡"}},latlng:[7,81],landlocked:!1,borders:["IND"],area:65610,demonyms:{eng:{f:"Sri Lankan",m:"Sri Lankan"},fra:{f:"Sri-lankaise",m:"Sri-lankais"}},flag:"🇱🇰",maps:{googleMaps:"https://goo.gl/maps/VkPHoeFSfgzRQCDv8",openStreetMaps:"https://www.openstreetmap.org/relation/536807"},population:21919e3,gini:{2016:39.3},fifa:"SRI",car:{signs:["CL"],side:"left"},timezones:["UTC+05:30"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/lk.png",svg:"https://flagcdn.com/lk.svg",alt:"The flag of Sri Lanka features two large adjacent but separate rectangular areas, centered on a golden-yellow field. The smaller hoist-side rectangle is divided into two equal vertical bands of teal and orange, and the larger fly-side rectangle is maroon with a centered golden-yellow lion holding a Kastane sword in its right fore-paw and four golden-yellow Bo leaves, one in each corner."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/lk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/lk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[6.89,79.9]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Singapore",official:"Republic of Singapore",nativeName:{zho:{official:"新加坡共和国",common:"新加坡"},eng:{official:"Republic of Singapore",common:"Singapore"},msa:{official:"Republik Singapura",common:"Singapura"},tam:{official:"சிங்கப்பூர் குடியரசு",common:"சிங்கப்பூர்"}}},tld:[".sg",".新加坡",".சிங்கப்பூர்"],cca2:"SG",ccn3:"702",cca3:"SGP",cioc:"SGP",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SGD:{name:"Singapore dollar",symbol:"$"}},idd:{root:"+6",suffixes:["5"]},capital:["Singapore"],altSpellings:["SG","Singapura","Republik Singapura","新加坡共和国"],region:"Asia",subregion:"South-Eastern Asia",languages:{zho:"Chinese",eng:"English",msa:"Malay",tam:"Tamil"},translations:{ara:{official:"جمهورية سنغافورة",common:"سنغافورة"},bre:{official:"Republik Singapour",common:"Singapour"},ces:{official:"Singapurská republika",common:"Singapur"},cym:{official:"Republic of Singapore",common:"Singapore"},deu:{official:"Republik Singapur",common:"Singapur"},est:{official:"Singapuri Vabariik",common:"Singapur"},fin:{official:"Singaporen tasavalta",common:"Singapore"},fra:{official:"République de Singapour",common:"Singapour"},hrv:{official:"Republika Singapur",common:"Singapur"},hun:{official:"Szingapúri Köztársaság",common:"Szingapúr"},ita:{official:"Repubblica di Singapore",common:"Singapore"},jpn:{official:"シンガポール共和国",common:"シンガポール"},kor:{official:"싱가포르 공화국",common:"싱가포르"},nld:{official:"Republiek Singapore",common:"Singapore"},per:{official:"جمهوری سنگاپور",common:"سنگاپور"},pol:{official:"Republika Singapuru",common:"Singapur"},por:{official:"República de Singapura",common:"Singapura"},rus:{official:"Республика Сингапур",common:"Сингапур"},slk:{official:"Singapurská republika",common:"Singapur"},spa:{official:"República de Singapur",common:"Singapur"},srp:{official:"Република Сингапур",common:"Сингапур"},swe:{official:"Republiken Singapore",common:"Singapore"},tur:{official:"Singapur Cumhuriyeti",common:"Singapur"},urd:{official:"جمہوریہ سنگاپور",common:"سنگاپور"}},latlng:[1.36666666,103.8],landlocked:!1,area:710,demonyms:{eng:{f:"Singaporean",m:"Singaporean"},fra:{f:"Singapourienne",m:"Singapourien"}},flag:"🇸🇬",maps:{googleMaps:"https://goo.gl/maps/QbQt9Y9b5KFzsahV6",openStreetMaps:"https://www.openstreetmap.org/relation/536780"},population:5685807,fifa:"SIN",car:{signs:["SGP"],side:"left"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/sg.png",svg:"https://flagcdn.com/sg.svg",alt:"The flag of Singapore is composed of two equal horizontal bands of red and white. On the hoist side of the red band is a fly-side facing white crescent which partially encloses five small five-pointed white stars arranged in the shape of a pentagon."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[1.28,103.85]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Chile",official:"Republic of Chile",nativeName:{spa:{official:"República de Chile",common:"Chile"}}},tld:[".cl"],cca2:"CL",ccn3:"152",cca3:"CHL",cioc:"CHI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CLP:{name:"Chilean peso",symbol:"$"}},idd:{root:"+5",suffixes:["6"]},capital:["Santiago"],altSpellings:["CL","Republic of Chile","República de Chile"],region:"Americas",subregion:"South America",languages:{spa:"Spanish"},translations:{ara:{official:"جمهورية تشيلي",common:"تشيلي"},bre:{official:"Republik Chile",common:"Chile"},ces:{official:"Chilská republika",common:"Chile"},cym:{official:"Gweriniaeth Chile",common:"Chile"},deu:{official:"Republik Chile",common:"Chile"},est:{official:"Tšiili Vabariik",common:"Tšiili"},fin:{official:"Chilen tasavalta",common:"Chile"},fra:{official:"République du Chili",common:"Chili"},hrv:{official:"Republika Čile",common:"Čile"},hun:{official:"Chilei Köztársaság",common:"Chile"},ita:{official:"Repubblica del Cile",common:"Cile"},jpn:{official:"チリ共和国",common:"チリ"},kor:{official:"칠레 공화국",common:"칠레"},nld:{official:"Republiek Chili",common:"Chili"},per:{official:"جمهوری شیلی",common:"شیلی"},pol:{official:"Republika Chile",common:"Chile"},por:{official:"República do Chile",common:"Chile"},rus:{official:"Республика Чили",common:"Чили"},slk:{official:"Čílska republika",common:"Čile"},spa:{official:"República de Chile",common:"Chile"},srp:{official:"Република Чиле",common:"Чиле"},swe:{official:"Republiken Chile",common:"Chile"},tur:{official:"Şili Cumhuriyeti",common:"Şili"},urd:{official:"جمہوریہ چلی",common:"چلی"},zho:{official:"智利共和国",common:"智利"}},latlng:[-30,-71],landlocked:!1,borders:["ARG","BOL","PER"],area:756102,demonyms:{eng:{f:"Chilean",m:"Chilean"},fra:{f:"Chilienne",m:"Chilien"}},flag:"🇨🇱",maps:{googleMaps:"https://goo.gl/maps/XboxyNHh2fAjCPNn9",openStreetMaps:"https://www.openstreetmap.org/relation/167454"},population:19116209,gini:{2017:44.4},fifa:"CHI",car:{signs:["RCH"],side:"right"},timezones:["UTC-06:00","UTC-04:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/cl.png",svg:"https://flagcdn.com/cl.svg",alt:"The flag of Chile is composed of two equal horizontal bands of white and red, with a blue square of the same height as the white band superimposed in the canton. A white five-pointed star is centered in the blue square."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cl.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cl.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-33.45,-70.67]},postalCode:{format:"#######",regex:"^(\\d{7})$"}},{name:{common:"Turks and Caicos Islands",official:"Turks and Caicos Islands",nativeName:{eng:{official:"Turks and Caicos Islands",common:"Turks and Caicos Islands"}}},tld:[".tc"],cca2:"TC",ccn3:"796",cca3:"TCA",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["649"]},capital:["Cockburn Town"],altSpellings:["TC"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"جزر توركس وكايكوس",common:"جزر توركس وكايكوس"},bre:{official:"Inizi Turks ha Caicos",common:"Inizi Turks ha Caicos"},ces:{official:"Turks a Caicos",common:"Turks a Caicos"},cym:{official:"Turks and Caicos Islands",common:"Turks and Caicos Islands"},deu:{official:"Turks und Caicos Inseln",common:"Turks-und Caicosinseln"},est:{official:"Turksi ja Caicose saared",common:"Turks ja Caicos"},fin:{official:"Turks-ja Caicossaaret",common:"Turks-ja Caicossaaret"},fra:{official:"Îles Turques et Caïques",common:"Îles Turques-et-Caïques"},hrv:{official:"Otoci Turks i Caicos",common:"Otoci Turks i Caicos"},hun:{official:"Turks- és Caicos-szigetek",common:"Turks- és Caicos-szigetek"},ita:{official:"Turks e Caicos",common:"Isole Turks e Caicos"},jpn:{official:"タークス·カイコス諸島",common:"タークス・カイコス諸島"},kor:{official:"터크스 케이커스 제도",common:"터크스 케이커스 제도"},nld:{official:"Turks-en Caicoseilanden",common:"Turks-en Caicoseilanden"},per:{official:"جزایر تورکس و کایکوس",common:"جزایر تورکس و کایکوس"},pol:{official:"Turks i Caicos",common:"Turks i Caicos"},por:{official:"Ilhas Turks e Caicos",common:"Ilhas Turks e Caicos"},rus:{official:"Теркс и Кайкос острова",common:"Теркс и Кайкос"},slk:{official:"Ostrovy Turks a Caicos",common:"Turks a Caicos"},spa:{official:"Islas Turcas y Caicos",common:"Islas Turks y Caicos"},srp:{official:"Острва Теркс и Кејкос",common:"Теркс и Кејкос"},swe:{official:"Turks- och Caicosöarna",common:"Turks- och Caicosöarna"},tur:{official:"Turks ve Caicos Adaları",common:"Turks ve Caicos Adaları"},urd:{official:"جزائر کیکس و ترکیہ",common:"جزائر کیکس و ترکیہ"},zho:{official:"特克斯和凯科斯群岛",common:"特克斯和凯科斯群岛"}},latlng:[21.75,-71.58333333],landlocked:!1,area:948,demonyms:{eng:{f:"Turks and Caicos Islander",m:"Turks and Caicos Islander"}},flag:"🇹🇨",maps:{googleMaps:"https://goo.gl/maps/R8VUDQfwZiFtvmyn8",openStreetMaps:"https://www.openstreetmap.org/relation/547479"},population:38718,fifa:"TCA",car:{signs:["GB"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/tc.png",svg:"https://flagcdn.com/tc.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[21.46,-71.14]},postalCode:{format:"TKCA 1ZZ",regex:"^(TKCA 1ZZ)$"}},{name:{common:"Gibraltar",official:"Gibraltar",nativeName:{eng:{official:"Gibraltar",common:"Gibraltar"}}},tld:[".gi"],cca2:"GI",ccn3:"292",cca3:"GIB",independent:!1,status:"officially-assigned",unMember:!1,currencies:{GIP:{name:"Gibraltar pound",symbol:"£"}},idd:{root:"+3",suffixes:["50"]},capital:["Gibraltar"],altSpellings:["GI"],region:"Europe",subregion:"Southern Europe",languages:{eng:"English"},translations:{ara:{official:"جبل طارق",common:"جبل طارق"},bre:{official:"Jibraltar",common:"Jibraltar"},ces:{official:"Gibraltar",common:"Gibraltar"},cym:{official:"Gibraltar",common:"Gibraltar"},deu:{official:"Gibraltar",common:"Gibraltar"},est:{official:"Gibraltar",common:"Gibraltar"},fin:{official:"Gibraltar",common:"Gibraltar"},fra:{official:"Gibraltar",common:"Gibraltar"},hrv:{official:"Gibraltar",common:"Gibraltar"},hun:{official:"Gibraltár",common:"Gibraltár"},ita:{official:"Gibilterra",common:"Gibilterra"},jpn:{official:"ジブラルタル",common:"ジブラルタル"},kor:{official:"지브롤터",common:"지브롤터"},nld:{official:"Gibraltar",common:"Gibraltar"},per:{official:"جبل طارق",common:"جبل طارق"},pol:{official:"Gibraltar",common:"Gibraltar"},por:{official:"Gibraltar",common:"Gibraltar"},rus:{official:"Гибралтар",common:"Гибралтар"},slk:{official:"Gibraltár",common:"Gibraltár"},spa:{official:"Gibraltar",common:"Gibraltar"},srp:{official:"Гибралтар",common:"Гибралтар"},swe:{official:"Gibraltar",common:"Gibraltar"},tur:{official:"Cebelitarık",common:"Cebelitarık"},urd:{official:"جبل الطارق",common:"جبل الطارق"},zho:{official:"直布罗陀",common:"直布罗陀"}},latlng:[36.13333333,-5.35],landlocked:!1,borders:["ESP"],area:6,demonyms:{eng:{f:"Gibraltar",m:"Gibraltar"},fra:{f:"Gibraltarienne",m:"Gibraltarien"}},flag:"🇬🇮",maps:{googleMaps:"https://goo.gl/maps/CEoHAs1t6byCBhHFA",openStreetMaps:"https://www.openstreetmap.org/relation/1278736"},population:33691,fifa:"GIB",car:{signs:["GBZ"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/gi.png",svg:"https://flagcdn.com/gi.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gi.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gi.svg"},startOfWeek:"monday",capitalInfo:{latlng:[36.13,-5.35]}},{name:{common:"Turkey",official:"Republic of Turkey",nativeName:{tur:{official:"Türkiye Cumhuriyeti",common:"Türkiye"}}},tld:[".tr"],cca2:"TR",ccn3:"792",cca3:"TUR",cioc:"TUR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{TRY:{name:"Turkish lira",symbol:"₺"}},idd:{root:"+9",suffixes:["0"]},capital:["Ankara"],altSpellings:["TR","Turkiye","Republic of Turkey","Türkiye Cumhuriyeti"],region:"Asia",subregion:"Western Asia",languages:{tur:"Turkish"},translations:{ara:{official:"الجمهورية التركية",common:"تركيا"},bre:{official:"Republik Turkia",common:"Turkia"},ces:{official:"Turecká republika",common:"Turecko"},cym:{official:"Republic of Turkey",common:"Turkey"},deu:{official:"Republik Türkei",common:"Türkei"},est:{official:"Türgi Vabariik",common:"Türgi"},fin:{official:"Turkin tasavalta",common:"Turkki"},fra:{official:"République de Turquie",common:"Turquie"},hrv:{official:"Republika Turska",common:"Turska"},hun:{official:"Török Köztársaság",common:"Törökország"},ita:{official:"Repubblica di Turchia",common:"Turchia"},jpn:{official:"トルコ共和国",common:"トルコ"},kor:{official:"터키 공화국",common:"터키"},nld:{official:"Republiek Turkije",common:"Turkije"},per:{official:"جمهوری ترکیه",common:"ترکیه"},pol:{official:"Republika Turcji",common:"Turcja"},por:{official:"República da Turquia",common:"Turquia"},rus:{official:"Республика Турции",common:"Турция"},slk:{official:"Turecká republika",common:"Turecko"},spa:{official:"República de Turquía",common:"Turquía"},srp:{official:"Турска Република",common:"Турска"},swe:{official:"Republiken Turkiet",common:"Turkiet"},tur:{official:"Türkiye Cumhuriyeti",common:"Türkiye"},urd:{official:"جمہوریہ ترکی",common:"ترکی"},zho:{official:"土耳其共和国",common:"土耳其"}},latlng:[39,35],landlocked:!1,borders:["ARM","AZE","BGR","GEO","GRC","IRN","IRQ","SYR"],area:783562,demonyms:{eng:{f:"Turkish",m:"Turkish"},fra:{f:"Turque",m:"Turc"}},flag:"🇹🇷",maps:{googleMaps:"https://goo.gl/maps/dXFFraiUDfcB6Quk6",openStreetMaps:"https://www.openstreetmap.org/relation/174737"},population:84339067,gini:{2019:41.9},fifa:"TUR",car:{signs:["TR"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/tr.png",svg:"https://flagcdn.com/tr.svg",alt:"The flag of Turkey has a red field bearing a large fly-side facing white crescent and a smaller five-pointed white star placed just outside the crescent opening. The white crescent and star are offset slightly towards the hoist side of center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[39.93,32.87]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Iran",official:"Islamic Republic of Iran",nativeName:{fas:{official:"جمهوری اسلامی ایران",common:"ایران"}}},tld:[".ir","ایران."],cca2:"IR",ccn3:"364",cca3:"IRN",cioc:"IRI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{IRR:{name:"Iranian rial",symbol:"﷼"}},idd:{root:"+9",suffixes:["8"]},capital:["Tehran"],altSpellings:["IR","Islamic Republic of Iran","Iran, Islamic Republic of","Jomhuri-ye Eslāmi-ye Irān"],region:"Asia",subregion:"Southern Asia",languages:{fas:"Persian (Farsi)"},translations:{ara:{official:"جمهورية إيران الإسلامية",common:"إيران"},bre:{official:"Republik Islamek Iran",common:"Iran"},ces:{official:"Islámská republika Írán",common:"Írán"},cym:{official:"Islamic Republic of Iran",common:"Iran"},deu:{official:"Islamische Republik Iran",common:"Iran"},est:{official:"Iraani Islamivabariik",common:"Iraan"},fin:{official:"Iranin islamilainen tasavalta",common:"Iran"},fra:{official:"République islamique d'Iran",common:"Iran"},hrv:{official:"Islamska Republika Iran",common:"Iran"},hun:{official:"Iráni Iszlám Köztársaság",common:"Irán"},ita:{official:"Repubblica islamica dell'Iran",common:"Iran"},jpn:{official:"イラン·イスラム共和国",common:"イラン・イスラム共和国"},kor:{official:"이란 이슬람 공화국",common:"이란"},nld:{official:"Islamitische Republiek Iran",common:"Iran"},pol:{official:"Islamska Republika Iranu",common:"Iran"},por:{official:"República Islâmica do Irã",common:"Irão"},rus:{official:"Исламская Республика Иран",common:"Иран"},slk:{official:"Iránska islamská republika",common:"Irán"},spa:{official:"República Islámica de Irán",common:"Iran"},srp:{official:"Исламска Република Иран",common:"Иран"},swe:{official:"Islamiska republiken Iran",common:"Iran"},tur:{official:"İran İslam Cumhuriyeti",common:"İran"},urd:{official:"جمہوریہ ایران",common:"ایران"},zho:{official:"伊朗伊斯兰共和国",common:"伊朗"}},latlng:[32,53],landlocked:!1,borders:["AFG","ARM","AZE","IRQ","PAK","TUR","TKM"],area:1648195,demonyms:{eng:{f:"Iranian",m:"Iranian"},fra:{f:"Iranienne",m:"Iranien"}},flag:"🇮🇷",maps:{googleMaps:"https://goo.gl/maps/dMgEGuacBPGYQnjY7",openStreetMaps:"https://www.openstreetmap.org/relation/304938"},population:83992953,gini:{2018:42},fifa:"IRN",car:{signs:["IR"],side:"right"},timezones:["UTC+03:30"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/ir.png",svg:"https://flagcdn.com/ir.svg",alt:"The flag of Iran is composed of three equal horizontal bands of green, white and red. A red emblem of Iran is centered in the white band and Arabic inscriptions in white span the bottom edge of the green band and the top edge of the red band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ir.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ir.svg"},startOfWeek:"saturday",capitalInfo:{latlng:[35.7,51.42]},postalCode:{format:"##########",regex:"^(\\d{10})$"}},{name:{common:"Sudan",official:"Republic of the Sudan",nativeName:{ara:{official:"جمهورية السودان",common:"السودان"},eng:{official:"Republic of the Sudan",common:"Sudan"}}},tld:[".sd"],cca2:"SD",ccn3:"729",cca3:"SDN",cioc:"SUD",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SDG:{name:"Sudanese pound"}},idd:{root:"+2",suffixes:["49"]},capital:["Khartoum"],altSpellings:["SD","Republic of the Sudan","Jumhūrīyat as-Sūdān"],region:"Africa",subregion:"Northern Africa",languages:{ara:"Arabic",eng:"English"},translations:{ara:{official:"جمهورية السودان",common:"السودان"},bre:{official:"Republik Soudan",common:"Soudan"},ces:{official:"Súdánská republika",common:"Súdán"},cym:{official:"Republic of the Sudan",common:"Sudan"},deu:{official:"Republik Sudan",common:"Sudan"},est:{official:"Sudaani Vabariik",common:"Sudaan"},fin:{official:"Sudanin tasavalta",common:"Sudan"},fra:{official:"République du Soudan",common:"Soudan"},hrv:{official:"Republika Sudan",common:"Sudan"},hun:{official:"Szudáni Köztársaság",common:"Szudán"},ita:{official:"Repubblica del Sudan",common:"Sudan"},jpn:{official:"スーダン共和国",common:"スーダン"},kor:{official:"수단 공화국",common:"수단"},nld:{official:"Republiek Soedan",common:"Soedan"},per:{official:"جمهوری سودان",common:"سودان"},pol:{official:"Republika Sudanu",common:"Sudan"},por:{official:"República do Sudão",common:"Sudão"},rus:{official:"Республика Судан",common:"Судан"},slk:{official:"Sudánska republika",common:"Sudán"},spa:{official:"República de Sudán",common:"Sudán"},srp:{official:"Република Судан",common:"Судан"},swe:{official:"Republiken Sudan",common:"Sudan"},tur:{official:"Sudan Cumhuriyeti",common:"Sudan"},urd:{official:"جمہوریہ سودان",common:"سودان"},zho:{official:"苏丹共和国",common:"苏丹"}},latlng:[15,30],landlocked:!1,borders:["CAF","TCD","EGY","ERI","ETH","LBY","SSD"],area:1886068,demonyms:{eng:{f:"Sudanese",m:"Sudanese"},fra:{f:"Soudanaise",m:"Soudanais"}},flag:"🇸🇩",maps:{googleMaps:"https://goo.gl/maps/bNW7YUJCaqR8zcXn7",openStreetMaps:"https://www.openstreetmap.org/relation/192789"},population:43849269,gini:{2014:34.2},fifa:"SDN",car:{signs:["SUD"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/sd.png",svg:"https://flagcdn.com/sd.svg",alt:"The flag of Sudan is composed of three equal horizontal bands of red, white and black, with a green isosceles triangle superimposed on the hoist side. The green triangle spans about two-fifth the width of the field with its base on the hoist end."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sd.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sd.svg"},startOfWeek:"monday",capitalInfo:{latlng:[15.6,32.53]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Eswatini",official:"Kingdom of Eswatini",nativeName:{eng:{official:"Kingdom of Eswatini",common:"Eswatini"},ssw:{official:"Umbuso weSwatini",common:"eSwatini"}}},tld:[".sz"],cca2:"SZ",ccn3:"748",cca3:"SWZ",cioc:"SWZ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SZL:{name:"Swazi lilangeni",symbol:"L"},ZAR:{name:"South African rand",symbol:"R"}},idd:{root:"+2",suffixes:["68"]},capital:["Mbabane"],altSpellings:["SZ","Swaziland","weSwatini","Swatini","Ngwane","Kingdom of Eswatini","Umbuso weSwatini"],region:"Africa",subregion:"Southern Africa",languages:{eng:"English",ssw:"Swazi"},translations:{ara:{official:"مملكة إسواتيني",common:"إسواتيني"},bre:{official:"Rouantelezh Eswatini",common:"Eswatini"},ces:{official:"Svazijské království",common:"Svazijsko"},cym:{official:"Kingdom of Eswatini",common:"Eswatini"},deu:{official:"Königreich Eswatini",common:"Swasiland"},est:{official:"eSwatini Kuningriik",common:"Svaasimaa"},fin:{official:"Swazimaan kuningaskunta",common:"Swazimaa"},fra:{official:"Royaume d’Eswatini",common:"Swaziland"},hrv:{official:"Kraljevina eSwatini",common:"Svazi"},hun:{official:"Szváziföldi Királyság",common:"Szváziföld"},ita:{official:"Regno di eSwatini",common:"Swaziland"},jpn:{official:"スワジランド王国",common:"スワジランド"},kor:{official:"에스와티니 왕국",common:"에스와티니"},nld:{official:"Koninkrijk eSwatini",common:"Swaziland"},per:{official:"پادشاهی سوازیلند",common:"اسواتینی"},pol:{official:"Królestwo Suazi",common:"Suazi"},por:{official:"Reino de eSwatini",common:"Suazilândia"},rus:{official:"Королевство Свазиленд",common:"Свазиленд"},slk:{official:"Svazijské kráľovstvo",common:"Svazijsko"},spa:{official:"Reino de eSwatini",common:"Suazilandia"},srp:{official:"Краљевина Есватини",common:"Есватини"},swe:{official:"Konungariket Eswatini",common:"Swaziland"},tur:{official:"Esvatini Krallığı",common:"Esvatini"},urd:{official:"مملکتِ سوازی لینڈ",common:"سوازی لینڈ"},zho:{official:"斯威士兰王国",common:"斯威士兰"}},latlng:[-26.5,31.5],landlocked:!0,borders:["MOZ","ZAF"],area:17364,demonyms:{eng:{f:"Swazi",m:"Swazi"},fra:{f:"Swazie",m:"Swazie"}},flag:"🇸🇿",maps:{googleMaps:"https://goo.gl/maps/cUY79eqQihFSE8hV6",openStreetMaps:"https://www.openstreetmap.org/relation/88210"},population:1160164,gini:{2016:54.6},fifa:"SWZ",car:{signs:["SD"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/sz.png",svg:"https://flagcdn.com/sz.svg",alt:"The flag of Eswatini is composed of three horizontal bands — a large central yellow-edged red band, and a light blue band above and beneath the red band. The red band is three times the height of the blue bands and bears a centered emblem made up of a large black and white Nguni shield covering two spears and a staff decorated with feather tassels, all placed horizontally."},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-26.32,31.13]},postalCode:{format:"@###",regex:"^([A-Z]\\d{3})$"}},{name:{common:"Iceland",official:"Iceland",nativeName:{isl:{official:"Ísland",common:"Ísland"}}},tld:[".is"],cca2:"IS",ccn3:"352",cca3:"ISL",cioc:"ISL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ISK:{name:"Icelandic króna",symbol:"kr"}},idd:{root:"+3",suffixes:["54"]},capital:["Reykjavik"],altSpellings:["IS","Island","Republic of Iceland","Lýðveldið Ísland"],region:"Europe",subregion:"Northern Europe",languages:{isl:"Icelandic"},translations:{ara:{official:"آيسلندا",common:"آيسلندا"},bre:{official:"Island",common:"Island"},ces:{official:"Island",common:"Island"},cym:{official:"Iceland",common:"Iceland"},deu:{official:"Island",common:"Island"},est:{official:"Islandi Vabariik",common:"Island"},fin:{official:"Islanti",common:"Islanti"},fra:{official:"République d'Islande",common:"Islande"},hrv:{official:"Island",common:"Island"},hun:{official:"Izland",common:"Izland"},ita:{official:"Islanda",common:"Islanda"},jpn:{official:"アイスランド",common:"アイスランド"},kor:{official:"아이슬란드 공화국",common:"아이슬란드"},nld:{official:"IJsland",common:"IJsland"},per:{official:"جمهوری ایسلند",common:"ایسلند"},pol:{official:"Republika Islandii",common:"Islandia"},por:{official:"Islândia",common:"Islândia"},rus:{official:"Исландия",common:"Исландия"},slk:{official:"Islandská republika",common:"Island"},spa:{official:"Islandia",common:"Islandia"},srp:{official:"Исланд",common:"Исланд"},swe:{official:"Island",common:"Island"},tur:{official:"İzlanda",common:"İzlanda"},urd:{official:"آئس لینڈ",common:"آئس لینڈ"},zho:{official:"冰岛",common:"冰岛"}},latlng:[65,-18],landlocked:!1,area:103e3,demonyms:{eng:{f:"Icelander",m:"Icelander"},fra:{f:"Islandaise",m:"Islandais"}},flag:"🇮🇸",maps:{googleMaps:"https://goo.gl/maps/WxFWSQuc3oamNxoE6",openStreetMaps:"https://www.openstreetmap.org/relation/299133"},population:366425,gini:{2017:26.1},fifa:"ISL",car:{signs:["IS"],side:"right"},timezones:["UTC"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/is.png",svg:"https://flagcdn.com/is.svg",alt:"The flag of Iceland has a blue field with a large white-edged red cross that extends to the edges of the field. The vertical part of this cross is offset towards the hoist side."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/is.png",svg:"https://mainfacts.com/media/images/coats_of_arms/is.svg"},startOfWeek:"monday",capitalInfo:{latlng:[64.15,-21.95]},postalCode:{format:"###",regex:"^(\\d{3})$"}},{name:{common:"Russia",official:"Russian Federation",nativeName:{rus:{official:"Российская Федерация",common:"Россия"}}},tld:[".ru",".su",".рф"],cca2:"RU",ccn3:"643",cca3:"RUS",cioc:"RUS",independent:!0,status:"officially-assigned",unMember:!0,currencies:{RUB:{name:"Russian ruble",symbol:"₽"}},idd:{root:"+7",suffixes:["3","4","5","8","9"]},capital:["Moscow"],altSpellings:["RU","Russian Federation","Российская Федерация"],region:"Europe",subregion:"Eastern Europe",languages:{rus:"Russian"},translations:{ara:{official:"روسيا الاتحادية",common:"روسيا"},bre:{official:"Kevread Rusia",common:"Rusia"},ces:{official:"Ruská federace",common:"Rusko"},cym:{official:"Russian Federation",common:"Russia"},deu:{official:"Russische Föderation",common:"Russland"},est:{official:"Venemaa Föderatsioon",common:"Venemaa"},fin:{official:"Venäjän federaatio",common:"Venäjä"},fra:{official:"Fédération de Russie",common:"Russie"},hrv:{official:"Ruska Federacija",common:"Rusija"},hun:{official:"Oroszországi Föderáció",common:"Oroszország"},ita:{official:"Federazione russa",common:"Russia"},jpn:{official:"ロシア連邦",common:"ロシア連邦"},kor:{official:"러시아 연방",common:"러시아"},nld:{official:"Russische Federatie",common:"Rusland"},per:{official:"فدراسیون روسیه",common:"روسیه"},pol:{official:"Federacja Rosyjska",common:"Rosja"},por:{official:"Federação Russa",common:"Rússia"},rus:{official:"Российская Федерация",common:"Россия"},slk:{official:"Ruská federácia",common:"Rusko"},spa:{official:"Federación de Rusia",common:"Rusia"},srp:{official:"Руска Федерација",common:"Русија"},swe:{official:"Ryska federationen",common:"Ryssland"},tur:{official:"Rusya Federasyonu",common:"Rusya"},urd:{official:"روسی وفاق",common:"روس"},zho:{official:"俄罗斯联邦",common:"俄罗斯"}},latlng:[60,100],landlocked:!1,borders:["AZE","BLR","CHN","EST","FIN","GEO","KAZ","PRK","LVA","LTU","MNG","NOR","POL","UKR"],area:17098242,demonyms:{eng:{f:"Russian",m:"Russian"},fra:{f:"Russe",m:"Russe"}},flag:"🇷🇺",maps:{googleMaps:"https://goo.gl/maps/4F4PpDhGJgVvLby57",openStreetMaps:"https://www.openstreetmap.org/relation/60189#map=3/65.15/105.29"},population:144104080,gini:{2018:37.5},fifa:"RUS",car:{signs:["RUS"],side:"right"},timezones:["UTC+03:00","UTC+04:00","UTC+06:00","UTC+07:00","UTC+08:00","UTC+09:00","UTC+10:00","UTC+11:00","UTC+12:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ru.png",svg:"https://flagcdn.com/ru.svg",alt:"The flag of Russia is composed of three equal horizontal bands of white, blue and red."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ru.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ru.svg"},startOfWeek:"monday",capitalInfo:{latlng:[55.75,37.6]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Burundi",official:"Republic of Burundi",nativeName:{fra:{official:"République du Burundi",common:"Burundi"},run:{official:"Republika y'Uburundi ",common:"Uburundi"}}},tld:[".bi"],cca2:"BI",ccn3:"108",cca3:"BDI",cioc:"BDI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BIF:{name:"Burundian franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["57"]},capital:["Gitega"],altSpellings:["BI","Republic of Burundi","Republika y'Uburundi","République du Burundi"],region:"Africa",subregion:"Eastern Africa",languages:{fra:"French",run:"Kirundi"},translations:{ara:{official:"جمهورية بوروندي",common:"بوروندي"},bre:{official:"Republik Burundi",common:"Burundi"},ces:{official:"Burundská republika",common:"Burundi"},cym:{official:"Gweriniaeth Bwrwndi",common:"Bwrwndi"},deu:{official:"Republik Burundi",common:"Burundi"},est:{official:"Burundi Vabariik",common:"Burundi"},fin:{official:"Burundin tasavalta",common:"Burundi"},fra:{official:"République du Burundi",common:"Burundi"},hrv:{official:"Burundi",common:"Burundi"},hun:{official:"Burundi",common:"Burundi"},ita:{official:"Repubblica del Burundi",common:"Burundi"},jpn:{official:"ブルンジ共和国",common:"ブルンジ"},kor:{official:"부룬디",common:"부룬디"},nld:{official:"Republiek Burundi",common:"Burundi"},per:{official:"جمهوری بوروندی",common:"بوروندی"},pol:{official:"Republika Burundi",common:"Burundi"},por:{official:"República do Burundi",common:"Burundi"},rus:{official:"Республика Бурунди",common:"Бурунди"},slk:{official:"Burundská republika",common:"Burundi"},spa:{official:"República de Burundi",common:"Burundi"},srp:{official:"Република Бурунди",common:"Бурунди"},swe:{official:"Republiken Burundi",common:"Burundi"},tur:{official:"Burundi Cumhuriyeti",common:"Burundi"},urd:{official:"جمہوریہ برونڈی",common:"برونڈی"},zho:{official:"布隆迪共和国",common:"布隆迪"}},latlng:[-3.5,30],landlocked:!0,borders:["COD","RWA","TZA"],area:27834,demonyms:{eng:{f:"Burundian",m:"Burundian"},fra:{f:"Burundaise",m:"Burundais"}},flag:"🇧🇮",maps:{googleMaps:"https://goo.gl/maps/RXPWoRrB9tfrJpUG7",openStreetMaps:"https://www.openstreetmap.org/relation/195269"},population:11890781,gini:{2013:38.6},fifa:"BDI",car:{signs:["RU"],side:"right"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/bi.png",svg:"https://flagcdn.com/bi.svg",alt:"The flag of Burundi is divided by a white diagonal cross into four alternating triangular areas of red at the top and bottom, and green on the hoist and fly sides. A white circle, with three green-edged red six-pointed stars arranged to form a triangle, is superimposed at the center of the cross."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bi.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bi.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-3.43,29.93]}},{name:{common:"Brunei",official:"Nation of Brunei, Abode of Peace",nativeName:{msa:{official:"Nation of Brunei, Abode Damai",common:"Negara Brunei Darussalam"}}},tld:[".bn"],cca2:"BN",ccn3:"096",cca3:"BRN",cioc:"BRU",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BND:{name:"Brunei dollar",symbol:"$"},SGD:{name:"Singapore dollar",symbol:"$"}},idd:{root:"+6",suffixes:["73"]},capital:["Bandar Seri Begawan"],altSpellings:["BN","Brunei Darussalam","Nation of Brunei","the Abode of Peace"],region:"Asia",subregion:"South-Eastern Asia",languages:{msa:"Malay"},translations:{ara:{official:"بروناي دار السلام",common:"بروناي"},bre:{official:"Stad Brunei Darussalam",common:"Brunei"},ces:{official:"Sultanát Brunej",common:"Brunej"},cym:{official:"Teyrnas Brwnei",common:"Brunei"},deu:{official:"Sultanat Brunei Darussalam",common:"Brunei"},est:{official:"Brunei Darussalami Riik",common:"Brunei"},fin:{official:"Brunei Darussalamin valtio",common:"Brunei"},fra:{official:"État de Brunei Darussalam",common:"Brunei"},hrv:{official:"Nacija od Bruneja, Kuću Mira",common:"Brunej"},hun:{official:"Brunei Szultanátus",common:"Brunei"},ita:{official:"Nazione di Brunei, Dimora della Pace",common:"Brunei"},jpn:{official:"ブルネイ、平和の精舎の国家",common:"ブルネイ・ダルサラーム"},kor:{official:"브루나이 다루살람국",common:"브루나이"},nld:{official:"Natie van Brunei, de verblijfplaats van de Vrede",common:"Brunei"},per:{official:"برونئی سرای صلح",common:"برونئی"},pol:{official:"Państwo Brunei Darussalam",common:"Brunei"},por:{official:"Nação do Brunei, Morada da Paz",common:"Brunei"},rus:{official:"Нация Бруней, обитель мира",common:"Бруней"},slk:{official:"Brunejský sultanât",common:"Brunej"},spa:{official:"Nación de Brunei, Morada de la Paz",common:"Brunei"},srp:{official:"Султанат Брунеј, боравиште мира",common:"Брунеј"},swe:{official:"Brunei Darussalam",common:"Brunei"},tur:{official:"Brunei Barış Ülkesi Devleti",common:"Brunei"},urd:{official:"ریاستِ برونائی دارالسلام",common:"برونائی"},zho:{official:"文莱和平之国",common:"文莱"}},latlng:[4.5,114.66666666],landlocked:!1,borders:["MYS"],area:5765,demonyms:{eng:{f:"Bruneian",m:"Bruneian"},fra:{f:"Brunéienne",m:"Brunéien"}},flag:"🇧🇳",maps:{googleMaps:"https://goo.gl/maps/4jb4CqBXhr8vNh579",openStreetMaps:"https://www.openstreetmap.org/relation/2103120"},population:437483,fifa:"BRU",car:{signs:["BRU"],side:"left"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/bn.png",svg:"https://flagcdn.com/bn.svg",alt:"The flag of Brunei has a yellow field with two adjoining diagonal bands of white and black that extend from the upper hoist side of the field to the lower fly side. The red emblem of Brunei is centered on the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[4.88,114.93]},postalCode:{format:"@@####",regex:"^([A-Z]{2}\\d{4})$"}},{name:{common:"Georgia",official:"Georgia",nativeName:{kat:{official:"საქართველო",common:"საქართველო"}}},tld:[".ge"],cca2:"GE",ccn3:"268",cca3:"GEO",cioc:"GEO",independent:!0,status:"officially-assigned",unMember:!0,currencies:{GEL:{name:"lari",symbol:"₾"}},idd:{root:"+9",suffixes:["95"]},capital:["Tbilisi"],altSpellings:["GE","Sakartvelo"],region:"Asia",subregion:"Western Asia",languages:{kat:"Georgian"},translations:{ara:{official:"جورجيا",common:"جورجيا"},bre:{official:"Republik Jorjia",common:"Jorjia"},ces:{official:"Gruzie",common:"Gruzie"},cym:{official:"Georgia",common:"Georgia"},deu:{official:"Georgien",common:"Georgien"},est:{official:"Gruusia",common:"Gruusia"},fin:{official:"Georgia",common:"Georgia"},fra:{official:"République de Géorgie",common:"Géorgie"},hrv:{official:"Gruzija",common:"Gruzija"},hun:{official:"Grúzia",common:"Grúzia"},ita:{official:"Georgia",common:"Georgia"},jpn:{official:"グルジア",common:"グルジア"},kor:{official:"조지아",common:"조지아"},nld:{official:"Georgia",common:"Georgië"},per:{official:"گرجستان",common:"گرجستان"},pol:{official:"Gruzja",common:"Gruzja"},por:{official:"Georgia",common:"Geórgia"},rus:{official:"Грузия",common:"Грузия"},slk:{official:"Gruzínsko",common:"Gruzínsko"},spa:{official:"Georgia",common:"Georgia"},srp:{official:"Грузија",common:"Грузија"},swe:{official:"Georgien",common:"Georgien"},tur:{official:"Gürcistan",common:"Gürcistan"},urd:{official:"جارجیا",common:"جارجیا"},zho:{official:"格鲁吉亚",common:"格鲁吉亚"}},latlng:[42,43.5],landlocked:!1,borders:["ARM","AZE","RUS","TUR"],area:69700,demonyms:{eng:{f:"Georgian",m:"Georgian"},fra:{f:"Géorgienne",m:"Géorgien"}},flag:"🇬🇪",maps:{googleMaps:"https://goo.gl/maps/bvCaGBePR1ZEDK5cA",openStreetMaps:"https://www.openstreetmap.org/relation/28699"},population:3714e3,gini:{2019:35.9},fifa:"GEO",car:{signs:["GE"],side:"right"},timezones:["UTC+04:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/ge.png",svg:"https://flagcdn.com/ge.svg",alt:"The flag of Georgia has a white field with a large centered red cross that extends to the edges and divides the field into four quarters. A small red Bolnur-Katskhuri cross is centered in each quarter."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ge.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ge.svg"},startOfWeek:"monday",capitalInfo:{latlng:[41.68,44.83]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Luxembourg",official:"Grand Duchy of Luxembourg",nativeName:{deu:{official:"Großherzogtum Luxemburg",common:"Luxemburg"},fra:{official:"Grand-Duché de Luxembourg",common:"Luxembourg"},ltz:{official:"Groussherzogtum Lëtzebuerg",common:"Lëtzebuerg"}}},tld:[".lu"],cca2:"LU",ccn3:"442",cca3:"LUX",cioc:"LUX",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["52"]},capital:["Luxembourg"],altSpellings:["LU","Grand Duchy of Luxembourg","Grand-Duché de Luxembourg","Großherzogtum Luxemburg","Groussherzogtum Lëtzebuerg"],region:"Europe",subregion:"Western Europe",languages:{deu:"German",fra:"French",ltz:"Luxembourgish"},translations:{ara:{official:"دوقية لوكسمبورغ",common:"لوكسمبورغ"},bre:{official:"Dugelezh Veur Luksembourg",common:"Luksembourg"},ces:{official:"Lucemburské velkovévodství",common:"Lucembursko"},cym:{official:"Grand Duchy of Luxembourg",common:"Luxembourg"},deu:{official:"Großherzogtum Luxemburg,",common:"Luxemburg"},est:{official:"Luksemburgi Suurhertsogiriik",common:"Luksemburg"},fin:{official:"Luxemburgin suurherttuakunta",common:"Luxemburg"},fra:{official:"Grand-Duché de Luxembourg",common:"Luxembourg"},hrv:{official:"Veliko Vojvodstvo Luksemburg",common:"Luksemburg"},hun:{official:"Luxemburgi Nagyhercegség",common:"Luxemburg"},ita:{official:"Granducato di Lussemburgo",common:"Lussemburgo"},jpn:{official:"ルクセンブルク大公国",common:"ルクセンブルク"},kor:{official:"룩셈부르크 대공국",common:"룩셈부르크"},nld:{official:"Groothertogdom Luxemburg",common:"Luxemburg"},per:{official:"دوک‌نشین لوکزامبورگ",common:"لوکزامبورگ"},pol:{official:"Wielkie Księstwo Luksemburga",common:"Luksemburg"},por:{official:"Grão-Ducado do Luxemburgo",common:"Luxemburgo"},rus:{official:"Великое Герцогство Люксембург",common:"Люксембург"},slk:{official:"Luxemburské veľkovojvodstvo",common:"Luxembursko"},spa:{official:"Gran Ducado de Luxemburgo",common:"Luxemburgo"},srp:{official:"Велико Војводство Луксембург",common:"Луксембург"},swe:{official:"Storhertigdömet Luxemburg",common:"Luxemburg"},tur:{official:"Lüksemburg Büyük Dükalığı",common:"Lüksemburg"},urd:{official:"دوقیہ کبیرلکسمبرگ",common:"لکسمبرگ"},zho:{official:"卢森堡大公国",common:"卢森堡"}},latlng:[49.75,6.16666666],landlocked:!0,borders:["BEL","FRA","DEU"],area:2586,demonyms:{eng:{f:"Luxembourger",m:"Luxembourger"},fra:{f:"Luxembourgeoise",m:"Luxembourgeois"}},flag:"🇱🇺",maps:{googleMaps:"https://goo.gl/maps/L6b2AgndgHprt2Ko9",openStreetMaps:"https://www.openstreetmap.org/relation/2171347#map=10/49.8167/6.1335"},population:632275,gini:{2018:35.4},fifa:"LUX",car:{signs:["L"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/lu.png",svg:"https://flagcdn.com/lu.svg",alt:"The flag of Luxembourg is composed of three equal horizontal bands of red, white and light blue."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/lu.png",svg:"https://mainfacts.com/media/images/coats_of_arms/lu.svg"},startOfWeek:"monday",capitalInfo:{latlng:[49.6,6.12]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Ethiopia",official:"Federal Democratic Republic of Ethiopia",nativeName:{amh:{official:"የኢትዮጵያ ፌዴራላዊ ዲሞክራሲያዊ ሪፐብሊክ",common:"ኢትዮጵያ"}}},tld:[".et"],cca2:"ET",ccn3:"231",cca3:"ETH",cioc:"ETH",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ETB:{name:"Ethiopian birr",symbol:"Br"}},idd:{root:"+2",suffixes:["51"]},capital:["Addis Ababa"],altSpellings:["ET","ʾĪtyōṗṗyā","Federal Democratic Republic of Ethiopia","የኢትዮጵያ ፌዴራላዊ ዲሞክራሲያዊ ሪፐብሊክ"],region:"Africa",subregion:"Eastern Africa",languages:{amh:"Amharic"},translations:{ara:{official:"جمهورية إثيوبيا الفدرالية الديموقراطية",common:"إثيوبيا"},bre:{official:"Republik Demokratel Kevredadel Etiopia",common:"Etiopia"},ces:{official:"Etiopská federativní demokratická republika",common:"Etiopie"},cym:{official:"Gweriniaeth Ddemocrataidd Ffederal Ethiopia",common:"Ethiopia"},deu:{official:"Demokratische Bundesrepublik Äthiopien",common:"Äthiopien"},est:{official:"Etioopia Demokraatlik Liitvabariik",common:"Etioopia"},fin:{official:"Etiopian demokraattinen liittotasavalta",common:"Etiopia"},fra:{official:"République fédérale démocratique d'Éthiopie",common:"Éthiopie"},hrv:{official:"Savezna Demokratska Republika Etiopija",common:"Etiopija"},hun:{official:"Etióp Szövetségi Demokratikus Köztársaság",common:"Etiópia"},ita:{official:"Repubblica federale democratica di Etiopia",common:"Etiopia"},jpn:{official:"エチオピア連邦民主共和国",common:"エチオピア"},kor:{official:"에티오피아 연방 민주 공화국",common:"에티오피아"},nld:{official:"Federale Democratische Republiek Ethiopië",common:"Ethiopië"},per:{official:"جمهوری فدرال دموکراتیک اتیوپی",common:"اِتیوپی"},pol:{official:"Federalna Demokratyczna Republika Etiopii",common:"Etiopia"},por:{official:"República Federal Democrática da Etiópia",common:"Etiópia"},rus:{official:"Федеративная Демократическая Республика Эфиопия",common:"Эфиопия"},slk:{official:"Etiópska federatívna demokratická republika",common:"Etiópia"},spa:{official:"República Democrática Federal de Etiopía",common:"Etiopía"},srp:{official:"Савезна Демократска Република Етиопија",common:"Етиопија"},swe:{official:"Demokratiska förbundsrepubliken Etiopien",common:"Etiopien"},tur:{official:"Etiyopya Federal Demokratik Cumhuriyeti",common:"Etiyopya"},urd:{official:"وفاقی جمہوری جمہوریہ ایتھوپیا",common:"ایتھوپیا"},zho:{official:"埃塞俄比亚联邦民主共和国",common:"埃塞俄比亚"}},latlng:[8,38],landlocked:!0,borders:["DJI","ERI","KEN","SOM","SSD","SDN"],area:1104300,demonyms:{eng:{f:"Ethiopian",m:"Ethiopian"},fra:{f:"Éthiopienne",m:"Éthiopien"}},flag:"🇪🇹",maps:{googleMaps:"https://goo.gl/maps/2Q4hQWCbhuZLj3fG6",openStreetMaps:"https://www.openstreetmap.org/relation/192800"},population:114963583,gini:{2015:35},fifa:"ETH",car:{signs:["ETH"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/et.png",svg:"https://flagcdn.com/et.svg",alt:"The flag of Ethiopia is composed of three equal horizontal bands of green, yellow and red, with the national emblem superimposed at the center of the field. The national emblem comprises a light blue circle bearing a golden-yellow pentagram with single yellow rays emanating from the angles between the points of the pentagram."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/et.png",svg:"https://mainfacts.com/media/images/coats_of_arms/et.svg"},startOfWeek:"monday",capitalInfo:{latlng:[9.03,38.7]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Laos",official:"Lao People's Democratic Republic",nativeName:{lao:{official:"ສາທາລະນະ ຊາທິປະໄຕ ຄົນລາວ ຂອງ",common:"ສປປລາວ"}}},tld:[".la"],cca2:"LA",ccn3:"418",cca3:"LAO",cioc:"LAO",independent:!0,status:"officially-assigned",unMember:!0,currencies:{LAK:{name:"Lao kip",symbol:"₭"}},idd:{root:"+8",suffixes:["56"]},capital:["Vientiane"],altSpellings:["LA","Lao","Lao People's Democratic Republic","Sathalanalat Paxathipatai Paxaxon Lao"],region:"Asia",subregion:"South-Eastern Asia",languages:{lao:"Lao"},translations:{ara:{official:"جمهورية لاوس الديمقراطية الشعبية",common:"لاوس"},bre:{official:"Republik Demokratel ar Bobl Lao",common:"Laos"},ces:{official:"Laoská lidově demokratická republika",common:"Laos"},cym:{official:"Lao People's Democratic Republic",common:"Laos"},deu:{official:"Demokratische Volksrepublik Laos",common:"Laos"},est:{official:"Laose Demokraatlik Rahvavabariik",common:"Laos"},fin:{official:"Laosin demokraattinen kansantasavalta",common:"Laos"},fra:{official:"République démocratique populaire lao",common:"Laos"},hrv:{official:"Narodna Demokratska Republika",common:"Laos"},hun:{official:"Laoszi Népi Demokratikus Köztársaság",common:"Laosz"},ita:{official:"Repubblica democratica popolare del Laos",common:"Laos"},jpn:{official:"ラオス人民民主共和国",common:"ラオス人民民主共和国"},kor:{official:"라오 인민 민주 공화국",common:"라오스"},nld:{official:"Lao Democratische Volksrepubliek",common:"Laos"},per:{official:"جمهوری دموکراتیک خلق لائوس",common:"لائوس"},pol:{official:"Laotańska Republika Ludowo-Demokratyczna",common:"Laos"},por:{official:"Laos, República Democrática",common:"Laos"},rus:{official:"Лаосская Народно-Демократическая Республика",common:"Лаос"},slk:{official:"Laoská ľudovodemokratická republika",common:"Laos"},spa:{official:"República Democrática Popular Lao",common:"Laos"},srp:{official:"Лаошка Народна Демократска Република",common:"Лаос"},swe:{official:"Demokratiska folkrepubliken Laos",common:"Laos"},tur:{official:"Laos Demokratik Halk Cumhuriyeti",common:"Laos"},urd:{official:"عوامی جمہوری جمہوریہ لاؤ",common:"لاؤس"},zho:{official:"老挝人民民主共和国",common:"老挝"}},latlng:[18,105],landlocked:!0,borders:["MMR","KHM","CHN","THA","VNM"],area:236800,demonyms:{eng:{f:"Laotian",m:"Laotian"},fra:{f:"Laotienne",m:"Laotien"}},flag:"🇱🇦",maps:{googleMaps:"https://goo.gl/maps/F3asVB7sRKgSnwbE7",openStreetMaps:"https://www.openstreetmap.org/relation/49903"},population:7275556,gini:{2018:38.8},fifa:"LAO",car:{signs:["LAO"],side:"right"},timezones:["UTC+07:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/la.png",svg:"https://flagcdn.com/la.svg",alt:"The flag of Laos is composed of three horizontal bands of red, blue and red. The blue band is twice the height of the red bands and bears a white circle at its center."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/la.png",svg:"https://mainfacts.com/media/images/coats_of_arms/la.svg"},startOfWeek:"monday",capitalInfo:{latlng:[17.97,102.6]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Caribbean Netherlands",official:"Bonaire, Sint Eustatius and Saba",nativeName:{nld:{official:"Bonaire, Sint Eustatius en Saba",common:"Caribisch Nederland"},pap:{official:"Boneiru, Sint Eustatius y Saba",common:"Boneiru, Sint Eustatius y Saba"}}},tld:[".bq",".nl"],cca2:"BQ",ccn3:"535",cca3:"BES",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+5",suffixes:["99"]},capital:["Kralendijk"],altSpellings:["BES islands"],region:"Americas",subregion:"Caribbean",languages:{eng:"English",nld:"Dutch",pap:"Papiamento"},translations:{ara:{official:"بونير وسينت أوستاتيوس وسابا",common:"الجزر الكاريبية الهولندية"},bre:{official:"Bonaire, Sint Eustatius ha Saba",common:"Bonaire, Sint Eustatius ha Saba"},ces:{official:"Karibské Nizozemsko",common:"Karibské Nizozemsko"},cym:{official:"Bonaire, Sint Eustatius and Saba",common:"Caribbean Netherlands"},deu:{official:"Bonaire, Sint Eustatius und Saba",common:"Karibische Niederlande"},est:{official:"Bonaire, Sint Eustatius ja Saba",common:"Bonaire, Sint Eustatius ja Saba"},fin:{official:"Bonaire, Sint Eustatius ja Saba",common:"Bonaire, Sint Eustatius ja Saba"},fra:{official:"Bonaire, Saint-Eustache et Saba",common:"Pays-Bas caribéens"},hrv:{official:"Bonaire, Sint Eustatius i Saba",common:"Bonaire, Sint Eustatius i Saba"},hun:{official:"Bonaire",common:"Bonaire"},ita:{official:"Bonaire, Sint Eustatius e Saba",common:"Paesi Bassi caraibici"},jpn:{official:"ボネール、シント・ユースタティウスおよびサバ",common:"ボネール、シント・ユースタティウスおよびサバ"},kor:{official:"보네르, 신트외스타티위스, 사바",common:"카리브 네덜란드"},nld:{official:"Bonaire, Sint Eustatius en Saba",common:"Caribisch Nederland"},per:{official:"جزایر کارائیب هلند",common:"جزایر کارائیب هلند"},pol:{official:"Bonaire, Sint Eustatius i Saba",common:"Antyle Holenderskie"},por:{official:"Bonaire, Saba e Santo Eustáquio",common:"Países Baixos Caribenhos"},rus:{official:"Бонэйр, Синт-Эстатиус и Саба",common:"Карибские Нидерланды"},slk:{official:"Bonaire, Sint Eustatius a Saba",common:"Bonaire, Sint Eustatius a Saba"},spa:{official:"Bonaire, San Eustaquio y Saba",common:"Caribe Neerlandés"},srp:{official:"Бонер, Свети Еустахије и Саба",common:"Карипска Холандија"},swe:{official:"Bonaire, Sint Eustatius and Saba",common:"Karibiska Nederländerna"},tur:{official:"Karayip Hollandası",common:"Karayip Hollandası"},urd:{official:"بونایر، سینٹ ایوسٹائیس اور سابا",common:"کیریبین نیدرلینڈز"},zho:{official:"荷蘭加勒比區",common:"荷蘭加勒比區"}},latlng:[12.18,-68.25],landlocked:!1,area:328,demonyms:{eng:{f:"Dutch",m:"Dutch"},fra:{f:"Néerlandaise",m:"Néerlandais"}},flag:"🇧🇶",maps:{googleMaps:"https://goo.gl/maps/4XVes1P6uEDTz77WA",openStreetMaps:"https://www.openstreetmap.org/relation/1216720"},population:25987,car:{signs:[""],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/bq.png",svg:"https://flagcdn.com/bq.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bq.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bq.svg"},startOfWeek:"monday",capitalInfo:{latlng:[12.14,-68.27]}},{name:{common:"South Korea",official:"Republic of Korea",nativeName:{kor:{official:"대한민국",common:"한국"}}},tld:[".kr",".한국"],cca2:"KR",ccn3:"410",cca3:"KOR",cioc:"KOR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KRW:{name:"South Korean won",symbol:"₩"}},idd:{root:"+8",suffixes:["2"]},capital:["Seoul"],altSpellings:["KR","Korea, Republic of","Republic of Korea","남한","남조선"],region:"Asia",subregion:"Eastern Asia",languages:{kor:"Korean"},translations:{ara:{official:"جمهورية كوريا",common:"كوريا الجنوبية"},bre:{official:"Republik Korea",common:"Korea ar Su"},ces:{official:"Korejská republika",common:"Jižní Korea"},cym:{official:"Republic of Korea",common:"South Korea"},deu:{official:"Republik Korea",common:"Südkorea"},est:{official:"Korea Vabariik",common:"Lõuna-Korea"},fin:{official:"Korean tasavalta",common:"Etelä-Korea"},fra:{official:"République de Corée",common:"Corée du Sud"},hrv:{official:"Republika Koreja",common:"Južna Koreja"},hun:{official:"Koreai Köztársaság",common:"Dél-Korea"},ita:{official:"Repubblica di Corea",common:"Corea del Sud"},jpn:{official:"大韓民国",common:"韓国"},kor:{official:"대한민국",common:"한국"},nld:{official:"Republiek Korea",common:"Zuid-Korea"},per:{official:"جمهوری کره",common:"کرهٔ جنوبی"},pol:{official:"Republika Korei",common:"Korea Południowa"},por:{official:"República da Coreia",common:"Coreia do Sul"},rus:{official:"Республика Корея",common:"Южная Корея"},slk:{official:"Kórejská republika",common:"Južná Kórea"},spa:{official:"República de Corea",common:"Corea del Sur"},srp:{official:"Република Кореја",common:"Јужна Кореја"},swe:{official:"Republiken Korea",common:"Sydkorea"},tur:{official:"Kore Cumhuriyeti",common:"Güney Kore"},urd:{official:"جمہوریہ کوریا ",common:"جنوبی کوریا"},zho:{official:"大韩民国",common:"韩国"}},latlng:[37,127.5],landlocked:!1,borders:["PRK"],area:100210,demonyms:{eng:{f:"South Korean",m:"South Korean"},fra:{f:"Sud-coréenne",m:"Sud-coréen"}},flag:"🇰🇷",maps:{googleMaps:"https://goo.gl/maps/7ecjaJXefjAQhxjGA",openStreetMaps:"https://www.openstreetmap.org/relation/307756"},population:51780579,gini:{2016:31.4},fifa:"KOR",car:{signs:["ROK"],side:"right"},timezones:["UTC+09:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/kr.png",svg:"https://flagcdn.com/kr.svg",alt:"The flag of South Korea has a white field, at the center of which is a red and blue Taegeuk circle surrounded by four black trigrams, one in each corner."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/kr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/kr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[37.55,126.98]},postalCode:{format:"SEOUL ###-###",regex:"^(?:SEOUL)*(\\d{6})$"}},{name:{common:"Wallis and Futuna",official:"Territory of the Wallis and Futuna Islands",nativeName:{fra:{official:"Territoire des îles Wallis et Futuna",common:"Wallis et Futuna"}}},tld:[".wf"],cca2:"WF",ccn3:"876",cca3:"WLF",independent:!1,status:"officially-assigned",unMember:!1,currencies:{XPF:{name:"CFP franc",symbol:"₣"}},idd:{root:"+6",suffixes:["81"]},capital:["Mata-Utu"],altSpellings:["WF","Territory of the Wallis and Futuna Islands","Territoire des îles Wallis et Futuna"],region:"Oceania",subregion:"Polynesia",languages:{fra:"French"},translations:{ara:{official:"إقليم جزر واليس وفوتونا",common:"واليس وفوتونا"},bre:{official:"Tiriad Inizi Wallis ha Futuna",common:"Wallis ha Futuna"},ces:{official:"Teritorium ostrovů Wallis a Futuna",common:"Wallis a Futuna"},cym:{official:"Territory of the Wallis and Futuna Islands",common:"Wallis and Futuna"},deu:{official:"Gebiet der Wallis und Futuna",common:"Wallis und Futuna"},est:{official:"Wallise ja Futuna ala",common:"Wallis ja Futuna"},fin:{official:"Wallisin ja Futunan yhteisö",common:"Wallis ja Futuna"},fra:{official:"Territoire des îles Wallis et Futuna",common:"Wallis-et-Futuna"},hrv:{official:"Teritoriju Wallis i Futuna",common:"Wallis i Fortuna"},hun:{official:"Wallis és Futuna",common:"Wallis és Futuna"},ita:{official:"Territorio delle Isole Wallis e Futuna",common:"Wallis e Futuna"},jpn:{official:"ウォリス·フツナ諸島の領土",common:"ウォリス・フツナ"},kor:{official:"왈리스 퓌튀나",common:"왈리스 퓌튀나"},nld:{official:"Grondgebied van de Wallis en Futuna",common:"Wallis en Futuna"},per:{official:"جزایر والیس و فوتونا",common:"والیس و فوتونا"},pol:{official:"Terytorium Wysp Wallis i Futuna",common:"Wallis i Futuna"},por:{official:"Território das Ilhas Wallis e Futuna",common:"Wallis e Futuna"},rus:{official:"Территория Уоллис и Футуна острова",common:"Уоллис и Футуна"},slk:{official:"Teritórium ostrovov Wallis a Futuna",common:"Wallis a Futuna"},spa:{official:"Territorio de las Islas Wallis y Futuna",common:"Wallis y Futuna"},srp:{official:"Територија државе Валис и Футуна",common:"Валис и Футуна"},swe:{official:"Territoriet Wallis- och Futunaöarna",common:"Wallis- och Futunaöarna"},tur:{official:"Wallis ve Futuna Adaları Bölgesi",common:"Wallis ve Futuna Adaları Bölgesi"},urd:{official:"سر زمینِ والس و فتونہ جزائر",common:"والس و فتونہ"},zho:{official:"瓦利斯和富图纳群岛",common:"瓦利斯和富图纳群岛"}},latlng:[-13.3,-176.2],landlocked:!1,area:142,demonyms:{eng:{f:"Wallis and Futuna Islander",m:"Wallis and Futuna Islander"}},flag:"🇼🇫",maps:{googleMaps:"https://goo.gl/maps/CzVqK74QYtbHv65r5",openStreetMaps:"https://www.openstreetmap.org/relation/3412448"},population:11750,car:{signs:["F"],side:"right"},timezones:["UTC+12:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/wf.png",svg:"https://flagcdn.com/wf.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-13.95,-171.93]},postalCode:{format:"#####",regex:"^(986\\d{2})$"}},{name:{common:"Suriname",official:"Republic of Suriname",nativeName:{nld:{official:"Republiek Suriname",common:"Suriname"}}},tld:[".sr"],cca2:"SR",ccn3:"740",cca3:"SUR",cioc:"SUR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SRD:{name:"Surinamese dollar",symbol:"$"}},idd:{root:"+5",suffixes:["97"]},capital:["Paramaribo"],altSpellings:["SR","Sarnam","Sranangron","Republic of Suriname","Republiek Suriname"],region:"Americas",subregion:"South America",languages:{nld:"Dutch"},translations:{ara:{official:"جمهورية سورينام",common:"سورينام"},bre:{official:"Republik Surinam",common:"Surinam"},ces:{official:"Republika Surinam",common:"Surinam"},cym:{official:"Republic of Suriname",common:"Suriname"},deu:{official:"Republik Suriname",common:"Suriname"},est:{official:"Suriname Vabariik",common:"Suriname"},fin:{official:"Surinamen tasavalta",common:"Suriname"},fra:{official:"République du Suriname",common:"Surinam"},hrv:{official:"Republika Surinam",common:"Surinam"},hun:{official:"Suriname Köztársaság",common:"Suriname"},ita:{official:"Repubblica del Suriname",common:"Suriname"},jpn:{official:"スリナム共和国",common:"スリナム"},kor:{official:"수리남 공화국",common:"수리남"},nld:{official:"Republiek Suriname",common:"Suriname"},per:{official:"جمهوری سورینام",common:"سورینام"},pol:{official:"Republika Surinamu",common:"Surinam"},por:{official:"República do Suriname",common:"Suriname"},rus:{official:"Республика Суринам",common:"Суринам"},slk:{official:"Surinamská republika",common:"Surinam"},spa:{official:"República de Suriname",common:"Surinam"},srp:{official:"Република Суринам",common:"Суринам"},swe:{official:"Republiken Surinam",common:"Surinam"},tur:{official:"Surinam Cumhuriyeti",common:"Surinam"},urd:{official:"جمہوریہ سرینام",common:"سرینام"},zho:{official:"苏里南共和国",common:"苏里南"}},latlng:[4,-56],landlocked:!1,borders:["BRA","GUF","GUY"],area:163820,demonyms:{eng:{f:"Surinamer",m:"Surinamer"},fra:{f:"Surinamaise",m:"Surinamais"}},flag:"🇸🇷",maps:{googleMaps:"https://goo.gl/maps/iy7TuQLSi4qgoBoG7",openStreetMaps:"https://www.openstreetmap.org/relation/287082"},population:586634,gini:{1999:57.9},fifa:"SUR",car:{signs:["SME"],side:"left"},timezones:["UTC-03:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/sr.png",svg:"https://flagcdn.com/sr.svg",alt:"The flag of Suriname is composed of five horizontal bands of green, white, red, white and green in the ratio of 2:1:4:1:2. A large five-pointed yellow star is centered in the red band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[5.83,-55.17]}},{name:{common:"Guyana",official:"Co-operative Republic of Guyana",nativeName:{eng:{official:"Co-operative Republic of Guyana",common:"Guyana"}}},tld:[".gy"],cca2:"GY",ccn3:"328",cca3:"GUY",cioc:"GUY",independent:!0,status:"officially-assigned",unMember:!0,currencies:{GYD:{name:"Guyanese dollar",symbol:"$"}},idd:{root:"+5",suffixes:["92"]},capital:["Georgetown"],altSpellings:["GY","Co-operative Republic of Guyana"],region:"Americas",subregion:"South America",languages:{eng:"English"},translations:{ara:{official:"جمهورية غيانا التعاونية",common:"غيانا"},bre:{official:"Republik Kevelourel Gwiana",common:"Guyana"},ces:{official:"Kooperativní republika Guyana",common:"Guyana"},cym:{official:"Co-operative Republic of Guyana",common:"Guyana"},deu:{official:"Kooperative Republik Guyana",common:"Guyana"},est:{official:"Guyana Vabariik",common:"Guyana"},fin:{official:"Guayanan osuustoiminnallinen tasavalta",common:"Guayana"},fra:{official:"République coopérative de Guyana",common:"Guyana"},hrv:{official:"Zadruga Republika Gvajana",common:"Gvajana"},hun:{official:"Guyanai Szövetkezeti Köztársaság",common:"Guyana"},ita:{official:"Co -operative Republic of Guyana",common:"Guyana"},jpn:{official:"ガイアナの協同共和国",common:"ガイアナ"},kor:{official:"가이아나 협동 공화국",common:"가이아나"},nld:{official:"Coöperatieve Republiek Guyana",common:"Guyana"},per:{official:"جمهوری تعاونی گویان",common:"گویان"},pol:{official:"Kooperacyjna Republika Gujany",common:"Gujana"},por:{official:"Co -operative República da Guiana",common:"Guiana"},rus:{official:"Кооперативная Республика Гайана",common:"Гайана"},slk:{official:"Guyanská kooperatívna republika",common:"Guyana"},spa:{official:"República Cooperativa de Guyana",common:"Guyana"},srp:{official:"Кооперативна Република Гвајана",common:"Гвајана"},swe:{official:"Kooperativa republiken Guyana",common:"Guyana"},tur:{official:"Guyana Kooperatif Cumhuriyeti",common:"Guyana"},urd:{official:"تعاونی جمہوریہ گیانا",common:"گیانا"},zho:{official:"圭亚那共和国",common:"圭亚那"}},latlng:[5,-59],landlocked:!1,borders:["BRA","SUR","VEN"],area:214969,demonyms:{eng:{f:"Guyanese",m:"Guyanese"},fra:{f:"Guyanienne",m:"Guyanien"}},flag:"🇬🇾",maps:{googleMaps:"https://goo.gl/maps/DFsme2xEeugUAsCx5",openStreetMaps:"https://www.openstreetmap.org/relation/287083"},population:786559,gini:{1998:45.1},fifa:"GUY",car:{signs:["GUY"],side:"left"},timezones:["UTC-04:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/gy.png",svg:"https://flagcdn.com/gy.svg",alt:"The flag of Guyana has a green field with two isosceles triangles which share a common base on the hoist end. The smaller black-edged red triangle spanning half the width of the field is superimposed on the larger white-edged yellow triangle which spans the full width of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gy.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gy.svg"},startOfWeek:"monday",capitalInfo:{latlng:[6.8,-58.15]}},{name:{common:"Ghana",official:"Republic of Ghana",nativeName:{eng:{official:"Republic of Ghana",common:"Ghana"}}},tld:[".gh"],cca2:"GH",ccn3:"288",cca3:"GHA",cioc:"GHA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{GHS:{name:"Ghanaian cedi",symbol:"₵"}},idd:{root:"+2",suffixes:["33"]},capital:["Accra"],altSpellings:["GH"],region:"Africa",subregion:"Western Africa",languages:{eng:"English"},translations:{ara:{official:"جمهورية غانا",common:"غانا"},bre:{official:"Republik Ghana",common:"Ghana"},ces:{official:"Ghanská republika",common:"Ghana"},cym:{official:"Republic of Ghana",common:"Ghana"},deu:{official:"Republik Ghana",common:"Ghana"},est:{official:"Ghana Vabariik",common:"Ghana"},fin:{official:"Ghanan tasavalta",common:"Ghana"},fra:{official:"République du Ghana",common:"Ghana"},hrv:{official:"Republika Gana",common:"Gana"},hun:{official:"Ghánai Köztársaság",common:"Ghána"},ita:{official:"Repubblica del Ghana",common:"Ghana"},jpn:{official:"ガーナ共和国",common:"ガーナ"},kor:{official:"가나 공화국",common:"가나"},nld:{official:"Republiek Ghana",common:"Ghana"},per:{official:"جمهوری غنا",common:"غنا"},pol:{official:"Republika Ghany",common:"Ghana"},por:{official:"República do Gana",common:"Gana"},rus:{official:"Республика Гана",common:"Гана"},slk:{official:"Ghanská republika",common:"Ghana"},spa:{official:"República de Ghana",common:"Ghana"},srp:{official:"Република Гана",common:"Гана"},swe:{official:"Republiken Ghana",common:"Ghana"},tur:{official:"Gana Cumhuriyeti",common:"Gana"},urd:{official:"جمہوریہ گھانا",common:"گھانا"},zho:{official:"加纳共和国",common:"加纳"}},latlng:[8,-2],landlocked:!1,borders:["BFA","CIV","TGO"],area:238533,demonyms:{eng:{f:"Ghanaian",m:"Ghanaian"},fra:{f:"Ghanéenne",m:"Ghanéen"}},flag:"🇬🇭",maps:{googleMaps:"https://goo.gl/maps/Avy5RSmdsXFBaiXq8",openStreetMaps:"https://www.openstreetmap.org/relation/192781"},population:31072945,gini:{2016:43.5},fifa:"GHA",car:{signs:["GH"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/gh.png",svg:"https://flagcdn.com/gh.svg",alt:"The flag of Ghana is composed of three equal horizontal bands of red, gold and green, with a five-pointed black star centered in the gold band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gh.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gh.svg"},startOfWeek:"monday",capitalInfo:{latlng:[5.55,-.22]}},{name:{common:"Norway",official:"Kingdom of Norway",nativeName:{nno:{official:"Kongeriket Noreg",common:"Noreg"},nob:{official:"Kongeriket Norge",common:"Norge"},smi:{official:"Norgga gonagasriika",common:"Norgga"}}},tld:[".no"],cca2:"NO",ccn3:"578",cca3:"NOR",cioc:"NOR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{NOK:{name:"Norwegian krone",symbol:"kr"}},idd:{root:"+4",suffixes:["7"]},capital:["Oslo"],altSpellings:["NO","Norge","Noreg","Kingdom of Norway","Kongeriket Norge","Kongeriket Noreg"],region:"Europe",subregion:"Northern Europe",languages:{nno:"Norwegian Nynorsk",nob:"Norwegian Bokmål",smi:"Sami"},translations:{ara:{official:"مملكة النرويج",common:"النرويج"},bre:{official:"Rouantelezh Norvegia",common:"Norvegia"},ces:{official:"Norské království",common:"Norsko"},cym:{official:"Kingdom of Norway",common:"Norway"},deu:{official:"Königreich Norwegen",common:"Norwegen"},est:{official:"Norra Kuningriik",common:"Norra"},fin:{official:"Norjan kuningaskunta",common:"Norja"},fra:{official:"Royaume de Norvège",common:"Norvège"},hrv:{official:"Kraljevina Norveška",common:"Norveška"},hun:{official:"Norvég Királyság",common:"Norvégia"},ita:{official:"Regno di Norvegia",common:"Norvegia"},jpn:{official:"ノルウェー王国",common:"ノルウェー"},kor:{official:"노르웨이 왕국",common:"노르웨이"},nld:{official:"Koninkrijk Noorwegen",common:"Noorwegen"},per:{official:"پادشاهی نروژ",common:"نروژ"},pol:{official:"Królestwo Norwegii",common:"Norwegia"},por:{official:"Reino da Noruega",common:"Noruega"},rus:{official:"Королевство Норвегия",common:"Норвегия"},slk:{official:"Nórske kráľovstvo",common:"Nórsko"},spa:{official:"Reino de Noruega",common:"Noruega"},srp:{official:"Краљевина Норвешка",common:"Норвешка"},swe:{official:"Konungariket Norge",common:"Norge"},tur:{official:"Norveç Krallığı",common:"Norveç"},urd:{official:"مملکتِ ناروے",common:"ناروے"},zho:{official:"挪威王国",common:"挪威"}},latlng:[62,10],landlocked:!1,borders:["FIN","SWE","RUS"],area:323802,demonyms:{eng:{f:"Norwegian",m:"Norwegian"},fra:{f:"Norvégienne",m:"Norvégien"}},flag:"🇳🇴",maps:{googleMaps:"https://goo.gl/maps/htWRrphA7vNgQNdSA",openStreetMaps:"https://www.openstreetmap.org/relation/2978650"},population:5379475,gini:{2018:27.6},fifa:"NOR",car:{signs:["N"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/no.png",svg:"https://flagcdn.com/no.svg",alt:"The flag of Norway has a red field with a large white-edged navy blue cross that extends to the edges of the field. The vertical part of this cross is offset towards the hoist side."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/no.png",svg:"https://mainfacts.com/media/images/coats_of_arms/no.svg"},startOfWeek:"monday",capitalInfo:{latlng:[59.92,10.75]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"South Georgia",official:"South Georgia and the South Sandwich Islands",nativeName:{eng:{official:"South Georgia and the South Sandwich Islands",common:"South Georgia"}}},tld:[".gs"],cca2:"GS",ccn3:"239",cca3:"SGS",independent:!1,status:"officially-assigned",unMember:!1,currencies:{SHP:{name:"Saint Helena pound",symbol:"£"}},idd:{root:"+5",suffixes:["00"]},capital:["King Edward Point"],altSpellings:["GS","South Georgia and the South Sandwich Islands"],region:"Antarctic",languages:{eng:"English"},translations:{ara:{official:"جورجيا الجنوبية وجزر ساندوتش الجنوبية",common:"جورجيا الجنوبية"},bre:{official:"Georgia ar Su hag Inizi Sandwich ar Su",common:"Georgia ar Su hag Inizi Sandwich ar Su"},ces:{official:"Jižní Georgie a Jižní Sandwichovy ostrovy",common:"Jižní Georgie a Jižní Sandwichovy ostrovy"},cym:{official:"South Georgia and the South Sandwich Islands",common:"South Georgia"},deu:{official:"Südgeorgien und die Südlichen Sandwichinseln",common:"Südgeorgien und die Südlichen Sandwichinseln"},est:{official:"Lõuna-Georgia ja Lõuna-Sandwichi saared",common:"Lõuna-Georgia ja Lõuna-Sandwichi saared"},fin:{official:"Etelä-Georgia ja Eteläiset Sandwichsaaret",common:"Etelä-Georgia ja Eteläiset Sandwichsaaret"},fra:{official:"Géorgie du Sud et les îles Sandwich du Sud",common:"Géorgie du Sud-et-les Îles Sandwich du Sud"},hrv:{official:"Južna Džordžija i Otoci Južni Sendvič",common:"Južna Georgija i otočje Južni Sandwich"},hun:{official:"Déli-Georgia és Déli-Sandwich-szigetek",common:"Déli-Georgia és Déli-Sandwich-szigetek"},ita:{official:"Georgia del Sud e isole Sandwich del Sud",common:"Georgia del Sud e Isole Sandwich Meridionali"},jpn:{official:"サウスジョージア·サウスサンドウィッチ諸島",common:"サウスジョージア・サウスサンドウィッチ諸島"},kor:{official:"조지아",common:"조지아"},nld:{official:"Zuid-Georgië en de Zuidelijke Sandwich-eilanden",common:"Zuid-Georgia en Zuidelijke Sandwicheilanden"},per:{official:"جزایر جورجیای جنوبی و ساندویچ جنوبی",common:"جزایر جورجیای جنوبی و ساندویچ جنوبی"},pol:{official:"Georgia Południowa i Sandwich Południowy",common:"Georgia Południowa i Sandwich Południowy"},por:{official:"Geórgia do Sul e Sandwich do Sul",common:"Ilhas Geórgia do Sul e Sandwich do Sul"},rus:{official:"Южная Георгия и Южные Сандвичевы острова",common:"Южная Георгия и Южные Сандвичевы острова"},slk:{official:"Južná Georgia a Južné Sandwichove ostrovy",common:"Južná Georgia a Južné Sandwichove ostrovy"},spa:{official:"Georgia del Sur y las Islas Sandwich del Sur",common:"Islas Georgias del Sur y Sandwich del Sur"},srp:{official:"Јужна Џорџија и Јужна Сендвичка Острва",common:"Јужна Џорџија и Јужна Сендвичка Острва"},swe:{official:"Sydgeorgien",common:"Sydgeorgien"},tur:{official:"Güney Georgia ve Güney Sandwich Adaları",common:"Güney Georgia ve Güney Sandwich Adaları"},urd:{official:"جنوبی جارجیا و جزائر جنوبی سینڈوچ",common:"جنوبی جارجیا"},zho:{official:"南乔治亚岛和南桑威奇群岛",common:"南乔治亚"}},latlng:[-54.5,-37],landlocked:!1,area:3903,demonyms:{eng:{f:"South Georgian South Sandwich Islander",m:"South Georgian South Sandwich Islander"}},flag:"🇬🇸",maps:{googleMaps:"https://goo.gl/maps/mJzdaBwKBbm2B81q9",openStreetMaps:"https://www.openstreetmap.org/relation/1983629"},population:30,car:{signs:[""],side:"right"},timezones:["UTC-02:00"],continents:["Antarctica"],flags:{png:"https://flagcdn.com/w320/gs.png",svg:"https://flagcdn.com/gs.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-54.28,-36.5]}},{name:{common:"Yemen",official:"Republic of Yemen",nativeName:{ara:{official:"الجمهورية اليمنية",common:"اليَمَن"}}},tld:[".ye"],cca2:"YE",ccn3:"887",cca3:"YEM",cioc:"YEM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{YER:{name:"Yemeni rial",symbol:"﷼"}},idd:{root:"+9",suffixes:["67"]},capital:["Sana'a"],altSpellings:["YE","Yemeni Republic","al-Jumhūriyyah al-Yamaniyyah"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"الجمهورية اليمنية",common:"اليمن"},bre:{official:"Republik Yemen",common:"Yemen"},ces:{official:"Jemenská republika",common:"Jemen"},cym:{official:"Republic of Yemen",common:"Yemen"},deu:{official:"Republik Jemen",common:"Jemen"},est:{official:"Jeemeni Vabariik",common:"Jeemen"},fin:{official:"Jemenin tasavalta",common:"Jemen"},fra:{official:"République du Yémen",common:"Yémen"},hrv:{official:"Republika Jemen",common:"Jemen"},hun:{official:"Jemeni Köztársaság",common:"Jemen"},ita:{official:"Repubblica dello Yemen",common:"Yemen"},jpn:{official:"イエメン共和国",common:"イエメン"},kor:{official:"예멘 공화국",common:"예멘"},nld:{official:"Republiek Jemen",common:"Jemen"},per:{official:"جمهوری یمن",common:"یمن"},pol:{official:"Republika Jemeńska",common:"Jemen"},por:{official:"República do Iêmen",common:"Iémen"},rus:{official:"Йеменская Республика",common:"Йемен"},slk:{official:"Jemenská republika",common:"Jemen"},spa:{official:"República de Yemen",common:"Yemen"},srp:{official:"Република Јемен",common:"Јемен"},swe:{official:"Republiken Jemen",common:"Jemen"},tur:{official:"Yemen Cumhuriyeti",common:"Yemen"},urd:{official:"جمہوریہ یمن",common:"یمن"},zho:{official:"也门共和国",common:"也门"}},latlng:[15,48],landlocked:!1,borders:["OMN","SAU"],area:527968,demonyms:{eng:{f:"Yemeni",m:"Yemeni"},fra:{f:"Yéménite",m:"Yéménite"}},flag:"🇾🇪",maps:{googleMaps:"https://goo.gl/maps/WCmE76HKcLideQQw7",openStreetMaps:"https://www.openstreetmap.org/relation/305092"},population:29825968,gini:{2014:36.7},fifa:"YEM",car:{signs:["YAR"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/ye.png",svg:"https://flagcdn.com/ye.svg",alt:"The flag of Yemen is composed of three equal horizontal bands of red, white and black."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ye.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ye.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[15.37,44.19]}},{name:{common:"Indonesia",official:"Republic of Indonesia",nativeName:{ind:{official:"Republik Indonesia",common:"Indonesia"}}},tld:[".id"],cca2:"ID",ccn3:"360",cca3:"IDN",cioc:"INA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{IDR:{name:"Indonesian rupiah",symbol:"Rp"}},idd:{root:"+6",suffixes:["2"]},capital:["Jakarta"],altSpellings:["ID","Republic of Indonesia","Republik Indonesia"],region:"Asia",subregion:"South-Eastern Asia",languages:{ind:"Indonesian"},translations:{ara:{official:"جمهورية إندونيسيا",common:"إندونيسيا"},bre:{official:"Republik Indonezia",common:"Indonezia"},ces:{official:"Indonéská republika",common:"Indonésie"},cym:{official:"Republic of Indonesia",common:"Indonesia"},deu:{official:"Republik Indonesien",common:"Indonesien"},est:{official:"Indoneesia Vabariik",common:"Indoneesia"},fin:{official:"Indonesian tasavalta",common:"Indonesia"},fra:{official:"République d'Indonésie",common:"Indonésie"},hrv:{official:"Republika Indonezija",common:"Indonezija"},hun:{official:"Indonéz Köztársaság",common:"Indonézia"},ita:{official:"Repubblica di Indonesia",common:"Indonesia"},jpn:{official:"インドネシア共和国",common:"インドネシア"},kor:{official:"인도네시아 공화국",common:"인도네시아"},nld:{official:"Republiek Indonesië",common:"Indonesië"},per:{official:"جمهوری اندونزی",common:"اندونزی"},pol:{official:"Republika Indonezji",common:"Indonezja"},por:{official:"República da Indonésia",common:"Indonésia"},rus:{official:"Республика Индонезия",common:"Индонезия"},slk:{official:"Indonézska republika",common:"Indonézia"},spa:{official:"República de Indonesia",common:"Indonesia"},srp:{official:"Република Индонезија",common:"Индонезија"},swe:{official:"Republiken Indonesien",common:"Indonesien"},tur:{official:"Endonezya Cumhuriyeti",common:"Endonezya"},urd:{official:"جمہوریہ انڈونیشیا",common:"انڈونیشیا"},zho:{official:"印度尼西亚共和国",common:"印度尼西亚"}},latlng:[-5,120],landlocked:!1,borders:["TLS","MYS","PNG"],area:1904569,demonyms:{eng:{f:"Indonesian",m:"Indonesian"},fra:{f:"Indonésienne",m:"Indonésien"}},flag:"🇮🇩",maps:{googleMaps:"https://goo.gl/maps/9gfPupm5bffixiFJ6",openStreetMaps:"https://www.openstreetmap.org/relation/21335"},population:273523621,gini:{2019:38.2},fifa:"IDN",car:{signs:["RI"],side:"left"},timezones:["UTC+07:00","UTC+08:00","UTC+09:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/id.png",svg:"https://flagcdn.com/id.svg",alt:"The flag of Indonesia is composed of two equal horizontal bands of red and white."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/id.png",svg:"https://mainfacts.com/media/images/coats_of_arms/id.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-6.17,106.82]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Portugal",official:"Portuguese Republic",nativeName:{por:{official:"República português",common:"Portugal"}}},tld:[".pt"],cca2:"PT",ccn3:"620",cca3:"PRT",cioc:"POR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+3",suffixes:["51"]},capital:["Lisbon"],altSpellings:["PT","Portuguesa","Portuguese Republic","República Portuguesa"],region:"Europe",subregion:"Southern Europe",languages:{por:"Portuguese"},translations:{ara:{official:"الجمهورية البرتغالية",common:"البرتغال"},bre:{official:"Republik Portugalat",common:"Portugal"},ces:{official:"Portugalská republika",common:"Portugalsko"},cym:{official:"Portuguese Republic",common:"Portugal"},deu:{official:"Portugiesische Republik",common:"Portugal"},est:{official:"Portugali Vabariik",common:"Portugal"},fin:{official:"Portugalin tasavalta",common:"Portugali"},fra:{official:"République portugaise",common:"Portugal"},hrv:{official:"Portugalska Republika",common:"Portugal"},hun:{official:"Portugál Köztársaság",common:"Portugália"},ita:{official:"Repubblica portoghese",common:"Portogallo"},jpn:{official:"ポルトガル共和国",common:"ポルトガル"},kor:{official:"포르투갈 공화국",common:"포르투갈"},nld:{official:"Portugese Republiek",common:"Portugal"},per:{official:"جمهوری پرتغال",common:"پرتغال"},pol:{official:"Republika Portugalska",common:"Portugalia"},por:{official:"República português",common:"Portugal"},rus:{official:"Португальская Республика",common:"Португалия"},slk:{official:"Portugalská republika",common:"Portugalsko"},spa:{official:"República Portuguesa",common:"Portugal"},srp:{official:"Португалска Република",common:"Португал"},swe:{official:"Republiken Portugal",common:"Portugal"},tur:{official:"Portekiz Cumhuriyeti",common:"Portekiz"},urd:{official:"جمہوریہ پرتگال",common:"پرتگال"},zho:{official:"葡萄牙共和国",common:"葡萄牙"}},latlng:[39.5,-8],landlocked:!1,borders:["ESP"],area:92090,demonyms:{eng:{f:"Portuguese",m:"Portuguese"},fra:{f:"Portugaise",m:"Portugais"}},flag:"🇵🇹",maps:{googleMaps:"https://goo.gl/maps/BaTBSyc4GWMmbAKB8",openStreetMaps:"https://www.openstreetmap.org/relation/295480"},population:10305564,gini:{2018:33.5},fifa:"POR",car:{signs:["P"],side:"right"},timezones:["UTC-01:00","UTC"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/pt.png",svg:"https://flagcdn.com/pt.svg",alt:"The flag of Portugal is composed of two vertical bands of green and red in the ratio of 2:3, with the coat of arms of Portugal centered over the two-color boundary."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pt.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pt.svg"},startOfWeek:"monday",capitalInfo:{latlng:[38.72,-9.13]},postalCode:{format:"####-###",regex:"^(\\d{7})$"}},{name:{common:"India",official:"Republic of India",nativeName:{eng:{official:"Republic of India",common:"India"},hin:{official:"भारत गणराज्य",common:"भारत"},tam:{official:"இந்தியக் குடியரசு",common:"இந்தியா"}}},tld:[".in"],cca2:"IN",ccn3:"356",cca3:"IND",cioc:"IND",independent:!0,status:"officially-assigned",unMember:!0,currencies:{INR:{name:"Indian rupee",symbol:"₹"}},idd:{root:"+9",suffixes:["1"]},capital:["New Delhi"],altSpellings:["IN","Bhārat","Republic of India","Bharat Ganrajya","இந்தியா"],region:"Asia",subregion:"Southern Asia",languages:{eng:"English",hin:"Hindi",tam:"Tamil"},translations:{ara:{official:"جمهورية الهند",common:"الهند"},bre:{official:"Republik India",common:"India"},ces:{official:"Indická republika",common:"Indie"},cym:{official:"Republic of India",common:"India"},deu:{official:"Republik Indien",common:"Indien"},est:{official:"India Vabariik",common:"India"},fin:{official:"Intian tasavalta",common:"Intia"},fra:{official:"République de l'Inde",common:"Inde"},hrv:{official:"Republika Indija",common:"Indija"},hun:{official:"Indiai Köztársaság",common:"India"},ita:{official:"Repubblica dell'India",common:"India"},jpn:{official:"インド共和国",common:"インド"},kor:{official:"인도 공화국",common:"인도"},nld:{official:"Republiek India",common:"India"},per:{official:"جمهوری هندوستان",common:"هند"},pol:{official:"Republika Indii",common:"Indie"},por:{official:"República da Índia",common:"Índia"},rus:{official:"Республика Индия",common:"Индия"},slk:{official:"Indická republika",common:"India"},spa:{official:"República de la India",common:"India"},srp:{official:"Република Индија",common:"Индија"},swe:{official:"Republiken Indien",common:"Indien"},tur:{official:"Hindistan Cumhuriyeti",common:"Hindistan"},urd:{official:"جمہوریہ بھارت",common:"بھارت"},zho:{official:"印度共和国",common:"印度"}},latlng:[20,77],landlocked:!1,borders:["BGD","BTN","MMR","CHN","NPL","PAK"],area:3287590,demonyms:{eng:{f:"Indian",m:"Indian"},fra:{f:"Indienne",m:"Indien"}},flag:"🇮🇳",maps:{googleMaps:"https://goo.gl/maps/WSk3fLwG4vtPQetp7",openStreetMaps:"https://www.openstreetmap.org/relation/304716"},population:1380004385,gini:{2011:35.7},fifa:"IND",car:{signs:["IND"],side:"left"},timezones:["UTC+05:30"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/in.png",svg:"https://flagcdn.com/in.svg",alt:"The flag of India is composed of three equal horizontal bands of saffron, white and green. A navy blue wheel with twenty-four spokes — the Ashoka Chakra — is centered in the white band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/in.png",svg:"https://mainfacts.com/media/images/coats_of_arms/in.svg"},startOfWeek:"monday",capitalInfo:{latlng:[28.6,77.2]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Mongolia",official:"Mongolia",nativeName:{mon:{official:"Монгол улс",common:"Монгол улс"}}},tld:[".mn"],cca2:"MN",ccn3:"496",cca3:"MNG",cioc:"MGL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MNT:{name:"Mongolian tögrög",symbol:"₮"}},idd:{root:"+9",suffixes:["76"]},capital:["Ulan Bator"],altSpellings:["MN"],region:"Asia",subregion:"Eastern Asia",languages:{mon:"Mongolian"},translations:{ara:{official:"جمهورية منغوليا",common:"منغوليا"},bre:{official:"Mongolia",common:"Mongolia"},ces:{official:"Stát Mongolsko",common:"Mongolsko"},cym:{official:"Mongolia",common:"Mongolia"},deu:{official:"Mongolei",common:"Mongolei"},est:{official:"Mongoolia",common:"Mongoolia"},fin:{official:"Mongolian tasavalta",common:"Mongolia"},fra:{official:"Mongolie",common:"Mongolie"},hrv:{official:"Mongolija",common:"Mongolija"},hun:{official:"Mongólia",common:"Mongólia"},ita:{official:"Mongolia",common:"Mongolia"},jpn:{official:"モンゴル",common:"モンゴル"},kor:{official:"몽골",common:"몽골국"},nld:{official:"Mongolië",common:"Mongolië"},per:{official:"مغولستان",common:"مغولستان"},pol:{official:"Mongolia",common:"Mongolia"},por:{official:"Mongólia",common:"Mongólia"},rus:{official:"Монголия",common:"Монголия"},slk:{official:"Mongolsko",common:"Mongolsko"},spa:{official:"Mongolia",common:"Mongolia"},srp:{official:"Монголија",common:"Монголија"},swe:{official:"Mongoliet",common:"Mongoliet"},tur:{official:"Moğolistan",common:"Moğolistan"},urd:{official:"منگولیا",common:"منگولیا"},zho:{official:"蒙古",common:"蒙古"}},latlng:[46,105],landlocked:!0,borders:["CHN","RUS"],area:1564110,demonyms:{eng:{f:"Mongolian",m:"Mongolian"},fra:{f:"Mongole",m:"Mongol"}},flag:"🇲🇳",maps:{googleMaps:"https://goo.gl/maps/A1X7bMCKThBDNjzH6",openStreetMaps:"https://www.openstreetmap.org/relation/161033"},population:3278292,gini:{2018:32.7},fifa:"MNG",car:{signs:["MGL"],side:"right"},timezones:["UTC+07:00","UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/mn.png",svg:"https://flagcdn.com/mn.svg",alt:"The flag of Mongolia is composed of three equal vertical bands of red, blue and red, with the national emblem — the Soyombo — in gold centered in the hoist-side red band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[47.92,106.91]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Colombia",official:"Republic of Colombia",nativeName:{spa:{official:"República de Colombia",common:"Colombia"}}},tld:[".co"],cca2:"CO",ccn3:"170",cca3:"COL",cioc:"COL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{COP:{name:"Colombian peso",symbol:"$"}},idd:{root:"+5",suffixes:["7"]},capital:["Bogotá"],altSpellings:["CO","Republic of Colombia","República de Colombia"],region:"Americas",subregion:"South America",languages:{spa:"Spanish"},translations:{ara:{official:"جمهورية كولومبيا",common:"كولومبيا"},bre:{official:"Republik Kolombia",common:"Kolombia"},ces:{official:"Kolumbijská republika",common:"Kolumbie"},cym:{official:"Gweriniaeth Colombia",common:"Colombia"},deu:{official:"Republik Kolumbien",common:"Kolumbien"},est:{official:"Colombia Vabariik",common:"Colombia"},fin:{official:"Kolumbian tasavalta",common:"Kolumbia"},fra:{official:"République de Colombie",common:"Colombie"},hrv:{official:"Republika Kolumbija",common:"Kolumbija"},hun:{official:"Kolumbiai Köztársaság",common:"Kolumbia"},ita:{official:"Repubblica di Colombia",common:"Colombia"},jpn:{official:"コロンビア共和国",common:"コロンビア"},kor:{official:"콜롬비아 공화국",common:"콜롬비아"},nld:{official:"Republiek Colombia",common:"Colombia"},per:{official:"جمهوری کلمبیا",common:"کلمبیا"},pol:{official:"Republika Kolumbii",common:"Kolumbia"},por:{official:"República da Colômbia",common:"Colômbia"},rus:{official:"Республика Колумбия",common:"Колумбия"},slk:{official:"Kolumbijská republika",common:"Kolumbia"},spa:{official:"República de Colombia",common:"Colombia"},srp:{official:"Република Колумбија",common:"Колумбија"},swe:{official:"Republiken Colombia",common:"Colombia"},tur:{official:"Kolombiya Cumhuriyeti",common:"Kolombiya"},urd:{official:"جمہوریہ کولمبیا",common:"کولمبیا"},zho:{official:"哥伦比亚共和国",common:"哥伦比亚"}},latlng:[4,-72],landlocked:!1,borders:["BRA","ECU","PAN","PER","VEN"],area:1141748,demonyms:{eng:{f:"Colombian",m:"Colombian"},fra:{f:"Colombienne",m:"Colombien"}},flag:"🇨🇴",maps:{googleMaps:"https://goo.gl/maps/RdwTG8e7gPwS62oR6",openStreetMaps:"https://www.openstreetmap.org/relation/120027"},population:50882884,gini:{2019:51.3},fifa:"COL",car:{signs:["CO"],side:"right"},timezones:["UTC-05:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/co.png",svg:"https://flagcdn.com/co.svg",alt:"The flag of Colombia is composed of three horizontal bands of yellow, blue and red, with the yellow band twice the height of the other two bands."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/co.png",svg:"https://mainfacts.com/media/images/coats_of_arms/co.svg"},startOfWeek:"monday",capitalInfo:{latlng:[4.71,-74.07]}},{name:{common:"Madagascar",official:"Republic of Madagascar",nativeName:{fra:{official:"République de Madagascar",common:"Madagascar"},mlg:{official:"Repoblikan'i Madagasikara",common:"Madagasikara"}}},tld:[".mg"],cca2:"MG",ccn3:"450",cca3:"MDG",cioc:"MAD",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MGA:{name:"Malagasy ariary",symbol:"Ar"}},idd:{root:"+2",suffixes:["61"]},capital:["Antananarivo"],altSpellings:["MG","Republic of Madagascar","Repoblikan'i Madagasikara","République de Madagascar"],region:"Africa",subregion:"Eastern Africa",languages:{fra:"French",mlg:"Malagasy"},translations:{ara:{official:"جمهورية مدغشقر",common:"مدغشقر"},bre:{official:"Republik Madagaskar",common:"Madagaskar"},ces:{official:"Madagaskarská republika",common:"Madagaskar"},cym:{official:"Republic of Madagascar",common:"Madagascar"},deu:{official:"Republik Madagaskar",common:"Madagaskar"},est:{official:"Madagaskari Vabariik",common:"Madagaskar"},fin:{official:"Madagaskarin tasavalta",common:"Madagaskar"},fra:{official:"République de Madagascar",common:"Madagascar"},hrv:{official:"Republika Madagaskar",common:"Madagaskar"},hun:{official:"Madagaszkári Köztársaság",common:"Madagaszkár"},ita:{official:"Repubblica del Madagascar",common:"Madagascar"},jpn:{official:"マダガスカル共和国",common:"マダガスカル"},kor:{official:"마다가스카르 공화국",common:"마다가스카르"},nld:{official:"Republiek Madagaskar",common:"Madagaskar"},per:{official:"جمهوری ماداگاسکار",common:"ماداگاسکار"},pol:{official:"Republika Madagaskaru",common:"Madagaskar"},por:{official:"República de Madagáscar",common:"Madagáscar"},rus:{official:"Республика Мадагаскар",common:"Мадагаскар"},slk:{official:"Madagaskarská republika",common:"Madagaskar"},spa:{official:"República de Madagascar",common:"Madagascar"},srp:{official:"Република Мадагаскар",common:"Мадагаскар"},swe:{official:"Republiken Madagaskar",common:"Madagaskar"},tur:{official:"Madagaskar Cumhuriyeti",common:"Madagaskar"},urd:{official:"جمہوریہ مڈغاسکر",common:"مڈغاسکر"},zho:{official:"马达加斯加共和国",common:"马达加斯加"}},latlng:[-20,47],landlocked:!1,area:587041,demonyms:{eng:{f:"Malagasy",m:"Malagasy"},fra:{f:"Malgache",m:"Malgache"}},flag:"🇲🇬",maps:{googleMaps:"https://goo.gl/maps/AHQh2ABBaFW6Ngj26",openStreetMaps:"https://www.openstreetmap.org/relation/447325"},population:27691019,gini:{2012:42.6},fifa:"MAD",car:{signs:["RM"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/mg.png",svg:"https://flagcdn.com/mg.svg",alt:"The flag of Madagascar features a white vertical band on the hoist side that takes up about one-third the width of the field, and two equal horizontal bands of red and green adjoining the vertical band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-18.92,47.52]},postalCode:{format:"###",regex:"^(\\d{3})$"}},{name:{common:"Niger",official:"Republic of Niger",nativeName:{fra:{official:"République du Niger",common:"Niger"}}},tld:[".ne"],cca2:"NE",ccn3:"562",cca3:"NER",cioc:"NIG",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["27"]},capital:["Niamey"],altSpellings:["NE","Nijar"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"جمهورية النيجر",common:"النيجر"},bre:{official:"Republik Niger",common:"Niger"},ces:{official:"Nigerská republika",common:"Niger"},cym:{official:"Republic of Niger",common:"Niger"},deu:{official:"Republik Niger",common:"Niger"},est:{official:"Nigeri Vabariik",common:"Niger"},fin:{official:"Nigerin tasavalta",common:"Niger"},fra:{official:"République du Niger",common:"Niger"},hrv:{official:"Republika Niger",common:"Niger"},hun:{official:"Nigeri Köztársaság",common:"Niger"},ita:{official:"Repubblica del Niger",common:"Niger"},jpn:{official:"ニジェール共和国",common:"ニジェール"},kor:{official:"니제르 공화국",common:"니제르"},nld:{official:"Republiek Niger",common:"Niger"},per:{official:"جمهوری نیجر",common:"نیجر"},pol:{official:"Republika Nigru",common:"Niger"},por:{official:"República do Níger",common:"Níger"},rus:{official:"Республика Нигер",common:"Нигер"},slk:{official:"Nigérská republika",common:"Niger"},spa:{official:"República de Níger",common:"Níger"},srp:{official:"Република Нигер",common:"Нигер"},swe:{official:"Republiken Niger",common:"Niger"},tur:{official:"Nijer Cumhuriyeti",common:"Nijer"},urd:{official:"جمہوریہ نائجر",common:"نائجر"},zho:{official:"尼日尔共和国",common:"尼日尔"}},latlng:[16,8],landlocked:!0,borders:["DZA","BEN","BFA","TCD","LBY","MLI","NGA"],area:1267e3,demonyms:{eng:{f:"Nigerien",m:"Nigerien"},fra:{f:"Nigérienne",m:"Nigérien"}},flag:"🇳🇪",maps:{googleMaps:"https://goo.gl/maps/VKNU2TLsZcgxM49c8",openStreetMaps:"https://www.openstreetmap.org/relation/192786"},population:24206636,gini:{2014:34.3},fifa:"NIG",car:{signs:["RN"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ne.png",svg:"https://flagcdn.com/ne.svg",alt:"The flag of Niger features three equal horizontal bands of orange, white and green, with an orange circle centered in the white band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ne.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ne.svg"},startOfWeek:"monday",capitalInfo:{latlng:[13.52,2.12]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Mexico",official:"United Mexican States",nativeName:{spa:{official:"Estados Unidos Mexicanos",common:"México"}}},tld:[".mx"],cca2:"MX",ccn3:"484",cca3:"MEX",cioc:"MEX",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MXN:{name:"Mexican peso",symbol:"$"}},idd:{root:"+5",suffixes:["2"]},capital:["Mexico City"],altSpellings:["MX","Mexicanos","United Mexican States","Estados Unidos Mexicanos"],region:"Americas",subregion:"North America",languages:{spa:"Spanish"},translations:{ara:{official:"الولايات المتحدة المكسيكية",common:"المسكيك"},bre:{official:"Stadoù-Unanet Mec'hiko",common:"Mec'hiko"},ces:{official:"Spojené státy mexické",common:"Mexiko"},cym:{official:"United Mexican States",common:"Mexico"},deu:{official:"Vereinigte Mexikanische Staaten",common:"Mexiko"},est:{official:"Mehhiko Ühendriigid",common:"Mehhiko"},fin:{official:"Meksikon yhdysvallat",common:"Meksiko"},fra:{official:"États-Unis du Mexique",common:"Mexique"},hrv:{official:"Sjedinjene Meksičke Države",common:"Meksiko"},hun:{official:"Mexikói Egyesült Államok",common:"Mexikó"},ita:{official:"Stati Uniti del Messico",common:"Messico"},jpn:{official:"メキシコ合衆国",common:"メキシコ"},kor:{official:"멕시코 합중국",common:"멕시코"},nld:{official:"Verenigde Mexicaanse Staten",common:"Mexico"},per:{official:"ایالات متحد مکزیک",common:"مکزیک"},pol:{official:"Meksykańskie Stany Zjednoczone",common:"Meksyk"},por:{official:"Estados Unidos Mexicanos",common:"México"},rus:{official:"Мексиканские Соединённые Штаты",common:"Мексика"},slk:{official:"Spojené štášy mexické",common:"Mexiko"},spa:{official:"Estados Unidos Mexicanos",common:"México"},srp:{official:"Сједињене Мексичке Државе",common:"Мексико"},swe:{official:"Mexikos förenta stater",common:"Mexiko"},tur:{official:"Birleşik Meksika Devletleri",common:"Meksika"},urd:{official:"ریاستہائے متحدہ میکسیکو",common:"میکسیکو"},zho:{official:"墨西哥合众国",common:"墨西哥"}},latlng:[23,-102],landlocked:!1,borders:["BLZ","GTM","USA"],area:1964375,demonyms:{eng:{f:"Mexican",m:"Mexican"},fra:{f:"Mexicaine",m:"Mexicain"}},flag:"🇲🇽",maps:{googleMaps:"https://goo.gl/maps/s5g7imNPMDEePxzbA",openStreetMaps:"https://www.openstreetmap.org/relation/114686"},population:128932753,gini:{2018:45.4},fifa:"MEX",car:{signs:["MEX"],side:"right"},timezones:["UTC-08:00","UTC-07:00","UTC-06:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/mx.png",svg:"https://flagcdn.com/mx.svg",alt:"The flag of Mexico is composed of three equal vertical bands of green, white and red, with the national coat of arms centered in the white band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mx.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mx.svg"},startOfWeek:"monday",capitalInfo:{latlng:[19.43,-99.13]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Uganda",official:"Republic of Uganda",nativeName:{eng:{official:"Republic of Uganda",common:"Uganda"},swa:{official:"Republic of Uganda",common:"Uganda"}}},tld:[".ug"],cca2:"UG",ccn3:"800",cca3:"UGA",cioc:"UGA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{UGX:{name:"Ugandan shilling",symbol:"Sh"}},idd:{root:"+2",suffixes:["56"]},capital:["Kampala"],altSpellings:["UG","Republic of Uganda","Jamhuri ya Uganda"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English",swa:"Swahili"},translations:{ara:{official:"جمهورية أوغندا",common:"أوغندا"},bre:{official:"Republik Ouganda",common:"Ouganda"},ces:{official:"Ugandská republika",common:"Uganda"},cym:{official:"Republic of Uganda",common:"Uganda"},deu:{official:"Republik Uganda",common:"Uganda"},est:{official:"Uganda Vabariik",common:"Uganda"},fin:{official:"Ugandan tasavalta",common:"Uganda"},fra:{official:"République de l'Ouganda",common:"Ouganda"},hrv:{official:"Republika Uganda",common:"Uganda"},hun:{official:"Ugandai Köztársaság",common:"Uganda"},ita:{official:"Repubblica di Uganda",common:"Uganda"},jpn:{official:"ウガンダ共和国",common:"ウガンダ"},kor:{official:"우간다 공화국",common:"우간다"},nld:{official:"Republiek Uganda",common:"Oeganda"},per:{official:"جمهوری اوگاندا",common:"اوگاندا"},pol:{official:"Republika Ugandy",common:"Uganda"},por:{official:"República do Uganda",common:"Uganda"},rus:{official:"Республика Уганда",common:"Уганда"},slk:{official:"Ugandská republika",common:"Uganda"},spa:{official:"República de Uganda",common:"Uganda"},srp:{official:"Република Уганда",common:"Уганда"},swe:{official:"Republiken Uganda",common:"Uganda"},tur:{official:"Uganda Cumhuriyeti",common:"Uganda"},urd:{official:"جمہوریہ یوگنڈا",common:"یوگنڈا"},zho:{official:"乌干达共和国",common:"乌干达"}},latlng:[1,32],landlocked:!0,borders:["COD","KEN","RWA","SSD","TZA"],area:241550,demonyms:{eng:{f:"Ugandan",m:"Ugandan"},fra:{f:"Ougandaise",m:"Ougandais"}},flag:"🇺🇬",maps:{googleMaps:"https://goo.gl/maps/Y7812hFiGa8LD9N68",openStreetMaps:"https://www.openstreetmap.org/relation/192796"},population:45741e3,gini:{2016:42.8},fifa:"UGA",car:{signs:["EAU"],side:"left"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ug.png",svg:"https://flagcdn.com/ug.svg",alt:"The flag of Uganda is composed of six equal horizontal bands of black, yellow, red, black, yellow and red. A white circle bearing a hoist-side facing grey red-crested crane is superimposed in the center of the field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ug.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ug.svg"},startOfWeek:"monday",capitalInfo:{latlng:[.32,32.55]}},{name:{common:"Peru",official:"Republic of Peru",nativeName:{aym:{official:"Piruw Suyu",common:"Piruw"},que:{official:"Piruw Ripuwlika",common:"Piruw"},spa:{official:"República del Perú",common:"Perú"}}},tld:[".pe"],cca2:"PE",ccn3:"604",cca3:"PER",cioc:"PER",independent:!0,status:"officially-assigned",unMember:!0,currencies:{PEN:{name:"Peruvian sol",symbol:"S/ "}},idd:{root:"+5",suffixes:["1"]},capital:["Lima"],altSpellings:["PE","Republic of Peru","República del Perú"],region:"Americas",subregion:"South America",languages:{aym:"Aymara",que:"Quechua",spa:"Spanish"},translations:{ara:{official:"جمهورية بيرو",common:"بيرو"},bre:{official:"Republik Perou",common:"Perou"},ces:{official:"Peruánská republika",common:"Peru"},cym:{official:"Republic of Peru",common:"Peru"},deu:{official:"Republik Peru",common:"Peru"},est:{official:"Peruu Vabariik",common:"Peruu"},fin:{official:"Perun tasavalta",common:"Peru"},fra:{official:"République du Pérou",common:"Pérou"},hrv:{official:"Republika Peru",common:"Peru"},hun:{official:"Perui Köztársaság",common:"Peru"},ita:{official:"Repubblica del Perù",common:"Perù"},jpn:{official:"ペルー共和国",common:"ペルー"},kor:{official:"페루 공화국",common:"페루"},nld:{official:"Republiek Peru",common:"Peru"},per:{official:"جمهوری پرو",common:"پرو"},pol:{official:"Republika Peru",common:"Peru"},por:{official:"República do Peru",common:"Perú"},rus:{official:"Республика Перу",common:"Перу"},slk:{official:"Peruánska republika",common:"Peru"},spa:{official:"República de Perú",common:"Perú"},srp:{official:"Република Перу",common:"Перу"},swe:{official:"Republiken Peru",common:"Peru"},tur:{official:"Peru Cumhuriyeti",common:"Peru"},urd:{official:"جمہوریہ پیرو",common:"پیرو"},zho:{official:"秘鲁共和国",common:"秘鲁"}},latlng:[-10,-76],landlocked:!1,borders:["BOL","BRA","CHL","COL","ECU"],area:1285216,demonyms:{eng:{f:"Peruvian",m:"Peruvian"},fra:{f:"Péruvienne",m:"Péruvien"}},flag:"🇵🇪",maps:{googleMaps:"https://goo.gl/maps/uDWEUaXNcZTng1fP6",openStreetMaps:"https://www.openstreetmap.org/relation/288247"},population:32971846,gini:{2019:41.5},fifa:"PER",car:{signs:["PE"],side:"right"},timezones:["UTC-05:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/pe.png",svg:"https://flagcdn.com/pe.svg",alt:"The flag of Peru is composed of three equal vertical bands of red, white and red, with the national emblem centered in the white band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pe.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pe.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-12.05,-77.05]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Qatar",official:"State of Qatar",nativeName:{ara:{official:"دولة قطر",common:"قطر"}}},tld:[".qa","قطر."],cca2:"QA",ccn3:"634",cca3:"QAT",cioc:"QAT",independent:!0,status:"officially-assigned",unMember:!0,currencies:{QAR:{name:"Qatari riyal",symbol:"ر.ق"}},idd:{root:"+9",suffixes:["74"]},capital:["Doha"],altSpellings:["QA","State of Qatar","Dawlat Qaṭar"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"دولة قطر",common:"قطر"},bre:{official:"Stad Katar",common:"Katar"},ces:{official:"Stát Katar",common:"Katar"},cym:{official:"State of Qatar",common:"Qatar"},deu:{official:"Staat Katar",common:"Katar"},est:{official:"Katari Riik",common:"Katar"},fin:{official:"Qatarin valtio",common:"Qatar"},fra:{official:"État du Qatar",common:"Qatar"},hrv:{official:"Država Katar",common:"Katar"},hun:{official:"Katari Állam",common:"Katar"},ita:{official:"Stato del Qatar",common:"Qatar"},jpn:{official:"カタール国",common:"カタール"},kor:{official:"카타르국",common:"카타르"},nld:{official:"Staat Qatar",common:"Qatar"},per:{official:"دولت قطر",common:"قطر"},pol:{official:"Państwo Katar",common:"Katar"},por:{official:"Estado do Qatar",common:"Catar"},rus:{official:"Государство Катар",common:"Катар"},slk:{official:"Katarský štát",common:"Katar"},spa:{official:"Estado de Qatar",common:"Catar"},srp:{official:"Држава Катар",common:"Катар"},swe:{official:"Staten Qatar",common:"Qatar"},tur:{official:"Katar Devleti",common:"Katar"},urd:{official:"ریاستِ قطر",common:"قطر"},zho:{official:"卡塔尔国",common:"卡塔尔"}},latlng:[25.5,51.25],landlocked:!1,borders:["SAU"],area:11586,demonyms:{eng:{f:"Qatari",m:"Qatari"},fra:{f:"Qatarienne",m:"Qatarien"}},flag:"🇶🇦",maps:{googleMaps:"https://goo.gl/maps/ZV76Y49z7LLUZ2KQ6",openStreetMaps:"https://www.openstreetmap.org/relation/305095"},population:2881060,fifa:"QAT",car:{signs:["Q"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/qa.png",svg:"https://flagcdn.com/qa.svg",alt:"The flag of Qatar has a maroon field, on the hoist side of which is a white vertical band that spans about one-third the width of the field and is separated from the rest of the field by nine adjoining fly-side pointing white isosceles triangles that serve as a serrated line."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/qa.png",svg:"https://mainfacts.com/media/images/coats_of_arms/qa.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[25.28,51.53]}},{name:{common:"Timor-Leste",official:"Democratic Republic of Timor-Leste",nativeName:{por:{official:"República Democrática de Timor-Leste",common:"Timor-Leste"},tet:{official:"Repúblika Demokrátika Timór-Leste",common:"Timór-Leste"}}},tld:[".tl"],cca2:"TL",ccn3:"626",cca3:"TLS",cioc:"TLS",independent:!0,status:"officially-assigned",unMember:!0,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+6",suffixes:["70"]},capital:["Dili"],altSpellings:["TL","East Timor","Democratic Republic of Timor-Leste","República Democrática de Timor-Leste","Repúblika Demokrátika Timór-Leste","Timór Lorosa'e","Timor Lorosae"],region:"Asia",subregion:"South-Eastern Asia",languages:{por:"Portuguese",tet:"Tetum"},translations:{ara:{official:"جمهورية تيمور الشرقية الديمقراطية",common:"تيمور الشرقية"},bre:{official:"Republik demakratel Timor ar Reter",common:"Timor ar Reter"},ces:{official:"Demokratická republika Východní Timor",common:"Východní Timor"},cym:{official:"Democratic Republic of Timor-Leste",common:"Timor-Leste"},deu:{official:"Demokratische Republik Timor-Leste",common:"Osttimor"},est:{official:"Timor-Leste Demokraatlik Vabariik",common:"Ida-Timor"},fin:{official:"Itä-Timorin demokraattinen tasavalta",common:"Itä-Timor"},fra:{official:"République démocratique du Timor oriental",common:"Timor oriental"},hrv:{official:"Demokratska Republika Timor-Leste",common:"Istočni Timor"},hun:{official:"Kelet-timori Demokratikus Köztársaság",common:"Kelet-Timor"},ita:{official:"Repubblica Democratica di Timor Est",common:"Timor Est"},jpn:{official:"東ティモール民主共和国",common:"東ティモール"},kor:{official:"동티모르 민주 공화국",common:"동티모르"},nld:{official:"Democratische Republiek Oost-Timor",common:"Oost-Timor"},per:{official:"جمهوری دموکراتیک تیمور شرقی",common:"تیمور شرقی"},pol:{official:"Demokratyczna Republika Timoru Wschodniego",common:"Timor Wschodni"},por:{official:"República Democrática de Timor-Leste",common:"Timor-Leste"},rus:{official:"Демократическая Республика Тимор -Лешти",common:"Восточный Тимор"},slk:{official:"Východotimorská demokratická republika",common:"Východný Timor"},spa:{official:"República Democrática de Timor-Leste",common:"Timor Oriental"},srp:{official:"Демократска Република Источни Тимор",common:"Источни Тимор"},swe:{official:"Demokratiska republiken Östtimor",common:"Östtimor"},tur:{official:"Doğu Timor Demokratik Cumhuriyeti",common:"Doğu Timor"},urd:{official:"جمہوری جمہوریہ مشرقی تیمور",common:"مشرقی تیمور"},zho:{official:"东帝汶民主共和国",common:"东帝汶"}},latlng:[-8.83333333,125.91666666],landlocked:!1,borders:["IDN"],area:14874,demonyms:{eng:{f:"East Timorese",m:"East Timorese"},fra:{f:"Est-timoraise",m:"Est-timorais"}},flag:"🇹🇱",maps:{googleMaps:"https://goo.gl/maps/sFqBC9zjgUXPR1iTA",openStreetMaps:"https://www.openstreetmap.org/relation/305142"},population:1318442,gini:{2014:28.7},fifa:"TLS",car:{signs:["TL"],side:"left"},timezones:["UTC+09:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/tl.png",svg:"https://flagcdn.com/tl.svg",alt:"The flag of Timor-Leste has a red field with two isosceles triangles which share a common base on the hoist end. The smaller black triangle, which bears a five-pointed white star at its center and spans one-third the width of the field, is superimposed on the larger yellow triangle that extends to the center of the field."},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-8.58,125.6]}},{name:{common:"French Polynesia",official:"French Polynesia",nativeName:{fra:{official:"Polynésie française",common:"Polynésie française"}}},tld:[".pf"],cca2:"PF",ccn3:"258",cca3:"PYF",independent:!1,status:"officially-assigned",unMember:!1,currencies:{XPF:{name:"CFP franc",symbol:"₣"}},idd:{root:"+6",suffixes:["89"]},capital:["Papeetē"],altSpellings:["PF","Polynésie française","French Polynesia","Pōrīnetia Farāni"],region:"Oceania",subregion:"Polynesia",languages:{fra:"French"},translations:{ara:{official:"بولينزيا الفرنسية",common:"بولينزيا الفرنسية"},bre:{official:"Polinezia C'hall",common:"Polinezia C'hall"},ces:{official:"Francouzská Polynésie",common:"Francouzská Polynésie"},cym:{official:"French Polynesia",common:"French Polynesia"},deu:{official:"Französisch-Polynesien",common:"Französisch-Polynesien"},est:{official:"Prantsuse Polüneesia",common:"Prantsuse Polüneesia"},fin:{official:"Ranskan Polynesia",common:"Ranskan Polynesia"},fra:{official:"Polynésie française",common:"Polynésie française"},hrv:{official:"Francuska Polinezija",common:"Francuska Polinezija"},hun:{official:"Francia Polinézia",common:"Francia Polinézia"},ita:{official:"Polinesia Francese",common:"Polinesia Francese"},jpn:{official:"フランス領ポリネシア",common:"フランス領ポリネシア"},kor:{official:"프랑스령 폴리네시아",common:"프랑스령 폴리네시아"},nld:{official:"Frans-Polynesië",common:"Frans-Polynesië"},per:{official:"پُلی‌نِزی فرانسه",common:"پُلی‌نِزی فرانسه"},pol:{official:"Polinezja Francuska",common:"Polinezja Francuska"},por:{official:"Polinésia Francesa",common:"Polinésia Francesa"},rus:{official:"Французская Полинезия",common:"Французская Полинезия"},slk:{official:"Francúzska Polynézia",common:"Francúzska Polynézia"},spa:{official:"Polinesia francés",common:"Polinesia Francesa"},srp:{official:"Француска Полинезија",common:"Француска Полинезија"},swe:{official:"Franska Polynesien",common:"Franska Polynesien"},tur:{official:"Fransız Polinezyası",common:"Fransız Polinezyası"},urd:{official:"فرانسیسی پولینیشیا",common:"فرانسیسی پولینیشیا"},zho:{official:"法属波利尼西亚",common:"法属波利尼西亚"}},latlng:[17.6797,149.4068],landlocked:!1,area:4167,demonyms:{eng:{f:"French Polynesian",m:"French Polynesian"},fra:{f:"Polynésienne",m:"Polynésien"}},flag:"🇵🇫",maps:{googleMaps:"https://goo.gl/maps/xgg6BQTRyeQg4e1m6",openStreetMaps:"https://www.openstreetmap.org/relation/3412620"},population:280904,car:{signs:["F"],side:"right"},timezones:["UTC-10:00","UTC-09:30","UTC-09:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/pf.png",svg:"https://flagcdn.com/pf.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pf.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pf.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-17.53,-149.56]},postalCode:{format:"#####",regex:"^((97|98)7\\d{2})$"}},{name:{common:"Senegal",official:"Republic of Senegal",nativeName:{fra:{official:"République du Sénégal",common:"Sénégal"}}},tld:[".sn"],cca2:"SN",ccn3:"686",cca3:"SEN",cioc:"SEN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["21"]},capital:["Dakar"],altSpellings:["SN","Republic of Senegal","République du Sénégal"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"جمهورية السنغال",common:"السنغال"},bre:{official:"Republik Senegal",common:"Senegal"},ces:{official:"Senegalská republika",common:"Senegal"},cym:{official:"Republic of Senegal",common:"Senegal"},deu:{official:"Republik Senegal",common:"Senegal"},est:{official:"Senegali Vabariik",common:"Senegal"},fin:{official:"Senegalin tasavalta",common:"Senegal"},fra:{official:"République du Sénégal",common:"Sénégal"},hrv:{official:"Republika Senegal",common:"Senegal"},hun:{official:"Szenegáli Köztársaság",common:"Szenegál"},ita:{official:"Repubblica del Senegal",common:"Senegal"},jpn:{official:"セネガル共和国",common:"セネガル"},kor:{official:"세네갈 공화국",common:"세네갈"},nld:{official:"Republiek Senegal",common:"Senegal"},per:{official:"جمهوری سنگال",common:"سنگال"},pol:{official:"Senegal",common:"Senegal"},por:{official:"República do Senegal",common:"Senegal"},rus:{official:"Республика Сенегал",common:"Сенегал"},slk:{official:"Senegalská republika",common:"Senegal"},spa:{official:"República de Senegal",common:"Senegal"},srp:{official:"Република Сенегал",common:"Сенегал"},swe:{official:"Republiken Senegal",common:"Senegal"},tur:{official:"Senegal Cumhuriyeti",common:"Senegal"},urd:{official:"جمہوریہ سینیگال",common:"سینیگال"},zho:{official:"塞内加尔共和国",common:"塞内加尔"}},latlng:[14,-14],landlocked:!1,borders:["GMB","GIN","GNB","MLI","MRT"],area:196722,demonyms:{eng:{f:"Senegalese",m:"Senegalese"},fra:{f:"Sénégalaise",m:"Sénégalais"}},flag:"🇸🇳",maps:{googleMaps:"https://goo.gl/maps/o5f1uD5nyihCL3HCA",openStreetMaps:"https://www.openstreetmap.org/relation/192775"},population:16743930,gini:{2011:40.3},fifa:"SEN",car:{signs:["SN"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/sn.png",svg:"https://flagcdn.com/sn.svg",alt:"The flag of Senegal is composed of three equal vertical bands of green, golden-yellow and red, with a five-pointed green star centered in the golden-yellow band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[14.73,-17.63]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"French Southern and Antarctic Lands",official:"Territory of the French Southern and Antarctic Lands",nativeName:{fra:{official:"Territoire des Terres australes et antarctiques françaises",common:"Terres australes et antarctiques françaises"}}},tld:[".tf"],cca2:"TF",ccn3:"260",cca3:"ATF",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"€"}},idd:{root:"+2",suffixes:["62"]},capital:["Port-aux-Français"],altSpellings:["TF","French Southern Territories"],region:"Antarctic",languages:{fra:"French"},translations:{ara:{official:"مقاطعات وأقاليم ما وراء البحار الفرنسية",common:"أراض فرنسية جنوبية وأنتارتيكية"},bre:{official:"Tiriad Douaroù Aostral hag Antarktikel Frañs",common:"Douaroù Aostral hag Antarktikel Frañs"},ces:{official:"Teritorium Francouzská jižní a antarktická území",common:"Francouzská jižní a antarktická území"},cym:{official:"Territory of the French Southern and Antarctic Lands",common:"French Southern and Antarctic Lands"},deu:{official:"Gebiet der Französisch Süd- und Antarktisgebiete",common:"Französische Süd- und Antarktisgebiete"},est:{official:"Prantsuse Lõunaalad",common:"Prantsuse Lõunaalad"},fin:{official:"Ranskan eteläiset ja antarktiset alueet",common:"Ranskan eteläiset ja antarktiset alueet"},fra:{official:"Territoire des Terres australes et antarctiques françaises",common:"Terres australes et antarctiques françaises"},hrv:{official:"Teritoriju Francuski južni i antarktički teritoriji",common:"Francuski južni i antarktički teritoriji"},hun:{official:"Francia déli és antarktiszi területek",common:"Francia déli és antarktiszi területek"},ita:{official:"Territorio della australi e antartiche francesi Terre",common:"Territori Francesi del Sud"},jpn:{official:"フランス領南方·南極地域の領土",common:"フランス領南方・南極地域"},kor:{official:"프랑스령 남부와 남극 지역",common:"프랑스령 남부와 남극 지역"},nld:{official:"Grondgebied van de Franse Zuidelijke en Antarctische gebieden",common:"Franse Gebieden in de zuidelijke Indische Oceaan"},per:{official:"سرزمین‌های جنوبی و جنوبگانی فرانسه",common:"سرزمین‌های جنوبی و جنوبگانی فرانسه"},pol:{official:"Francuskie Terytoria Południowe i Antarktyczne",common:"Francuskie Terytoria Południowe i Antarktyczne"},por:{official:"Território do Sul e Antártica Francesa",common:"Terras Austrais e Antárticas Francesas"},rus:{official:"Территория Французские Южные и Антарктические земли",common:"Французские Южные и Антарктические территории"},slk:{official:"Francúzske južné a antarktické územia",common:"Francúzske juŽné a antarktické územia"},spa:{official:"Territorio del Francés Tierras australes y antárticas",common:"Tierras Australes y Antárticas Francesas"},srp:{official:"Француске јужне и антарктичке земље",common:"Француске јужне и антарктичке земље"},swe:{official:"Franska syd- och Antarktisterritorierna",common:"Franska södra territorierna"},tur:{official:"Fransız Güney ve Antarktika Toprakları",common:"Fransız Güney ve Antarktika Toprakları"},urd:{official:"سرزمینِ جنوبی فرانسیسیہ و انٹارکٹیکہ",common:"سرزمین جنوبی فرانسیسیہ و انٹارکٹیکا"},zho:{official:"法国南部和南极土地",common:"法国南部和南极土地"}},latlng:[-49.25,69.167],landlocked:!1,area:7747,demonyms:{eng:{f:"French",m:"French"},fra:{f:"Française",m:"Français"}},flag:"🇹🇫",maps:{googleMaps:"https://goo.gl/maps/6ua6CX1m4w1xF2Em7",openStreetMaps:"https://www.openstreetmap.org/relation/2186658"},population:400,car:{signs:[""],side:"right"},timezones:["UTC+05:00"],continents:["Antarctica"],flags:{png:"https://flagcdn.com/w320/tf.png",svg:"https://flagcdn.com/tf.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tf.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tf.svg"},startOfWeek:"monday",capitalInfo:{latlng:[48.81,-1.4]}},{name:{common:"Vietnam",official:"Socialist Republic of Vietnam",nativeName:{vie:{official:"Cộng hòa xã hội chủ nghĩa Việt Nam",common:"Việt Nam"}}},tld:[".vn"],cca2:"VN",ccn3:"704",cca3:"VNM",cioc:"VIE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{VND:{name:"Vietnamese đồng",symbol:"₫"}},idd:{root:"+8",suffixes:["4"]},capital:["Hanoi"],altSpellings:["VN","Socialist Republic of Vietnam","Cộng hòa Xã hội chủ nghĩa Việt Nam","Viet Nam"],region:"Asia",subregion:"South-Eastern Asia",languages:{vie:"Vietnamese"},translations:{ara:{official:"جمهورية فيتنام الاشتراكية",common:"فيتنام"},bre:{official:"Republik Sokialour Viêt Nam",common:"Viêt Nam"},ces:{official:"Vietnamská socialistická republika",common:"Vietnam"},cym:{official:"Socialist Republic of Vietnam",common:"Vietnam"},deu:{official:"Sozialistische Republik Vietnam",common:"Vietnam"},est:{official:"Vietnami Sotsialistlik Vabariik",common:"Vietnam"},fin:{official:"Vietnamin sosialistinen tasavalta",common:"Vietnam"},fra:{official:"République socialiste du Viêt Nam",common:"Viêt Nam"},hrv:{official:"Socijalistička Republika Vijetnam",common:"Vijetnam"},hun:{official:"Vietnámi Szocialista Köztársaság",common:"Vietnám"},ita:{official:"Repubblica socialista del Vietnam",common:"Vietnam"},jpn:{official:"ベトナム社会主義共和国",common:"ベトナム"},kor:{official:"베트남 사회주의 공화국",common:"베트남"},nld:{official:"Socialistische Republiek Vietnam",common:"Vietnam"},per:{official:"جمهوری سوسیالیستی ویتنام",common:"ویتنام"},pol:{official:"Socjalistyczna Republika Wietnamu",common:"Wietnam"},por:{official:"República Socialista do Vietname",common:"Vietname"},rus:{official:"Социалистическая Республика Вьетнам",common:"Вьетнам"},slk:{official:"Vietnamská socialistická republika",common:"Vietnam"},spa:{official:"República Socialista de Vietnam",common:"Vietnam"},srp:{official:"Социјалистичка Република Вијетнам",common:"Вијетнам"},swe:{official:"Socialistiska republiken Vietnam",common:"Vietnam"},tur:{official:"Vietnam Sosyalist Cumhuriyeti",common:"Vietnam"},urd:{official:"اشتراکی جمہوریہ ویتنام",common:"ویتنام"},zho:{official:"越南社会主义共和国",common:"越南"}},latlng:[16.16666666,107.83333333],landlocked:!1,borders:["KHM","CHN","LAO"],area:331212,demonyms:{eng:{f:"Vietnamese",m:"Vietnamese"},fra:{f:"Vietnamienne",m:"Vietnamien"}},flag:"🇻🇳",maps:{googleMaps:"https://goo.gl/maps/PCpVt9WzdJ9A9nEZ9",openStreetMaps:"https://www.openstreetmap.org/relation/49915"},population:97338583,gini:{2018:35.7},fifa:"VIE",car:{signs:["VN"],side:"right"},timezones:["UTC+07:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/vn.png",svg:"https://flagcdn.com/vn.svg",alt:"The flag of Vietnam features a large five-pointed yellow star on a red field."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/vn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/vn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[21.03,105.85]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Egypt",official:"Arab Republic of Egypt",nativeName:{ara:{official:"جمهورية مصر العربية",common:"مصر"}}},tld:[".eg",".مصر"],cca2:"EG",ccn3:"818",cca3:"EGY",cioc:"EGY",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EGP:{name:"Egyptian pound",symbol:"£"}},idd:{root:"+2",suffixes:["0"]},capital:["Cairo"],altSpellings:["EG","Arab Republic of Egypt"],region:"Africa",subregion:"Northern Africa",languages:{ara:"Arabic"},translations:{ara:{official:"جمهورية مصر العربية",common:"مصر"},bre:{official:"Republik arab Egipt",common:"Egipt"},ces:{official:"Egyptská arabská republika",common:"Egypt"},cym:{official:"Gweriniaeth Arabaidd yr Aifft",common:"Yr Aifft"},deu:{official:"Arabische Republik Ägypten",common:"Ägypten"},est:{official:"Egiptuse Araabia Vabariik",common:"Egiptus"},fin:{official:"Egyptin arabitasavalta",common:"Egypti"},fra:{official:"République arabe d'Égypte",common:"Égypte"},hrv:{official:"Arapska Republika Egipat",common:"Egipat"},hun:{official:"Egyiptomi Arab Köztársaság",common:"Egyiptom"},ita:{official:"Repubblica araba d'Egitto",common:"Egitto"},jpn:{official:"エジプト·アラブ共和国",common:"エジプト"},kor:{official:"이집트 아랍 공화국",common:"이집트"},nld:{official:"Arabische Republiek Egypte",common:"Egypte"},per:{official:"جمهوری عربی مصر",common:"مصر"},pol:{official:"Arabska Republika Egiptu",common:"Egipt"},por:{official:"República Árabe do Egipto",common:"Egito"},rus:{official:"Арабская Республика Египет",common:"Египет"},slk:{official:"Egyptská arabská republika",common:"Egypt"},spa:{official:"República Árabe de Egipto",common:"Egipto"},srp:{official:"Арапска Република Египат",common:"Египат"},swe:{official:"Arabrepubliken Egypten",common:"Egypten"},tur:{official:"Mısır Arap Cumhuriyeti",common:"Mısır"},urd:{official:"مصری عرب جمہوریہ",common:"مصر"},zho:{official:"阿拉伯埃及共和国",common:"埃及"}},latlng:[27,30],landlocked:!1,borders:["ISR","LBY","PSE","SDN"],area:1002450,demonyms:{eng:{f:"Egyptian",m:"Egyptian"},fra:{f:"Égyptienne",m:"Égyptien"}},flag:"🇪🇬",maps:{googleMaps:"https://goo.gl/maps/uoDRhXbsqjG6L7VG7",openStreetMaps:"https://www.openstreetmap.org/relation/1473947"},population:102334403,gini:{2017:31.5},fifa:"EGY",car:{signs:["ET"],side:"right"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/eg.png",svg:"https://flagcdn.com/eg.svg",alt:"The flag of Egypt is composed of three equal horizontal bands of red, white and black, with Egypt's national emblem — a hoist-side facing gold eagle of Saladin — centered in the white band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/eg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/eg.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[30.05,31.25]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Northern Mariana Islands",official:"Commonwealth of the Northern Mariana Islands",nativeName:{cal:{official:"Commonwealth of the Northern Mariana Islands",common:"Northern Mariana Islands"},cha:{official:"Sankattan Siha Na Islas Mariånas",common:"Na Islas Mariånas"},eng:{official:"Commonwealth of the Northern Mariana Islands",common:"Northern Mariana Islands"}}},tld:[".mp"],cca2:"MP",ccn3:"580",cca3:"MNP",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["670"]},capital:["Saipan"],altSpellings:["MP","Commonwealth of the Northern Mariana Islands","Sankattan Siha Na Islas Mariånas"],region:"Oceania",subregion:"Micronesia",languages:{cal:"Carolinian",cha:"Chamorro",eng:"English"},translations:{ara:{official:"كومونولث جزر ماريانا الشمالية",common:"جزر ماريانا الشمالية"},bre:{official:"Kenglad Inizi Mariana an Norzh",common:"Inizi Mariana an Norzh"},ces:{official:"Společenství Severních Marian",common:"Severní Mariany"},cym:{official:"Commonwealth of the Northern Mariana Islands",common:"Northern Mariana Islands"},deu:{official:"Commonwealth der Nördlichen Marianen",common:"Nördliche Marianen"},est:{official:"Põhja-Mariaani Ühendus",common:"Põhja-Mariaanid"},fin:{official:"Pohjois-Mariaanit",common:"Pohjois-Mariaanit"},fra:{official:"Commonwealth des îles Mariannes du Nord",common:"Îles Mariannes du Nord"},hrv:{official:"Zajednica je Sjeverni Marijanski otoci",common:"Sjevernomarijanski otoci"},hun:{official:"Északi-Mariana-szigetek",common:"Északi-Mariana-szigetek"},ita:{official:"Commonwealth delle Isole Marianne Settentrionali",common:"Isole Marianne Settentrionali"},jpn:{official:"北マリアナ諸島",common:"北マリアナ諸島"},kor:{official:"북마리아나 제도",common:"북마리아나 제도"},nld:{official:"Commonwealth van de Noordelijke Marianen",common:"Noordelijke Marianeneilanden"},per:{official:"جزایر ماریانای شمالی",common:"جزایر ماریانای شمالی"},pol:{official:"Wspólnota Marianów Północnych",common:"Mariany Północne"},por:{official:"Comunidade das Ilhas Marianas do Norte",common:"Marianas Setentrionais"},rus:{official:"Содружество Северных Марианских островов",common:"Северные Марианские острова"},slk:{official:"Spoločenstvo ostrovov Severné Mariány",common:"Severné Mariány"},spa:{official:"Mancomunidad de las Islas Marianas del Norte",common:"Islas Marianas del Norte"},srp:{official:"Комонвелт Северна Маријанска Острва",common:"Северна Маријанска Острва"},swe:{official:"Nordmarianerna",common:"Nordmarianerna"},tur:{official:"Kuzey Mariana Adaları Milletler Topluluğu",common:"Kuzey Mariana Adaları"},urd:{official:"دولتِ مشترکہ جزائر شمالی ماریانا",common:"جزائر شمالی ماریانا"},zho:{official:"北马里亚纳群岛",common:"北马里亚纳群岛"}},latlng:[15.2,145.75],landlocked:!1,area:464,demonyms:{eng:{f:"American",m:"American"},fra:{f:"Américaine",m:"Américan"}},flag:"🇲🇵",maps:{googleMaps:"https://goo.gl/maps/cpZ67knoRAcfu1417",openStreetMaps:"https://www.openstreetmap.org/relation/306004"},population:57557,car:{signs:["USA"],side:"right"},timezones:["UTC+10:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/mp.png",svg:"https://flagcdn.com/mp.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[15.2,145.75]}},{name:{common:"Bolivia",official:"Plurinational State of Bolivia",nativeName:{aym:{official:"Wuliwya Suyu",common:"Wuliwya"},grn:{official:"Tetã Volívia",common:"Volívia"},que:{official:"Buliwya Mamallaqta",common:"Buliwya"},spa:{official:"Estado Plurinacional de Bolivia",common:"Bolivia"}}},tld:[".bo"],cca2:"BO",ccn3:"068",cca3:"BOL",cioc:"BOL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BOB:{name:"Bolivian boliviano",symbol:"Bs."}},idd:{root:"+5",suffixes:["91"]},capital:["Sucre"],altSpellings:["BO","Buliwya","Wuliwya","Bolivia, Plurinational State of","Plurinational State of Bolivia","Estado Plurinacional de Bolivia","Buliwya Mamallaqta","Wuliwya Suyu","Tetã Volívia"],region:"Americas",subregion:"South America",languages:{aym:"Aymara",grn:"Guaraní",que:"Quechua",spa:"Spanish"},translations:{ara:{official:"دولة بوليفيا المتعددة القوميات",common:"بوليفيا"},bre:{official:"Stad Liesvroadel Bolivia",common:"Bolivia"},ces:{official:"Mnohonárodnostní stát Bolívie",common:"Bolívie"},cym:{official:"Gweriniaeth Bolifia",common:"Bolifia"},deu:{official:"Plurinationaler Staat Bolivien",common:"Bolivien"},est:{official:"Boliivia Paljurahvuseline Riik",common:"Boliivia"},fin:{official:"Bolivian monikansainen valtio",common:"Bolivia"},fra:{official:"État plurinational de Bolivie",common:"Bolivie"},hrv:{official:"Plurinational State of Bolivia",common:"Bolivija"},hun:{official:"Bolíviai Többnemzetiségű Állam",common:"Bolívia"},ita:{official:"Stato Plurinazionale della Bolivia",common:"Bolivia"},jpn:{official:"ボリビアの多民族国",common:"ボリビア多民族国"},kor:{official:"볼리비아 다민족국",common:"볼리비아"},nld:{official:"Plurinationale Staat van Bolivia",common:"Bolivia"},per:{official:"جمهوری بولیوی",common:"بولیوی"},pol:{official:"Wielonarodowe Państwo Boliwia",common:"Boliwia"},por:{official:"Estado Plurinacional da Bolívia",common:"Bolívia"},rus:{official:"Многонациональное Государство Боливия",common:"Боливия"},slk:{official:"Bolívijská republika",common:"Bolívia"},spa:{official:"Estado Plurinacional de Bolivia",common:"Bolivia"},srp:{official:"Вишенационална Држава Боливија",common:"Боливија"},swe:{official:"Mångnationella staten Bolivia",common:"Bolivia"},tur:{official:"Bolivya Çokuluslu Devleti",common:"Bolivya"},urd:{official:"جمہوریہ بولیویا",common:"بولیویا"},zho:{official:"多民族玻利维亚国",common:"玻利维亚"}},latlng:[-17,-65],landlocked:!0,borders:["ARG","BRA","CHL","PRY","PER"],area:1098581,demonyms:{eng:{f:"Bolivian",m:"Bolivian"},fra:{f:"Bolivienne",m:"Bolivien"}},flag:"🇧🇴",maps:{googleMaps:"https://goo.gl/maps/9DfnyfbxNM2g5U9b9",openStreetMaps:"https://www.openstreetmap.org/relation/252645"},population:11673029,gini:{2019:41.6},fifa:"BOL",car:{signs:["BOL"],side:"right"},timezones:["UTC-04:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/bo.png",svg:"https://flagcdn.com/bo.svg",alt:"The flag of Bolivia is composed of three equal horizontal bands of red, yellow and green, with the national coat of arms centered in the yellow band."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bo.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bo.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-19.02,-65.26]}},{name:{common:"Sint Maarten",official:"Sint Maarten",nativeName:{eng:{official:"Sint Maarten",common:"Sint Maarten"},fra:{official:"Saint-Martin",common:"Saint-Martin"},nld:{official:"Sint Maarten",common:"Sint Maarten"}}},tld:[".sx"],cca2:"SX",ccn3:"534",cca3:"SXM",independent:!1,status:"officially-assigned",unMember:!1,currencies:{ANG:{name:"Netherlands Antillean guilder",symbol:"ƒ"}},idd:{root:"+1",suffixes:["721"]},capital:["Philipsburg"],altSpellings:["SX","Sint Maarten (Dutch part)"],region:"Americas",subregion:"Caribbean",languages:{eng:"English",fra:"French",nld:"Dutch"},translations:{ara:{official:"سينت مارتن",common:"سينت مارتن"},bre:{official:"Sint Maarten",common:"Sint Maarten"},ces:{official:"Svatý Martin",common:"Svatý Martin (Nizozemsko)"},cym:{official:"Sint Maarten",common:"Sint Maarten"},deu:{official:"Sint Maarten",common:"Sint Maarten"},est:{official:"Sint Maarten",common:"Sint Maarten"},fin:{official:"Sint Maarten",common:"Sint Maarten"},fra:{official:"Sint Maarten",common:"Saint-Martin"},hrv:{official:"Sveti Martin",common:"Sveti Martin"},hun:{official:"Sint Maarten",common:"Sint Maarten"},ita:{official:"Sint Maarten",common:"Sint Maarten"},jpn:{official:"シントマールテン島",common:"シント・マールテン"},kor:{official:"신트마르턴",common:"신트마르턴"},nld:{official:"Sint Maarten",common:"Sint Maarten"},per:{official:"سن مارتن",common:"سن مارتن"},pol:{official:"Sint Maarten",common:"Sint Maarten"},por:{official:"Sint Maarten",common:"São Martinho"},rus:{official:"Синт-Маартен",common:"Синт-Мартен"},slk:{official:"Sint Maarten",common:"Sint Maarten"},spa:{official:"Sint Maarten",common:"Sint Maarten"},srp:{official:"Свети Мартин",common:"Свети Мартин"},swe:{official:"Sint Maarten",common:"Sint Maarten"},tur:{official:"Sint Maarten",common:"Sint Maarten"},urd:{official:"سنٹ مارٹن",common:"سنٹ مارٹن"},zho:{official:"圣马丁岛",common:"圣马丁岛"}},latlng:[18.033333,-63.05],landlocked:!1,borders:["MAF"],area:34,demonyms:{eng:{f:"St. Maartener",m:"St. Maartener"},fra:{f:"Saint-Martinoise",m:"Saint-Martinois"}},flag:"🇸🇽",maps:{googleMaps:"https://goo.gl/maps/DjvcESy1a1oGEZuNA",openStreetMaps:"https://www.openstreetmap.org/relation/1231790"},population:40812,car:{signs:["SX"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/sx.png",svg:"https://flagcdn.com/sx.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[18.02,-63.03]}},{name:{common:"Cook Islands",official:"Cook Islands",nativeName:{eng:{official:"Cook Islands",common:"Cook Islands"},rar:{official:"Kūki 'Āirani",common:"Kūki 'Āirani"}}},tld:[".ck"],cca2:"CK",ccn3:"184",cca3:"COK",cioc:"COK",independent:!1,status:"officially-assigned",unMember:!1,currencies:{CKD:{name:"Cook Islands dollar",symbol:"$"},NZD:{name:"New Zealand dollar",symbol:"$"}},idd:{root:"+6",suffixes:["82"]},capital:["Avarua"],altSpellings:["CK","Kūki 'Āirani"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English",rar:"Cook Islands Māori"},translations:{ara:{official:"جزر كوك",common:"جزر كوك"},bre:{official:"Inizi Cook",common:"Inizi Cook"},ces:{official:"Cookovy ostrovy",common:"Cookovy ostrovy"},cym:{official:"Ynysoedd Cook",common:"Ynysoedd Cook"},deu:{official:"Cookinseln",common:"Cookinseln"},est:{official:"Cooki saared",common:"Cooki saared"},fin:{official:"Cookinsaaret",common:"Cookinsaaret"},fra:{official:"Îles Cook",common:"Îles Cook"},hrv:{official:"Cook Islands",common:"Cookovo Otočje"},hun:{official:"Cook-szigetek",common:"Cook-szigetek"},ita:{official:"Isole Cook",common:"Isole Cook"},jpn:{official:"クック諸島",common:"クック諸島"},kor:{official:"쿡 제도",common:"쿡 제도"},nld:{official:"Cook eilanden",common:"Cookeilanden"},per:{official:"جزایر کوک",common:"جزایر کوک"},pol:{official:"Wyspy Cooka",common:"Wyspy Cooka"},por:{official:"Ilhas Cook",common:"Ilhas Cook"},rus:{official:"острова Кука",common:"Острова Кука"},slk:{official:"Cookove ostrovy",common:"Cookove ostrovy"},spa:{official:"Islas Cook",common:"Islas Cook"},srp:{official:"Кукова Острва",common:"Кукова Острва"},swe:{official:"Cooköarna",common:"Cooköarna"},tur:{official:"Cook Adaları",common:"Cook Adaları"},urd:{official:"جزائر کک",common:"جزائر کک"},zho:{official:"库克群岛",common:"库克群岛"}},latlng:[-21.23333333,-159.76666666],landlocked:!1,area:236,demonyms:{eng:{f:"Cook Islander",m:"Cook Islander"},fra:{f:"Cookienne",m:"Cookien"}},flag:"🇨🇰",maps:{googleMaps:"https://goo.gl/maps/nrGZrvWRGB4WHgDC9",openStreetMaps:"https://www.openstreetmap.org/relation/2184233"},population:18100,fifa:"COK",car:{signs:["NZ"],side:"left"},timezones:["UTC-10:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/ck.png",svg:"https://flagcdn.com/ck.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ck.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ck.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-21.2,-159.77]}},{name:{common:"Norfolk Island",official:"Territory of Norfolk Island",nativeName:{eng:{official:"Territory of Norfolk Island",common:"Norfolk Island"},pih:{official:"Teratri of Norf'k Ailen",common:"Norf'k Ailen"}}},tld:[".nf"],cca2:"NF",ccn3:"574",cca3:"NFK",independent:!1,status:"officially-assigned",unMember:!1,currencies:{AUD:{name:"Australian dollar",symbol:"$"}},idd:{root:"+6",suffixes:["72"]},capital:["Kingston"],altSpellings:["NF","Territory of Norfolk Island","Teratri of Norf'k Ailen"],region:"Oceania",subregion:"Australia and New Zealand",languages:{eng:"English",pih:"Norfuk"},translations:{ara:{official:"إقليم جزيرة نورفولك",common:"جزيرة نورفولك"},bre:{official:"Tiriad Enez Norfolk",common:"Enez Norfolk"},ces:{official:"Teritorium ostrova Norfolk",common:"Norfolk"},cym:{official:"Territory of Norfolk Island",common:"Norfolk Island"},deu:{official:"Gebiet der Norfolkinsel",common:"Norfolkinsel"},est:{official:"Norfolki saare ala",common:"Norfolk"},fin:{official:"Norfolkinsaaren territorio",common:"Norfolkinsaari"},fra:{official:"Territoire de l'île Norfolk",common:"Île Norfolk"},hrv:{official:"Teritorij Norfolk Island",common:"Otok Norfolk"},hun:{official:"Norfolk-sziget",common:"Norfolk-sziget"},ita:{official:"Territorio di Norfolk Island",common:"Isola Norfolk"},jpn:{official:"ノーフォーク島の領土",common:"ノーフォーク島"},kor:{official:"노퍽 섬",common:"노퍽 섬"},nld:{official:"Grondgebied van Norfolk Island",common:"Norfolkeiland"},per:{official:"قلمرو جزایر نورفک",common:"جزیره نورفک"},pol:{official:"Terytorium Wyspy Norfolk",common:"Wyspa Norfolk"},por:{official:"Território da Ilha Norfolk",common:"Ilha Norfolk"},rus:{official:"Территория острова Норфолк",common:"Норфолк"},slk:{official:"Teritórium ostrova Norfolk",common:"Norfolk"},spa:{official:"Territorio de la Isla Norfolk",common:"Isla de Norfolk"},srp:{official:"Територија Острва Норфок",common:"Норфок"},swe:{official:"Norfolkön",common:"Norfolkön"},tur:{official:"Norfolk Adası",common:"Norfolk Adası"},urd:{official:"جزیرہ نورفک خطہ",common:"جزیرہ نورفک"},zho:{official:"诺福克岛",common:"诺福克岛"}},latlng:[-29.03333333,167.95],landlocked:!1,area:36,demonyms:{eng:{f:"Norfolk Islander",m:"Norfolk Islander"},fra:{f:"Norfolkaise",m:"Norfolkais"}},flag:"🇳🇫",maps:{googleMaps:"https://goo.gl/maps/pbvtm6XYd1iZbjky5",openStreetMaps:"https://www.openstreetmap.org/relation/2574988"},population:2302,car:{signs:["AUS"],side:"left"},timezones:["UTC+11:30"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/nf.png",svg:"https://flagcdn.com/nf.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-29.05,167.97]}},{name:{common:"Montserrat",official:"Montserrat",nativeName:{eng:{official:"Montserrat",common:"Montserrat"}}},tld:[".ms"],cca2:"MS",ccn3:"500",cca3:"MSR",independent:!1,status:"officially-assigned",unMember:!1,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["664"]},capital:["Plymouth"],altSpellings:["MS"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"مونتسرات",common:"مونتسرات"},bre:{official:"Montserrat",common:"Montserrat"},ces:{official:"Montserrat",common:"Montserrat"},cym:{official:"Montserrat",common:"Montserrat"},deu:{official:"Montserrat",common:"Montserrat"},est:{official:"Montserrat",common:"Montserrat"},fin:{official:"Montserrat",common:"Montserrat"},fra:{official:"Montserrat",common:"Montserrat"},hrv:{official:"Montserrat",common:"Montserrat"},hun:{official:"Montserrat",common:"Montserrat"},ita:{official:"Montserrat",common:"Montserrat"},jpn:{official:"モントセラト",common:"モントセラト"},kor:{official:"몬트세랫",common:"몬트세랫"},nld:{official:"Montserrat",common:"Montserrat"},per:{official:"مونتسرات",common:"مونتسرات"},pol:{official:"Montserrat",common:"Montserrat"},por:{official:"Montserrat",common:"Montserrat"},rus:{official:"Монтсеррат",common:"Монтсеррат"},slk:{official:"Montserrat",common:"Montserrat"},spa:{official:"Montserrat",common:"Montserrat"},srp:{official:"Монтсерат",common:"Монтсерат"},swe:{official:"Montserrat",common:"Montserrat"},tur:{official:"Montserrat",common:"Montserrat"},urd:{official:"مانٹسریٹ",common:"مانٹسریٹ"},zho:{official:"蒙特塞拉特",common:"蒙特塞拉特"}},latlng:[16.75,-62.2],landlocked:!1,area:102,demonyms:{eng:{f:"Montserratian",m:"Montserratian"},fra:{f:"Montserratienne",m:"Montserratien"}},flag:"🇲🇸",maps:{googleMaps:"https://goo.gl/maps/CSbe7UmxPmiwQB7GA",openStreetMaps:"https://www.openstreetmap.org/relation/537257"},population:4922,fifa:"MSR",car:{signs:["GB"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/ms.png",svg:"https://flagcdn.com/ms.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ms.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ms.svg"},startOfWeek:"monday",capitalInfo:{latlng:[16.7,-62.22]}},{name:{common:"United States Virgin Islands",official:"Virgin Islands of the United States",nativeName:{eng:{official:"Virgin Islands of the United States",common:"United States Virgin Islands"}}},tld:[".vi"],cca2:"VI",ccn3:"850",cca3:"VIR",cioc:"ISV",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["340"]},capital:["Charlotte Amalie"],altSpellings:["VI","Virgin Islands, U.S."],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"جزر العذراء الامريكية",common:"جزر العذراء الامريكية"},bre:{official:"Inizi Gwerc'h ar Stadoù-Unanet",common:"Inizi Gwerc'h ar Stadoù-Unanet"},ces:{official:"Americké Panenské ostrovy",common:"Americké Panenské ostrovy"},cym:{official:"Virgin Islands of the United States",common:"United States Virgin Islands"},deu:{official:"Amerikanische Jungferninseln",common:"Amerikanische Jungferninseln"},est:{official:"Ühendriikide Neitsisaared",common:"Neitsisaared, USA"},fin:{official:"Yhdysvaltain Neitsytsaaret",common:"Neitsytsaaret"},fra:{official:"Îles Vierges des États-Unis",common:"Îles Vierges des États-Unis"},hrv:{official:"Djevičanski Otoci SAD",common:"Američki Djevičanski Otoci"},hun:{official:"Amerikai Virgin-szigetek",common:"Amerikai Virgin-szigetek"},ita:{official:"Isole Vergini degli Stati Uniti",common:"Isole Vergini americane"},jpn:{official:"米国のバージン諸島",common:"アメリカ領ヴァージン諸島"},kor:{official:"미국령 버진아일랜드",common:"미국령 버진아일랜드"},nld:{official:"Maagdeneilanden van de Verenigde Staten",common:"Amerikaanse Maagdeneilanden"},per:{official:"جزایر ویرجین ایالات متحده آمریکا",common:"جزایر ویرجین ایالات متحده آمریکا"},pol:{official:"Wyspy Dziewicze Stanów Zjednoczonych",common:"Wyspy Dziewicze Stanów Zjednoczonych"},por:{official:"Ilhas Virgens dos Estados Unidos",common:"Ilhas Virgens dos Estados Unidos"},rus:{official:"Виргинские острова Соединенных Штатов",common:"Виргинские Острова"},slk:{official:"Americké Panenské ostrovy",common:"Americké Panenské ostrovy"},spa:{official:"Islas Vírgenes de los Estados Unidos",common:"Islas Vírgenes de los Estados Unidos"},srp:{official:"Америчка Девичанска Острва",common:"Америчка Девичанска Острва"},swe:{official:"Amerikanska Jungfruöarna",common:"Amerikanska Jungfruöarna"},tur:{official:"Amerika Birleşik Devletleri Virjin Adaları",common:"ABD Virjin Adaları"},urd:{official:"امریکی جزائر ورجن",common:"امریکی جزائر ورجن"},zho:{official:"美属维尔京群岛",common:"美属维尔京群岛"}},latlng:[18.35,-64.933333],landlocked:!1,area:347,demonyms:{eng:{f:"Virgin Islander",m:"Virgin Islander"}},flag:"🇻🇮",maps:{googleMaps:"https://goo.gl/maps/mBfreywj8dor6q4m9",openStreetMaps:"openstreetmap.org/relation/286898"},population:106290,fifa:"VIR",car:{signs:["USA"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/vi.png",svg:"https://flagcdn.com/vi.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[18.35,-64.93]}},{name:{common:"Dominica",official:"Commonwealth of Dominica",nativeName:{eng:{official:"Commonwealth of Dominica",common:"Dominica"}}},tld:[".dm"],cca2:"DM",ccn3:"212",cca3:"DMA",cioc:"DMA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["767"]},capital:["Roseau"],altSpellings:["DM","Dominique","Wai‘tu kubuli","Commonwealth of Dominica"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"كومونولث دومينيكا",common:"دومينيكا"},bre:{official:"Kenglad Dominika",common:"Dominika"},ces:{official:"Dominikánské společenství",common:"Dominika"},cym:{official:"Cymanwlad Dominica",common:"Dominica"},deu:{official:"Commonwealth von Dominica",common:"Dominica"},est:{official:"Dominica Ühendus",common:"Dominica"},fin:{official:"Dominican liittovaltio",common:"Dominica"},fra:{official:"Commonwealth de la Dominique",common:"Dominique"},hrv:{official:"Zajednica Dominika",common:"Dominika"},hun:{official:"Dominikai Közösség",common:"Dominikai Közösség"},ita:{official:"Commonwealth di Dominica",common:"Dominica"},jpn:{official:"ドミニカ国",common:"ドミニカ国"},kor:{official:"도미니카 공화국",common:"도미니카 공화국"},nld:{official:"Gemenebest Dominica",common:"Dominica"},per:{official:"قلمرو همسود دومینیکا",common:"دومینیکا"},pol:{official:"Wspólnota Dominiki",common:"Dominika"},por:{official:"Comunidade da Dominica",common:"Dominica"},rus:{official:"Содружество Доминики",common:"Доминика"},slk:{official:"Dominické spoločenstvo",common:"Dominika"},spa:{official:"Mancomunidad de Dominica",common:"Dominica"},srp:{official:"Комонвелт Доминика",common:"Доминика"},swe:{official:"Samväldet Dominica",common:"Dominica"},tur:{official:"Dominika Topluluğu",common:"Dominika"},urd:{official:"دولتِ مشترکہ ڈومینیکا",common:"ڈومینیکا"},zho:{official:"多米尼加共和国",common:"多米尼加"}},latlng:[15.41666666,-61.33333333],landlocked:!1,area:751,demonyms:{eng:{f:"Dominican",m:"Dominican"},fra:{f:"Dominiquaise",m:"Dominiquais"}},flag:"🇩🇲",maps:{googleMaps:"https://goo.gl/maps/HSKdHYpFC8oHHuyV7",openStreetMaps:"https://www.openstreetmap.org/relation/307823"},population:71991,fifa:"DMA",car:{signs:["WD"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/dm.png",svg:"https://flagcdn.com/dm.svg",alt:"The flag of Dominica has a green field with a large centered tricolor cross. The vertical and horizontal parts of the cross each comprise three bands of yellow, black and white. A red circle, bearing a hoist-side facing purple Sisserou parrot standing on a twig and encircled by ten five-pointed yellow-edged green stars, is superimposed at the center of the cross."},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/dm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/dm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[15.3,-61.4]}}],me=document.querySelector("#canvasContainer"),Ct=new Ch;let ho=new Ba(75,me.offsetWidth/me.offsetHeight,.1,1e3);window.innerWidth>=1024?ho.position.z=10:ho.position.z=15;const vr=new te(new xt(4,100,100),new Ce({vertexShader:Xb,fragmentShader:Yb,uniforms:{globeTexture:{value:new Nh().load("https://res.cloudinary.com/dgubzvsvn/image/upload/v1680332861/cv/earth-with-api/globe2_ycvudc.jpg")}}})),wf=new te(new xt(4,100,100),new Ce({vertexShader:$b,fragmentShader:Qb,blending:Ms,side:Ma}));wf.scale.set(1.15,1.15,1.15);Ct.add(wf);const pa=new vn;pa.add(vr);Ct.add(pa);const av=r=>{r.forEach(i=>{const a=i.population/1e9,e=.8*a,o=new te(new tn(Math.max(.05,.1*a),Math.max(.05,.1*a),Math.max(e,.4*Math.random())),new Qs({color:"#3bf7ff",opacity:.6,transparent:!0})),n=i.latlng[0]/180*Math.PI,s=i.latlng[1]/180*Math.PI,t=4,c=t*Math.cos(n)*Math.sin(s),l=t*Math.sin(n),f=t*Math.cos(n)*Math.cos(s);o.position.x=c,o.position.y=l,o.position.z=f,o.lookAt(0,0,0),o.geometry.applyMatrix4(new ia().makeTranslation(0,0,-e/2)),pa.add(o),We.to(o.scale,{z:.2,duration:6,yoyo:!0,repeat:-1,ease:"linear",delay:Math.random()*5}),o.population=new Intl.NumberFormat().format(i.population),o.country=i.name.common})};av(iv);vr.rotation.y=-Math.PI/2;pa.rotation.offset={x:0,y:0};const xf=new ge,ev=new Ml({color:16777215}),Af=[];for(let r=0;r<1e4;r++){const i=(Math.random()-.5)*2e3,a=(Math.random()-.5)*2e3,e=-Math.random()*4e3;Af.push(i,a,e)}xf.setAttribute("position",new se(Af,3));const ov=new Eh(xf,ev);Ct.add(ov);const Et=new Sl({antialias:!0,canvas:document.querySelector("canvas")});Et.setSize(me.offsetWidth,me.offsetHeight);Et.setPixelRatio(window.devicePixelRatio);window.addEventListener("resize",()=>{ho=new Ba(75,me.offsetWidth/me.offsetHeight,.1,1e3),window.innerWidth>=1024?ho.position.z=10:ho.position.z=15,Et.setSize(me.offsetWidth,me.offsetHeight)});let Fi={x:0,y:0,down:!1,xPrev:0,yPrev:0};const _t=document.querySelector("#popUpEl"),nv=document.querySelector("#populationEl"),tv=document.querySelector("#populationValueEl"),Js=new Lh;me.addEventListener("mousedown",({clientX:r,clientY:i})=>{Fi.down=!0,Fi.xPrev=r,Fi.yPrev=i});window.addEventListener("mouseup",r=>{Fi.down=!1});window.addEventListener("mousemove",r=>{const i=r.clientX,a=r.clientY,e=me.getBoundingClientRect().right;if(window.innerWidth>=1024?(Fi.x=(i-window.innerWidth/2)/(window.innerWidth/2)*2-1,Fi.y=-(a/window.innerHeight)*2+1):(Fi.x=i/e*2-1,Fi.y=-(a/window.innerHeight)*2+1),We.set(_t,{x:i-75,y:a+20}),Fi.down){r.preventDefault();const o=i-Fi.xPrev,n=a-Fi.yPrev;pa.rotation.offset.x+=n*.005,pa.rotation.offset.y+=o*.005,We.to(pa.rotation,{y:pa.rotation.offset.y,x:pa.rotation.offset.x,duration:1}),Fi.xPrev=i,Fi.yPrev=a}});let Qc=!0;window.addEventListener("touchmove",r=>{if(r.clientX=r.touches[0].clientX,r.clientY=r.touches[0].clientY,Js.intersectObject(vr).length>0&&(r.preventDefault(),Fi.down)){Fi.x=r.clientX/window.innerWidth*2-1,Fi.y=-(r.clientY/window.innerHeight)*2+1,We.set(_t,{x:r.clientX-75,y:r.clientY+20});let a,e;Qc?(a=0,e=0,Qc=!1):(a=r.clientX-Fi.xPrev,e=r.clientY-Fi.yPrev),pa.rotation.offset.x+=e*.005,pa.rotation.offset.y+=a*.005,We.to(pa.rotation,{y:pa.rotation.offset.y,x:pa.rotation.offset.x,duration:1}),Fi.xPrev=r.clientX,Fi.yPrev=r.clientY,console.log(Fi)}},{passive:!1});window.addEventListener("touchend",r=>{Fi.down=!1});window.addEventListener("touchstart",r=>{Fi.down=!0});const Rf=()=>{requestAnimationFrame(Rf),We.set(_t,{display:"none"}),Js.setFromCamera(Fi,ho);const r=Js.intersectObjects(pa.children.filter(i=>i.geometry.type==="BoxGeometry"));pa.children.forEach(i=>{i.material.opacity=.4});for(let i=0;i<r.length;i++)r[i].object.material.opacity=1,We.set(_t,{display:"block"}),nv.innerHTML=r[i].object.country+" Population",tv.innerHTML=r[i].object.population;Et.render(Ct,ho)};Rf();
